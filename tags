!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/johnrobinson/.config/nvim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/6342569/
#	autoload/plugged/vim-polyglot/indent/dictconf.vim	/^inoremap <buffer> # X#$/;"	m
#	autoload/plugged/vim-polyglot/indent/dictdconf.vim	/^inoremap <buffer> # X#$/;"	m
#	autoload/plugged/vim-polyglot/indent/ps1.vim	/^inoremap <buffer> # X#$/;"	m
$	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
$$	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
$2	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
$B	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	v
$D	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
$F	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	v
$FZF_DEFAULT_COMMAND	plug-config/fzf.vim	/^let $FZF_DEFAULT_COMMAND="rg --files --hidden"$/;"	v
$FZF_DEFAULT_OPTS	plug-config/fzf.vim	/^let $FZF_DEFAULT_OPTS = '--layout=reverse --info=inline'$/;"	v
$NODE_CLIENT_LOG_FILE	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^    let $NODE_CLIENT_LOG_FILE = s:logfile$/;"	v
$NODE_CLIENT_LOG_LEVEL	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^  let $NODE_CLIENT_LOG_LEVEL = 'debug'$/;"	v
$O	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
$P	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
$PYTHONWARNINGS	autoload/plugged/vim-polyglot/compiler/python.vim	/^  let $PYTHONWARNINGS="ignore"$/;"	v
$Q	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
$R	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
$S	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
$TF_CLI_ARGS_fmt	autoload/plugged/vim-polyglot/autoload/terraform.vim	/^let $TF_CLI_ARGS_fmt=''$/;"	v
$U	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
$X	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
$Y	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
$Z	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
$f	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	f
$h	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
$i	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
$j	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
$l	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	f
$le	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
$m	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	f
$mid	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	p	class:e.toJSON.t
$pe	autoload/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let o=n.replace(Dpe,"").split(DB);i.push(o.spl/;"	f
$ref	autoload/plugged/coc.nvim/data/schema.json	/^              "$ref": "#\/definitions\/languageServerCommand"$/;"	s	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf.1
$ref	autoload/plugged/coc.nvim/data/schema.json	/^              "$ref": "#\/definitions\/languageServerModule"$/;"	s	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf.0
$ref	autoload/plugged/coc.nvim/data/schema.json	/^              "$ref": "#\/definitions\/languageServerSocket"$/;"	s	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf.2
$ref	autoload/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	s	object:definitions.languageServerCommand.allOf.0
$ref	autoload/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	s	object:definitions.languageServerModule.allOf.0
$ref	autoload/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	s	object:definitions.languageServerSocket.allOf.0
$removeConfigurationOption	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:e0
$s	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
$schema	autoload/plugged/coc.nvim/data/schema.json	/^  "$schema": "http:\/\/json-schema.org\/draft-07\/schema#",$/;"	s
$se	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
$t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
$te	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
$updateConfigurationOption	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:e0
$ve	autoload/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),ss("Output buffer: %o",e.outputData[0].data))/;"	f
$x	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
%	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:yR.k
(sect2,	autoload/plugged/vim-airline/autoload/airline/themes.vim	/^    map(sect2, (_, v) => type(v) != type('') ? string(v) : v)$/;"	m
*Backward incompatible changes*	autoload/plugged/fzf/CHANGELOG.md	/^### *Backward incompatible changes*$/;"	S	section:CHANGELOG""0.9.4
.	autoload/plugged/gv.vim/plugin/gv.vim	/^  nnoremap          <buffer> <expr> .  <sid>dot()$/;"	m
.gsub!(/\\s*?[|]{0,2}=\\s*?/,	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^                ln.gsub!(\/\\s*?[|]{0,2}=\\s*?\/, '||=')$/;"	m
0	autoload/plugged/coc.nvim/data/schema.json	/^            {$/;"	o	array:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf
0	autoload/plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
0	autoload/plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
0	autoload/plugged/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	s	array:definitions.languageServerBase.properties.trace.server.enum
0	autoload/plugged/coc.nvim/data/schema.json	/^        "%#CocListMode#-- %{get(b:list_status, \\"mode\\", \\"\\")} --%*",$/;"	s	array:properties.list.statusLineSegments.default
0	autoload/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	o	array:definitions.languageServerCommand.allOf
0	autoload/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	o	array:definitions.languageServerModule.allOf
0	autoload/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	o	array:definitions.languageServerSocket.allOf
0	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
0	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [".git", ".hg", ".projections.json"],$/;"	s	array:properties.coc.preferences.rootPatterns.default
0	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [".ts", ".js"],$/;"	s	array:properties.coc.source.file.trimSameExts.default
0	autoload/plugged/coc.nvim/data/schema.json	/^      "default": ["\/"],$/;"	s	array:properties.coc.source.file.triggerCharacters.default
0	autoload/plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
0	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	s	array:properties.suggest.detailField.enum
0	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	s	array:properties.diagnostic.enableMessage.enum
0	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	s	array:properties.suggest.autoTrigger.enum
0	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	s	array:properties.coc.preferences.extensionUpdateCheck.enum
0	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["echo", "float"]$/;"	s	array:properties.diagnostic.messageTarget.enum
0	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop", "pedit"],$/;"	s	array:properties.coc.preferences.jumpCommand.enum
0	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["float", "echo"]$/;"	s	array:properties.signature.target.enum
0	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["full", "short", "filename", "hidden"],$/;"	s	array:properties.list.source.diagnostics.pathFormat.enum
0	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
0	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["length", "alphabetical", "none"]$/;"	s	array:properties.suggest.defaultSortMethod.enum
0	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	s	array:properties.coc.preferences.messageLevel.enum
0	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	s	array:properties.hover.target.enum
0	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["quickfix", "location", "none"]$/;"	s	array:properties.coc.preferences.listOfWorkspaceEdit.enum
0	autoload/plugged/coc.nvim/data/schema.json	/^      "required": ["command", "filetypes"],$/;"	s	array:definitions.languageServerCommand.required
0	autoload/plugged/coc.nvim/data/schema.json	/^      "required": ["module", "filetypes"],$/;"	s	array:definitions.languageServerModule.required
0	autoload/plugged/coc.nvim/data/schema.json	/^      "required": ["port", "filetypes"],$/;"	s	array:definitions.languageServerSocket.required
0	autoload/plugged/coc.nvim/data/schema.json	/^      "type": ["array", "null"],$/;"	s	array:properties.list.statusLineSegments.type
0	autoload/plugged/coc.nvim/data/schema.json	/^      "type": ["null", "string"],$/;"	s	array:properties.http.proxyAuthorization.type
0	autoload/plugged/coc.nvim/data/schema.json	/^      "type": ["string", "null"],$/;"	s	array:properties.dialog.floatBorderHighlight.type
0	autoload/plugged/coc.nvim/data/schema.json	/^      "type": ["string", "null"],$/;"	s	array:properties.dialog.floatHighlight.type
0	autoload/plugged/coc.nvim/package.json	/^      "<rootDir>"$/;"	s	array:jest.projects
0	autoload/plugged/coc.nvim/package.json	/^      "ts",$/;"	s	array:jest.moduleFileExtensions
0	autoload/plugged/coc.nvim/package.json	/^    "complete",$/;"	s	array:keywords
0	coc-settings.json	/^    "UltiSnips",$/;"	s	array:snippets.ultisnips.directories
0	coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["css", "markdown", "javascript", "graphql", "html", /;"	s	array:coc.preferences.formatOnSaveFiletypes
0.10.0	autoload/plugged/fzf/CHANGELOG.md	/^0.10.0$/;"	s	chapter:CHANGELOG
0.10.1	autoload/plugged/fzf/CHANGELOG.md	/^0.10.1$/;"	s	chapter:CHANGELOG
0.10.2	autoload/plugged/fzf/CHANGELOG.md	/^0.10.2$/;"	s	chapter:CHANGELOG
0.10.3	autoload/plugged/fzf/CHANGELOG.md	/^0.10.3$/;"	s	chapter:CHANGELOG
0.10.4	autoload/plugged/fzf/CHANGELOG.md	/^0.10.4$/;"	s	chapter:CHANGELOG
0.10.5	autoload/plugged/fzf/CHANGELOG.md	/^0.10.5$/;"	s	chapter:CHANGELOG
0.10.6	autoload/plugged/fzf/CHANGELOG.md	/^0.10.6$/;"	s	chapter:CHANGELOG
0.10.7	autoload/plugged/fzf/CHANGELOG.md	/^0.10.7$/;"	s	chapter:CHANGELOG
0.10.8	autoload/plugged/fzf/CHANGELOG.md	/^0.10.8$/;"	s	chapter:CHANGELOG
0.10.9	autoload/plugged/fzf/CHANGELOG.md	/^0.10.9$/;"	s	chapter:CHANGELOG
0.11.0	autoload/plugged/fzf/CHANGELOG.md	/^0.11.0$/;"	s	chapter:CHANGELOG
0.11.1	autoload/plugged/fzf/CHANGELOG.md	/^0.11.1$/;"	s	chapter:CHANGELOG
0.11.2	autoload/plugged/fzf/CHANGELOG.md	/^0.11.2$/;"	s	chapter:CHANGELOG
0.11.3	autoload/plugged/fzf/CHANGELOG.md	/^0.11.3$/;"	s	chapter:CHANGELOG
0.11.4	autoload/plugged/fzf/CHANGELOG.md	/^0.11.4$/;"	s	chapter:CHANGELOG
0.12.0	autoload/plugged/fzf/CHANGELOG.md	/^0.12.0$/;"	s	chapter:CHANGELOG
0.12.1	autoload/plugged/fzf/CHANGELOG.md	/^0.12.1$/;"	s	chapter:CHANGELOG
0.12.2	autoload/plugged/fzf/CHANGELOG.md	/^0.12.2$/;"	s	chapter:CHANGELOG
0.13.0	autoload/plugged/fzf/CHANGELOG.md	/^0.13.0$/;"	s	chapter:CHANGELOG
0.13.1	autoload/plugged/fzf/CHANGELOG.md	/^0.13.1$/;"	s	chapter:CHANGELOG
0.13.2	autoload/plugged/fzf/CHANGELOG.md	/^0.13.2$/;"	s	chapter:CHANGELOG
0.13.3	autoload/plugged/fzf/CHANGELOG.md	/^0.13.3$/;"	s	chapter:CHANGELOG
0.13.4	autoload/plugged/fzf/CHANGELOG.md	/^0.13.4$/;"	s	chapter:CHANGELOG
0.13.5	autoload/plugged/fzf/CHANGELOG.md	/^0.13.5$/;"	s	chapter:CHANGELOG
0.15.0	autoload/plugged/fzf/CHANGELOG.md	/^0.15.0$/;"	s	chapter:CHANGELOG
0.15.1	autoload/plugged/fzf/CHANGELOG.md	/^0.15.1$/;"	s	chapter:CHANGELOG
0.15.2	autoload/plugged/fzf/CHANGELOG.md	/^0.15.2$/;"	s	chapter:CHANGELOG
0.15.3	autoload/plugged/fzf/CHANGELOG.md	/^0.15.3$/;"	s	chapter:CHANGELOG
0.15.4	autoload/plugged/fzf/CHANGELOG.md	/^0.15.4$/;"	s	chapter:CHANGELOG
0.15.5	autoload/plugged/fzf/CHANGELOG.md	/^0.15.5$/;"	s	chapter:CHANGELOG
0.15.6	autoload/plugged/fzf/CHANGELOG.md	/^0.15.6$/;"	s	chapter:CHANGELOG
0.15.7	autoload/plugged/fzf/CHANGELOG.md	/^0.15.7$/;"	s	chapter:CHANGELOG
0.15.8	autoload/plugged/fzf/CHANGELOG.md	/^0.15.8$/;"	s	chapter:CHANGELOG
0.15.9	autoload/plugged/fzf/CHANGELOG.md	/^0.15.9$/;"	s	chapter:CHANGELOG
0.16.0	autoload/plugged/fzf/CHANGELOG.md	/^0.16.0$/;"	s	chapter:CHANGELOG
0.16.1	autoload/plugged/fzf/CHANGELOG.md	/^0.16.1$/;"	s	chapter:CHANGELOG
0.16.10	autoload/plugged/fzf/CHANGELOG.md	/^0.16.10$/;"	s	chapter:CHANGELOG
0.16.11	autoload/plugged/fzf/CHANGELOG.md	/^0.16.11$/;"	s	chapter:CHANGELOG
0.16.2	autoload/plugged/fzf/CHANGELOG.md	/^0.16.2$/;"	s	chapter:CHANGELOG
0.16.3	autoload/plugged/fzf/CHANGELOG.md	/^0.16.3$/;"	s	chapter:CHANGELOG
0.16.4	autoload/plugged/fzf/CHANGELOG.md	/^0.16.4$/;"	s	chapter:CHANGELOG
0.16.5	autoload/plugged/fzf/CHANGELOG.md	/^0.16.5$/;"	s	chapter:CHANGELOG
0.16.6	autoload/plugged/fzf/CHANGELOG.md	/^0.16.6$/;"	s	chapter:CHANGELOG
0.16.7	autoload/plugged/fzf/CHANGELOG.md	/^0.16.7$/;"	s	chapter:CHANGELOG
0.16.8	autoload/plugged/fzf/CHANGELOG.md	/^0.16.8$/;"	s	chapter:CHANGELOG
0.16.9	autoload/plugged/fzf/CHANGELOG.md	/^0.16.9$/;"	s	chapter:CHANGELOG
0.17.0	autoload/plugged/fzf/CHANGELOG.md	/^0.17.0$/;"	s	chapter:CHANGELOG
0.17.0-2	autoload/plugged/fzf/CHANGELOG.md	/^0.17.0-2$/;"	s	chapter:CHANGELOG
0.17.1	autoload/plugged/fzf/CHANGELOG.md	/^0.17.1$/;"	s	chapter:CHANGELOG
0.17.3	autoload/plugged/fzf/CHANGELOG.md	/^0.17.3$/;"	s	chapter:CHANGELOG
0.17.4	autoload/plugged/fzf/CHANGELOG.md	/^0.17.4$/;"	s	chapter:CHANGELOG
0.17.5	autoload/plugged/fzf/CHANGELOG.md	/^0.17.5$/;"	s	chapter:CHANGELOG
0.18.0	autoload/plugged/fzf/CHANGELOG.md	/^0.18.0$/;"	s	chapter:CHANGELOG
0.19.0	autoload/plugged/fzf/CHANGELOG.md	/^0.19.0$/;"	s	chapter:CHANGELOG
0.20.0	autoload/plugged/fzf/CHANGELOG.md	/^0.20.0$/;"	s	chapter:CHANGELOG
0.21.1	autoload/plugged/fzf/CHANGELOG.md	/^0.21.1$/;"	s	chapter:CHANGELOG
0.22.0	autoload/plugged/fzf/CHANGELOG.md	/^0.22.0$/;"	s	chapter:CHANGELOG
0.23.0	autoload/plugged/fzf/CHANGELOG.md	/^0.23.0$/;"	s	chapter:CHANGELOG
0.23.1	autoload/plugged/fzf/CHANGELOG.md	/^0.23.1$/;"	s	chapter:CHANGELOG
0.24.0	autoload/plugged/fzf/CHANGELOG.md	/^0.24.0$/;"	s	chapter:CHANGELOG
0.24.1	autoload/plugged/fzf/CHANGELOG.md	/^0.24.1$/;"	s	chapter:CHANGELOG
0.24.2	autoload/plugged/fzf/CHANGELOG.md	/^0.24.2$/;"	s	chapter:CHANGELOG
0.24.3	autoload/plugged/fzf/CHANGELOG.md	/^0.24.3$/;"	s	chapter:CHANGELOG
0.24.4	autoload/plugged/fzf/CHANGELOG.md	/^0.24.4$/;"	s	chapter:CHANGELOG
0.25.0	autoload/plugged/fzf/CHANGELOG.md	/^0.25.0$/;"	s	chapter:CHANGELOG
0.25.1	autoload/plugged/fzf/CHANGELOG.md	/^0.25.1$/;"	s	chapter:CHANGELOG
0.26.0	autoload/plugged/fzf/CHANGELOG.md	/^0.26.0$/;"	s	chapter:CHANGELOG
0.27.0	autoload/plugged/fzf/CHANGELOG.md	/^0.27.0$/;"	s	chapter:CHANGELOG
0.9.10	autoload/plugged/fzf/CHANGELOG.md	/^0.9.10$/;"	s	chapter:CHANGELOG
0.9.11	autoload/plugged/fzf/CHANGELOG.md	/^0.9.11$/;"	s	chapter:CHANGELOG
0.9.12	autoload/plugged/fzf/CHANGELOG.md	/^0.9.12$/;"	s	chapter:CHANGELOG
0.9.13	autoload/plugged/fzf/CHANGELOG.md	/^0.9.13$/;"	s	chapter:CHANGELOG
0.9.3	autoload/plugged/fzf/CHANGELOG.md	/^0.9.3$/;"	s	chapter:CHANGELOG
0.9.4	autoload/plugged/fzf/CHANGELOG.md	/^0.9.4$/;"	s	chapter:CHANGELOG
0.9.5	autoload/plugged/fzf/CHANGELOG.md	/^0.9.5$/;"	s	chapter:CHANGELOG
0.9.6	autoload/plugged/fzf/CHANGELOG.md	/^0.9.6$/;"	s	chapter:CHANGELOG
0.9.7	autoload/plugged/fzf/CHANGELOG.md	/^0.9.7$/;"	s	chapter:CHANGELOG
0.9.8	autoload/plugged/fzf/CHANGELOG.md	/^0.9.8$/;"	s	chapter:CHANGELOG
0.9.9	autoload/plugged/fzf/CHANGELOG.md	/^0.9.9$/;"	s	chapter:CHANGELOG
1	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:MB
1	autoload/plugged/coc.nvim/data/schema.json	/^            {$/;"	o	array:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf
1	autoload/plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
1	autoload/plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
1	autoload/plugged/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	s	array:definitions.languageServerBase.properties.trace.server.enum
1	autoload/plugged/coc.nvim/data/schema.json	/^        "%{get(b:list_status, \\"loading\\", \\"\\")}",$/;"	s	array:properties.list.statusLineSegments.default
1	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
1	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [".git", ".hg", ".projections.json"],$/;"	s	array:properties.coc.preferences.rootPatterns.default
1	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [".ts", ".js"],$/;"	s	array:properties.coc.source.file.trimSameExts.default
1	autoload/plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
1	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	s	array:properties.suggest.detailField.enum
1	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	s	array:properties.diagnostic.enableMessage.enum
1	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	s	array:properties.suggest.autoTrigger.enum
1	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	s	array:properties.coc.preferences.extensionUpdateCheck.enum
1	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["echo", "float"]$/;"	s	array:properties.diagnostic.messageTarget.enum
1	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop", "pedit"],$/;"	s	array:properties.coc.preferences.jumpCommand.enum
1	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["float", "echo"]$/;"	s	array:properties.signature.target.enum
1	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["full", "short", "filename", "hidden"],$/;"	s	array:properties.list.source.diagnostics.pathFormat.enum
1	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
1	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["length", "alphabetical", "none"]$/;"	s	array:properties.suggest.defaultSortMethod.enum
1	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	s	array:properties.coc.preferences.messageLevel.enum
1	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	s	array:properties.hover.target.enum
1	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["quickfix", "location", "none"]$/;"	s	array:properties.coc.preferences.listOfWorkspaceEdit.enum
1	autoload/plugged/coc.nvim/data/schema.json	/^      "required": ["command", "filetypes"],$/;"	s	array:definitions.languageServerCommand.required
1	autoload/plugged/coc.nvim/data/schema.json	/^      "required": ["module", "filetypes"],$/;"	s	array:definitions.languageServerModule.required
1	autoload/plugged/coc.nvim/data/schema.json	/^      "required": ["port", "filetypes"],$/;"	s	array:definitions.languageServerSocket.required
1	autoload/plugged/coc.nvim/data/schema.json	/^      "type": ["array", "null"],$/;"	s	array:properties.list.statusLineSegments.type
1	autoload/plugged/coc.nvim/data/schema.json	/^      "type": ["null", "string"],$/;"	s	array:properties.http.proxyAuthorization.type
1	autoload/plugged/coc.nvim/data/schema.json	/^      "type": ["string", "null"],$/;"	s	array:properties.dialog.floatBorderHighlight.type
1	autoload/plugged/coc.nvim/data/schema.json	/^      "type": ["string", "null"],$/;"	s	array:properties.dialog.floatHighlight.type
1	autoload/plugged/coc.nvim/package.json	/^      "tsx",$/;"	s	array:jest.moduleFileExtensions
1	autoload/plugged/coc.nvim/package.json	/^    "neovim"$/;"	s	array:keywords
1	coc-settings.json	/^    "~\/.config\/nvim\/utils\/snips"$/;"	s	array:snippets.ultisnips.directories
1	coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["css", "markdown", "javascript", "graphql", "html", /;"	s	array:coc.preferences.formatOnSaveFiletypes
1. Update the list of processes by pressing CTRL-R	autoload/plugged/fzf/README.md	/^#### 1. Update the list of processes by pressing CTRL-R$/;"	t	subsection:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics""Reloading the candidate list
10	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	p	class:uwe.t
12	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	p	class:uwe.t
13	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	p	class:uwe.t
2	autoload/plugged/coc.nvim/data/schema.json	/^            {$/;"	o	array:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf
2	autoload/plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
2	autoload/plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
2	autoload/plugged/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	s	array:definitions.languageServerBase.properties.trace.server.enum
2	autoload/plugged/coc.nvim/data/schema.json	/^        "%{get(b:list_status, \\"args\\", \\"\\")}",$/;"	s	array:properties.list.statusLineSegments.default
2	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
2	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [".git", ".hg", ".projections.json"],$/;"	s	array:properties.coc.preferences.rootPatterns.default
2	autoload/plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
2	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	s	array:properties.suggest.detailField.enum
2	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	s	array:properties.diagnostic.enableMessage.enum
2	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	s	array:properties.suggest.autoTrigger.enum
2	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	s	array:properties.coc.preferences.extensionUpdateCheck.enum
2	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop", "pedit"],$/;"	s	array:properties.coc.preferences.jumpCommand.enum
2	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["full", "short", "filename", "hidden"],$/;"	s	array:properties.list.source.diagnostics.pathFormat.enum
2	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
2	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["length", "alphabetical", "none"]$/;"	s	array:properties.suggest.defaultSortMethod.enum
2	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	s	array:properties.coc.preferences.messageLevel.enum
2	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	s	array:properties.hover.target.enum
2	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["quickfix", "location", "none"]$/;"	s	array:properties.coc.preferences.listOfWorkspaceEdit.enum
2	autoload/plugged/coc.nvim/package.json	/^      "json",$/;"	s	array:jest.moduleFileExtensions
2	coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["css", "markdown", "javascript", "graphql", "html", /;"	s	array:coc.preferences.formatOnSaveFiletypes
2. Switch between sources by pressing CTRL-D or CTRL-F	autoload/plugged/fzf/README.md	/^#### 2. Switch between sources by pressing CTRL-D or CTRL-F$/;"	t	subsection:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics""Reloading the candidate list
2018-07-12	autoload/plugged/coc.nvim/history.md	/^# 2018-07-12$/;"	c
2018-07-13	autoload/plugged/coc.nvim/history.md	/^# 2018-07-13$/;"	c
2018-07-14	autoload/plugged/coc.nvim/history.md	/^# 2018-07-14$/;"	c
2018-07-15	autoload/plugged/coc.nvim/history.md	/^# 2018-07-15$/;"	c
2018-07-16	autoload/plugged/coc.nvim/history.md	/^# 2018-07-16$/;"	c
2018-07-17	autoload/plugged/coc.nvim/history.md	/^# 2018-07-17$/;"	c
2018-07-19	autoload/plugged/coc.nvim/history.md	/^# 2018-07-19$/;"	c
2018-07-20	autoload/plugged/coc.nvim/history.md	/^# 2018-07-20$/;"	c
2018-07-21	autoload/plugged/coc.nvim/history.md	/^# 2018-07-21$/;"	c
2018-07-23	autoload/plugged/coc.nvim/history.md	/^# 2018-07-23$/;"	c
2018-07-24	autoload/plugged/coc.nvim/history.md	/^# 2018-07-24$/;"	c
2018-07-27	autoload/plugged/coc.nvim/history.md	/^# 2018-07-27$/;"	c
2018-07-28	autoload/plugged/coc.nvim/history.md	/^# 2018-07-28$/;"	c
2018-07-29	autoload/plugged/coc.nvim/history.md	/^# 2018-07-29$/;"	c
2018-07-30	autoload/plugged/coc.nvim/history.md	/^# 2018-07-30$/;"	c
2018-07-31	autoload/plugged/coc.nvim/history.md	/^# 2018-07-31$/;"	c
2018-08-02	autoload/plugged/coc.nvim/history.md	/^# 2018-08-02$/;"	c
2018-08-03	autoload/plugged/coc.nvim/history.md	/^# 2018-08-03$/;"	c
2018-08-04	autoload/plugged/coc.nvim/history.md	/^# 2018-08-04$/;"	c
2018-08-05	autoload/plugged/coc.nvim/history.md	/^# 2018-08-05$/;"	c
2018-08-07	autoload/plugged/coc.nvim/history.md	/^# 2018-08-07$/;"	c
2018-08-08	autoload/plugged/coc.nvim/history.md	/^# 2018-08-08$/;"	c
2018-08-09	autoload/plugged/coc.nvim/history.md	/^# 2018-08-09$/;"	c
2018-08-10	autoload/plugged/coc.nvim/history.md	/^# 2018-08-10$/;"	c
2018-08-11	autoload/plugged/coc.nvim/history.md	/^# 2018-08-11$/;"	c
2018-08-12	autoload/plugged/coc.nvim/history.md	/^# 2018-08-12$/;"	c
2018-08-14	autoload/plugged/coc.nvim/history.md	/^# 2018-08-14$/;"	c
2018-08-15	autoload/plugged/coc.nvim/history.md	/^# 2018-08-15$/;"	c
2018-08-16	autoload/plugged/coc.nvim/history.md	/^# 2018-08-16$/;"	c
2018-08-17	autoload/plugged/coc.nvim/history.md	/^# 2018-08-17$/;"	c
2018-08-21	autoload/plugged/coc.nvim/history.md	/^# 2018-08-21$/;"	c
2018-08-23	autoload/plugged/coc.nvim/history.md	/^# 2018-08-23$/;"	c
2018-08-30	autoload/plugged/coc.nvim/history.md	/^# 2018-08-30$/;"	c
2018-09-07	autoload/plugged/coc.nvim/history.md	/^# 2018-09-07$/;"	c
2018-09-10	autoload/plugged/coc.nvim/history.md	/^# 2018-09-10$/;"	c
2018-09-15	autoload/plugged/coc.nvim/history.md	/^# 2018-09-15$/;"	c
2018-09-20	autoload/plugged/coc.nvim/history.md	/^# 2018-09-20$/;"	c
2018-09-24	autoload/plugged/coc.nvim/history.md	/^# 2018-09-24$/;"	c
2018-09-27	autoload/plugged/coc.nvim/history.md	/^# 2018-09-27$/;"	c
2018-09-28	autoload/plugged/coc.nvim/history.md	/^# 2018-09-28$/;"	c
2018-09-30	autoload/plugged/coc.nvim/history.md	/^# 2018-09-30$/;"	c
2018-10-01	autoload/plugged/coc.nvim/history.md	/^# 2018-10-01$/;"	c
2018-10-05	autoload/plugged/coc.nvim/history.md	/^# 2018-10-05$/;"	c
2018-10-14	autoload/plugged/coc.nvim/history.md	/^# 2018-10-14$/;"	c
2018-10-18	autoload/plugged/coc.nvim/history.md	/^# 2018-10-18$/;"	c
2018-10-21	autoload/plugged/coc.nvim/history.md	/^# 2018-10-21$/;"	c
2018-10-25	autoload/plugged/coc.nvim/history.md	/^# 2018-10-25$/;"	c
2018-10-29	autoload/plugged/coc.nvim/history.md	/^# 2018-10-29$/;"	c
2018-11-02	autoload/plugged/coc.nvim/history.md	/^# 2018-11-02$/;"	c
2018-11-07	autoload/plugged/coc.nvim/history.md	/^# 2018-11-07$/;"	c
2018-11-13	autoload/plugged/coc.nvim/history.md	/^# 2018-11-13$/;"	c
2018-11-19	autoload/plugged/coc.nvim/history.md	/^# 2018-11-19$/;"	c
2018-11-24	autoload/plugged/coc.nvim/history.md	/^# 2018-11-24$/;"	c
2018-11-28	autoload/plugged/coc.nvim/history.md	/^# 2018-11-28$/;"	c
2018-12-05	autoload/plugged/coc.nvim/history.md	/^# 2018-12-05$/;"	c
2018-12-06	autoload/plugged/coc.nvim/history.md	/^# 2018-12-06$/;"	c
2018-12-08	autoload/plugged/coc.nvim/history.md	/^# 2018-12-08$/;"	c
2018-12-12	autoload/plugged/coc.nvim/history.md	/^# 2018-12-12$/;"	c
2018-12-17	autoload/plugged/coc.nvim/history.md	/^# 2018-12-17$/;"	c
2018-12-20	autoload/plugged/coc.nvim/history.md	/^# 2018-12-20$/;"	c
2018-12-27	autoload/plugged/coc.nvim/history.md	/^# 2018-12-27$/;"	c
2018-12-31	autoload/plugged/coc.nvim/history.md	/^# 2018-12-31$/;"	c
2019-01-01	autoload/plugged/coc.nvim/history.md	/^# 2019-01-01$/;"	c
2019-01-03	autoload/plugged/coc.nvim/history.md	/^# 2019-01-03$/;"	c
2019-01-09	autoload/plugged/coc.nvim/history.md	/^# 2019-01-09$/;"	c
2019-01-24	autoload/plugged/coc.nvim/history.md	/^# 2019-01-24$/;"	c
2019-01-28	autoload/plugged/coc.nvim/history.md	/^# 2019-01-28$/;"	c
2019-02-02	autoload/plugged/coc.nvim/history.md	/^# 2019-02-02$/;"	c
2019-02-04	autoload/plugged/coc.nvim/history.md	/^# 2019-02-04$/;"	c
2019-02-11	autoload/plugged/coc.nvim/history.md	/^# 2019-02-11$/;"	c
2019-02-12	autoload/plugged/coc.nvim/history.md	/^# 2019-02-12$/;"	c
2019-02-17	autoload/plugged/coc.nvim/history.md	/^# 2019-02-17$/;"	c
2019-02-22	autoload/plugged/coc.nvim/history.md	/^# 2019-02-22$/;"	c
2019-02-25	autoload/plugged/coc.nvim/history.md	/^# 2019-02-25$/;"	c
2019-03-03	autoload/plugged/coc.nvim/history.md	/^# 2019-03-03$/;"	c
2019-03-11	autoload/plugged/coc.nvim/history.md	/^# 2019-03-11$/;"	c
2019-03-16	autoload/plugged/coc.nvim/history.md	/^# 2019-03-16$/;"	c
2019-03-19	autoload/plugged/coc.nvim/history.md	/^# 2019-03-19$/;"	c
2019-03-24	autoload/plugged/coc.nvim/history.md	/^# 2019-03-24$/;"	c
2019-03-28	autoload/plugged/coc.nvim/history.md	/^# 2019-03-28$/;"	c
2019-03-31	autoload/plugged/coc.nvim/history.md	/^# 2019-03-31$/;"	c
2019-04-09	autoload/plugged/coc.nvim/history.md	/^# 2019-04-09$/;"	c
2019-04-27	autoload/plugged/coc.nvim/history.md	/^# 2019-04-27$/;"	c
2019-05-07	autoload/plugged/coc.nvim/history.md	/^# 2019-05-07$/;"	c
2019-05-30	autoload/plugged/coc.nvim/history.md	/^# 2019-05-30$/;"	c
2019-06-09	autoload/plugged/coc.nvim/history.md	/^# 2019-06-09$/;"	c
2019-06-12	autoload/plugged/coc.nvim/history.md	/^# 2019-06-12$/;"	c
2019-06-15	autoload/plugged/coc.nvim/history.md	/^# 2019-06-15$/;"	c
2019-07-01	autoload/plugged/coc.nvim/history.md	/^# 2019-07-01$/;"	c
2019-07-11 0.0.73	autoload/plugged/coc.nvim/history.md	/^# 2019-07-11 0.0.73$/;"	c
2019-08-18 0.0.74	autoload/plugged/coc.nvim/history.md	/^# 2019-08-18 0.0.74$/;"	c
3	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:MB
3	autoload/plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
3	autoload/plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
3	autoload/plugged/coc.nvim/data/schema.json	/^        "(%L\/%{get(b:list_status, \\"total\\", \\"\\")})",$/;"	s	array:properties.list.statusLineSegments.default
3	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
3	autoload/plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
3	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop", "pedit"],$/;"	s	array:properties.coc.preferences.jumpCommand.enum
3	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["full", "short", "filename", "hidden"],$/;"	s	array:properties.list.source.diagnostics.pathFormat.enum
3	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
3	autoload/plugged/coc.nvim/package.json	/^      "js"$/;"	s	array:jest.moduleFileExtensions
3	coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["css", "markdown", "javascript", "graphql", "html", /;"	s	array:coc.preferences.formatOnSaveFiletypes
3. Interactive ripgrep integration	autoload/plugged/fzf/README.md	/^#### 3. Interactive ripgrep integration$/;"	t	subsection:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics""Reloading the candidate list
3.0.0	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 3.0.0$/;"	t	chapter:NERDTree Change Log
3.0.1	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 3.0.1$/;"	t	chapter:NERDTree Change Log
3.1.0	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 3.1.0$/;"	t	chapter:NERDTree Change Log
3.1.1	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 3.1.1$/;"	t	chapter:NERDTree Change Log
30	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:OB
31	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:OB
32	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:OB
33	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:OB
34	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:OB
35	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:OB
36	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:OB
37	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:OB
4	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:MB
4	autoload/plugged/coc.nvim/data/schema.json	/^        "%=",$/;"	s	array:properties.list.statusLineSegments.default
4	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
4	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop", "pedit"],$/;"	s	array:properties.coc.preferences.jumpCommand.enum
4	coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["css", "markdown", "javascript", "graphql", "html", /;"	s	array:coc.preferences.formatOnSaveFiletypes
4.0.0	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 4.0.0$/;"	t	chapter:NERDTree Change Log
4.1.0	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 4.1.0$/;"	t	chapter:NERDTree Change Log
4.2.0	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 4.2.0$/;"	t	chapter:NERDTree Change Log
40	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:LB
41	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:LB
42	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:LB
43	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:LB
44	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:LB
45	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:LB
46	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:LB
47	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:LB
5	autoload/plugged/coc.nvim/data/schema.json	/^        "%#CocListPath# %{get(b:list_status, \\"cwd\\", \\"\\")} %l\/%L%*"$/;"	s	array:properties.list.statusLineSegments.default
5	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
5	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop", "pedit"],$/;"	s	array:properties.coc.preferences.jumpCommand.enum
5	coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["css", "markdown", "javascript", "graphql", "html", /;"	s	array:coc.preferences.formatOnSaveFiletypes
5.0.0	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 5.0.0$/;"	t	chapter:NERDTree Change Log
5.1	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 5.1$/;"	t	chapter:NERDTree Change Log
5.2	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 5.2$/;"	t	chapter:NERDTree Change Log
5.3	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 5.3$/;"	t	chapter:NERDTree Change Log
6	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
6	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop", "pedit"],$/;"	s	array:properties.coc.preferences.jumpCommand.enum
6	coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["css", "markdown", "javascript", "graphql", "html", /;"	s	array:coc.preferences.formatOnSaveFiletypes
6.0	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 6.0$/;"	t	chapter:NERDTree Change Log
6.1	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 6.1$/;"	t	chapter:NERDTree Change Log
6.10	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 6.10$/;"	t	chapter:NERDTree Change Log
6.2	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 6.2$/;"	t	chapter:NERDTree Change Log
6.3	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 6.3$/;"	t	chapter:NERDTree Change Log
6.4	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 6.4$/;"	t	chapter:NERDTree Change Log
6.5	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 6.5$/;"	t	chapter:NERDTree Change Log
6.6	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 6.6$/;"	t	chapter:NERDTree Change Log
6.7	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 6.7$/;"	t	chapter:NERDTree Change Log
6.8	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 6.8$/;"	t	chapter:NERDTree Change Log
6.9	autoload/plugged/NERDTree/CHANGELOG.md	/^#### 6.9$/;"	t	chapter:NERDTree Change Log
7	coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["css", "markdown", "javascript", "graphql", "html", /;"	s	array:coc.preferences.formatOnSaveFiletypes
8	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	p	class:uwe.t
9	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	p	class:uwe.t
90	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	p	class:OB
<	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^        nnoremap <silent> <buffer> < :set opfunc=<SID>DecreaseFunc<CR>g@$/;"	m
<	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    vnoremap <silent> <buffer> < :call CobolIndentBlock(-v:count1)<CR>$/;"	m
<	keys/mapping.vim	/^vnoremap < <gv$/;"	m
<<	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    nnoremap <silent> <buffer> << :call CobolIndentBlock(-1)<CR>$/;"	m
<BS>	autoload/plugged/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <silent> <BS> <c-g>c$/;"	m
<C-A>	autoload/plugged/vim-polyglot/ftplugin/gitrebase.vim	/^nnoremap <buffer> <silent> <C-A> :<C-U><C-R>=v:count1<CR>Cycle<CR>$/;"	m
<C-D>	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    inoremap <silent> <buffer> <C-D> <C-R>=<SID>DecreaseIndent()<CR><C-R>=<SID>RestoreShiftwidth/;"	m
<C-N>	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> <C-N> :<C-U>execute <SID>NextItem(v:count1)<CR>$/;"	m
<C-N>	autoload/plugged/vim-polyglot/ftplugin/ada.vim	/^      inoremap <unique> <buffer> <C-N> <C-R>=ada#Completion("\\<lt>C-N>")<cr>$/;"	m
<C-P>	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^          nnoremap <buffer> <silent> <C-P> :<C-U>execute <SID>PreviousItem(v:count1)<CR>$/;"	m
<C-P>	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^          nnoremap <buffer> <silent> <C-P> :<C-U>execute line('.') == 1 ? 'CtrlP ' . fnameescape/;"	m
<C-P>	autoload/plugged/vim-polyglot/ftplugin/ada.vim	/^      inoremap <unique> <buffer> <C-P> <C-R>=ada#Completion("\\<lt>C-P>")<cr>$/;"	m
<C-Q>	keys/mapping.vim	/^nnoremap <C-Q> :wq!<CR>$/;"	m
<C-T>	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    inoremap <silent> <buffer> <C-T> <C-R>=<SID>IncreaseIndent()<CR><C-R>=<SID>RestoreShiftwidth/;"	m
<C-T>	autoload/plugged/vim-polyglot/ftplugin/pdf.vim	/^nnoremap <silent><buffer> <C-T> :if len(b:pdf_tagstack) > 0 <Bar> call setpos('.',remove(b:pdf_t/;"	m
<C-U>	autoload/plugged/vim-polyglot/plugin/polyglot.vim	/^    inoremap <C-U> <C-G>u<C-U>$/;"	m
<C-W>	autoload/plugged/vim-polyglot/plugin/polyglot.vim	/^    inoremap <C-W> <C-G>u<C-W>$/;"	m
<C-W><C-D>	autoload/plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> <C-W><C-D>  :<C-U>exe <SID>jump('split',v:count)<SID>foldo/;"	m
<C-W>d	autoload/plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> <C-W>d      :<C-U>exe <SID>jump('split',v:count)<SID>foldo/;"	m
<C-X>	autoload/plugged/vim-polyglot/ftplugin/gitrebase.vim	/^nnoremap <buffer> <silent> <C-X> :<C-U><C-R>=v:count1<CR>Cycle!<CR>$/;"	m
<C-X><C-]>	autoload/plugged/vim-polyglot/ftplugin/ada.vim	/^      inoremap <unique> <buffer> <C-X><C-]> <C-R>=<SID>ada#Completion("\\<lt>C-X>\\<lt>C-]>")<cr/;"	m
<C-]>	autoload/plugged/vim-polyglot/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> <C-]>    :call ada#Jump_Tag ('', 'tjump')<cr>$/;"	m
<C-]>	autoload/plugged/vim-polyglot/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> <C-]>    :call ada#List_Tag ()<cr>$/;"	m
<C-]>	autoload/plugged/vim-polyglot/ftplugin/pdf.vim	/^nnoremap <silent><buffer> <C-]> :call <SID>Tag()<CR>$/;"	m
<C-a>	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^    inoremap <buffer> <C-a> <Home>$/;"	m
<C-a>	plug-config/fzf.vim	/^map <C-a> :Files<CR>$/;"	m
<C-b>	plug-config/coc.vim	/^  inoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? "\\<c-r>=coc#float#scroll(0)\\</;"	m
<C-b>	plug-config/coc.vim	/^  nnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\\<C-b>"$/;"	m
<C-b>	plug-config/coc.vim	/^  vnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\\<C-b>"$/;"	m
<C-c>	keys/mapping.vim	/^nnoremap <C-c> <Esc>$/;"	m
<C-e>	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^    inoremap <buffer><expr><C-e> pumvisible() ? "\\<C-e>" : "\\<End>"$/;"	m
<C-f>	keys/mapping.vim	/^nmap <C-f> :NERDTreeToggle<CR>$/;"	m
<C-f>	plug-config/coc.vim	/^  inoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? "\\<c-r>=coc#float#scroll(1)\\</;"	m
<C-f>	plug-config/coc.vim	/^  nnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\\<C-f>"$/;"	m
<C-f>	plug-config/coc.vim	/^  vnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\\<C-f>"$/;"	m
<C-h>	keys/mapping.vim	/^nnoremap <C-h> <C-w>h$/;"	m
<C-j>	keys/mapping.vim	/^nnoremap <C-j> <C-w>j$/;"	m
<C-k>	keys/mapping.vim	/^nnoremap <C-k> <C-w>k$/;"	m
<C-l>	keys/mapping.vim	/^nnoremap <C-l> <C-w>l$/;"	m
<C-n>	autoload/plugged/gv.vim/plugin/gv.vim	/^  nmap              <buffer> <C-n> ]]o$/;"	m
<C-n>	autoload/plugged/gv.vim/plugin/gv.vim	/^  xmap              <buffer> <C-n> ]]ogv$/;"	m
<C-p>	autoload/plugged/gv.vim/plugin/gv.vim	/^  nmap              <buffer> <C-p> [[o$/;"	m
<C-p>	autoload/plugged/gv.vim/plugin/gv.vim	/^  xmap              <buffer> <C-p> [[ogv$/;"	m
<C-s>	keys/mapping.vim	/^nnoremap <C-s> :w<CR>$/;"	m
<CR>	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  imap <buffer> <CR> <Plug>L2UAutoSub$/;"	m
<DEL>	autoload/plugged/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <silent> <DEL> <c-g>c$/;"	m
<Leader>O	keys/mapping.vim	/^nnoremap <Leader>O O<Esc>^Da$/;"	m
<Leader>fr	autoload/plugged/vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>fr :FufFile <c-r>=scala#GetRootDirForFuzzyFinder('%:p:h/;"	m
<Leader>fs	autoload/plugged/vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>fs :FufFile <c-r>=scala#GetMainDirForFuzzyFinder('%:p:h/;"	m
<Leader>ft	autoload/plugged/vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>ft :FufFile <c-r>=scala#GetTestDirForFuzzyFinder('%:p:h/;"	m
<Leader>o	keys/mapping.vim	/^nnoremap <Leader>o o<Esc>^Da$/;"	m
<Leader>rf	autoload/plugged/vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rf :TextileRenderFile<CR>$/;"	m
<Leader>rp	autoload/plugged/vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rp :TextilePreview<CR>$/;"	m
<Leader>rt	autoload/plugged/vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rt :TextileRenderTab<CR>$/;"	m
<LeftRelease>	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^      nnoremap <buffer><silent> <LeftRelease> :call coc#float#nvim_float_click()<CR>$/;"	m
<LeftRelease>	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^    nnoremap <buffer><silent> <LeftRelease> :call coc#float#nvim_float_click()<CR>$/;"	m
<LocalLeader><LocalLeader>	autoload/plugged/vim-polyglot/ftplugin/abaqus.vim	/^noremap <silent><buffer> <LocalLeader><LocalLeader> $/;"	m
<LocalLeader>C	autoload/plugged/vim-polyglot/ftplugin/lprolog.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	autoload/plugged/vim-polyglot/ftplugin/lprolog.vim	/^    vmap <buffer> <LocalLeader>C <Plug>BUncomOff$/;"	m
<LocalLeader>C	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^    xmap <buffer> <LocalLeader>C <Plug>BUncomOff$/;"	m
<LocalLeader>S	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nmap <buffer> <LocalLeader>S <Plug>OCamlSwitchNewWin$/;"	m
<LocalLeader>a	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>a 0:call search(":")<ENTER>b:call IdrisAddClause(0)<ENTE/;"	m
<LocalLeader>b	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>b 0:call IdrisAddClause(0)<ENTER>$/;"	m
<LocalLeader>b	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>b 0:call IdrisAddClause(0)<ENTER>$/;"	m
<LocalLeader>c	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>c :call IdrisCaseSplit()<ENTER>$/;"	m
<LocalLeader>c	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>c :call IdrisCaseSplit()<ENTER>$/;"	m
<LocalLeader>c	autoload/plugged/vim-polyglot/ftplugin/lprolog.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	autoload/plugged/vim-polyglot/ftplugin/lprolog.vim	/^    vmap <buffer> <LocalLeader>c <Plug>BUncomOn$/;"	m
<LocalLeader>c	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^    xmap <buffer> <LocalLeader>c <Plug>BUncomOn$/;"	m
<LocalLeader>c	autoload/plugged/vim-polyglot/ftplugin/spec.vim	/^		map <buffer> <LocalLeader>c <Plug>SpecChangelog$/;"	m
<LocalLeader>d	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>d 0:call search(":")<ENTER>b:call IdrisAddClause(0)<ENTE/;"	m
<LocalLeader>d	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>d 0:call search(":")<ENTER>b:call IdrisAddClause(0)<ENTE/;"	m
<LocalLeader>e	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>e :call IdrisEval()<ENTER>$/;"	m
<LocalLeader>e	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>e :call IdrisEval()<ENTER>$/;"	m
<LocalLeader>f	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>f :call IdrisRefine()<ENTER>$/;"	m
<LocalLeader>f	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>f :call IdrisRefine()<ENTER>$/;"	m
<LocalLeader>g	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>g :call IdrisGenerateDef()<ENTER>$/;"	m
<LocalLeader>h	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>h :call IdrisShowDoc()<ENTER>$/;"	m
<LocalLeader>h	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>h :call IdrisShowDoc()<ENTER>$/;"	m
<LocalLeader>i	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>i 0:call IdrisResponseWin()<ENTER>$/;"	m
<LocalLeader>i	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>i 0:call IdrisResponseWin()<ENTER>$/;"	m
<LocalLeader>l	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>l :call IdrisMakeLemma()<ENTER>$/;"	m
<LocalLeader>l	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>l :call IdrisMakeLemma()<ENTER>$/;"	m
<LocalLeader>m	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>m :call IdrisAddMissing()<ENTER>$/;"	m
<LocalLeader>m	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>m :call IdrisAddMissing()<ENTER>$/;"	m
<LocalLeader>mc	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>mc :call IdrisMakeCase()<ENTER>$/;"	m
<LocalLeader>mc	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>mc :call IdrisMakeCase()<ENTER>$/;"	m
<LocalLeader>md	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>md 0:call search(":")<ENTER>b:call IdrisAddClause(1)<ENT/;"	m
<LocalLeader>md	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>md 0:call search(":")<ENTER>b:call IdrisAddClause(1)<ENT/;"	m
<LocalLeader>o	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>o :call IdrisProofSearch(0)<ENTER>$/;"	m
<LocalLeader>o	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>o :call IdrisProofSearch(0)<ENTER>$/;"	m
<LocalLeader>p	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>p :call IdrisProofSearch(1)<ENTER>$/;"	m
<LocalLeader>p	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>p :call IdrisProofSearch(1)<ENTER>$/;"	m
<LocalLeader>q	autoload/plugged/vim-polyglot/ftplugin/mail.vim	/^    nmap <buffer> <LocalLeader>q <Plug>MailQuote$/;"	m
<LocalLeader>q	autoload/plugged/vim-polyglot/ftplugin/mail.vim	/^    vmap <buffer> <LocalLeader>q <Plug>MailQuote$/;"	m
<LocalLeader>r	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>r :call IdrisReload(0)<ENTER>$/;"	m
<LocalLeader>r	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>r :call IdrisReload(0)<ENTER>$/;"	m
<LocalLeader>s	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>s :call IdrisProofSearch(0)<ENTER>$/;"	m
<LocalLeader>s	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nmap <buffer> <LocalLeader>s <Plug>OCamlSwitchEdit$/;"	m
<LocalLeader>t	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>t :call IdrisShowType()<ENTER>$/;"	m
<LocalLeader>t	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>t :call IdrisShowType()<ENTER>$/;"	m
<LocalLeader>t	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nmap <buffer> <LocalLeader>t <Plug>OCamlPrintType$/;"	m
<LocalLeader>t	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  xmap <buffer> <LocalLeader>t <Plug>OCamlPrintType$/;"	m
<LocalLeader>w	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>w 0:call IdrisMakeWith()<ENTER>$/;"	m
<LocalLeader>w	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>w 0:call IdrisMakeWith()<ENTER>$/;"	m
<M-h>	keys/mapping.vim	/^nnoremap <M-h>    :vertical resize -2<CR>$/;"	m
<M-j>	keys/mapping.vim	/^nnoremap <M-j>    :resize -2<CR>$/;"	m
<M-k>	keys/mapping.vim	/^nnoremap <M-k>    :resize +2<CR>$/;"	m
<M-l>	keys/mapping.vim	/^nnoremap <M-l>    :vertical resize +2<CR>$/;"	m
<Plug>(-fzf-complete-finish)	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-finish) <c-o>l$/;"	m
<Plug>(-fzf-complete-finish)	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <silent> <Plug>(-fzf-complete-finish) a$/;"	m
<Plug>(-fzf-complete-trigger)	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-trigger) <c-o>:call <sid>complete_trigger()<cr>$/;"	m
<Plug>(JuliaDocPrompt)	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^nnoremap <silent><buffer> <Plug>(JuliaDocPrompt) :<C-u>call julia#doc#prompt()<CR>$/;"	m
<Plug>(JuliaDocPrompt)	autoload/plugged/vim-polyglot/ftplugin/juliadoc.vim	/^nnoremap <silent><buffer> <Plug>(JuliaDocPrompt) :<C-u>call julia#doc#prompt()<CR>$/;"	m
<Plug>(coc-classobj-a)	autoload/plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-classobj-a)       :<C-U>call coc#rpc#request('selectSymbolRange', [/;"	m
<Plug>(coc-classobj-a)	autoload/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-classobj-a)       :<C-U>call coc#rpc#request('selectSymbolRange', [/;"	m
<Plug>(coc-classobj-i)	autoload/plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-classobj-i)       :<C-U>call coc#rpc#request('selectSymbolRange', [/;"	m
<Plug>(coc-classobj-i)	autoload/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-classobj-i)       :<C-U>call coc#rpc#request('selectSymbolRange', [/;"	m
<Plug>(coc-codeaction)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction)            :<C-u>call       CocActionAsync('codeAction',        /;"	m
<Plug>(coc-codeaction-cursor)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction-cursor)     :<C-u>call       CocActionAsync('codeAction',        /;"	m
<Plug>(coc-codeaction-line)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction-line)       :<C-u>call       CocActionAsync('codeAction',        /;"	m
<Plug>(coc-codeaction-selected)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction-selected)   :<C-u>set        operatorfunc=<SID>CodeActionFromSele/;"	m
<Plug>(coc-codeaction-selected)	autoload/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-codeaction-selected)   :<C-u>call       CocActionAsync('codeAction'/;"	m
<Plug>(coc-codelens-action)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codelens-action)       :<C-u>call       CocActionAsync('codeLensAction')<CR>$/;"	m
<Plug>(coc-command-repeat)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-command-repeat)        :<C-u>call       CocAction('repeatCommand')</;"	m
<Plug>(coc-cursors-operator)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-cursors-operator) :<C-u>set operatorfunc=<SID>CursorRangeFromSelect/;"	m
<Plug>(coc-cursors-position)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-cursors-position) :<C-u>call coc#rpc#request('cursorsSelect', [bufn/;"	m
<Plug>(coc-cursors-range)	autoload/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-cursors-range)    :<C-u>call coc#rpc#request('cursorsSelect', [bufn/;"	m
<Plug>(coc-cursors-word)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-cursors-word)     :<C-u>call coc#rpc#request('cursorsSelect', [bufn/;"	m
<Plug>(coc-declaration)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-declaration)           :<C-u>call       CocActionAsync('jumpDeclara/;"	m
<Plug>(coc-definition)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-definition)            :<C-u>call       CocActionAsync('jumpDefinit/;"	m
<Plug>(coc-diagnostic-info)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-info)       :<C-u>call       CocActionAsync('diagnosticI/;"	m
<Plug>(coc-diagnostic-next)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-next)       :<C-u>call       CocActionAsync('diagnosticN/;"	m
<Plug>(coc-diagnostic-next-error)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-next-error) :<C-u>call       CocActionAsync('diagnosticN/;"	m
<Plug>(coc-diagnostic-prev)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-prev)       :<C-u>call       CocActionAsync('diagnosticP/;"	m
<Plug>(coc-diagnostic-prev-error)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-prev-error) :<C-u>call       CocActionAsync('diagnosticP/;"	m
<Plug>(coc-fix-current)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-fix-current)           :<C-u>call       CocActionAsync('doQuickfix'/;"	m
<Plug>(coc-float-hide)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-float-hide)            :<C-u>call       coc#float#close_all()<CR>$/;"	m
<Plug>(coc-float-jump)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-float-jump)            :<c-u>call       coc#float#jump()<cr>$/;"	m
<Plug>(coc-format)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-format)                :<C-u>call       CocActionAsync('format')<CR/;"	m
<Plug>(coc-format-selected)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-format-selected)       :<C-u>set        operatorfunc=<SID>FormatFro/;"	m
<Plug>(coc-format-selected)	autoload/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-format-selected)       :<C-u>call       CocActionAsync('formatSelec/;"	m
<Plug>(coc-funcobj-a)	autoload/plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-funcobj-a)        :<C-U>call coc#rpc#request('selectSymbolRange', [/;"	m
<Plug>(coc-funcobj-a)	autoload/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-funcobj-a)        :<C-U>call coc#rpc#request('selectSymbolRange', [/;"	m
<Plug>(coc-funcobj-i)	autoload/plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-funcobj-i)        :<C-U>call coc#rpc#request('selectSymbolRange', [/;"	m
<Plug>(coc-funcobj-i)	autoload/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-funcobj-i)        :<C-U>call coc#rpc#request('selectSymbolRange', [/;"	m
<Plug>(coc-implementation)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-implementation)        :<C-u>call       CocActionAsync('jumpImpleme/;"	m
<Plug>(coc-openlink)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-openlink)              :<C-u>call       CocActionAsync('openLink')</;"	m
<Plug>(coc-range-select)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-range-select)          :<C-u>call       CocActionAsync('rangeSelect',     ''/;"	m
<Plug>(coc-range-select)	autoload/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-range-select)          :<C-u>call       CocActionAsync('rangeSelect/;"	m
<Plug>(coc-range-select-backward)	autoload/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-range-select-backward) :<C-u>call       CocActionAsync('rangeSelect/;"	m
<Plug>(coc-refactor)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-refactor)              :<C-u>call       CocActionAsync('refactor')</;"	m
<Plug>(coc-references)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-references)            :<C-u>call       CocActionAsync('jumpReferen/;"	m
<Plug>(coc-references-used)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-references-used)       :<C-u>call       CocActionAsync('jumpUsed')</;"	m
<Plug>(coc-rename)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-rename)                :<C-u>call       CocActionAsync('rename')<CR/;"	m
<Plug>(coc-type-definition)	autoload/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-type-definition)       :<C-u>call       CocActionAsync('jumpTypeDef/;"	m
<Plug>(crystal-format)	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-format)             :<C-u>CrystalFormat<CR>$/;"	m
<Plug>(crystal-jump-to-definition)	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-jump-to-definition) :<C-u>CrystalDef<CR>$/;"	m
<Plug>(crystal-show-context)	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-show-context)       :<C-u>CrystalContext<CR>$/;"	m
<Plug>(crystal-spec-run-all)	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-spec-run-all)       :<C-u>CrystalSpecRunAll<CR>$/;"	m
<Plug>(crystal-spec-run-current)	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-spec-run-current)   :<C-u>CrystalSpecRunCurrent<CR>$/;"	m
<Plug>(crystal-spec-switch)	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-spec-switch)        :<C-u>CrystalSpecSwitch<CR>$/;"	m
<Plug>(fzf-insert)	autoload/plugged/fzf/plugin/fzf.vim	/^nnoremap <silent> <Plug>(fzf-insert) i$/;"	m
<Plug>(fzf-normal)	autoload/plugged/fzf/plugin/fzf.vim	/^nnoremap <silent> <Plug>(fzf-normal) <Nop>$/;"	m
<Plug>(llvm-goto-definition)	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-goto-definition) :<C-u>call <SID>goto_definition()<CR>$/;"	m
<Plug>(llvm-move-block-next)	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-move-block-next) :<C-u>call <SID>move_to_following_block()<CR>$/;"	m
<Plug>(llvm-move-block-prev)	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-move-block-prev) :<C-u>call <SID>move_to_pred_block()<CR>$/;"	m
<Plug>(llvm-next-section-begin)	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-next-section-begin) :<C-u>call <SID>next_section(1)<CR>$/;"	m
<Plug>(llvm-next-section-end)	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-next-section-end) :<C-u>call <SID>next_section(0)<CR>$/;"	m
<Plug>(llvm-prev-section-begin)	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-prev-section-begin) :<C-u>call <SID>prev_section(1)<CR>$/;"	m
<Plug>(llvm-prev-section-end)	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-prev-section-end) :<C-u>call <SID>prev_section(0)<CR>$/;"	m
<Plug><cfile>	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><cfile> substitute(RubyCursorFile(),'^$',"\\022\\006",'')$/;"	m
<Plug><ctag>	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><ctag> substitute(RubyCursorTag(),'^$',"\\022\\027",'')$/;"	m
<Plug>AirlineSelectNextTab	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    noremap <silent> <Plug>AirlineSelectNextTab :<C-u>call <SID>jump_to_tab(v:count1)<CR>$/;"	m
<Plug>AirlineSelectNextTab	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  noremap <silent> <Plug>AirlineSelectNextTab :<C-U>exe repeat(':tabn\\|', v:count1)<cr>$/;"	m
<Plug>AirlineSelectPrevTab	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    noremap <silent> <Plug>AirlineSelectPrevTab :<C-u>call <SID>jump_to_tab(-v:count1)<CR>$/;"	m
<Plug>AirlineSelectPrevTab	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  noremap <silent> <Plug>AirlineSelectPrevTab gT$/;"	m
<Plug>AutoPairsReturn	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^imap <script> <Plug>AutoPairsReturn <SID>AutoPairsReturn$/;"	m
<Plug>BUncomOff	autoload/plugged/vim-polyglot/ftplugin/lprolog.vim	/^  vnoremap <buffer> <Plug>BUncomOff <ESC>:'<,'><CR>`<dd`>dd`<$/;"	m
<Plug>BUncomOff	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  xnoremap <buffer> <Plug>BUncomOff <ESC>:'<,'><CR>`<dd`>dd`<$/;"	m
<Plug>BUncomOn	autoload/plugged/vim-polyglot/ftplugin/lprolog.vim	/^  vnoremap <buffer> <Plug>BUncomOn <ESC>:'<,'><CR>`<O<ESC>0i\/*<ESC>`>o<ESC>0i*\/<ESC>`<$/;"	m
<Plug>BUncomOn	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  xnoremap <buffer> <Plug>BUncomOn <ESC>:'<,'><CR>`<O<ESC>0i(*<ESC>`>o<ESC>0i*)<ESC>`<$/;"	m
<Plug>CocRefresh	autoload/plugged/coc.nvim/plugin/coc.vim	/^inoremap <silent>                          <Plug>CocRefresh <C-r>=coc#_complete()<CR>$/;"	m
<Plug>Comment	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>Comment          :call <SID>Comment('c')<CR>$/;"	m
<Plug>DeComment	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>DeComment        :call <SID>Comment('u')<CR>$/;"	m
<Plug>L2UAutosubReset	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  inoremap <buffer><expr> <Plug>L2UAutosubReset <SID>L2U_AutosubReset()$/;"	m
<Plug>L2UTab	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  inoremap <buffer><expr> <Plug>L2UTab LaTeXtoUnicode#Tab()$/;"	m
<Plug>LUncomOff	autoload/plugged/vim-polyglot/ftplugin/lprolog.vim	/^  nnoremap <buffer> <Plug>LUncomOff <ESC>:s\/^\\\/\\* \\(.*\\) \\*\\\/\/\\1\/<CR>$/;"	m
<Plug>LUncomOff	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOff :s\/^(\\* \\(.*\\) \\*)\/\\1\/<CR>:noh<CR>$/;"	m
<Plug>LUncomOn	autoload/plugged/vim-polyglot/ftplugin/lprolog.vim	/^  nnoremap <buffer> <Plug>LUncomOn mz0i\/* <ESC>$A *\/<ESC>`z$/;"	m
<Plug>LUncomOn	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOn gI(* <End> *)<ESC>$/;"	m
<Plug>MailQuote	autoload/plugged/vim-polyglot/ftplugin/mail.vim	/^  nnoremap <buffer> <Plug>MailQuote :.,$s\/^\/> \/<CR>:noh<CR>``$/;"	m
<Plug>MailQuote	autoload/plugged/vim-polyglot/ftplugin/mail.vim	/^  vnoremap <buffer> <Plug>MailQuote :s\/^\/> \/<CR>:noh<CR>``$/;"	m
<Plug>Markdown_EditUrlUnderCursor	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^nnoremap <Plug>Markdown_EditUrlUnderCursor :call <sid>EditUrlUnderCursor()<cr>$/;"	m
<Plug>Markdown_OpenUrlUnderCursor	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^nnoremap <Plug>Markdown_OpenUrlUnderCursor :call <sid>OpenUrlUnderCursor()<cr>$/;"	m
<Plug>OCamlPrintType	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <silent> <Plug>OCamlPrintType :<C-U>call Ocaml_print_type("normal")<CR>$/;"	m
<Plug>OCamlPrintType	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  xnoremap <silent> <Plug>OCamlPrintType :<C-U>call Ocaml_print_type("visual")<CR>`<$/;"	m
<Plug>OCamlSwitchEdit	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <Plug>OCamlSwitchEdit :<C-u>call OCaml_switch(0)<CR>$/;"	m
<Plug>OCamlSwitchNewWin	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <Plug>OCamlSwitchNewWin :<C-u>call OCaml_switch(1)<CR>$/;"	m
<Plug>RacketDoc	autoload/plugged/vim-polyglot/ftplugin/racket.vim	/^nnoremap <buffer> <Plug>RacketDoc :silent !raco docs <cword><cr>:redraw!<cr>$/;"	m
<Plug>RacketDoc	autoload/plugged/vim-polyglot/ftplugin/racket.vim	/^vnoremap <buffer> <Plug>RacketDoc :call <SID>Racket_visual_doc()<cr>$/;"	m
<Plug>SpecChangelog	autoload/plugged/vim-polyglot/ftplugin/spec.vim	/^       noremap <buffer> <unique> <script> <Plug>SpecChangelog :call <SID>SpecChangelog("")<CR>$/;"	m
<Plug>Traditional	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>Traditional      :call <SID>Comment('t')<CR>$/;"	m
<Plug>VisualComment	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualComment     :'<,'>call <SID>Comment('c')<CR>$/;"	m
<Plug>VisualDeComment	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualDeComment   :'<,'>call <SID>Comment('u')<CR>$/;"	m
<Plug>VisualTraditional	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualTraditional :'<,'>call <SID>Comment('t')<CR>$/;"	m
<Plug>XTablineCdCurrent	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdCurrent :cd %:p:h<cr>:call airline#util#doaut/;"	m
<Plug>XTablineCdDown1	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown1   :cd %:p:h:h<cr>:call airline#util#doa/;"	m
<Plug>XTablineCdDown2	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown2   :cd %:p:h:h:h<cr>:call airline#util#d/;"	m
<Plug>XTablineCdDown3	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown3   :cd %:p:h:h:h:h<cr>:call airline#util/;"	m
<Plug>XTablineCdHome	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdHome    :cd ~<cr>:call airline#util#doautocmd/;"	m
<Plug>XTablineNextBuffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineNextBuffer <SID>NextBuffer$/;"	m
<Plug>XTablinePrevBuffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablinePrevBuffer <SID>PrevBuffer$/;"	m
<Plug>XTablineReopen	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineReopen <SID>ReopenLastTab$/;"	m
<Plug>XTablineSelectBuffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineSelectBuffer <SID>SelectBuffer$/;"	m
<Plug>XTablineToggleFiltering	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineToggleFiltering <SID>ToggleFiltering$/;"	m
<Plug>XTablineToggleTabs	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineToggleTabs <SID>ToggleTabs$/;"	m
<S-TAB>	keys/mapping.vim	/^nnoremap <S-TAB> :bprevious<CR>$/;"	m
<S-TAB>	plug-config/coc.vim	/^inoremap <expr><S-TAB> pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<SID>:	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>:	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>:  :<C-U>$/;"	m
<SID>AutoPairsReturn	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^inoremap <silent> <SID>AutoPairsReturn <C-R>=AutoPairsReturn()<CR>$/;"	m
<SID>NextBuffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>NextBuffer airline#extensions#tabline#xtabline#next_buffer(v:c/;"	m
<SID>PrevBuffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>PrevBuffer airline#extensions#tabline#xtabline#prev_buffer(v:c/;"	m
<SID>ReopenLastTab	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ReopenLastTab :XTabReopen<cr>$/;"	m
<SID>SelectBuffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>SelectBuffer g:xtabline_changing_buffer ? "\\<C-c>" : ":<C-u>c/;"	m
<SID>ToggleFiltering	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ToggleFiltering :call airline#extensions#tabline#xtabline#toggle_buff/;"	m
<SID>ToggleTabs	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ToggleTabs :call airline#extensions#tabline#xtabline#toggle_tabs()<cr/;"	m
<SID>c:	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>c: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>foldopen	autoload/plugged/vim-polyglot/ftplugin/cucumber.vim	/^  cnoremap <SID>foldopen <Bar>if &foldopen =~# 'tag'<Bar>exe 'norm! zv'<Bar>endif$/;"	m
<SID>tagzv	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  cmap <buffer><script><expr> <SID>tagzv &foldopen =~# 'tag' ? '<Bar>norm! zv' : ''$/;"	m
<TAB>	keys/mapping.vim	/^inoremap <expr><TAB> pumvisible() ? "\\<C-n>" : "\\<TAB>"$/;"	m
<TAB>	keys/mapping.vim	/^nnoremap <TAB> :bnext<CR>$/;"	m
<TAB>	plug-config/coc.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<Tab>	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  imap <buffer> <Tab> <Plug>L2UTab$/;"	m
<Tab>	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^        inoremap <silent> <buffer> <Tab> <C-R>=<SID>Tab()<CR><C-R>=<SID>RestoreShiftwidth()<CR>$/;"	m
<bs>	autoload/plugged/vim-polyglot/ftplugin/ada.vim	/^      inoremap <silent> <unique> <buffer> <bs> <C-R>=ada#Insert_Backspace ()<cr>$/;"	m
<c-@>	plug-config/coc.vim	/^  inoremap <silent><expr> <c-@> coc#refresh()$/;"	m
<c-h>	autoload/plugged/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <silent> <c-h> <c-g>c$/;"	m
<c-j>	keys/mapping.vim	/^inoremap <expr> <c-j> ("\\<C-n>")$/;"	m
<c-k>	keys/mapping.vim	/^inoremap <expr> <c-k> ("\\<C-p>")$/;"	m
<c-r>	autoload/plugged/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <c-r> <c-g>"_c<c-r>$/;"	m
<c-space>	plug-config/coc.vim	/^  inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<c-u>	keys/mapping.vim	/^inoremap <c-u> <ESC>viwUi$/;"	m
<c-u>	keys/mapping.vim	/^nnoremap <c-u> viwU<Esc>$/;"	m
<cr>	autoload/plug.vim	/^      nmap <buffer> <cr> <plug>(plug-preview)$/;"	m
<cr>	autoload/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> <cr> :call <sid>open(0)<cr>$/;"	m
<cr>	autoload/plugged/gv.vim/plugin/gv.vim	/^  xnoremap <silent> <buffer> <cr> :<c-u>call <sid>open(1)<cr>$/;"	m
<cr>	plug-config/coc.vim	/^inoremap <silent><expr> <cr> pumvisible() ? coc#_select_confirm()$/;"	m
<esc>	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^  nnoremap <silent><nowait><buffer> <esc> <C-w>c$/;"	m
<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)	autoload/plugged/fzf/README.md	/^<img src="https:\/\/raw.githubusercontent.com\/junegunn\/i\/master\/fzf.png" height="170" alt="f/;"	c
<leader>a	plug-config/coc.vim	/^nmap <leader>a  <Plug>(coc-codeaction-selected)$/;"	m
<leader>a	plug-config/coc.vim	/^xmap <leader>a  <Plug>(coc-codeaction-selected)$/;"	m
<leader>ac	plug-config/coc.vim	/^nmap <leader>ac  <Plug>(coc-codeaction)$/;"	m
<leader>b	plug-config/fzf.vim	/^map <leader>b :Buffers<CR>$/;"	m
<leader>cd2	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cd2 <Plug>XTablineCdDown2$/;"	m
<leader>cd3	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cd3 <Plug>XTablineCdDown3$/;"	m
<leader>cdc	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdc <Plug>XTablineCdCurrent$/;"	m
<leader>cdd	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdd <Plug>XTablineCdDown1$/;"	m
<leader>cdh	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdh <Plug>XTablineCdHome$/;"	m
<leader>f	plug-config/coc.vim	/^nmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>f	plug-config/coc.vim	/^xmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>g	plug-config/fzf.vim	/^nnoremap <leader>g :Rg<CR>$/;"	m
<leader>gJ	plug-config/signify.vim	/^nmap <leader>gJ 9999<leader>gJ$/;"	m
<leader>gK	plug-config/signify.vim	/^nmap <leader>gK 9999<leader>gk$/;"	m
<leader>gj	plug-config/signify.vim	/^nmap <leader>gj <plug>(signify-next-hunk)$/;"	m
<leader>gk	plug-config/signify.vim	/^nmap <leader>gk <plug>(signify-prev-hunk)$/;"	m
<leader>m	plug-config/fzf.vim	/^nnoremap <leader>m :Marks<CR>$/;"	m
<leader>qf	plug-config/coc.vim	/^nmap <leader>qf  <Plug>(coc-fix-current)$/;"	m
<leader>rn	plug-config/coc.vim	/^nmap <leader>rn <Plug>(coc-rename)$/;"	m
<leader>t	plug-config/fzf.vim	/^nnoremap <leader>t :Tags<CR>$/;"	m
<localleader>R	autoload/plugged/vim-polyglot/ftplugin/smt2.vim	/^nnoremap <silent> <buffer> <localleader>R :call smt2#RunSolverAndShowResult()<cr>$/;"	m
<localleader>r	autoload/plugged/vim-polyglot/ftplugin/smt2.vim	/^nnoremap <silent> <buffer> <localleader>r :call smt2#RunSolver()<cr>$/;"	m
<localleader>v	autoload/plugged/vim-polyglot/ftplugin/smt2.vim	/^nnoremap <silent> <buffer> <localleader>v :call smt2#PrintSolverVersion()<cr>$/;"	m
<plug>(-fzf-/)	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-\/) \/$/;"	m
<plug>(-fzf-:)	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-:) :$/;"	m
<plug>(-fzf-vim-do)	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-vim-do) :execute g:__fzf_command<cr>$/;"	m
<plug>(fzf-complete-buffer-line)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-buffer-line) fzf#vim#complete#buffer_line()$/;"	m
<plug>(fzf-complete-file)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path("find . -path '*\/\\.*' -/;"	m
<plug>(fzf-complete-file)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path('dir \/s\/b\/a:-d')$/;"	m
<plug>(fzf-complete-file-ag)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-file-ag)     fzf#vim#complete#path('ag -l -g ""')$/;"	m
<plug>(fzf-complete-line)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-line)        fzf#vim#complete#line()$/;"	m
<plug>(fzf-complete-path)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path("find . -path '*\/\\.*' -/;"	m
<plug>(fzf-complete-path)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path('dir \/s\/b')$/;"	m
<plug>(fzf-complete-word)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-word)        fzf#vim#complete#word()$/;"	m
<plug>(fzf-maps-i)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <silent> <plug>(fzf-maps-i) <c-o>:call fzf#vim#maps('i', 0)<cr>$/;"	m
<plug>(fzf-maps-n)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^nnoremap <silent> <plug>(fzf-maps-n) :<c-u>call fzf#vim#maps('n', 0)<cr>$/;"	m
<plug>(fzf-maps-o)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^onoremap <silent> <plug>(fzf-maps-o) <c-c>:<c-u>call fzf#vim#maps('o', 0)<cr>$/;"	m
<plug>(fzf-maps-x)	autoload/plugged/fzf.vim/plugin/fzf.vim	/^xnoremap <silent> <plug>(fzf-maps-x) :<c-u>call fzf#vim#maps('x', 0)<cr>$/;"	m
<plug>(plug-preview)	autoload/plug.vim	/^    nnoremap <silent> <buffer> <plug>(plug-preview) :silent! call <SID>preview_commit()<cr>$/;"	m
<plug>(signify-motion-inner-pending)	autoload/plugged/vim-signify/plugin/signify.vim	/^onoremap <silent> <plug>(signify-motion-inner-pending) :<c-u>call sy#util#hunk_text_object(0)<cr/;"	m
<plug>(signify-motion-inner-visual)	autoload/plugged/vim-signify/plugin/signify.vim	/^xnoremap <silent> <plug>(signify-motion-inner-visual)  :<c-u>call sy#util#hunk_text_object(0)<cr/;"	m
<plug>(signify-motion-outer-pending)	autoload/plugged/vim-signify/plugin/signify.vim	/^onoremap <silent> <plug>(signify-motion-outer-pending) :<c-u>call sy#util#hunk_text_object(1)<cr/;"	m
<plug>(signify-motion-outer-visual)	autoload/plugged/vim-signify/plugin/signify.vim	/^xnoremap <silent> <plug>(signify-motion-outer-visual)  :<c-u>call sy#util#hunk_text_object(1)<cr/;"	m
<plug>(signify-next-hunk)	autoload/plugged/vim-signify/plugin/signify.vim	/^nnoremap <silent> <expr> <plug>(signify-next-hunk) &diff$/;"	m
<plug>(signify-prev-hunk)	autoload/plugged/vim-signify/plugin/signify.vim	/^nnoremap <silent> <expr> <plug>(signify-prev-hunk) &diff$/;"	m
<space>a	plug-config/coc.vim	/^nnoremap <silent><nowait> <space>a  :<C-u>CocList diagnostics<cr>$/;"	m
<space>c	plug-config/coc.vim	/^nnoremap <silent><nowait> <space>c  :<C-u>CocList commands<cr>$/;"	m
<space>e	plug-config/coc.vim	/^nnoremap <silent><nowait> <space>e  :<C-u>CocList extensions<cr>$/;"	m
<space>j	plug-config/coc.vim	/^nnoremap <silent><nowait> <space>j  :<C-u>CocNext<CR>$/;"	m
<space>k	plug-config/coc.vim	/^nnoremap <silent><nowait> <space>k  :<C-u>CocPrev<CR>$/;"	m
<space>o	plug-config/coc.vim	/^nnoremap <silent><nowait> <space>o  :<C-u>CocList outline<cr>$/;"	m
<space>p	plug-config/coc.vim	/^nnoremap <silent><nowait> <space>p  :<C-u>CocListResume<CR>$/;"	m
<space>s	plug-config/coc.vim	/^nnoremap <silent><nowait> <space>s  :<C-u>CocList -I symbols<cr>$/;"	m
<tab>	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^    nnoremap <silent> <buffer> <tab> <c-w><c-w>$/;"	m
<tab>	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^  nnoremap <silent> <buffer> <tab> <c-w><c-p>$/;"	m
=	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^          ln = buf[x]$/;"	m
=	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^      ln = buf[x]$/;"	m
=	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^      nm = "%s(::.*)*\\", %s, \\"" % [ name, nums.last ]$/;"	m
=	autoload/plugged/vim-polyglot/ftplugin/terraform.vim	/^  inoremap <buffer> <silent> = =<Esc>:call terraform#align()<CR>a$/;"	m
=>	autoload/plugged/vim-polyglot/after/ftplugin/puppet.vim	/^    inoremap <buffer> <silent> => =><Esc>:call puppet#align#AlignHashrockets()<CR>$a$/;"	m
>	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^        nnoremap <silent> <buffer> > :set opfunc=<SID>IncreaseFunc<CR>g@$/;"	m
>	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    vnoremap <silent> <buffer> > :call CobolIndentBlock(v:count1)<CR>$/;"	m
>	keys/mapping.vim	/^vnoremap > >gv$/;"	m
>>	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    nnoremap <silent> <buffer> >> :call CobolIndentBlock(1)<CR>$/;"	m
A	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	v
A$	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
A1	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
A3	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
A7	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
AA	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
AB	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	f
AD	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
AG	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
AI	autoload/plugged/coc.nvim/build/index.js	/^`;function AI(r,e){if(On.existsSync(r))return;let t=On.openSync(r,e.flags,e.mode);On.closeSync(t/;"	f
AL	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
AR	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	v
AU	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AUTHOR	autoload/plugged/fzf/man/man1/fzf.1	/^.SH AUTHOR$/;"	s	title:fzf
AY	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
Aa	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ab	autoload/plugged/coc.nvim/build/index.js	/^`;function AI(r,e){if(On.existsSync(r))return;let t=On.openSync(r,e.flags,e.mode);On.closeSync(t/;"	v
Abaqus_ToggleComment	autoload/plugged/vim-polyglot/ftplugin/abaqus.vim	/^function! <SID>Abaqus_ToggleComment() range$/;"	f
Ac	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	v
Add	autoload/plugged/fzf/src/cache.go	/^func (cc *ChunkCache) Add(chunk *Chunk, key string, list []Result) {$/;"	f	struct:fzf.ChunkCache
AddEntry	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function AddEntry()$/;"	f
AddIndentByInd	autoload/plugged/vim-polyglot/indent/autohotkey.vim	/^function! AddIndentByInd(indent)$/;"	f
Added `--ansi` option (#150)	autoload/plugged/fzf/CHANGELOG.md	/^#### Added `--ansi` option (#150)$/;"	t	subsection:CHANGELOG""0.9.5""New features
Added `--expect` option (#163)	autoload/plugged/fzf/CHANGELOG.md	/^#### Added `--expect` option (#163)$/;"	t	subsection:CHANGELOG""0.9.6""New features
Added `--tac` option to reverse the order of the input.	autoload/plugged/fzf/CHANGELOG.md	/^#### Added `--tac` option to reverse the order of the input.$/;"	t	subsection:CHANGELOG""0.9.4""New features
Ade	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
Advanced customization	autoload/plugged/fzf.vim/README.md	/^### Advanced customization$/;"	S	section:fzf :heart: vim""Customization
Advanced fzf examples	autoload/plugged/fzf/ADVANCED.md	/^Advanced fzf examples$/;"	c
Advanced topics	autoload/plugged/fzf/README.md	/^Advanced topics$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Ae	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
Aee	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Ah	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Ahe	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
Airline theme	~./config/nvim/plugged/gruvbox/README.md	/^### Airline theme$/;"	S	section:Screenshots
AirlineExtensions	autoload/plugged/vim-airline/plugin/airline.vim	/^command! AirlineExtensions   call s:airline_extensions()$/;"	c
AirlineRefresh	autoload/plugged/vim-airline/plugin/airline.vim	/^command! -bar -bang AirlineRefresh call s:airline_refresh(<q-bang>)$/;"	c
AirlineTheme	autoload/plugged/vim-airline/plugin/airline.vim	/^command! -bar -nargs=? -complete=customlist,<sid>get_airline_themes AirlineTheme call <sid>airli/;"	c
AirlineToggle	autoload/plugged/vim-airline/plugin/airline.vim	/^command! -bar AirlineToggle  call s:airline_toggle()$/;"	c
AirlineToggleWhitespace	autoload/plugged/vim-airline/plugin/airline.vim	/^command! -bar AirlineToggleWhitespace call airline#extensions#whitespace#toggle()$/;"	c
Ak	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
Ale	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
Algo	autoload/plugged/fzf/src/algo/algo.go	/^type Algo func(caseSensitive bool, normalize bool, forward bool, input *util.Chars, pattern []ru/;"	t	package:algo	typeref:typename:func(caseSensitive bool, normalize bool, forward bool, input *util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int)
Alt	autoload/plugged/fzf/src/tui/tui.go	/^	Alt$/;"	c	package:tui
AltBS	autoload/plugged/fzf/src/tui/tui.go	/^	AltBS$/;"	c	package:tui
AltDown	autoload/plugged/fzf/src/tui/tui.go	/^	AltDown$/;"	c	package:tui
AltKey	autoload/plugged/fzf/src/tui/tui.go	/^func AltKey(r rune) Event {$/;"	f	package:tui	typeref:typename:Event
AltLeft	autoload/plugged/fzf/src/tui/tui.go	/^	AltLeft$/;"	c	package:tui
AltRight	autoload/plugged/fzf/src/tui/tui.go	/^	AltRight$/;"	c	package:tui
AltSDown	autoload/plugged/fzf/src/tui/tui.go	/^	AltSDown$/;"	c	package:tui
AltSLeft	autoload/plugged/fzf/src/tui/tui.go	/^	AltSLeft$/;"	c	package:tui
AltSRight	autoload/plugged/fzf/src/tui/tui.go	/^	AltSRight$/;"	c	package:tui
AltSUp	autoload/plugged/fzf/src/tui/tui.go	/^	AltSUp$/;"	c	package:tui
AltUp	autoload/plugged/fzf/src/tui/tui.go	/^	AltUp$/;"	c	package:tui
Ane	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionb66688920100	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688920200	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:AnonymousFunctionb66688920100
AnonymousFunctionb66688920300	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688920400	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688920500	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688920600	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688920700	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688920800	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688920900	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688920a00	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688920b00	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:AnonymousFunctionb66688920a00
AnonymousFunctionb66688920c00	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688920d00	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688920e00	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688920f00	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688921000	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb666889210000	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb666889210100	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb666889210200	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb666889210300	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb666889210400	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb666889210500	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb666889210600	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb666889210700	autoload/plugged/coc.nvim/build/index.js	/^`,"\\r"],Dx;(function(r){function e(o,s,a,l){return new Lse(o,s,a,l)}r.create=e;function t(o){va/;"	f
AnonymousFunctionb666889210800	autoload/plugged/coc.nvim/build/index.js	/^`,"\\r"],Dx;(function(r){function e(o,s,a,l){return new Lse(o,s,a,l)}r.create=e;function t(o){va/;"	f	function:AnonymousFunctionb666889210700.i
AnonymousFunctionb666889210900	autoload/plugged/coc.nvim/build/index.js	/^`,"\\r"],Dx;(function(r){function e(o,s,a,l){return new Lse(o,s,a,l)}r.create=e;function t(o){va/;"	f
AnonymousFunctionb666889210a00	autoload/plugged/coc.nvim/build/index.js	/^`,"\\r"],Dx;(function(r){function e(o,s,a,l){return new Lse(o,s,a,l)}r.create=e;function t(o){va/;"	f
AnonymousFunctionb666889210b00	autoload/plugged/coc.nvim/build/index.js	/^`,"\\r"],Dx;(function(r){function e(o,s,a,l){return new Lse(o,s,a,l)}r.create=e;function t(o){va/;"	f
AnonymousFunctionb666889210c00	autoload/plugged/coc.nvim/build/index.js	/^`,"\\r"],Dx;(function(r){function e(o,s,a,l){return new Lse(o,s,a,l)}r.create=e;function t(o){va/;"	f
AnonymousFunctionb666889210d00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889210e00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889210f00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb66688921100	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb666889211000	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889211100	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889211200	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889211300	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889211400	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889211500	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889211600	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889211700	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889211800	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889211900	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889211a00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889211b00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889211c00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889211d00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889211e00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889211f00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb66688921200	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb666889212000	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889212100	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889212200	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889212300	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889212400	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889212500	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889212600	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889212700	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889212800	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889212900	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889212a00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889212b00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889212c00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889212d00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889212e00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889212f00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb66688921300	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb666889213000	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889213100	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889213200	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889213300	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889213400	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889213500	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889213600	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889213700	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889213800	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889213900	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889213a00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889213b00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889213c00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889213d00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889213e00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889213f00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb66688921400	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb666889214000	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889214100	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889214200	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889214300	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889214400	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889214500	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889214600	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889214700	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889214800	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889214900	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889214a00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889214b00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889214c00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889214d00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889214e00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889214f00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb66688921500	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb666889215000	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889215100	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889215200	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889215300	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889215400	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889215500	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889215600	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889215700	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889215800	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889215900	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889215a00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889215b00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889215c00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889215d00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889215e00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889215f00	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb66688921600	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb666889216000	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889216100	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889216200	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889216300	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:Rx
AnonymousFunctionb666889216400	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:Rx.AnonymousFunctionb666889216300
AnonymousFunctionb666889216500	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:Rx
AnonymousFunctionb666889216600	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunctionb666889216700	autoload/plugged/coc.nvim/build/index.js	/^`+(d.tokens?this.parseInline(d.tokens):d.text);i+=t?this.renderer.paragraph(p):p;continue}defaul/;"	f
AnonymousFunctionb666889216800	autoload/plugged/coc.nvim/build/index.js	/^`+(d.tokens?this.parseInline(d.tokens):d.text);i+=t?this.renderer.paragraph(p):p;continue}defaul/;"	f
AnonymousFunctionb666889216900	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889216a00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889216b00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889216c00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889216d00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889216e00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889216f00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb66688921700	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb666889217000	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889217100	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889217200	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889217300	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889217400	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889217500	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889217600	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889217700	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889217800	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889217900	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889217a00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889217b00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889217c00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889217d00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889217e00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889217f00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb66688921800	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb666889218000	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889218100	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889218200	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889218300	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889218400	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889218500	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889218600	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889218700	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889218800	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889218900	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889218a00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889218b00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889218c00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889218d00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889218e00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889218f00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb66688921900	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb666889219000	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889219100	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889219200	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889219300	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889219400	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889219500	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889219600	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889219700	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889219800	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889219900	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889219a00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:Vfe
AnonymousFunctionb666889219b00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889219c00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889219d00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889219e00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb666889219f00	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb66688921a00	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:AnonymousFunctionb66688921900
AnonymousFunctionb66688921a000	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunctionb66688921a100	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	f
AnonymousFunctionb66688921a200	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	f
AnonymousFunctionb66688921a300	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	f
AnonymousFunctionb66688921a400	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	f
AnonymousFunctionb66688921a500	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	f
AnonymousFunctionb66688921a600	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	f
AnonymousFunctionb66688921a700	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	f
AnonymousFunctionb66688921a800	autoload/plugged/coc.nvim/build/index.js	/^`);return i.reduce(function(n,o){var s=vpe(o);return s>n?s:n},0)}});var cB=v((BTe,uB)=>{uB.expor/;"	f
AnonymousFunctionb66688921a900	autoload/plugged/coc.nvim/build/index.js	/^`);return i.reduce(function(n,o){var s=vpe(o);return s>n?s:n},0)}});var cB=v((BTe,uB)=>{uB.expor/;"	f
AnonymousFunctionb66688921aa00	autoload/plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Nf.prototype.render;Nf.prototype.toString=function(){var r=""/;"	f
AnonymousFunctionb66688921ab00	autoload/plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Nf.prototype.render;Nf.prototype.toString=function(){var r=""/;"	f
AnonymousFunctionb66688921ac00	autoload/plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Nf.prototype.render;Nf.prototype.toString=function(){var r=""/;"	f
AnonymousFunctionb66688921ad00	autoload/plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Nf.prototype.render;Nf.prototype.toString=function(){var r=""/;"	f
AnonymousFunctionb66688921ae00	autoload/plugged/coc.nvim/build/index.js	/^`)}function d(g,w){var x=[],E=0;if(!Array.isArray(g)&&typeof g=="object"){var P=Object.keys(g)[0/;"	f
AnonymousFunctionb66688921af00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(function(K,ae){return K.push(m(ae,R)),K},[]),q=F.length;q>E&&(E=q),x.push({contents:F,/;"	f	function:AnonymousFunctionb66688921ae00
AnonymousFunctionb66688921b00	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688921b000	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(function(K,ae){return K.push(m(ae,R)),K},[]),q=F.length;q>E&&(E=q),x.push({contents:F,/;"	f
AnonymousFunctionb66688921b100	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(function(K,ae){return K.push(m(ae,R)),K},[]),q=F.length;q>E&&(E=q),x.push({contents:F,/;"	f
AnonymousFunctionb66688921b200	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(function(K,ae){return K.push(m(ae,R)),K},[]),q=F.length;q>E&&(E=q),x.push({contents:F,/;"	f
AnonymousFunctionb66688921b300	autoload/plugged/coc.nvim/build/index.js	/^`+h(e.style.border,n.left)),I+=O.join(h(e.style.border,n.middle))+h(e.style.border,n.right)}),h(/;"	f	function:AnonymousFunctionb66688921aa00.h
AnonymousFunctionb66688921b400	autoload/plugged/coc.nvim/build/index.js	/^`),this.length&&this.forEach(function(g,w){if(!i.length&&w==0)p();else if(!t.compact||w<!!i.leng/;"	f
AnonymousFunctionb66688921b500	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
AnonymousFunctionb66688921b600	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
AnonymousFunctionb66688921b700	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
AnonymousFunctionb66688921b800	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
AnonymousFunctionb66688921b900	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
AnonymousFunctionb66688921ba00	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
AnonymousFunctionb66688921bb00	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
AnonymousFunctionb66688921bc00	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
AnonymousFunctionb66688921bd00	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
AnonymousFunctionb66688921be00	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
AnonymousFunctionb66688921bf00	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
AnonymousFunctionb66688921c00	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688921c000	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f	function:e
AnonymousFunctionb66688921c100	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f	function:e
AnonymousFunctionb66688921c200	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f	function:e
AnonymousFunctionb66688921c300	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
AnonymousFunctionb66688921c400	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
AnonymousFunctionb66688921c500	autoload/plugged/coc.nvim/build/index.js	/^   %s`,P,P,w,i);var k=w.type==="*"?GD:w.type==="?"?zD:"\\\\"+w.type;n=!0,i=i.slice(0,w.reStart)+/;"	f
AnonymousFunctionb66688921c600	autoload/plugged/coc.nvim/build/index.js	/^   %s`,P,P,w,i);var k=w.type==="*"?GD:w.type==="?"?zD:"\\\\"+w.type;n=!0,i=i.slice(0,w.reStart)+/;"	f	function:kde
AnonymousFunctionb66688921c700	autoload/plugged/coc.nvim/build/index.js	/^   %s`,P,P,w,i);var k=w.type==="*"?GD:w.type==="?"?zD:"\\\\"+w.type;n=!0,i=i.slice(0,w.reStart)+/;"	f
AnonymousFunctionb66688921c800	autoload/plugged/coc.nvim/build/index.js	/^   %s`,P,P,w,i);var k=w.type==="*"?GD:w.type==="?"?zD:"\\\\"+w.type;n=!0,i=i.slice(0,w.reStart)+/;"	f
AnonymousFunctionb66688921c900	autoload/plugged/coc.nvim/build/index.js	/^   %s`,P,P,w,i);var k=w.type==="*"?GD:w.type==="?"?zD:"\\\\"+w.type;n=!0,i=i.slice(0,w.reStart)+/;"	f	function:AnonymousFunctionb66688921c800
AnonymousFunctionb66688921ca00	autoload/plugged/coc.nvim/build/index.js	/^   %s`,P,P,w,i);var k=w.type==="*"?GD:w.type==="?"?zD:"\\\\"+w.type;n=!0,i=i.slice(0,w.reStart)+/;"	c
AnonymousFunctionb66688921cb00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921cc00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921cd00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921ce00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921cf00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921d00	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688921d000	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921d100	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921d200	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921d300	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	c
AnonymousFunctionb66688921d400	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921d500	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921d600	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921d700	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921d800	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921d900	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921da00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921db00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921dc00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921dd00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921de00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921df00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921e00	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688921e000	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921e100	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921e200	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	c
AnonymousFunctionb66688921e300	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	c
AnonymousFunctionb66688921e400	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	c
AnonymousFunctionb66688921e500	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	c
AnonymousFunctionb66688921e600	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	c
AnonymousFunctionb66688921e700	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921e800	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921e900	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921ea00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921eb00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921ec00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921ed00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	c
AnonymousFunctionb66688921ee00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	c
AnonymousFunctionb66688921ef00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	c
AnonymousFunctionb66688921f00	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688921f000	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	c
AnonymousFunctionb66688921f100	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	c
AnonymousFunctionb66688921f200	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	c
AnonymousFunctionb66688921f300	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	c
AnonymousFunctionb66688921f400	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f	function:t
AnonymousFunctionb66688921f500	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921f600	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921f700	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921f800	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921f900	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921fa00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921fb00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921fc00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921fd00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921fe00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688921ff00	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb66688922000	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb666889220000	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb666889220100	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f	function:AnonymousFunctionb666889220000
AnonymousFunctionb666889220200	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb666889220300	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb666889220400	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
AnonymousFunctionb666889220500	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	c
AnonymousFunctionb666889220600	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f	function:AnonymousFunctionb666889220500
AnonymousFunctionb666889220700	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	c
AnonymousFunctionb666889220800	autoload/plugged/coc.nvim/build/index.js	/^`;function nU(r,e){var t=[],i="";typeof e=="string"?e={section:e,whitespace:!1}:(e=e||{},e.white/;"	f
AnonymousFunctionb666889220900	autoload/plugged/coc.nvim/build/index.js	/^`;function nU(r,e){var t=[],i="";typeof e=="string"?e={section:e,whitespace:!1}:(e=e||{},e.white/;"	f
AnonymousFunctionb666889220a00	autoload/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(o):i+=Ql(o)+n+Ql(l)+F0}),e.section&&i.length&&(i="["+Ql(e.secti/;"	f
AnonymousFunctionb666889220b00	autoload/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(o):i+=Ql(o)+n+Ql(l)+F0}),e.section&&i.length&&(i="["+Ql(e.secti/;"	f
AnonymousFunctionb666889220c00	autoload/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(o):i+=Ql(o)+n+Ql(l)+F0}),e.section&&i.length&&(i="["+Ql(e.secti/;"	f
AnonymousFunctionb666889220d00	autoload/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(o):i+=Ql(o)+n+Ql(l)+F0}),e.section&&i.length&&(i="["+Ql(e.secti/;"	f
AnonymousFunctionb666889220e00	autoload/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(o):i+=Ql(o)+n+Ql(l)+F0}),e.section&&i.length&&(i="["+Ql(e.secti/;"	f
AnonymousFunctionb666889220f00	autoload/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(o):i+=Ql(o)+n+Ql(l)+F0}),e.section&&i.length&&(i="["+Ql(e.secti/;"	f
AnonymousFunctionb66688922100	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb666889221000	autoload/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(o):i+=Ql(o)+n+Ql(l)+F0}),e.section&&i.length&&(i="["+Ql(e.secti/;"	f
AnonymousFunctionb666889221100	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889221200	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889221300	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f	function:AnonymousFunctionb666889221200
AnonymousFunctionb666889221400	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889221500	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889221600	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889221700	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889221800	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889221900	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889221a00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889221b00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f	function:AnonymousFunctionb666889221a00
AnonymousFunctionb666889221c00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889221d00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889221e00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889221f00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb66688922200	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:AnonymousFunctionb66688922100
AnonymousFunctionb666889222000	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f	function:AnonymousFunctionb666889221f00
AnonymousFunctionb666889222100	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889222200	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889222300	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889222400	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889222500	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889222600	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f	function:AnonymousFunctionb666889222500
AnonymousFunctionb666889222700	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889222800	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889222900	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889222a00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889222b00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889222c00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889222d00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889222e00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889222f00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb66688922300	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb666889223000	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889223100	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889223200	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	c
AnonymousFunctionb666889223300	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889223400	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f	function:AnonymousFunctionb666889223300
AnonymousFunctionb666889223500	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	c
AnonymousFunctionb666889223600	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889223700	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889223800	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f	function:_currentRequest
AnonymousFunctionb666889223900	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889223a00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889223b00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889223c00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889223d00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889223e00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	c
AnonymousFunctionb666889223f00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	c
AnonymousFunctionb66688922400	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:AnonymousFunctionb66688922300
AnonymousFunctionb666889224000	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889224100	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889224200	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f	function:Ae
AnonymousFunctionb666889224300	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889224400	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889224500	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889224600	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889224700	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889224800	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889224900	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889224a00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889224b00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889224c00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889224d00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889224e00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889224f00	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb66688922500	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb666889225000	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889225100	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889225200	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889225300	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889225400	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889225500	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889225600	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889225700	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
AnonymousFunctionb666889225800	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889225900	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889225a00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889225b00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889225c00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889225d00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889225c00
AnonymousFunctionb666889225e00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889225f00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c	class:AnonymousFunctionb666889225e00
AnonymousFunctionb66688922600	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:AnonymousFunctionb66688922500
AnonymousFunctionb666889226000	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889225e00.AnonymousFunctionb666889225f00
AnonymousFunctionb666889226100	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889226200	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889226100
AnonymousFunctionb666889226300	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889226400	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889226300
AnonymousFunctionb666889226500	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889226600	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889226700	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889226800	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889226900	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889226a00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889226b00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889226c00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:t.chain
AnonymousFunctionb666889226d00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:t.chain.AnonymousFunctionb666889226c00
AnonymousFunctionb666889226e00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889226f00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922700	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb666889227000	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889227100	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889227200	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889227300	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889227400	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889227500	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889227600	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889227700	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889227600
AnonymousFunctionb666889227800	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889227900	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:Dr
AnonymousFunctionb666889227a00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889227b00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889227c00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889227d00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889227e00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889227f00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922800	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb666889228000	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889228100	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889228200	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889228300	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889228400	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889228500	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889228600	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889228700	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889228800	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889228900	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889228a00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889228b00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889228a00.o
AnonymousFunctionb666889228c00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889228a00.o.AnonymousFunctionb666889228b00
AnonymousFunctionb666889228d00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889228a00.o.AnonymousFunctionb666889228b00.AnonymousFunctionb666889228c00
AnonymousFunctionb666889228e00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889228f00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922900	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb666889229000	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h
AnonymousFunctionb666889229100	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h
AnonymousFunctionb666889229200	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:d.buffer
AnonymousFunctionb666889229300	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:d.skip
AnonymousFunctionb666889229400	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889229500	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889229600	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889229700	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889229800	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889229700
AnonymousFunctionb666889229900	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889229700.AnonymousFunctionb666889229800
AnonymousFunctionb666889229a00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889229b00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889229c00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889229b00
AnonymousFunctionb666889229d00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889229e00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb666889229f00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922a00	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:AnonymousFunctionb66688922900
AnonymousFunctionb66688922a000	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922a100	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922a200	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922a300	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922a400	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922a500	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionb66688922a600	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionb66688922a700	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922a800	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb66688922a700
AnonymousFunctionb66688922a900	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922aa00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionb66688922ab00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb66688922aa00
AnonymousFunctionb66688922ac00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922ad00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922ae00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionb66688922af00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922b00	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688922b000	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922b100	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922b200	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922b300	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922b400	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922b500	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionb66688922b600	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922b700	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922b800	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922b900	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb66688922b800
AnonymousFunctionb66688922ba00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922bb00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922bc00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionb66688922bd00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionb66688922be00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:unzipStream
AnonymousFunctionb66688922bf00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922c00	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
AnonymousFunctionb66688922c000	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922c100	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922c200	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922c300	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922c400	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922c500	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb66688922c400
AnonymousFunctionb66688922c600	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922c700	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:unzipStream
AnonymousFunctionb66688922c800	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionb66688922c900	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922ca00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922cb00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922cc00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionb66688922cd00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922ce00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922cf00	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb66688922cc00
AnonymousFunctionb66688922d00	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
AnonymousFunctionb66688922d000	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunctionb66688922d100	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922d200	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:Eve
AnonymousFunctionb66688922d300	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunctionb66688922d400	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	f
AnonymousFunctionb66688922d500	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	f
AnonymousFunctionb66688922d600	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	f	function:AnonymousFunctionb66688922d500.n
AnonymousFunctionb66688922d700	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	f
AnonymousFunctionb66688922d800	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	g
AnonymousFunctionb66688922d900	autoload/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),ss("Output buffer: %o",e.outputData[0].data))/;"	f
AnonymousFunctionb66688922da00	autoload/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),ss("Output buffer: %o",e.outputData[0].data))/;"	f
AnonymousFunctionb66688922db00	autoload/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),ss("Output buffer: %o",e.outputData[0].data))/;"	f
AnonymousFunctionb66688922dc00	autoload/plugged/coc.nvim/build/index.js	/^`)),m=+h.split(" ")[1];$p("got proxy server response: %o",h),e({statusCode:m,buffered:p})}r.on("/;"	f
AnonymousFunctionb66688922dd00	autoload/plugged/coc.nvim/build/index.js	/^`)),m=+h.split(" ")[1];$p("got proxy server response: %o",h),e({statusCode:m,buffered:p})}r.on("/;"	f	function:AnonymousFunctionb66688922dc00.n
AnonymousFunctionb66688922de00	autoload/plugged/coc.nvim/build/index.js	/^`)),m=+h.split(" ")[1];$p("got proxy server response: %o",h),e({statusCode:m,buffered:p})}r.on("/;"	f
AnonymousFunctionb66688922df00	autoload/plugged/coc.nvim/build/index.js	/^`)),m=+h.split(" ")[1];$p("got proxy server response: %o",h),e({statusCode:m,buffered:p})}r.on("/;"	g
AnonymousFunctionb66688922e00	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
AnonymousFunctionb66688922e000	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922e100	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922e200	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922e300	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922e400	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922e500	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922e600	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922e700	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f	function:AnonymousFunctionb66688922e600
AnonymousFunctionb66688922e800	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922e900	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922ea00	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922eb00	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922ec00	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922ed00	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922ee00	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922ef00	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922f00	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:tX
AnonymousFunctionb66688922f000	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922f100	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f	function:AnonymousFunctionb66688922f000
AnonymousFunctionb66688922f200	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922f300	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922f400	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922f500	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922f600	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922f700	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922f800	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922f900	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922fa00	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
AnonymousFunctionb66688922fb00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb66688922fc00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb66688922fd00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb66688922fe00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb66688922ff00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb66688923000	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:tX
AnonymousFunctionb666889230000	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889230100	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889230200	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889230300	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889230400	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889230500	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889230600	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889230700	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889230800	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889230900	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889230a00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889230b00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889230c00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889230d00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889230e00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889230f00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb66688923100	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
AnonymousFunctionb666889231000	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889231100	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889231200	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889231300	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889231400	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f	function:AnonymousFunctionb666889231300
AnonymousFunctionb666889231500	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889231600	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889231700	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889231800	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889231900	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889231a00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889231b00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889231c00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889231d00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889231e00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889231f00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb66688923200	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
AnonymousFunctionb666889232000	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889232100	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889232200	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889232300	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889232400	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889232500	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889232600	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889232700	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889232800	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889232900	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889232a00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889232b00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889232c00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889232d00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889232e00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889232f00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb66688923300	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
AnonymousFunctionb666889233000	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889233100	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889233200	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889233300	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889233400	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889233500	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889233600	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889233700	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889233800	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889233900	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889233a00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889233b00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889233c00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889233d00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889233e00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889233f00	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb66688923400	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
AnonymousFunctionb666889234000	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
AnonymousFunctionb666889234100	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889234200	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889234300	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889234400	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889234500	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889234600	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889234700	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889234800	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889234900	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889234a00	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889234b00	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889234c00	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889234d00	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889234e00	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889234f00	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb66688923500	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:AnonymousFunctionb66688923400.t.stringify
AnonymousFunctionb666889235000	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889235100	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889235200	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889235300	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889235400	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889235500	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889235600	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889235700	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889235800	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889235900	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889235a00	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889235b00	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889235c00	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889235d00	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889235e00	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889235f00	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb66688923600	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:AnonymousFunctionb66688923400.t.stringify
AnonymousFunctionb666889236000	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889236100	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889236200	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889236300	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889236400	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889236500	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f	function:AnonymousFunctionb666889236400
AnonymousFunctionb666889236600	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f	function:AnonymousFunctionb666889236400
AnonymousFunctionb666889236700	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f	function:Ale
AnonymousFunctionb666889236800	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889236900	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889236a00	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
AnonymousFunctionb666889236b00	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	f
AnonymousFunctionb666889236c00	autoload/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let o=n.replace(Dpe,"").split(DB);i.push(o.spl/;"	f
AnonymousFunctionb666889236d00	autoload/plugged/coc.nvim/build/index.js	/^`+hD+t(e)}checkbox(e){return"["+(e?"X":" ")+"] "}paragraph(e){return e=this.compose(this.o.parag/;"	f
AnonymousFunctionb666889236e00	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunctionb666889236f00	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunctionb66688923700	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
AnonymousFunctionb666889237000	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunctionb666889237100	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunctionb666889237200	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:i
AnonymousFunctionb666889237300	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f	function:b3
AnonymousFunctionb66688923800	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688923900	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688923a00	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688923b00	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688923c00	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688923d00	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688923e00	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688923f00	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688924000	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688924100	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688924200	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688924300	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:AnonymousFunctionb66688924200
AnonymousFunctionb66688924400	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:AnonymousFunctionb66688924200.AnonymousFunctionb66688924300.y
AnonymousFunctionb66688924500	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688924600	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688924700	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:AnonymousFunctionb66688924600
AnonymousFunctionb66688924800	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688924900	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688924a00	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688924b00	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688924c00	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688924d00	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688924e00	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688924f00	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688925000	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688925100	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688925200	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688925300	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688925400	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688925500	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:r
AnonymousFunctionb66688925600	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688925700	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688925800	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunctionb66688925900	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
AnonymousFunctionb66688925a00	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
AnonymousFunctionb66688925b00	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
AnonymousFunctionb66688925c00	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
AnonymousFunctionb66688925d00	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f	function:cb.O
AnonymousFunctionb66688925e00	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f	function:R
AnonymousFunctionb66688925f00	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f	function:R
AnonymousFunctionb66688926000	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
AnonymousFunctionb66688926100	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
AnonymousFunctionb66688926200	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
AnonymousFunctionb66688926300	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
AnonymousFunctionb66688926400	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
AnonymousFunctionb66688926500	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
AnonymousFunctionb66688926600	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
AnonymousFunctionb66688926700	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
AnonymousFunctionb66688926800	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f	function:y
AnonymousFunctionb66688926900	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f	function:w
AnonymousFunctionb66688926a00	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f	function:R
AnonymousFunctionb66688926b00	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
AnonymousFunctionb66688926c00	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
AnonymousFunctionb66688926d00	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
AnonymousFunctionb66688926e00	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
AnonymousFunctionb66688926f00	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
AnonymousFunctionb66688927000	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
AnonymousFunctionb66688927100	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f	function:qQ
AnonymousFunctionb66688927200	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f	function:qQ
AnonymousFunctionb66688927300	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AnonymousFunctionb66688927400	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AnonymousFunctionb66688927500	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AnonymousFunctionb66688927600	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AnonymousFunctionb66688927700	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AnonymousFunctionb66688927800	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AnonymousFunctionb66688927900	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunctionb66688927a00	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunctionb66688927b00	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunctionb66688927c00	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunctionb66688927d00	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunctionb66688927e00	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunctionb66688927f00	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunctionb66688928000	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunctionb66688928100	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunctionb66688928200	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
AnonymousFunctionb66688928300	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
AnonymousFunctionb66688928400	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
AnonymousFunctionb66688928500	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
AnonymousFunctionb66688928600	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
AnonymousFunctionb66688928700	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunctionb66688928800	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionb66688928900	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionb66688928a00	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionb66688928b00	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionb66688928c00	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Cie
AnonymousFunctionb66688928d00	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:qc
AnonymousFunctionb66688928e00	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Ns
AnonymousFunctionb66688928f00	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:qs
AnonymousFunctionb66688929000	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:je
AnonymousFunctionb66688929100	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionb66688929200	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionb66688929300	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionb66688929400	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunctionb66688929500	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:$s
AnonymousFunctionb66688929600	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:yr
AnonymousFunctionb66688929700	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Ih
AnonymousFunctionb66688929800	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Uc
AnonymousFunctionb66688929900	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Hr
AnonymousFunctionb66688929a00	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Nn
AnonymousFunctionb66688929b00	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionb66688929c00	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionb66688929d00	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunctionb66688929e00	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionb66688929f00	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionb6668892a000	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunctionb6668892a100	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunctionb6668892a200	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionb6668892a300	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunctionb6668892a400	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunctionb6668892a500	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionb6668892a600	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunctionb6668892a700	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionb6668892a800	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunctionb6668892a900	autoload/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){$L!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunctionb6668892aa00	autoload/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){$L!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunctionb6668892ab00	autoload/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){$L!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunctionb6668892ac00	autoload/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){$L!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunctionb6668892ad00	autoload/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){$L!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunctionb6668892ae00	autoload/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){$L!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunctionb6668892af00	autoload/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){$L!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunctionb6668892b000	autoload/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){$L!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunctionb6668892b100	autoload/plugged/coc.nvim/build/index.js	/^`)}catch(t){cl.error("Send error:",e)}}redraw(e=!1){this.send(["redraw",e?"force":""])}commmand(/;"	f
AnonymousFunctionb6668892b200	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionb6668892b300	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionb6668892b400	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionb6668892b500	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionb6668892b600	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionb6668892b700	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionb6668892b800	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionb6668892b900	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionb6668892ba00	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionb6668892bb00	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionb6668892bc00	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionb6668892bd00	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionb6668892be00	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionb6668892bf00	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionb6668892c000	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunctionb6668892c100	autoload/plugged/coc.nvim/build/index.js	/^`,LM=class{constructor(e="utf8"){this.encoding=e,this.index=0,this.buffer=Buffer.allocUnsafe(Bw)/;"	f
AnonymousFunctionb6668892c200	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
AnonymousFunctionb6668892c300	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
AnonymousFunctionb6668892c400	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
AnonymousFunctionb6668892c500	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
AnonymousFunctionb6668892c600	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
AnonymousFunctionb6668892c700	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
AnonymousFunctionb6668892c800	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
AnonymousFunctionb6668892c900	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
AnonymousFunctionb6668892ca00	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
AnonymousFunctionb6668892cb00	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
AnonymousFunctionb6668892cc00	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
AnonymousFunctionb6668892cd00	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
AnonymousFunctionb6668892ce00	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
AnonymousFunctionb6668892cf00	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
AnonymousFunctionb6668892d000	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
AnonymousFunctionb6668892d100	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892d200	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892d300	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892d400	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892d500	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892d600	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892d700	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892d800	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892d900	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892da00	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892db00	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892dc00	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892dd00	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892de00	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892df00	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892e000	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892e100	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892e200	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892e300	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892e400	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892e500	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892e400.e
AnonymousFunctionb6668892e600	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892e700	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892e800	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892e700.r
AnonymousFunctionb6668892e900	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892e700.r
AnonymousFunctionb6668892ea00	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892eb00	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892ec00	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892ed00	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892ee00	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892ef00	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892f000	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892f100	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892f200	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892f300	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892f400	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892f500	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892f600	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892f700	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892f800	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892f900	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892fa00	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892fb00	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892fc00	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892fd00	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892fe00	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionb6668892ff00	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
AnonymousFunctionbdbdafc10100	autoload/plugged/coc.nvim/bin/check.js	/^let numbers = parts.map(function (s) {$/;"	f
Ansi	autoload/plugged/fzf/src/options.go	/^	Ansi        bool$/;"	m	struct:fzf.Options	typeref:typename:bool
AntSyntaxScript	autoload/plugged/vim-polyglot/syntax/ant.vim	/^    fun AntSyntaxScript(tagname, synfilename)$/;"	f
Ape	autoload/plugged/coc.nvim/build/index.js	/^`+r)}var Ipe="\\\\*",Fpe="\\\\d+\\\\.",PB="(?:"+[Ipe,Fpe].join("|")+")";function Ape(r,e){let t=/;"	f
Aq	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Ar	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
Array	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
Articles	autoload/plugged/coc.nvim/Readme.md	/^## Articles$/;"	s
As Vim plugin	autoload/plugged/fzf/README.md	/^### As Vim plugin$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
AsEvent	autoload/plugged/fzf/src/tui/tui.go	/^func (t EventType) AsEvent() Event {$/;"	f	type:tui.EventType	typeref:typename:Event
AsString	autoload/plugged/fzf/src/item.go	/^func (item *Item) AsString(stripAnsi bool) string {$/;"	f	struct:fzf.Item	typeref:typename:string
AsString	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) AsString() string {$/;"	f	struct:fzf.Pattern	typeref:typename:string
AsUint16	autoload/plugged/fzf/src/util/util.go	/^func AsUint16(val int) uint16 {$/;"	f	package:util	typeref:typename:uint16
Ate	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
AtomicBool	autoload/plugged/fzf/src/util/atomicbool.go	/^type AtomicBool struct {$/;"	s	package:util
Attention	~./config/nvim/plugged/gruvbox/README.md	/^Attention$/;"	s
Attr	autoload/plugged/fzf/src/tui/dummy.go	/^type Attr int32$/;"	t	package:tui	typeref:typename:int32
Attr	autoload/plugged/fzf/src/tui/tcell.go	/^type Attr tcell.Style$/;"	t	package:tui	typeref:typename:tcell.Style
Attr	autoload/plugged/fzf/src/tui/tui.go	/^	Attr  Attr$/;"	m	struct:tui.ColorAttr	typeref:typename:Attr
Attr	autoload/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) Attr() Attr {$/;"	f	struct:tui.ColorPair	typeref:typename:Attr
AttrClear	autoload/plugged/fzf/src/tui/dummy.go	/^	AttrClear     = Attr(1 << 8)$/;"	c	package:tui
AttrClear	autoload/plugged/fzf/src/tui/tcell.go	/^	AttrClear     = Attr(1 << 8)$/;"	c	package:tui
AttrRegular	autoload/plugged/fzf/src/tui/dummy.go	/^	AttrRegular   = Attr(1 << 7)$/;"	c	package:tui
AttrRegular	autoload/plugged/fzf/src/tui/tcell.go	/^	AttrRegular   = Attr(1 << 7)$/;"	c	package:tui
AttrUndefined	autoload/plugged/fzf/src/tui/dummy.go	/^	AttrUndefined = Attr(0)$/;"	c	package:tui
AttrUndefined	autoload/plugged/fzf/src/tui/tcell.go	/^	AttrUndefined = Attr(0)$/;"	c	package:tui
Author and Feedback	autoload/plugged/vim-signify/README.md	/^## Author and Feedback$/;"	s
Author's Instructions	autoload/plugged/NERDTree/.github/PULL_REQUEST_TEMPLATE.md	/^#### Author's Instructions$/;"	t	subsection:New Version Info
Auto Pairs	autoload/plugged/auto-pairs/README.md	/^Auto Pairs$/;"	c
AutoPairsBackInsert	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsBackInsert()$/;"	f
AutoPairsDefaultPairs	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsDefaultPairs()$/;"	f
AutoPairsDefine	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsDefine(pairs, ...)$/;"	f
AutoPairsDelete	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsDelete()$/;"	f
AutoPairsFastWrap	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsFastWrap()$/;"	f
AutoPairsInit	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsInit()$/;"	f
AutoPairsInsert	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsInsert(key)$/;"	f
AutoPairsJump	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsJump()$/;"	f
AutoPairsMap	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsMap(key)$/;"	f
AutoPairsMoveCharacter	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsMoveCharacter(key)$/;"	f
AutoPairsReturn	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsReturn()$/;"	f
AutoPairsSpace	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsSpace()$/;"	f
AutoPairsToggle	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsToggle()$/;"	f
AutoPairsTryInit	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! AutoPairsTryInit()$/;"	f
Autoindent	autoload/plugged/vim-polyglot/README.md	/^## Autoindent$/;"	s
Automatic truncation	autoload/plugged/vim-airline/README.md	/^## Automatic truncation$/;"	s	chapter:Features
Ax	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
Ay	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
B0	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	c	class:AnonymousFunctionb666889223000
B8	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
BA	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
BASE	autoload/plugged/fzf/test/test_go.rb	/^BASE = File.expand_path('..', __dir__)$/;"	C
BASE_DIR	autoload/plugged/vim-polyglot/scripts/build	/^BASE_DIR = Pathname.new(File.expand_path('..\/..', __FILE__))$/;"	C
BASE_URL	autoload/plugged/vim-polyglot/scripts/build	/^BASE_URL = 'https:\/\/raw.githubusercontent.com\/github\/linguist\/master'$/;"	C
BB	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	f
BD	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
BG	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
BINARY	autoload/plugged/fzf/Makefile	/^	BINARY := $(BINARY32)$/;"	m
BINARY	autoload/plugged/fzf/Makefile	/^	BINARY := $(BINARY64)$/;"	m
BINARY	autoload/plugged/fzf/Makefile	/^	BINARY := $(BINARYARM5)$/;"	m
BINARY	autoload/plugged/fzf/Makefile	/^	BINARY := $(BINARYARM6)$/;"	m
BINARY	autoload/plugged/fzf/Makefile	/^	BINARY := $(BINARYARM7)$/;"	m
BINARY	autoload/plugged/fzf/Makefile	/^	BINARY := $(BINARYARM8)$/;"	m
BINARY	autoload/plugged/fzf/Makefile	/^	BINARY := $(BINARYPPC64LE)$/;"	m
BINARY32	autoload/plugged/fzf/Makefile	/^BINARY32       := fzf-$(GOOS)_386$/;"	m
BINARY64	autoload/plugged/fzf/Makefile	/^BINARY64       := fzf-$(GOOS)_amd64$/;"	m
BINARYARM5	autoload/plugged/fzf/Makefile	/^BINARYARM5     := fzf-$(GOOS)_arm5$/;"	m
BINARYARM6	autoload/plugged/fzf/Makefile	/^BINARYARM6     := fzf-$(GOOS)_arm6$/;"	m
BINARYARM7	autoload/plugged/fzf/Makefile	/^BINARYARM7     := fzf-$(GOOS)_arm7$/;"	m
BINARYARM8	autoload/plugged/fzf/Makefile	/^BINARYARM8     := fzf-$(GOOS)_arm8$/;"	m
BINARYPPC64LE	autoload/plugged/fzf/Makefile	/^BINARYPPC64LE  := fzf-$(GOOS)_ppc64le$/;"	m
BL	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
BN	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
BQ	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
BSpace	autoload/plugged/fzf/src/tui/tui.go	/^	BSpace$/;"	c	package:tui
BTab	autoload/plugged/fzf/src/tui/tui.go	/^	BTab$/;"	c	package:tui
BU	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
BUILD_FLAGS	autoload/plugged/fzf/Makefile	/^BUILD_FLAGS    := -a -ldflags "-s -w -X main.version=$(VERSION) -X main.revision=$(REVISION)" -t/;"	m
BW	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
BY	autoload/plugged/coc.nvim/build/index.js	/^`+o),r.push(n+"m+"+Fd.exports.humanize(this.diff)+"[0m")}else r[0]=zY()+e+" "+r[0]}function zY(/;"	f
B_	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
Backers	autoload/plugged/coc.nvim/Readme.md	/^## Backers$/;"	s
BackwardEOF	autoload/plugged/fzf/src/tui/tui.go	/^	BackwardEOF$/;"	c	package:tui
Bc	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Before submitting	autoload/plugged/fzf.vim/.github/ISSUE_TEMPLATE.md	/^Before submitting$/;"	c
BenchmarkExtractColor	autoload/plugged/fzf/src/ansi_test.go	/^func BenchmarkExtractColor(b *testing.B) {$/;"	f	package:fzf
BenchmarkNextAnsiEscapeSequence	autoload/plugged/fzf/src/ansi_test.go	/^func BenchmarkNextAnsiEscapeSequence(b *testing.B) {$/;"	f	package:fzf
BenchmarkNextAnsiEscapeSequence_Regex	autoload/plugged/fzf/src/ansi_test.go	/^func BenchmarkNextAnsiEscapeSequence_Regex(b *testing.B) {$/;"	f	package:fzf
Bf	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	f
Bg	autoload/plugged/fzf/src/tui/tui.go	/^	Bg           ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Bg	autoload/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) Bg() Color {$/;"	f	struct:tui.ColorPair	typeref:typename:Color
Bj	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Bk	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
Bl	autoload/plugged/coc.nvim/build/index.js	/^`),s=i.line==r.start.line?i.character-r.start.character:i.character,a=UB(o,i.line-r.start.line,s/;"	f
Black	autoload/plugged/fzf/src/options.go	/^	Black       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Ble	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
Blink	autoload/plugged/fzf/src/tui/dummy.go	/^	Blink     = Attr(1 << 4)$/;"	c	package:tui
Blink	autoload/plugged/fzf/src/tui/tcell.go	/^	Blink          = Attr(tcell.AttrBlink)$/;"	c	package:tui
Blink2	autoload/plugged/fzf/src/tui/dummy.go	/^	Blink2    = Attr(1 << 5)$/;"	c	package:tui
Bm	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	v
Bo	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
Bold	autoload/plugged/fzf/src/options.go	/^	Bold        bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Bold	autoload/plugged/fzf/src/tui/dummy.go	/^	Bold      = Attr(1)$/;"	c	package:tui
Bold	autoload/plugged/fzf/src/tui/tcell.go	/^	Bold      Attr = Attr(tcell.AttrBold)$/;"	c	package:tui	typeref:type:Attr
Bookmark	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=? Bookmark :call nerdtree#ui_glue#bookmarkNode('<args>')$/;"	c
BookmarkToRoot	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=+ BookmarkToRoot cal/;"	c
Border	autoload/plugged/fzf/src/tui/tui.go	/^	Border       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
BorderBottom	autoload/plugged/fzf/src/tui/tui.go	/^	BorderBottom$/;"	c	package:tui
BorderCharacter	autoload/plugged/fzf/src/tui/tui.go	/^type BorderCharacter int$/;"	t	package:tui	typeref:typename:int
BorderHorizontal	autoload/plugged/fzf/src/tui/tui.go	/^	BorderHorizontal$/;"	c	package:tui
BorderLeft	autoload/plugged/fzf/src/tui/tui.go	/^	BorderLeft$/;"	c	package:tui
BorderNone	autoload/plugged/fzf/src/tui/tui.go	/^	BorderNone BorderShape = iota$/;"	c	package:tui	typeref:type:BorderShape
BorderRight	autoload/plugged/fzf/src/tui/tui.go	/^	BorderRight$/;"	c	package:tui
BorderRounded	autoload/plugged/fzf/src/tui/tui.go	/^	BorderRounded$/;"	c	package:tui
BorderShape	autoload/plugged/fzf/src/options.go	/^	BorderShape tui.BorderShape$/;"	m	struct:fzf.Options	typeref:typename:tui.BorderShape
BorderShape	autoload/plugged/fzf/src/tui/tui.go	/^type BorderShape int$/;"	t	package:tui	typeref:typename:int
BorderSharp	autoload/plugged/fzf/src/tui/tui.go	/^	BorderSharp$/;"	c	package:tui
BorderStyle	autoload/plugged/fzf/src/tui/tui.go	/^type BorderStyle struct {$/;"	s	package:tui
BorderTop	autoload/plugged/fzf/src/tui/tui.go	/^	BorderTop$/;"	c	package:tui
BorderVertical	autoload/plugged/fzf/src/tui/tui.go	/^	BorderVertical$/;"	c	package:tui
Bpe	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	v
Br	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	v
Branches	autoload/plugged/fzf/ADVANCED.md	/^### Branches$/;"	S	section:Advanced fzf examples""Key bindings for git objects
Bs	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Bse	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Bte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
Buffer Level Pairs Setting	autoload/plugged/auto-pairs/README.md	/^Buffer Level Pairs Setting$/;"	s	chapter:Auto Pairs
Bug fixes	autoload/plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.11
Bug fixes	autoload/plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.12
Bug fixes	autoload/plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.13
Bug fixes	autoload/plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.5
Bug fixes	autoload/plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.6
Bug fixes	autoload/plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.7
Bug fixes	autoload/plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.8
Bugs	autoload/plugged/vim-airline/CONTRIBUTING.md	/^# Bugs$/;"	c
Build instructions	autoload/plugged/fzf/BUILD.md	/^Build instructions$/;"	s	chapter:Building fzf
BuildPattern	autoload/plugged/fzf/src/pattern.go	/^func BuildPattern(fuzzy bool, fuzzyAlgo algo.Algo, extended bool, caseMode Case, normalize bool,/;"	f	package:fzf	typeref:typename:*Pattern
Building fzf	autoload/plugged/fzf/BUILD.md	/^Building fzf$/;"	c
Building fzf	autoload/plugged/fzf/README.md	/^Building fzf$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Builtin	autoload/plugged/vim-polyglot/syntax/8th.vim	/^com! -nargs=+ Builtin syn keyword eighthBuiltin <args>$/;"	c
Builtin	autoload/plugged/vim-polyglot/syntax/reva.vim	/^com! -nargs=+ Builtin syn keyword revaBuiltin <args>$/;"	c
Bx	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
ByOrder	autoload/plugged/fzf/src/result.go	/^type ByOrder []Offset$/;"	t	package:fzf	typeref:typename:[]Offset
ByRelevance	autoload/plugged/fzf/src/result.go	/^type ByRelevance []Result$/;"	t	package:fzf	typeref:typename:[]Result
ByRelevanceTac	autoload/plugged/fzf/src/result.go	/^type ByRelevanceTac []Result$/;"	t	package:fzf	typeref:typename:[]Result
Byte	autoload/plugged/fzf/src/tui/tui.go	/^func (t EventType) Byte() byte {$/;"	f	type:tui.EventType	typeref:typename:byte
Bytes	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) Bytes() []byte {$/;"	f	struct:util.Chars	typeref:typename:[]byte
BzlFoldText	autoload/plugged/vim-polyglot/ftplugin/bzl.vim	/^function BzlFoldText() abort$/;"	f
C	autoload/plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[s-1]}async withProgress(e,t){return this.checkDialog()?await new e3(this.nvim/;"	v
C$	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
C0	autoload/plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[s-1]}async withProgress(e,t){return this.checkDialog()?await new e3(this.nvim/;"	f
C2	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
C3	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
C8	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
CB	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	c
CCode	autoload/plugged/vim-polyglot/ftplugin/vala.vim	/^command! -buffer -bar CCode call CCode()$/;"	c
CCode	autoload/plugged/vim-polyglot/ftplugin/vala.vim	/^function! CCode() abort$/;"	f
CD	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	c
CF	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
CFill	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) CFill(fg Color, bg Color, attr Attr, text string) FillReturn {$/;"	f	struct:tui.LightWindow	typeref:typename:FillReturn
CFill	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) CFill(fg Color, bg Color, a Attr, str string) FillReturn {$/;"	f	struct:tui.TcellWindow	typeref:typename:FillReturn
CFill	autoload/plugged/fzf/src/tui/tui.go	/^	CFill(fg Color, bg Color, attr Attr, text string) FillReturn$/;"	n	interface:tui.Window	typeref:typename:FillReturn
CHANGELOG	autoload/plugged/fzf/CHANGELOG.md	/^CHANGELOG$/;"	c
CK	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
CMakeGetIndent	autoload/plugged/vim-polyglot/indent/cmake.vim	/^fun! CMakeGetIndent(lnum)$/;"	f
COMPREPLY=	autoload/plugged/fzf/shell/completion.bash	/^    COMPREPLY=()$/;"	f
COMPREPLY=	autoload/plugged/fzf/shell/completion.bash	/^  COMPREPLY=()$/;"	f
CONTRIBUTING	autoload/plugged/vim-signify/CONTRIBUTING.md	/^CONTRIBUTING$/;"	c
CPrint	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) CPrint(pair ColorPair, text string) {$/;"	f	struct:tui.LightWindow
CPrint	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) CPrint(pair ColorPair, text string) {$/;"	f	struct:tui.TcellWindow
CPrint	autoload/plugged/fzf/src/tui/tui.go	/^	CPrint(color ColorPair, text string)$/;"	n	interface:tui.Window
CSVCol	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVCol(...) "{{{3$/;"	f
CSVCount	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVCount(col, fmt, first, last, ...) "{{{3$/;"	f
CSVField	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVField(x, y, ...) "{{{3$/;"	f
CSVMax	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVMax(col, fmt, first, last) "{{{3$/;"	f
CSVMin	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVMin(col, fmt, first, last) "{{{3$/;"	f
CSVPat	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVPat(colnr, ...) "{{{3$/;"	f
CSVSum	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVSum(col, fmt, first, last) "{{{3$/;"	f
CSVWidth	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVWidth(...) "{{{3$/;"	f
CSV_CloseBuffer	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! CSV_CloseBuffer(buffer) "{{{3$/;"	f
CSV_Menu	autoload/plugged/vim-polyglot/autoload/csv.vim	/^        augroup CSV_Menu$/;"	a
CSV_Preview	autoload/plugged/vim-polyglot/autoload/csv.vim	/^          aug CSV_Preview$/;"	a
CSV_Preview	autoload/plugged/vim-polyglot/autoload/csv.vim	/^        aug CSV_Preview$/;"	a
CSV_QuitPre	autoload/plugged/vim-polyglot/autoload/csv.vim	/^        augroup CSV_QuitPre$/;"	a
CSV_QuitPre	autoload/plugged/vim-polyglot/autoload/csv.vim	/^    aug CSV_QuitPre$/;"	a
CSV_SetSplitOptions	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! CSV_SetSplitOptions(window) "{{{3$/;"	f
CSV_WCol	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! CSV_WCol(...) "{{{3$/;"	f
CU	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	v
CV	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
CX	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
CY	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
CZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
CacheKey	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) CacheKey() string {$/;"	f	struct:fzf.Pattern	typeref:typename:string
Can I have the same NERDTree on every tab automatically?	autoload/plugged/NERDTree/README.markdown	/^### Can I have the same NERDTree on every tab automatically?$/;"	S	section:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)""Frequently Asked Questions
Case	autoload/plugged/fzf/src/options.go	/^	Case        Case$/;"	m	struct:fzf.Options	typeref:typename:Case
Case	autoload/plugged/fzf/src/options.go	/^type Case int$/;"	t	package:fzf	typeref:typename:int
CaseIgnore	autoload/plugged/fzf/src/options.go	/^	CaseIgnore$/;"	c	package:fzf
CaseRespect	autoload/plugged/fzf/src/options.go	/^	CaseRespect$/;"	c	package:fzf
CaseSmart	autoload/plugged/fzf/src/options.go	/^	CaseSmart Case = iota$/;"	c	package:fzf	typeref:type:Case
Cb	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
Cd	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
Cde	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
CdlAsignment	autoload/plugged/vim-polyglot/indent/cdl.vim	/^fun! CdlAsignment(lnum, line)$/;"	f
CdlGetIndent	autoload/plugged/vim-polyglot/indent/cdl.vim	/^fun! CdlGetIndent(lnum)$/;"	f
Ce	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
Cf	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Ch	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Change	autoload/plugged/fzf/src/tui/tui.go	/^	Change$/;"	c	package:tui
Change Log	autoload/plugged/vim-airline/CHANGELOG.md	/^# Change Log$/;"	c
Change Log	~./config/nvim/plugged/gruvbox/CHANGELOG.md	/^# Change Log$/;"	c
Changed behavior on `--no-sort`	autoload/plugged/fzf/CHANGELOG.md	/^#### Changed behavior on `--no-sort`$/;"	t	subsection:CHANGELOG""0.9.4""*Backward incompatible changes*
Char	autoload/plugged/fzf/src/tui/tui.go	/^	Char       rune$/;"	m	struct:tui.Event	typeref:typename:rune
Chars	autoload/plugged/fzf/src/util/chars.go	/^type Chars struct {$/;"	s	package:util
CheckItems	autoload/plugged/vim-polyglot/tests/native.vim	/^func CheckItems(checks)$/;"	f
CheckSaneSearchPattern	autoload/plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>CheckSaneSearchPattern() "{{{3$/;"	f
Chunk	autoload/plugged/fzf/src/chunklist.go	/^type Chunk struct {$/;"	s	package:fzf
ChunkCache	autoload/plugged/fzf/src/cache.go	/^type ChunkCache struct {$/;"	s	package:fzf
ChunkList	autoload/plugged/fzf/src/chunklist.go	/^type ChunkList struct {$/;"	s	package:fzf
Ci	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
Cie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Cl	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Clear	autoload/plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) Clear() {$/;"	f	struct:fzf.ChunkList
Clear	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Clear()            {}$/;"	f	unknown:tui.FullscreenRenderer
Clear	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Clear() {$/;"	f	struct:tui.LightRenderer
Clear	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Clear() {$/;"	f	unknown:tui.FullscreenRenderer
Clear	autoload/plugged/fzf/src/tui/tui.go	/^	Clear()$/;"	n	interface:tui.Renderer
Clear	autoload/plugged/fzf/src/util/eventbox.go	/^func (events *Events) Clear() {$/;"	f	type:util.Events
ClearAllBookmarks	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 ClearAllBookmarks call g:NERDTreeBookmark.ClearAll() <bar> call b:/;"	c
ClearBookmarks	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=* ClearBookmarks cal/;"	c
ClearOnExit	autoload/plugged/fzf/src/options.go	/^	ClearOnExit bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Close	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Close()            {}$/;"	f	unknown:tui.FullscreenRenderer
Close	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Close() {$/;"	f	struct:tui.LightRenderer
Close	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Close() {$/;"	f	struct:tui.LightWindow
Close	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Close() {$/;"	f	unknown:tui.FullscreenRenderer
Close	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Close() {$/;"	f	struct:tui.TcellWindow
Close	autoload/plugged/fzf/src/tui/tui.go	/^	Close()$/;"	n	interface:tui.Renderer
Close	autoload/plugged/fzf/src/tui/tui.go	/^	Close()$/;"	n	interface:tui.Window
CloseBug	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function CloseBug()$/;"	f
Cm	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Cne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
CobolIndentBlock	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^function! CobolIndentBlock(shift)$/;"	f
CocAction	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -range CocAction :call coc#rpc#notify('codeActionRange', [<line1>, <line2>, <f/;"	c
CocAction	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocAction(name, ...) abort$/;"	f
CocActionAsync	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocActionAsync(name, ...) abort$/;"	f
CocCommand	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -complete=custom,s:CommandList -range CocCommand :call coc#rpc#notify('runComm/;"	c
CocConfig	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocConfig       :call s:OpenConfig()$/;"	c
CocDiagnostics	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? CocDiagnostics  :call s:OpenDiagnostics(<f-args>)$/;"	c
CocDisable	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocDisable      :call s:Disable()$/;"	c
CocEnable	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocEnable       :call s:Enable(0)$/;"	c
CocFirst	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocFirst        :call coc#rpc#notify('listFirs/;"	c
CocFix	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -range CocFix    :call coc#rpc#notify('codeActionRange', [<line1>, <line2>, 'q/;"	c
CocHasProvider	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocHasProvider(name) abort$/;"	f
CocInfo	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocInfo         :call s:ShowInfo()$/;"	c
CocInstall	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -bar -complete=custom,s:InstallOptions CocInstall   :call coc#util#install_ext/;"	c
CocLast	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocLast         :call coc#rpc#notify('listLast/;"	c
CocList	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -complete=custom,coc#list#options CocList      :call coc#rpc#notify('openList'/;"	c
CocListCancel	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 -complete=custom,coc#list#names CocListCancel   :call coc#rpc#notify('listCanc/;"	c
CocListResume	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocListResume   :call coc#rpc#notify('listResu/;"	c
CocLocalConfig	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocLocalConfig  :call coc#rpc#notify('openLocalConfig', [])$/;"	c
CocLocations	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocLocations(id, method, ...) abort$/;"	f
CocLocationsAsync	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocLocationsAsync(id, method, ...) abort$/;"	f
CocNext	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocNext         :call coc#rpc#notify('listNext/;"	c
CocNotify	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocNotify(...) abort$/;"	f
CocOpenLog	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocOpenLog      :call coc#rpc#notify('openLog',  [])$/;"	c
CocPopupCallback	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocPopupCallback(bufnr, arglist) abort$/;"	f
CocPrev	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocPrev         :call coc#rpc#notify('listPrev/;"	c
CocRebuild	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocRebuild      :call coc#util#rebuild()$/;"	c
CocRegistNotification	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocRegistNotification(id, method, cb) abort$/;"	f
CocRequest	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocRequest(...) abort$/;"	f
CocRequestAsync	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocRequestAsync(...)$/;"	f
CocRestart	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocRestart      :call coc#rpc#restart()$/;"	c
CocSearch	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=+ -complete=custom,s:SearchOptions  CocSearch    :call coc#rpc#notify('search', /;"	c
CocStart	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocStart        :call coc#rpc#start_server()$/;"	c
CocTagFunc	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! CocTagFunc(pattern, flags, info) abort$/;"	f
CocUninstall	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=+ -complete=custom,s:ExtensionList  CocUninstall :call CocActionAsync('uninstall/;"	c
CocUpdate	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocUpdate       :call coc#util#update_extensions(1)$/;"	c
CocUpdateSync	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 -bar CocUpdateSync   :call coc#util#update_extensions()$/;"	c
CocWatch	autoload/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=1 -complete=custom,s:LoadedExtensions  CocWatch    :call coc#rpc#notify('watchEx/;"	c
CoffeeAuWatch	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^  augroup CoffeeAuWatch$/;"	a
CoffeeBufNew	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^augroup CoffeeBufNew | augroup END$/;"	a
CoffeeBufUpdate	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^augroup CoffeeBufUpdate | augroup END$/;"	a
CoffeeCompile	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^\\        CoffeeCompile call s:CoffeeCompile(<line1>, <line2>, <q-args>)$/;"	c
CoffeeLint	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^command! -buffer -range=% -bang -bar -nargs=* CoffeeLint$/;"	c
CoffeeMake	autoload/plugged/vim-polyglot/compiler/coffee.vim	/^command! -bang -bar -nargs=* CoffeeMake$/;"	c
CoffeeRun	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^command! -buffer -range=% -bar -nargs=* CoffeeRun$/;"	c
CoffeeUpdateMakePrg	autoload/plugged/vim-polyglot/compiler/coffee.vim	/^augroup CoffeeUpdateMakePrg$/;"	a
CoffeeWatch	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^\\        CoffeeWatch call s:CoffeeWatch(<q-args>)$/;"	c
ColBorder	autoload/plugged/fzf/src/tui/tui.go	/^	ColBorder               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrent	autoload/plugged/fzf/src/tui/tui.go	/^	ColCurrent              ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentCursor	autoload/plugged/fzf/src/tui/tui.go	/^	ColCurrentCursor        ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentCursorEmpty	autoload/plugged/fzf/src/tui/tui.go	/^	ColCurrentCursorEmpty   ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentMatch	autoload/plugged/fzf/src/tui/tui.go	/^	ColCurrentMatch         ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentSelected	autoload/plugged/fzf/src/tui/tui.go	/^	ColCurrentSelected      ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentSelectedEmpty	autoload/plugged/fzf/src/tui/tui.go	/^	ColCurrentSelectedEmpty ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCursor	autoload/plugged/fzf/src/tui/tui.go	/^	ColCursor               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCursorEmpty	autoload/plugged/fzf/src/tui/tui.go	/^	ColCursorEmpty          ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColDisabled	autoload/plugged/fzf/src/tui/tui.go	/^	ColDisabled             ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColHeader	autoload/plugged/fzf/src/tui/tui.go	/^	ColHeader               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColInfo	autoload/plugged/fzf/src/tui/tui.go	/^	ColInfo                 ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColInput	autoload/plugged/fzf/src/tui/tui.go	/^	ColInput                ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColMatch	autoload/plugged/fzf/src/tui/tui.go	/^	ColMatch                ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColNormal	autoload/plugged/fzf/src/tui/tui.go	/^	ColNormal               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColPreview	autoload/plugged/fzf/src/tui/tui.go	/^	ColPreview              ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColPreviewBorder	autoload/plugged/fzf/src/tui/tui.go	/^	ColPreviewBorder        ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColPrompt	autoload/plugged/fzf/src/tui/tui.go	/^	ColPrompt               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColSelected	autoload/plugged/fzf/src/tui/tui.go	/^	ColSelected             ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColSpinner	autoload/plugged/fzf/src/tui/tui.go	/^	ColSpinner              ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
Collaborator's Instructions	autoload/plugged/NERDTree/.github/PULL_REQUEST_TEMPLATE.md	/^#### Collaborator's Instructions$/;"	t	subsection:New Version Info
Color	autoload/plugged/fzf/src/tui/tui.go	/^	Color Color$/;"	m	struct:tui.ColorAttr	typeref:typename:Color
Color	autoload/plugged/fzf/src/tui/tui.go	/^type Color int32$/;"	t	package:tui	typeref:typename:int32
Color themes	autoload/plugged/fzf/ADVANCED.md	/^Color themes$/;"	s	chapter:Advanced fzf examples
ColorAttr	autoload/plugged/fzf/src/tui/tui.go	/^type ColorAttr struct {$/;"	s	package:tui
ColorPair	autoload/plugged/fzf/src/tui/tui.go	/^type ColorPair struct {$/;"	s	package:tui
ColorTheme	autoload/plugged/fzf/src/tui/tui.go	/^type ColorTheme struct {$/;"	s	package:tui
Colored	autoload/plugged/fzf/src/tui/tui.go	/^	Colored      bool$/;"	m	struct:tui.ColorTheme	typeref:typename:bool
Colors	autoload/plugged/fzf/src/item.go	/^func (item *Item) Colors() []ansiOffset {$/;"	f	struct:fzf.Item	typeref:typename:[]ansiOffset
Command-local options	autoload/plugged/fzf.vim/README.md	/^### Command-local options$/;"	S	section:fzf :heart: vim""Customization
Commands	autoload/plugged/fzf.vim/README.md	/^Commands$/;"	s	chapter:fzf :heart: vim
Commands	autoload/plugged/gv.vim/README.md	/^### Commands$/;"	S	section:gv.vim""Usage
Commit hashes	autoload/plugged/fzf/ADVANCED.md	/^### Commit hashes$/;"	S	section:Advanced fzf examples""Key bindings for git objects
Comparable	autoload/plugged/fzf/src/tui/tui.go	/^func (e Event) Comparable() Event {$/;"	f	unknown:tui.Event	typeref:typename:Event
CompilerSet	autoload/plugged/vim-polyglot/after/compiler/tex.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/ant.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/cargo.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/credo.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/cs.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/cucumber.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/dot.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/exunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/gleam.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/go.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/gradle.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/gradlew.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/haml.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/ledger.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/mix.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/nim.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/nix-build.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/powershell.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/puppet-lint.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/python.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/rake.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/rustc.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/sass.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/sbt.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/sml.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/swift.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/tcl.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/tidy.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/zig.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/zig_build.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/zig_build_exe.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	autoload/plugged/vim-polyglot/compiler/zig_test.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
Completion functions	autoload/plugged/fzf.vim/README.md	/^Completion functions$/;"	s	chapter:fzf :heart: vim
CompletionTest	autoload/plugged/fzf/test/test_go.rb	/^module CompletionTest$/;"	m
Configurable and extensible	autoload/plugged/vim-airline/README.md	/^## Configurable and extensible$/;"	s	chapter:Features
Configuration	autoload/plugged/fzf/README-VIM.md	/^### Configuration$/;"	S	section:FZF Vim integration""`:FZF[!]`
Configuration for async update	autoload/plugged/vim-signify/README.md	/^## Configuration for async update$/;"	s
Constrain	autoload/plugged/fzf/src/util/util.go	/^func Constrain(val int, min int, max int) int {$/;"	f	package:util	typeref:typename:int
Constrain32	autoload/plugged/fzf/src/util/util.go	/^func Constrain32(val int32, min int32, max int32) int32 {$/;"	f	package:util	typeref:typename:int32
Contrast options	~./config/nvim/plugged/gruvbox/README.md	/^Contrast options$/;"	s
Contributing	autoload/plugged/vim-polyglot/README.md	/^## Contributing$/;"	s
Contribution Guidelines	autoload/plugged/vim-airline-themes/README.md	/^# Contribution Guidelines$/;"	c
Contributions	autoload/plugged/vim-airline/CONTRIBUTING.md	/^# Contributions$/;"	c
Contributions	~./config/nvim/plugged/gruvbox/README.md	/^Contributions$/;"	s
Contributors	autoload/plugged/auto-pairs/README.md	/^Contributors$/;"	s	chapter:Auto Pairs
Contributors	autoload/plugged/palenight.vim/README.md	/^## Contributors$/;"	s
CopyRunes	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) CopyRunes(dest []rune) {$/;"	f	struct:util.Chars
CountItems	autoload/plugged/fzf/src/chunklist.go	/^func CountItems(cs []*Chunk) int {$/;"	f	package:fzf	typeref:typename:int
CountWrapper	autoload/plugged/vim-polyglot/ftplugin/vhdl.vim	/^function! <SID>CountWrapper(cmd)$/;"	f
Cre	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Criteria	autoload/plugged/fzf/src/options.go	/^	Criteria    []criterion$/;"	m	struct:fzf.Options	typeref:typename:[]criterion
CrystalContext	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalContext        echo crystal_lang#context(expand('%'), getpos('./;"	c
CrystalDef	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=0 CrystalDef            call crystal_lang#jump_to_definition(expand('%')/;"	c
CrystalExpand	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalExpand         echo crystal_lang#expand(expand('%'), getpos('.'/;"	c
CrystalFormat	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* -bar CrystalFormat    call crystal_lang#format(<q-args>, 0)$/;"	c
CrystalHierarchy	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalHierarchy      echo crystal_lang#type_hierarchy(expand('%'), <q/;"	c
CrystalImpl	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalImpl           echo crystal_lang#impl(expand('%'), getpos('.'),/;"	c
CrystalSpecRunAll	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecRunAll     call crystal_lang#run_all_spec(<f-args>)$/;"	c
CrystalSpecRunCurrent	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecRunCurrent call crystal_lang#run_current_spec(<f-args>)$/;"	c
CrystalSpecSwitch	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecSwitch     call crystal_lang#switch_spec_file(<f-args>)$/;"	c
Cse	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
Ct	autoload/plugged/coc.nvim/build/index.js	/^`),x.log(`Received request '${T.method} - (${T.id})'.`,j)}else Xt("receive-request",T)}function /;"	f
CtrlA	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlA$/;"	c	package:tui
CtrlAlt	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlAlt$/;"	c	package:tui
CtrlAltKey	autoload/plugged/fzf/src/tui/tui.go	/^func CtrlAltKey(r rune) Event {$/;"	f	package:tui	typeref:typename:Event
CtrlB	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlB$/;"	c	package:tui
CtrlBackSlash	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlBackSlash$/;"	c	package:tui
CtrlC	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlC$/;"	c	package:tui
CtrlCaret	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlCaret$/;"	c	package:tui
CtrlD	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlD$/;"	c	package:tui
CtrlE	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlE$/;"	c	package:tui
CtrlF	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlF$/;"	c	package:tui
CtrlG	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlG$/;"	c	package:tui
CtrlH	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlH$/;"	c	package:tui
CtrlJ	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlJ$/;"	c	package:tui
CtrlK	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlK$/;"	c	package:tui
CtrlL	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlL$/;"	c	package:tui
CtrlM	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlM$/;"	c	package:tui
CtrlN	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlN$/;"	c	package:tui
CtrlO	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlO$/;"	c	package:tui
CtrlP	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlP$/;"	c	package:tui
CtrlQ	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlQ$/;"	c	package:tui
CtrlR	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlR$/;"	c	package:tui
CtrlRightBracket	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlRightBracket$/;"	c	package:tui
CtrlS	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlS$/;"	c	package:tui
CtrlSlash	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlSlash$/;"	c	package:tui
CtrlSpace	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlSpace$/;"	c	package:tui
CtrlT	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlT$/;"	c	package:tui
CtrlU	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlU$/;"	c	package:tui
CtrlV	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlV$/;"	c	package:tui
CtrlW	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlW$/;"	c	package:tui
CtrlX	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlX$/;"	c	package:tui
CtrlY	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlY$/;"	c	package:tui
CtrlZ	autoload/plugged/fzf/src/tui/tui.go	/^	CtrlZ$/;"	c	package:tui
Cu	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
CucumberComplete	autoload/plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! CucumberComplete(findstart,base) abort$/;"	f
Current	autoload/plugged/fzf/src/tui/tui.go	/^	Current      ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Current Result (Include screenshots where appropriate.)	autoload/plugged/NERDTree/.github/ISSUE_TEMPLATE/bug.md	/^#### Current Result (Include screenshots where appropriate.)$/;"	t	section:labels: bug
CurrentMatch	autoload/plugged/fzf/src/tui/tui.go	/^	CurrentMatch ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Cursor	autoload/plugged/fzf/src/tui/tui.go	/^	Cursor       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Custom completion	autoload/plugged/fzf.vim/README.md	/^Custom completion$/;"	s	chapter:fzf :heart: vim
Custom fuzzy completion	autoload/plugged/fzf/README.md	/^#### Custom fuzzy completion$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
Custom statusline	autoload/plugged/fzf.vim/README.md	/^### Custom statusline$/;"	S	section:fzf :heart: vim""Status line of terminal buffer
Customization	autoload/plugged/fzf.vim/README.md	/^Customization$/;"	s	chapter:fzf :heart: vim
Customization	autoload/plugged/gv.vim/README.md	/^Customization$/;"	s	chapter:gv.vim
Cw	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Cycle	autoload/plugged/fzf/src/options.go	/^	Cycle       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Cycle	autoload/plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -count=1 -bar -bang Cycle call s:cycle(<bang>0 ? -<count> : <count>)$/;"	c
D	autoload/plug.vim	/^  nnoremap <silent> <buffer> D  :PlugDiff<cr>$/;"	m
D1	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	v
D3	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
D5	autoload/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),ss("Output buffer: %o",e.outputData[0].data))/;"	v
DB	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	v
DD	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	c
DEBUG	autoload/plugged/fzf/src/algo/algo.go	/^var DEBUG bool$/;"	v	package:algo	typeref:typename:bool
DEFAULT	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	c	class:r
DEFAULT_TIMEOUT	autoload/plugged/fzf/test/test_go.rb	/^DEFAULT_TIMEOUT = 10$/;"	C
DESCRIPTION	autoload/plugged/fzf/man/man1/fzf-tmux.1	/^.SH DESCRIPTION$/;"	s	title:fzf-tmux
DESCRIPTION	autoload/plugged/fzf/man/man1/fzf.1	/^.SH DESCRIPTION$/;"	s	title:fzf
DF	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
DJ	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	v
DQ	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
DT	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
DX	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
DZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
D_	autoload/plugged/coc.nvim/build/index.js	/^`)>=0)return!1;return!0}function awe(r,e){var t;if(r.indent==="	")t="	";else if(typeof r.indent=/;"	f
Dark mode	~./config/nvim/plugged/gruvbox/README.md	/^### Dark mode$/;"	S	section:Palette
Dark mode	~./config/nvim/plugged/gruvbox/README.md	/^### Dark mode$/;"	S	section:Screenshots
Dark256	autoload/plugged/fzf/src/tui/tui.go	/^	Dark256   *ColorTheme$/;"	v	package:tui	typeref:typename:*ColorTheme
DarkBg	autoload/plugged/fzf/src/tui/tui.go	/^	DarkBg       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
DartIndent	autoload/plugged/vim-polyglot/indent/dart.vim	/^function! DartIndent()$/;"	f
Date	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>Date()$/;"	f
Db	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
DebChangelogFoldText	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function! DebChangelogFoldText()$/;"	f
DebCompleteBugs	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^fun! DebCompleteBugs(findstart, base)$/;"	f
DebControlFold	autoload/plugged/vim-polyglot/ftplugin/debcontrol.vim	/^function! DebControlFold(l)$/;"	f
DebControlFoldText	autoload/plugged/vim-polyglot/ftplugin/debcontrol.vim	/^function! DebControlFoldText()$/;"	f
DebGetChangelogFold	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function! DebGetChangelogFold(lnum)$/;"	f
DebGetPkgSrcName	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function! DebGetPkgSrcName(lineno)$/;"	f
Debug	autoload/plugged/vim-rooter/test/runner.vim	/^function Debug(msg)$/;"	f
Default settings	autoload/plugged/vim-polyglot/README.md	/^## Default settings$/;"	s
Default16	autoload/plugged/fzf/src/tui/tui.go	/^	Default16 *ColorTheme$/;"	v	package:tui	typeref:typename:*ColorTheme
Del	autoload/plugged/fzf/src/tui/tui.go	/^	Del$/;"	c	package:tui
Delimiter	autoload/plugged/fzf/src/options.go	/^	Delimiter   Delimiter$/;"	m	struct:fzf.Options	typeref:typename:Delimiter
Delimiter	autoload/plugged/fzf/src/tokenizer.go	/^type Delimiter struct {$/;"	s	package:fzf
Demo	autoload/plugged/fzf/README.md	/^#### Demo$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Demo	autoload/plugged/vim-signify/README.md	/^## Demo$/;"	s
Dependencies	autoload/plugged/fzf.vim/README.md	/^### Dependencies$/;"	S	section:fzf :heart: vim""Installation
Describe the bug	autoload/plugged/coc.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^## Describe the bug$/;"	s
Description	autoload/plugged/NERDTree/.github/ISSUE_TEMPLATE/feature_request.md	/^#### Description$/;"	t	section:labels: "feature request"
Description of Changes	autoload/plugged/NERDTree/.github/PULL_REQUEST_TEMPLATE.md	/^### Description of Changes$/;"	S
Df	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Dfe	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Dh	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
DhallFormat	autoload/plugged/vim-polyglot/ftplugin/dhall.vim	/^function! DhallFormat()$/;"	f
Di	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
DiffGitCached	autoload/plugged/vim-polyglot/ftplugin/gitcommit.vim	/^  command! -bang -bar -buffer -complete=custom,s:diffcomplete -nargs=* DiffGitCached :call s:git/;"	c
DiffGitCached	autoload/plugged/vim-polyglot/ftplugin/gitcommit.vim	/^command! -bang -bar -buffer -complete=custom,s:diffcomplete -nargs=* DiffGitCached :call s:gitdi/;"	c
Dim	autoload/plugged/fzf/src/tui/dummy.go	/^	Dim       = Attr(1 << 1)$/;"	c	package:tui
Dim	autoload/plugged/fzf/src/tui/tcell.go	/^	Dim            = Attr(tcell.AttrDim)$/;"	c	package:tui
Disabled	autoload/plugged/fzf/src/tui/tui.go	/^	Disabled     ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Distribution	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function Distribution(dist)$/;"	f
Dk	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
Dm	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Dne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
DoHighlight	autoload/plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>DoHighlight() "{{{3$/;"	f
DoSyntaxDefinitions	autoload/plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>DoSyntaxDefinitions() "{{{3$/;"	f
Documentation	autoload/plugged/vim-airline/README.md	/^# Documentation$/;"	c
Documentation	~./config/nvim/plugged/gruvbox/README.md	/^Documentation$/;"	s
Double	autoload/plugged/fzf/src/tui/tui.go	/^	Double bool$/;"	m	struct:tui.MouseEvent	typeref:typename:bool
DoubleClick	autoload/plugged/fzf/src/tui/tui.go	/^	DoubleClick$/;"	c	package:tui
Down	autoload/plugged/fzf/src/tui/tui.go	/^	Down   bool$/;"	m	struct:tui.MouseEvent	typeref:typename:bool
Down	autoload/plugged/fzf/src/tui/tui.go	/^	Down$/;"	c	package:tui
Dr	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
Drop	autoload/plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Drop   :<line1>,<line2>call s:choose('drop')$/;"	c
Ds	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
Dse	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
Dte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
DurWithin	autoload/plugged/fzf/src/util/util.go	/^func DurWithin($/;"	f	package:util	typeref:typename:time.Duration
DylanGetIndent	autoload/plugged/vim-polyglot/indent/dylan.vim	/^function DylanGetIndent()$/;"	f
Dynamic reloading of the list	autoload/plugged/fzf/ADVANCED.md	/^Dynamic reloading of the list$/;"	s	chapter:Advanced fzf examples
E	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
E	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
E	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
E	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f	function:$D
E0	autoload/plugged/coc.nvim/build/index.js	/^`),s=i.line==r.start.line?i.character-r.start.character:i.character,a=UB(o,i.line-r.start.line,s/;"	v
E1	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	v
E2v	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -range E2v :<line1>,<line2>call <SID>ExtendedRegex2VimRegexLineWise(<q-args>)$/;"	c
E2v	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! E2v(extendedregex, ...)$/;"	f
E3	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
E7	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
EA	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
EB	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	v
ED	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	c
EF	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
EI	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
ENVIRONMENT	autoload/plugged/fzf/man/man1/fzf.1	/^.SH ENVIRONMENT VARIABLES$/;"	s	title:fzf
EO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
EOF	autoload/plugged/fzf/install	/^  cat << EOF$/;"	h
EOF	autoload/plugged/fzf/install	/^  cat > "$src" << EOF$/;"	h
EOF	autoload/plugged/fzf/install	/^  fish << EOF$/;"	h
EOF	autoload/plugged/fzf/uninstall	/^  cat << EOF$/;"	h
ER	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let ER = [ s:base00 , s:base08 , 235 , 203 ]      " [ error color ]$/;"	v
ESC	autoload/plugged/fzf/src/tui/tui.go	/^	ESC$/;"	c	package:tui
ET	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
EX	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
EXIT	autoload/plugged/fzf/man/man1/fzf.1	/^.SH EXIT STATUS$/;"	s	title:fzf
EXTENDED	autoload/plugged/fzf/man/man1/fzf.1	/^.SH EXTENDED SEARCH MODE$/;"	s	title:fzf
EZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
E_	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
Eb	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	v
Ed	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ede	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
Edit	autoload/plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Edit   :<line1>,<line2>call s:choose('edit')$/;"	c
EditBookmarks	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 EditBookmarks call g:NERDTreeBookmark.Edit()$/;"	c
Ee	autoload/plugged/coc.nvim/build/index.js	/^`)),x.log(`Sending response '${j} - (${T.id})'. Processing request took ${Date.now()-V}ms`,te)}e/;"	f
Ef	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Efe	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Ei	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
Email	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>Email()$/;"	f
EmptyMerger	autoload/plugged/fzf/src/merger.go	/^var EmptyMerger = NewMerger(nil, [][]Result{}, false, false)$/;"	v	package:fzf
EmptyTheme	autoload/plugged/fzf/src/tui/tui.go	/^func EmptyTheme() *ColorTheme {$/;"	f	package:tui	typeref:typename:*ColorTheme
Enclose	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Enclose(y int, x int) bool {$/;"	f	struct:tui.LightWindow	typeref:typename:bool
Enclose	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Enclose(y int, x int) bool {$/;"	f	struct:tui.TcellWindow	typeref:typename:bool
Enclose	autoload/plugged/fzf/src/tui/tui.go	/^	Enclose(y int, x int) bool$/;"	n	interface:tui.Window	typeref:typename:bool
End	autoload/plugged/fzf/src/algo/algo.go	/^	End   int$/;"	m	struct:algo.Result	typeref:typename:int
End	autoload/plugged/fzf/src/tui/tui.go	/^	End$/;"	c	package:tui
Ene	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Environment (for bug reports)	autoload/plugged/NERDTree/.github/ISSUE_TEMPLATE/bug.md	/^#### Environment (for bug reports)$/;"	t	section:labels: bug
Environment variables	autoload/plugged/fzf/README.md	/^#### Environment variables$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Environment variables / Aliases	autoload/plugged/fzf/README.md	/^#### Environment variables \/ Aliases$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
Epe	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	v
EqualMatch	autoload/plugged/fzf/src/algo/algo.go	/^func EqualMatch(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []ru/;"	f	package:algo	typeref:typename:(Result, *[]int)
Er	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
Erase	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Erase() {$/;"	f	struct:tui.LightWindow
Erase	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Erase() {$/;"	f	struct:tui.TcellWindow
Erase	autoload/plugged/fzf/src/tui/tui.go	/^	Erase()$/;"	n	interface:tui.Window
Ere	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ErlangFoldText	autoload/plugged/vim-polyglot/ftplugin/erlang.vim	/^  function ErlangFoldText()$/;"	f
ErlangIndent	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! ErlangIndent()$/;"	f
ErlangShowTokensInCurrentLine	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! ErlangShowTokensInCurrentLine()$/;"	f
ErlangShowTokensInLine	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! ErlangShowTokensInLine(line)$/;"	f
ErubyAtCursor	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^function! ErubyAtCursor() abort$/;"	f
Es	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
Esc	autoload/plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>Esc(val, char) "{{{3 $/;"	f
Ese	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
Ete	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
Eve	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Event	autoload/plugged/fzf/src/tui/tui.go	/^type Event struct {$/;"	s	package:tui
EventBox	autoload/plugged/fzf/src/util/eventbox.go	/^type EventBox struct {$/;"	s	package:util
EventType	autoload/plugged/fzf/src/tui/tui.go	/^type EventType int$/;"	t	package:tui	typeref:typename:int
EventType	autoload/plugged/fzf/src/util/eventbox.go	/^type EventType int$/;"	t	package:util	typeref:typename:int
Events	autoload/plugged/fzf/src/util/eventbox.go	/^type Events map[EventType]interface{}$/;"	t	package:util	typeref:typename:map[EventType]interface{}
EvtClose	autoload/plugged/fzf/src/util/eventbox_test.go	/^	EvtClose$/;"	c	package:util
EvtHeader	autoload/plugged/fzf/src/constants.go	/^	EvtHeader$/;"	c	package:fzf
EvtQuit	autoload/plugged/fzf/src/constants.go	/^	EvtQuit$/;"	c	package:fzf
EvtReadFin	autoload/plugged/fzf/src/constants.go	/^	EvtReadFin$/;"	c	package:fzf
EvtReadFin	autoload/plugged/fzf/src/util/eventbox_test.go	/^	EvtReadFin$/;"	c	package:util
EvtReadNew	autoload/plugged/fzf/src/constants.go	/^	EvtReadNew util.EventType = iota$/;"	c	package:fzf	typeref:typename:util.EventType
EvtReadNew	autoload/plugged/fzf/src/util/eventbox_test.go	/^	EvtReadNew EventType = iota$/;"	c	package:util	typeref:typename:EventType
EvtReady	autoload/plugged/fzf/src/constants.go	/^	EvtReady$/;"	c	package:fzf
EvtSearchFin	autoload/plugged/fzf/src/constants.go	/^	EvtSearchFin$/;"	c	package:fzf
EvtSearchFin	autoload/plugged/fzf/src/util/eventbox_test.go	/^	EvtSearchFin$/;"	c	package:util
EvtSearchNew	autoload/plugged/fzf/src/constants.go	/^	EvtSearchNew$/;"	c	package:fzf
EvtSearchNew	autoload/plugged/fzf/src/util/eventbox_test.go	/^	EvtSearchNew$/;"	c	package:util
EvtSearchProgress	autoload/plugged/fzf/src/constants.go	/^	EvtSearchProgress$/;"	c	package:fzf
EvtSearchProgress	autoload/plugged/fzf/src/util/eventbox_test.go	/^	EvtSearchProgress$/;"	c	package:util
Ew	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ExactMatchNaive	autoload/plugged/fzf/src/algo/algo.go	/^func ExactMatchNaive(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern/;"	f	package:algo	typeref:typename:(Result, *[]int)
Example vim configuration	autoload/plugged/coc.nvim/Readme.md	/^## Example vim configuration$/;"	s
Example: Advanced ripgrep integration	autoload/plugged/fzf.vim/README.md	/^#### Example: Advanced ripgrep integration$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Example: Customizing `Files` command	autoload/plugged/fzf.vim/README.md	/^#### Example: Customizing `Files` command$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Example: `Rg` command with preview window	autoload/plugged/fzf.vim/README.md	/^#### Example: `Rg` command with preview window$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Example: `git grep` wrapper	autoload/plugged/fzf.vim/README.md	/^#### Example: `git grep` wrapper$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Examples	autoload/plugged/fzf/README-VIM.md	/^#### Examples$/;"	t	subsection:FZF Vim integration""`:FZF[!]`""Configuration
Examples	autoload/plugged/fzf/README.md	/^Examples$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Examples	autoload/plugged/vim-signify/CONTRIBUTING.md	/^Examples$/;"	s	chapter:CONTRIBUTING
ExecCommand	autoload/plugged/fzf/src/util/util_unix.go	/^func ExecCommand(command string, setpgid bool) *exec.Cmd {$/;"	f	package:util	typeref:typename:*exec.Cmd
ExecCommand	autoload/plugged/fzf/src/util/util_windows.go	/^func ExecCommand(command string, setpgid bool) *exec.Cmd {$/;"	f	package:util	typeref:typename:*exec.Cmd
ExecCommandWith	autoload/plugged/fzf/src/util/util_unix.go	/^func ExecCommandWith(shell string, command string, setpgid bool) *exec.Cmd {$/;"	f	package:util	typeref:typename:*exec.Cmd
ExecCommandWith	autoload/plugged/fzf/src/util/util_windows.go	/^func ExecCommandWith(_shell string, command string, setpgid bool) *exec.Cmd {$/;"	f	package:util	typeref:typename:*exec.Cmd
Executing external programs	autoload/plugged/fzf/README.md	/^### Executing external programs$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics
Exit0	autoload/plugged/fzf/src/options.go	/^	Exit0       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Expect	autoload/plugged/fzf/src/options.go	/^	Expect      map[tui.Event]string$/;"	m	struct:fzf.Options	typeref:typename:map[tui.Event]string
Expected Result	autoload/plugged/NERDTree/.github/ISSUE_TEMPLATE/bug.md	/^#### Expected Result$/;"	t	section:labels: bug
Explanation of `g:fzf_colors`	autoload/plugged/fzf/README-VIM.md	/^##### Explanation of `g:fzf_colors`$/;"	T	subsubsection:FZF Vim integration""`:FZF[!]`""Configuration""Examples
Extended	autoload/plugged/fzf/src/options.go	/^	Extended    bool$/;"	m	struct:fzf.Options	typeref:typename:bool
ExtendedRegex2VimRegex	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! ExtendedRegex2VimRegex(data)$/;"	f
Extensible pipeline	autoload/plugged/vim-airline/README.md	/^#### Extensible pipeline$/;"	t	section:Features""Configurable and extensible
Extras	autoload/plugged/vim-airline/README.md	/^## Extras$/;"	s	chapter:Features
F	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
F1	autoload/plugged/fzf/src/tui/tui.go	/^	F1$/;"	c	package:tui
F10	autoload/plugged/fzf/src/tui/tui.go	/^	F10$/;"	c	package:tui
F11	autoload/plugged/fzf/src/tui/tui.go	/^	F11$/;"	c	package:tui
F12	autoload/plugged/fzf/src/tui/tui.go	/^	F12$/;"	c	package:tui
F2	autoload/plugged/fzf/src/tui/tui.go	/^	F2$/;"	c	package:tui
F3	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
F3	autoload/plugged/fzf/src/tui/tui.go	/^	F3$/;"	c	package:tui
F4	autoload/plugged/fzf/src/tui/tui.go	/^	F4$/;"	c	package:tui
F5	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	v
F5	autoload/plugged/fzf/src/tui/tui.go	/^	F5$/;"	c	package:tui
F6	autoload/plugged/fzf/src/tui/tui.go	/^	F6$/;"	c	package:tui
F7	autoload/plugged/fzf/src/tui/tui.go	/^	F7$/;"	c	package:tui
F8	autoload/plugged/fzf/src/tui/tui.go	/^	F8$/;"	c	package:tui
F9	autoload/plugged/fzf/src/tui/tui.go	/^	F9$/;"	c	package:tui
FAQ	autoload/plugged/vim-airline/README.md	/^# FAQ$/;"	c
FAQ	autoload/plugged/vim-fugitive/README.markdown	/^## FAQ$/;"	s	chapter:fugitive.vim
FAQ	autoload/plugged/vim-rhubarb/README.markdown	/^## FAQ$/;"	s	chapter:rhubarb.vim
FB	autoload/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let o=n.replace(Dpe,"").split(DB);i.push(o.spl/;"	c
FD	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
FIELD	autoload/plugged/fzf/man/man1/fzf.1	/^.SH FIELD INDEX EXPRESSION$/;"	s	title:fzf
FILE	autoload/plugged/fzf/test/test_go.rb	/^FILE = File.expand_path(__FILE__)$/;"	C
FJ	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
FT	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
FU	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	c
FW	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
FX	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
FY	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
FZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
FZF	autoload/plugged/fzf/plugin/fzf.vim	/^command! -nargs=* -complete=dir -bang FZF call s:cmd(<bang>0, <f-args>)$/;"	c
FZF	autoload/plugged/fzf/test/test_go.rb	/^FZF = "FZF_DEFAULT_OPTS= FZF_DEFAULT_COMMAND= #{BASE}\/bin\/fzf"$/;"	C
FZF Vim integration	autoload/plugged/fzf/README-VIM.md	/^FZF Vim integration$/;"	c
FalconGetIndent	autoload/plugged/vim-polyglot/indent/falcon.vim	/^function FalconGetIndent(...)$/;"	f
Fde	autoload/plugged/coc.nvim/build/index.js	/^   %s`,P,P,w,i);var k=w.type==="*"?GD:w.type==="?"?zD:"\\\\"+w.type;n=!0,i=i.slice(0,w.reStart)+/;"	f
Fe	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Features	autoload/plugged/auto-pairs/README.md	/^Features$/;"	s	chapter:Auto Pairs
Features	autoload/plugged/vim-airline/README.md	/^# Features$/;"	c
Features	~./config/nvim/plugged/gruvbox/README.md	/^Features$/;"	s
Feedback	autoload/plugged/coc.nvim/Readme.md	/^## Feedback$/;"	s
FermHiLink	autoload/plugged/vim-polyglot/syntax/ferm.vim	/^  command! -nargs=+ FermHiLink highlight default link <args>$/;"	c
FermHiLink	autoload/plugged/vim-polyglot/syntax/ferm.vim	/^  command! -nargs=+ FermHiLink highlight link <args>$/;"	c
Fg	autoload/plugged/fzf/src/tui/tui.go	/^	Fg           ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Fg	autoload/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) Fg() Color {$/;"	f	struct:tui.ColorPair	typeref:typename:Color
Fh	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Fhe	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
Fie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
FileWord	autoload/plugged/fzf/src/options.go	/^	FileWord    bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Files	plug-config/fzf.vim	/^command! -bang -nargs=? -complete=dir Files$/;"	c
Files and directories	autoload/plugged/fzf/README.md	/^#### Files and directories$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
Files listed in `git status`	autoload/plugged/fzf/ADVANCED.md	/^### Files listed in `git status`$/;"	S	section:Advanced fzf examples""Key bindings for git objects
Fill	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Fill(text string) FillReturn {$/;"	f	struct:tui.LightWindow	typeref:typename:FillReturn
Fill	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Fill(str string) FillReturn {$/;"	f	struct:tui.TcellWindow	typeref:typename:FillReturn
Fill	autoload/plugged/fzf/src/tui/tui.go	/^	Fill(text string) FillReturn$/;"	n	interface:tui.Window	typeref:typename:FillReturn
FillContinue	autoload/plugged/fzf/src/tui/tui.go	/^	FillContinue FillReturn = iota$/;"	c	package:tui	typeref:type:FillReturn
FillNextLine	autoload/plugged/fzf/src/tui/tui.go	/^	FillNextLine$/;"	c	package:tui
FillReturn	autoload/plugged/fzf/src/tui/tui.go	/^type FillReturn int$/;"	t	package:tui	typeref:typename:int
FillSuspend	autoload/plugged/fzf/src/tui/tui.go	/^	FillSuspend$/;"	c	package:tui
Filter	autoload/plugged/fzf/src/options.go	/^	Filter      *string$/;"	m	struct:fzf.Options	typeref:typename:*string
Finalise	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function Finalise()$/;"	f
FinaliseMenu	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>FinaliseMenu()$/;"	f
Finalised	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>Finalised()$/;"	f
FindOpenBrace	autoload/plugged/vim-polyglot/indent/llvm.vim	/^function! FindOpenBrace(lnum)$/;"	f
FindOpenBrace	autoload/plugged/vim-polyglot/indent/mlir.vim	/^function! FindOpenBrace(lnum)$/;"	f
FindReferences_nim	autoload/plugged/vim-polyglot/autoload/nim.vim	/^fun! FindReferences_nim() abort$/;"	f
FindRootDirectory	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! FindRootDirectory()$/;"	f
Fine-tuned configuration	autoload/plugged/vim-airline/README.md	/^#### Fine-tuned configuration$/;"	t	section:Features""Configurable and extensible
FinishFill	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) FinishFill() {$/;"	f	struct:tui.LightWindow
FinishFill	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) FinishFill() {$/;"	f	struct:tui.TcellWindow
FinishFill	autoload/plugged/fzf/src/tui/tui.go	/^	FinishFill()$/;"	n	interface:tui.Window
First and basic nvim configuration	README.md	/^### First and basic nvim configuration$/;"	S
Fish shell	autoload/plugged/fzf/README.md	/^#### Fish shell$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Tips
FixBeginfigs	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^  command -nargs=0 FixBeginfigs call s:fix_beginfigs()$/;"	c
Fixedgq	autoload/plugged/vim-polyglot/ftplugin/typescript.vim	/^function! Fixedgq(lnum, count)$/;"	f
Fixes and improvements	autoload/plugged/fzf/CHANGELOG.md	/^### Fixes and improvements$/;"	S	section:CHANGELOG""0.10.2
Fixup	autoload/plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Fixup  :<line1>,<line2>call s:choose('fixup')$/;"	c
Fk	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
Fle	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Fly Mode	autoload/plugged/auto-pairs/README.md	/^Fly Mode$/;"	s	chapter:Auto Pairs
Fn	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
Fne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Fold	plug-config/coc.vim	/^command! -nargs=? Fold :call     CocAction('fold', <f-args>)$/;"	c
Format	plug-config/coc.vim	/^command! -nargs=0 Format :call CocAction('format')$/;"	c
FormatRmd	autoload/plugged/vim-polyglot/ftplugin/rmd.vim	/^function! FormatRmd()$/;"	f
FormatRrst	autoload/plugged/vim-polyglot/ftplugin/rrst.vim	/^function! FormatRrst()$/;"	f
FortranGetFixedIndent	autoload/plugged/vim-polyglot/indent/fortran.vim	/^function FortranGetFixedIndent()$/;"	f
FortranGetFreeIndent	autoload/plugged/vim-polyglot/indent/fortran.vim	/^function FortranGetFreeIndent()$/;"	f
FortranGetIndent	autoload/plugged/vim-polyglot/indent/fortran.vim	/^function FortranGetIndent(lnum)$/;"	f
Fp	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Fpe	autoload/plugged/coc.nvim/build/index.js	/^`+r)}var Ipe="\\\\*",Fpe="\\\\d+\\\\.",PB="(?:"+[Ipe,Fpe].join("|")+")";function Ape(r,e){let t=/;"	v
Fr	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	c
Frequently Asked Questions	autoload/plugged/NERDTree/README.markdown	/^## Frequently Asked Questions$/;"	s	chapter:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)
Fte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
FugitiveCommonDir	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveCommonDir(...) abort$/;"	f
FugitiveConfig	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfig(...) abort$/;"	f
FugitiveConfigGet	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfigGet(name, ...) abort$/;"	f
FugitiveConfigGetAll	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfigGetAll(name, ...) abort$/;"	f
FugitiveConfigGetRegexp	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfigGetRegexp(pattern, ...) abort$/;"	f
FugitiveDetect	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveDetect(path) abort$/;"	f
FugitiveExtractGitDir	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveExtractGitDir(path) abort$/;"	f
FugitiveFind	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveFind(...) abort$/;"	f
FugitiveGitDir	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitDir(...) abort$/;"	f
FugitiveGitPath	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitPath(path) abort$/;"	f
FugitiveHead	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveHead(...) abort$/;"	f
FugitiveIsGitDir	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveIsGitDir(path) abort$/;"	f
FugitiveParse	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveParse(...) abort$/;"	f
FugitivePath	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePath(...) abort$/;"	f
FugitivePrepare	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePrepare(...) abort$/;"	f
FugitiveReal	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveReal(...) abort$/;"	f
FugitiveRemoteUrl	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveRemoteUrl(...) abort$/;"	f
FugitiveResult	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveResult(...) abort$/;"	f
FugitiveStatusline	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveStatusline(...) abort$/;"	f
FugitiveVimPath	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveVimPath(path) abort$/;"	f
FugitiveWorkTree	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveWorkTree(...) abort$/;"	f
FullName	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>FullName()$/;"	f
FullscreenRenderer	autoload/plugged/fzf/src/tui/tui.go	/^type FullscreenRenderer struct {$/;"	s	package:tui
Fuzzy	autoload/plugged/fzf/src/options.go	/^	Fuzzy       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Fuzzy completion for bash and zsh	autoload/plugged/fzf/README.md	/^Fuzzy completion for bash and zsh$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
FuzzyAlgo	autoload/plugged/fzf/src/options.go	/^	FuzzyAlgo   algo.Algo$/;"	m	struct:fzf.Options	typeref:typename:algo.Algo
FuzzyMatchV1	autoload/plugged/fzf/src/algo/algo.go	/^func FuzzyMatchV1(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []/;"	f	package:algo	typeref:typename:(Result, *[]int)
FuzzyMatchV2	autoload/plugged/fzf/src/algo/algo.go	/^func FuzzyMatchV2(caseSensitive bool, normalize bool, forward bool, input *util.Chars, pattern [/;"	f	package:algo	typeref:typename:(Result, *[]int)
Fx	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
G	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:fX.e
G	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^  command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete G   exe fugitive#Comm/;"	c
G	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -range=% -bang G :<line1>,<line2>call <SID>Eglobal(<q-bang>, <q-args>)$/;"	c
G$	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
GCUpper	autoload/plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! GCUpper(what)$/;"	f
GCUpperCommon	autoload/plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! GCUpperCommon(what)$/;"	f
GCUpperDot	autoload/plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! GCUpperDot(what)$/;"	f
GCUpperSpace	autoload/plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! GCUpperSpace(what)$/;"	f
GG	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
GGrep	plug-config/fzf.vim	/^command! -bang -nargs=* GGrep$/;"	c
GI	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
GL	autoload/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){$L!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	v
GM	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	v
GN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
GO	autoload/plugged/fzf/Makefile	/^GO             ?= go$/;"	m
GOOS	autoload/plugged/fzf/Makefile	/^GOOS           ?= $(word 1, $(subst \/, " ", $(word 4, $(shell go version))))$/;"	m
GTe	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	v
GU	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	v
GV	autoload/plugged/gv.vim/plugin/gv.vim	/^command! -bang -nargs=* -range=0 -complete=customlist,s:gvcomplete GV call s:gv(<bang>0, <count>/;"	c
GW	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
GY	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
GZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
Gb	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	v
Gbe	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
Gc	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Generating fzf color theme from Vim color schemes	autoload/plugged/fzf/ADVANCED.md	/^### Generating fzf color theme from Vim color schemes$/;"	S	section:Advanced fzf examples""Color themes
Get	autoload/plugged/fzf/src/merger.go	/^func (mg *Merger) Get(idx int) Result {$/;"	f	struct:fzf.Merger	typeref:typename:Result
Get	autoload/plugged/fzf/src/util/atomicbool.go	/^func (a *AtomicBool) Get() bool {$/;"	f	struct:util.AtomicBool	typeref:typename:bool
Get	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) Get(i int) rune {$/;"	f	struct:util.Chars	typeref:typename:rune
GetAdaIndent	autoload/plugged/vim-polyglot/indent/ada.vim	/^function GetAdaIndent()$/;"	f
GetAnsibleIndent	autoload/plugged/vim-polyglot/indent/ansible.vim	/^function GetAnsibleIndent(lnum)$/;"	f
GetAppleScriptIndent	autoload/plugged/vim-polyglot/indent/applescript.vim	/^func! GetAppleScriptIndent()$/;"	f
GetAutoHotkeyIndent	autoload/plugged/vim-polyglot/indent/autohotkey.vim	/^function! GetAutoHotkeyIndent()$/;"	f
GetAwkIndent	autoload/plugged/vim-polyglot/indent/awk.vim	/^function! GetAwkIndent()$/;"	f
GetBladeIndent	autoload/plugged/vim-polyglot/indent/blade.vim	/^function! GetBladeIndent()$/;"	f
GetBstIndent	autoload/plugged/vim-polyglot/indent/bst.vim	/^function! GetBstIndent(lnum) abort$/;"	f
GetBzlIndent	autoload/plugged/vim-polyglot/indent/bzl.vim	/^function GetBzlIndent(lnum) abort$/;"	f
GetCSIndent	autoload/plugged/vim-polyglot/indent/cs.vim	/^function! GetCSIndent(lnum) abort$/;"	f
GetCSSIndent	autoload/plugged/vim-polyglot/indent/css.vim	/^function GetCSSIndent()$/;"	f
GetCabalIndent	autoload/plugged/vim-polyglot/indent/cabal.vim	/^function! GetCabalIndent()$/;"	f
GetCaddyfileIndent	autoload/plugged/vim-polyglot/indent/caddyfile.vim	/^function! GetCaddyfileIndent(lnum)$/;"	f
GetChaiScriptIndent	autoload/plugged/vim-polyglot/indent/chaiscript.vim	/^function! GetChaiScriptIndent()$/;"	f
GetChar	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) GetChar() Event { return Event{} }$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:Event
GetChar	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) GetChar() Event {$/;"	f	struct:tui.LightRenderer	typeref:typename:Event
GetChar	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) GetChar() Event {$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:Event
GetChar	autoload/plugged/fzf/src/tui/tui.go	/^	GetChar() Event$/;"	n	interface:tui.Renderer	typeref:typename:Event
GetClojureIndent	autoload/plugged/vim-polyglot/indent/clojure.vim	/^	function! GetClojureIndent()$/;"	f
GetCobolIndent	autoload/plugged/vim-polyglot/indent/cobol.vim	/^function! GetCobolIndent(lnum) abort$/;"	f
GetCoffeeIndent	autoload/plugged/vim-polyglot/indent/coffee.vim	/^function! GetCoffeeIndent(curlnum)$/;"	f
GetConfigIndent	autoload/plugged/vim-polyglot/indent/config.vim	/^function GetConfigIndent()$/;"	f
GetCrystalIndent	autoload/plugged/vim-polyglot/indent/crystal.vim	/^function! GetCrystalIndent(...) abort$/;"	f
GetCucumberIndent	autoload/plugged/vim-polyglot/indent/cucumber.vim	/^function! GetCucumberIndent()$/;"	f
GetDIndent	autoload/plugged/vim-polyglot/indent/d.vim	/^function GetDIndent()$/;"	f
GetDTDIndent	autoload/plugged/vim-polyglot/indent/dtd.vim	/^function GetDTDIndent()$/;"	f
GetDosBatchIndent	autoload/plugged/vim-polyglot/indent/dosbatch.vim	/^function! GetDosBatchIndent(lnum)$/;"	f
GetEcrystalFold	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^function! GetEcrystalFold() abort$/;"	f
GetEcrystalIndent	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^function! GetEcrystalIndent() abort$/;"	f
GetEelixirIndent	autoload/plugged/vim-polyglot/indent/eelixir.vim	/^function! GetEelixirIndent(...)$/;"	f
GetElmIndent	autoload/plugged/vim-polyglot/indent/elm.vim	/^function! GetElmIndent()$/;"	f
GetErlangFold	autoload/plugged/vim-polyglot/ftplugin/erlang.vim	/^  function GetErlangFold(lnum)$/;"	f
GetErubyIndent	autoload/plugged/vim-polyglot/indent/eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetEtermIndent	autoload/plugged/vim-polyglot/indent/eterm.vim	/^function GetEtermIndent()$/;"	f
GetFennelIndent	autoload/plugged/vim-polyglot/indent/fennel.vim	/^	function! GetFennelIndent()$/;"	f
GetFrameScriptIndent	autoload/plugged/vim-polyglot/indent/framescript.vim	/^function GetFrameScriptIndent()$/;"	f
GetFsharpIndent	autoload/plugged/vim-polyglot/indent/fsharp.vim	/^function! GetFsharpIndent()$/;"	f
GetGitconfigIndent	autoload/plugged/vim-polyglot/indent/gitconfig.vim	/^function! GetGitconfigIndent()$/;"	f
GetGitoliteIndent	autoload/plugged/vim-polyglot/indent/gitolite.vim	/^function! GetGitoliteIndent()$/;"	f
GetGoHTMLTmplIndent	autoload/plugged/vim-polyglot/indent/gohtmltmpl.vim	/^function! GetGoHTMLTmplIndent(lnum)$/;"	f
GetGraphQLIndent	autoload/plugged/vim-polyglot/indent/graphql.vim	/^function GetGraphQLIndent()$/;"	f
GetHamlIndent	autoload/plugged/vim-polyglot/indent/haml.vim	/^function! GetHamlIndent()$/;"	f
GetHandlebarsIndent	autoload/plugged/vim-polyglot/indent/handlebars.vim	/^function! GetHandlebarsIndent(...)$/;"	f
GetHaskellIndent	autoload/plugged/vim-polyglot/indent/haskell.vim	/^function! GetHaskellIndent()$/;"	f
GetHelp	autoload/plugged/vim-polyglot/ftplugin/ps1.vim	/^    command! -buffer -nargs=1 GetHelp echo system(s:pwsh_cmd . ' -NoLogo -NoProfile -NonInteract/;"	c
GetHelp	autoload/plugged/vim-polyglot/ftplugin/ps1.vim	/^    command! -buffer -nargs=1 GetHelp silent exe '!' . s:pwsh_cmd . ' -NoLogo -NoProfile -NonInt/;"	c
GetHelp	autoload/plugged/vim-polyglot/ftplugin/ps1.vim	/^    command! -buffer -nargs=1 GetHelp silent exe 'term ' . s:pwsh_cmd . ' -NoLogo -NoProfile -No/;"	c
GetHogIndent	autoload/plugged/vim-polyglot/indent/hog.vim	/^function GetHogIndent()$/;"	f
GetIdrisIndent	autoload/plugged/vim-polyglot/indent/idris.vim	/^function! GetIdrisIndent()$/;"	f
GetIdrisIndent	autoload/plugged/vim-polyglot/indent/idris2.vim	/^function! GetIdrisIndent()$/;"	f
GetJIndent	autoload/plugged/vim-polyglot/indent/j.vim	/^function GetJIndent() abort$/;"	f
GetJSONIndent	autoload/plugged/vim-polyglot/indent/json.vim	/^function GetJSONIndent()$/;"	f
GetJavaIndent	autoload/plugged/vim-polyglot/indent/java.vim	/^function GetJavaIndent()$/;"	f
GetJavascriptGraphQLIndent	autoload/plugged/vim-polyglot/after/indent/javascript-2.vim	/^function GetJavascriptGraphQLIndent()$/;"	f
GetJavascriptIndent	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function GetJavascriptIndent()$/;"	f
GetJsIndent	autoload/plugged/vim-polyglot/indent/qml.vim	/^function! GetJsIndent()$/;"	f
GetJstIndent	autoload/plugged/vim-polyglot/indent/jst.vim	/^function! GetJstIndent(...)$/;"	f
GetJsxIndent	autoload/plugged/vim-polyglot/after/indent/jsx.vim	/^function! GetJsxIndent()$/;"	f
GetJsxIndent	autoload/plugged/vim-polyglot/after/indent/tsx.vim	/^function! GetJsxIndent()$/;"	f
GetJuliaIndent	autoload/plugged/vim-polyglot/indent/julia.vim	/^function GetJuliaIndent()$/;"	f
GetJuliaNestingBrackets	autoload/plugged/vim-polyglot/indent/julia.vim	/^function GetJuliaNestingBrackets(lnum, c)$/;"	f
GetJuliaNestingStruct	autoload/plugged/vim-polyglot/indent/julia.vim	/^function GetJuliaNestingStruct(lnum, ...)$/;"	f
GetKotlinIndent	autoload/plugged/vim-polyglot/indent/kotlin.vim	/^function! GetKotlinIndent()$/;"	f
GetLDIndent	autoload/plugged/vim-polyglot/indent/ld.vim	/^function GetLDIndent()$/;"	f
GetLLVMIndent	autoload/plugged/vim-polyglot/indent/llvm.vim	/^function! GetLLVMIndent()$/;"	f
GetLedgerIndent	autoload/plugged/vim-polyglot/indent/ledger.vim	/^function GetLedgerIndent(...)$/;"	f
GetLiquidIndent	autoload/plugged/vim-polyglot/indent/liquid.vim	/^function! GetLiquidIndent(...)$/;"	f
GetLitCoffeeIndent	autoload/plugged/vim-polyglot/indent/litcoffee.vim	/^function GetLitCoffeeIndent()$/;"	f
GetLiveScriptIndent	autoload/plugged/vim-polyglot/indent/ls.vim	/^function! GetLiveScriptIndent(curlinenum)$/;"	f
GetLogtalkIndent	autoload/plugged/vim-polyglot/indent/logtalk.vim	/^function! GetLogtalkIndent()$/;"	f
GetLuaIndent	autoload/plugged/vim-polyglot/indent/lua.vim	/^function GetLuaIndent()$/;"	f
GetMLIRIndent	autoload/plugged/vim-polyglot/indent/mlir.vim	/^function! GetMLIRIndent()$/;"	f
GetMakeIndent	autoload/plugged/vim-polyglot/indent/make.vim	/^function GetMakeIndent()$/;"	f
GetMakeIndent	autoload/plugged/vim-polyglot/indent/omake.vim	/^function GetMakeIndent()$/;"	f
GetMakoIndent	autoload/plugged/vim-polyglot/indent/mako.vim	/^function GetMakoIndent()$/;"	f
GetMarkdownIndent	autoload/plugged/vim-polyglot/indent/markdown.vim	/^function GetMarkdownIndent()$/;"	f
GetMesonIndent	autoload/plugged/vim-polyglot/indent/meson.vim	/^function GetMesonIndent(lnum)$/;"	f
GetMetaPostIndent	autoload/plugged/vim-polyglot/indent/mp.vim	/^function GetMetaPostIndent()$/;"	f
GetMetaPostIndentIntern	autoload/plugged/vim-polyglot/indent/mp.vim	/^function! GetMetaPostIndentIntern()$/;"	f
GetMoonIndent	autoload/plugged/vim-polyglot/indent/moon.vim	/^function! GetMoonIndent(curlinenum)$/;"	f
GetNimIndent	autoload/plugged/vim-polyglot/indent/nim.vim	/^function! GetNimIndent(lnum)$/;"	f
GetNixIndent	autoload/plugged/vim-polyglot/indent/nix.vim	/^function! GetNixIndent()$/;"	f
GetNsisIndent	autoload/plugged/vim-polyglot/indent/nsis.vim	/^function! GetNsisIndent(lnum)$/;"	f
GetOCamlIndent	autoload/plugged/vim-polyglot/indent/ocaml.vim	/^function! GetOCamlIndent()$/;"	f
GetObjCIndentImproved	autoload/plugged/vim-polyglot/after/indent/objc.vim	/^function! GetObjCIndentImproved()$/;"	f
GetOccamIndent	autoload/plugged/vim-polyglot/indent/occam.vim	/^function GetOccamIndent()$/;"	f
GetOctaveIndent	autoload/plugged/vim-polyglot/indent/octave.vim	/^function! GetOctaveIndent()$/;"	f
GetOdinIndent	autoload/plugged/vim-polyglot/indent/odin.vim	/^function! GetOdinIndent(lnum)$/;"	f
GetPHPGraphQLIndent	autoload/plugged/vim-polyglot/after/indent/php.vim	/^function GetPHPGraphQLIndent()$/;"	f
GetPascalIndent	autoload/plugged/vim-polyglot/indent/pascal.vim	/^function! GetPascalIndent( line_num )$/;"	f
GetPerlIndent	autoload/plugged/vim-polyglot/indent/perl.vim	/^function! GetPerlIndent()$/;"	f
GetPlantUMLIndent	autoload/plugged/vim-polyglot/indent/plantuml.vim	/^function! GetPlantUMLIndent(...) abort$/;"	f
GetPoVRayIndent	autoload/plugged/vim-polyglot/indent/pov.vim	/^function GetPoVRayIndent()$/;"	f
GetPotionFold	autoload/plugged/vim-polyglot/ftplugin/cryptol/folding.vim	/^function! GetPotionFold(lnum)$/;"	f
GetPrologIndent	autoload/plugged/vim-polyglot/indent/prolog.vim	/^function! GetPrologIndent()$/;"	f
GetPugIndent	autoload/plugged/vim-polyglot/indent/pug.vim	/^function! GetPugIndent()$/;"	f
GetPuppetIndent	autoload/plugged/vim-polyglot/indent/puppet.vim	/^function! GetPuppetIndent(...)$/;"	f
GetPurescriptIndent	autoload/plugged/vim-polyglot/indent/purescript.vim	/^function! GetPurescriptIndent()$/;"	f
GetPythonIndent	autoload/plugged/vim-polyglot/indent/gdscript3.vim	/^function GetPythonIndent(lnum)$/;"	f
GetPythonPEPIndent	autoload/plugged/vim-polyglot/indent/cython.vim	/^function! GetPythonPEPIndent(lnum)$/;"	f
GetPythonPEPIndent	autoload/plugged/vim-polyglot/indent/python.vim	/^function! GetPythonPEPIndent(lnum)$/;"	f
GetRSTIndent	autoload/plugged/vim-polyglot/indent/rst.vim	/^function GetRSTIndent()$/;"	f
GetRakuIndent	autoload/plugged/vim-polyglot/indent/raku.vim	/^function! GetRakuIndent()$/;"	f
GetReadlineIndent	autoload/plugged/vim-polyglot/indent/readline.vim	/^function GetReadlineIndent()$/;"	f
GetReasonIndent	autoload/plugged/vim-polyglot/indent/reason.vim	/^function GetReasonIndent(lnum)$/;"	f
GetRmdIndent	autoload/plugged/vim-polyglot/indent/rmd.vim	/^function GetRmdIndent()$/;"	f
GetRnowebIndent	autoload/plugged/vim-polyglot/indent/rnoweb.vim	/^function GetRnowebIndent()$/;"	f
GetRrstIndent	autoload/plugged/vim-polyglot/indent/rrst.vim	/^function GetRrstIndent()$/;"	f
GetRstIndent	autoload/plugged/vim-polyglot/indent/rrst.vim	/^function GetRstIndent()$/;"	f
GetRubyIndent	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! GetRubyIndent(...) abort$/;"	f
GetRustIndent	autoload/plugged/vim-polyglot/indent/rust.vim	/^function GetRustIndent(lnum)$/;"	f
GetSASIndent	autoload/plugged/vim-polyglot/indent/sas.vim	/^function! GetSASIndent()$/;"	f
GetSCSSIndent	autoload/plugged/vim-polyglot/indent/scss.vim	/^function GetSCSSIndent()$/;"	f
GetSDLIndent	autoload/plugged/vim-polyglot/indent/sdl.vim	/^function! GetSDLIndent()$/;"	f
GetSMLIndent	autoload/plugged/vim-polyglot/indent/sml.vim	/^function! GetSMLIndent()$/;"	f
GetSQLIndent	autoload/plugged/vim-polyglot/indent/pgsql.vim	/^function! GetSQLIndent()$/;"	f
GetSassIndent	autoload/plugged/vim-polyglot/indent/sass.vim	/^function! GetSassIndent()$/;"	f
GetScalaIndent	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! GetScalaIndent()$/;"	f
GetSlimIndent	autoload/plugged/vim-polyglot/indent/slim.vim	/^function! GetSlimIndent()$/;"	f
GetSlimeIndent	autoload/plugged/vim-polyglot/indent/slime.vim	/^function! GetSlimeIndent()$/;"	f
GetSolidityIndent	autoload/plugged/vim-polyglot/indent/solidity.vim	/^function GetSolidityIndent()$/;"	f
GetSshconfigIndent	autoload/plugged/vim-polyglot/indent/sshconfig.vim	/^function GetSshconfigIndent(lnum)$/;"	f
GetStylusIndent	autoload/plugged/vim-polyglot/indent/stylus.vim	/^function! GetStylusIndent()$/;"	f
GetSvelteFold	autoload/plugged/vim-polyglot/ftplugin/svelte/fold.vim	/^function! GetSvelteFold(lnum)$/;"	f
GetSvelteIndent	autoload/plugged/vim-polyglot/indent/svelte.vim	/^function! GetSvelteIndent()$/;"	f
GetSvelteSubtype	autoload/plugged/vim-polyglot/autoload/svelte.vim	/^function! GetSvelteSubtype()$/;"	f
GetSvelteTag	autoload/plugged/vim-polyglot/autoload/svelte.vim	/^function! GetSvelteTag(...)$/;"	f
GetTFIndent	autoload/plugged/vim-polyglot/indent/tf.vim	/^function GetTFIndent()$/;"	f
GetTclIndent	autoload/plugged/vim-polyglot/indent/tcl.vim	/^function GetTclIndent()$/;"	f
GetTeXIndent	autoload/plugged/vim-polyglot/after/indent/tex.vim	/^function! GetTeXIndent() " {{{$/;"	f
GetTeraTermIndent	autoload/plugged/vim-polyglot/indent/teraterm.vim	/^function! GetTeraTermIndent(lnum)$/;"	f
GetTildeIndent	autoload/plugged/vim-polyglot/indent/tilde.vim	/^function GetTildeIndent(lnum)$/;"	f
GetTreetopIndent	autoload/plugged/vim-polyglot/indent/treetop.vim	/^function GetTreetopIndent()$/;"	f
GetTsxIndent	autoload/plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! GetTsxIndent()$/;"	f
GetTwigIndent	autoload/plugged/vim-polyglot/indent/twig.vim	/^fun! GetTwigIndent(currentLineNumber)$/;"	f
GetTypescriptGraphQLIndent	autoload/plugged/vim-polyglot/after/indent/typescript.vim	/^function GetTypescriptGraphQLIndent()$/;"	f
GetTypescriptIndent	autoload/plugged/vim-polyglot/indent/typescript.vim	/^function GetTypescriptIndent()$/;"	f
GetVHDLindent	autoload/plugged/vim-polyglot/indent/vhdl.vim	/^function GetVHDLindent()$/;"	f
GetValaIndent	autoload/plugged/vim-polyglot/indent/vala.vim	/^function GetValaIndent(lnum)$/;"	f
GetVerilogIndent	autoload/plugged/vim-polyglot/indent/verilog.vim	/^function GetVerilogIndent()$/;"	f
GetVueIndent	autoload/plugged/vim-polyglot/indent/vue.vim	/^function! GetVueIndent()$/;"	f
GetXF86ConfIndent	autoload/plugged/vim-polyglot/indent/xf86conf.vim	/^function GetXF86ConfIndent()$/;"	f
GetXinetdIndent	autoload/plugged/vim-polyglot/indent/xinetd.vim	/^function GetXinetdIndent()$/;"	f
GetYAMLIndent	autoload/plugged/vim-polyglot/indent/yaml.vim	/^function GetYAMLIndent(lnum)$/;"	f
GetYaccIndent	autoload/plugged/vim-polyglot/indent/yacc.vim	/^function GetYaccIndent()$/;"	f
GetZigIndent	autoload/plugged/vim-polyglot/indent/zig.vim	/^function! GetZigIndent(lnum)$/;"	f
GetZimbuIndent	autoload/plugged/vim-polyglot/indent/zimbu.vim	/^func GetZimbuIndent(lnum)$/;"	f
Getting Started	autoload/plugged/NERDTree/README.markdown	/^## Getting Started$/;"	s	chapter:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)
Gf	autoload/plugged/coc.nvim/build/index.js	/^`}function Gf(r,e){return`\\r$/;"	f
Gfe	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
Gi	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
Gie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Git	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete Git exe fugitive#Comman/;"	c
Gj	autoload/plugged/coc.nvim/build/index.js	/^`),s=i.line==r.start.line?i.character-r.start.character:i.character,a=UB(o,i.line-r.start.line,s/;"	v
Gl	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
Gle	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Global options	autoload/plugged/fzf.vim/README.md	/^### Global options$/;"	S	section:fzf :heart: vim""Customization
Global options supported by `fzf#wrap`	autoload/plugged/fzf/README-VIM.md	/^### Global options supported by `fzf#wrap`$/;"	S	section:FZF Vim integration""`fzf#wrap`
Gm	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
Gn	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	f
GoIndent	autoload/plugged/vim-polyglot/indent/go.vim	/^function! GoIndent(lnum) abort$/;"	f
GotoDefinition_nim	autoload/plugged/vim-polyglot/autoload/nim.vim	/^fun! GotoDefinition_nim() abort$/;"	f
GotoDefinition_nim_ready	autoload/plugged/vim-polyglot/autoload/nim.vim	/^fun! GotoDefinition_nim_ready(def_output) abort$/;"	f
Gpe	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
Gr	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Gre	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
GruvboxHlsHideCursor	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^function! GruvboxHlsHideCursor()$/;"	f
GruvboxHlsShowCursor	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^function! GruvboxHlsShowCursor()$/;"	f
Gs	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Gutter	autoload/plugged/fzf/src/tui/tui.go	/^	Gutter       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Gv	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	v
Gve	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
H$	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	f
H1e	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
H2	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
H8	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
HG	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
HM	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	v
HN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
HO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
HY	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
HZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
H_	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
HamGetFreeIndent	autoload/plugged/vim-polyglot/indent/hamster.vim	/^function HamGetFreeIndent()$/;"	f
HamGetIndent	autoload/plugged/vim-polyglot/indent/hamster.vim	/^function HamGetIndent(lnum)$/;"	f
HasBg	autoload/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) HasBg() bool {$/;"	f	struct:tui.ColorPair	typeref:typename:bool
HasFullscreenRenderer	autoload/plugged/fzf/src/tui/dummy.go	/^func HasFullscreenRenderer() bool {$/;"	f	package:tui	typeref:typename:bool
HasFullscreenRenderer	autoload/plugged/fzf/src/tui/tcell.go	/^func HasFullscreenRenderer() bool {$/;"	f	package:tui	typeref:typename:bool
HaxeHiLink	autoload/plugged/vim-polyglot/syntax/haxe.vim	/^  command! -nargs=+ HaxeHiLink hi def link <args>$/;"	c
HaxeHiLink	autoload/plugged/vim-polyglot/syntax/haxe.vim	/^  command! -nargs=+ HaxeHiLink hi link <args>$/;"	c
Hb	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Hc	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Hde	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
He	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
Header	autoload/plugged/fzf/src/options.go	/^	Header      []string$/;"	m	struct:fzf.Options	typeref:typename:[]string
Header	autoload/plugged/fzf/src/tui/tui.go	/^	Header       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
HeaderDecrease	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -range=% HeaderDecrease call s:HeaderDecrease(<line1>, <line2>)$/;"	c
HeaderIncrease	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -range=% HeaderIncrease call s:HeaderDecrease(<line1>, <line2>, 1)$/;"	c
HeaderLines	autoload/plugged/fzf/src/options.go	/^	HeaderLines int$/;"	m	struct:fzf.Options	typeref:typename:int
Height	autoload/plugged/fzf/src/options.go	/^	Height      sizeSpec$/;"	m	struct:fzf.Options	typeref:typename:sizeSpec
Height	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Height() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Height	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Height() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Height	autoload/plugged/fzf/src/tui/tui.go	/^	Height() int$/;"	n	interface:tui.Window	typeref:typename:int
HexToColor	autoload/plugged/fzf/src/tui/tui.go	/^func HexToColor(rrggbb string) Color {$/;"	f	package:tui	typeref:typename:Color
Hf	autoload/plugged/coc.nvim/build/index.js	/^`),a++,u=i,s=14;switch(x){case 123:return i++,s=1;case 125:return i++,s=2;case 91:return i++,s=3/;"	f
Hfe	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
Hhe	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
Hi	autoload/plugged/vim-polyglot/syntax/sdl.vim	/^command -nargs=+ Hi     hi def <args>$/;"	c
Hi	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^command -nargs=+ Hi hi def <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/extras/flow.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/extras/flow.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/carp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/carp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/common.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/cql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/cql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/cryptol.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/cryptol.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>HiLink(name, target) "{{{3$/;"	f
HiLink	autoload/plugged/vim-polyglot/syntax/dot.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/dot.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/fbs.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/fbs.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/fsharp.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/fsharp.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/gnuplot.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/gnuplot.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/haproxy.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/haproxy.vim	/^  command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/jinja2.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/llvm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/llvm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/lua.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/lua.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/mako.vim	/^    com -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/mako.vim	/^    com -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/mlir.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/mlir.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/nim.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/nim.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/octave.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/octave.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/proto.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/proto.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/ps1.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/ps1.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/puppet.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/python.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/python.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/qml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/qml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/racket.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/racket.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/raku.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/raku.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/rhelp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/rhelp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/sexplib.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/sexplib.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/stylus.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/stylus.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/tablegen.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/tablegen.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/textile.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/textile.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/thrift.vim	/^    command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/thrift.vim	/^    command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/tptp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/tptp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/twig.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/twig.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/unison.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/unison.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/vbnet.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/vbnet.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/velocity.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	autoload/plugged/vim-polyglot/syntax/velocity.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
Hide statusline	autoload/plugged/fzf.vim/README.md	/^### Hide statusline$/;"	S	section:fzf :heart: vim""Status line of terminal buffer
Hide statusline	autoload/plugged/fzf/README-VIM.md	/^#### Hide statusline$/;"	t	subsection:FZF Vim integration""Tips""fzf inside terminal buffer
Hie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
History	autoload/plugged/fzf/src/history.go	/^type History struct {$/;"	s	package:fzf
History	autoload/plugged/fzf/src/options.go	/^	History     *History$/;"	m	struct:fzf.Options	typeref:typename:*History
Hj	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	c
Hk	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
Hl	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
Hle	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Hn	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
Hne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ho	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Home	autoload/plugged/fzf/src/tui/tui.go	/^	Home$/;"	c	package:tui
Host names	autoload/plugged/fzf/README.md	/^#### Host names$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
How can I change the default arrows?	autoload/plugged/NERDTree/README.markdown	/^### How can I change the default arrows?$/;"	S	section:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)""Frequently Asked Questions
How can I close Vim automatically when NERDTree is the last window?	autoload/plugged/NERDTree/README.markdown	/^### How can I close Vim automatically when NERDTree is the last window?$/;"	S	section:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)""Frequently Asked Questions
How can I map a specific key or shortcut to open NERDTree?	autoload/plugged/NERDTree/README.markdown	/^### How can I map a specific key or shortcut to open NERDTree?$/;"	S	section:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)""Frequently Asked Questions
How can I prevent other buffers replacing NERDTree in its window?	autoload/plugged/NERDTree/README.markdown	/^### How can I prevent other buffers replacing NERDTree in its window?$/;"	S	section:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)""Frequently Asked Questions
How do I open NERDTree automatically when Vim starts?	autoload/plugged/NERDTree/README.markdown	/^### How do I open NERDTree automatically when Vim starts?$/;"	S	section:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)""Frequently Asked Questions
Hpe	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	v
Hr	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Hre	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Hscroll	autoload/plugged/fzf/src/options.go	/^	Hscroll     bool$/;"	m	struct:fzf.Options	typeref:typename:bool
HscrollOff	autoload/plugged/fzf/src/options.go	/^	HscrollOff  int$/;"	m	struct:fzf.Options	typeref:typename:int
Ht	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	f
Hte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
HtmlHiLink	autoload/plugged/vim-polyglot/syntax/handlebars.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	autoload/plugged/vim-polyglot/syntax/handlebars.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlHiLink	autoload/plugged/vim-polyglot/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	autoload/plugged/vim-polyglot/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlIndent	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent()$/;"	f
HtmlIndent	autoload/plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent()$/;"	f
HtmlIndentClose	autoload/plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentClose(lnum)$/;"	f
HtmlIndentCloseAlt	autoload/plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentOpen	autoload/plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentOpen(lnum)$/;"	f
HtmlIndentOpenAlt	autoload/plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentPush	autoload/plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentPush(tag)$/;"	f
HtmlIndentSum	autoload/plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
HtmlIndent_CheckUserSettings	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent_CheckUserSettings()$/;"	f
HtmlIndent_CheckUserSettings	autoload/plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_CheckUserSettings()$/;"	f
HtmlIndent_CountBraces	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent_CountBraces(lnum)$/;"	f
HtmlIndent_CountBraces	autoload/plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_CountBraces(lnum)$/;"	f
HtmlIndent_FindStartTag	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent_FindStartTag()$/;"	f
HtmlIndent_FindStartTag	autoload/plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_FindStartTag()$/;"	f
HtmlIndent_FindTagEnd	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent_FindTagEnd()$/;"	f
HtmlIndent_FindTagEnd	autoload/plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_FindTagEnd()$/;"	f
HtmlIndent_FindTagStart	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent_FindTagStart(lnum)$/;"	f
HtmlIndent_FindTagStart	autoload/plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_FindTagStart(lnum)$/;"	f
HtmlIndent_IsOpenTag	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent_IsOpenTag(tagname)$/;"	f
HtmlIndent_IsOpenTag	autoload/plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_IsOpenTag(tagname)$/;"	f
I	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
I	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
I	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
I16	autoload/plugged/fzf/src/util/slab.go	/^	I16 []int16$/;"	m	struct:util.Slab	typeref:typename:[]int16
I2	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
I3	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
I32	autoload/plugged/fzf/src/util/slab.go	/^	I32 []int32$/;"	m	struct:util.Slab	typeref:typename:[]int32
IA	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
IB	autoload/plugged/coc.nvim/build/index.js	/^`}function qpe(r){return r.replace(Spe,":")}function IB(r,e=null){if(!r)return[];e=e||Ki;let t=e/;"	f
ID	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	c
II	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
IL	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
IM	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
IN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
IQ	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
IR	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	v
IW	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
IWrite	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! IWrite(str)$/;"	f
IWrite	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IWrite(str)$/;"	f
IX	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
IY	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
Ia	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
Ib	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
IcalHiLink	autoload/plugged/vim-polyglot/syntax/icalendar.vim	/^command! -nargs=+ IcalHiLink hi def link <args>$/;"	c
Ide	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
IdrisAddClause	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisAddClause(proof)$/;"	f
IdrisAddClause	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisAddClause(proof)$/;"	f
IdrisAddMissing	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisAddMissing()$/;"	f
IdrisAddMissing	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisAddMissing()$/;"	f
IdrisCaseSplit	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisCaseSplit()$/;"	f
IdrisCaseSplit	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisCaseSplit()$/;"	f
IdrisDocFold	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisDocFold(lineNum)$/;"	f
IdrisDocFold	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisDocFold(lineNum)$/;"	f
IdrisEval	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisEval()$/;"	f
IdrisEval	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisEval()$/;"	f
IdrisFold	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisFold(lineNum)$/;"	f
IdrisFold	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisFold(lineNum)$/;"	f
IdrisGenerateDef	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisGenerateDef()$/;"	f
IdrisHideResponseWin	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisHideResponseWin()$/;"	f
IdrisHideResponseWin	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisHideResponseWin()$/;"	f
IdrisMakeCase	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisMakeCase()$/;"	f
IdrisMakeCase	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisMakeCase()$/;"	f
IdrisMakeLemma	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisMakeLemma()$/;"	f
IdrisMakeLemma	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisMakeLemma()$/;"	f
IdrisMakeWith	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisMakeWith()$/;"	f
IdrisMakeWith	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisMakeWith()$/;"	f
IdrisProofSearch	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisProofSearch(hint)$/;"	f
IdrisProofSearch	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisProofSearch(hint)$/;"	f
IdrisRefine	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisRefine()$/;"	f
IdrisRefine	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisRefine()$/;"	f
IdrisReload	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisReload(q)$/;"	f
IdrisReload	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisReload(q)$/;"	f
IdrisReloadToLine	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisReloadToLine(cline)$/;"	f
IdrisReloadToLine	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisReloadToLine(cline)$/;"	f
IdrisResponseWin	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisResponseWin()$/;"	f
IdrisResponseWin	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisResponseWin()$/;"	f
IdrisShowDoc	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisShowDoc()$/;"	f
IdrisShowDoc	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisShowDoc()$/;"	f
IdrisShowResponseWin	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisShowResponseWin()$/;"	f
IdrisShowResponseWin	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisShowResponseWin()$/;"	f
IdrisShowType	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisShowType()$/;"	f
IdrisShowType	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisShowType()$/;"	f
Iee	autoload/plugged/coc.nvim/build/index.js	/^`;function AI(r,e){if(On.existsSync(r))return;let t=On.openSync(r,e.flags,e.mode);On.closeSync(t/;"	f
Ife	autoload/plugged/coc.nvim/build/index.js	/^]`).replace("lheading",se.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replac/;"	f
Ih	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ihe	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
Iie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ik	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
Il	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Ile	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Improvements	autoload/plugged/fzf/CHANGELOG.md	/^### Improvements$/;"	S	section:CHANGELOG""0.9.10
Improvements	autoload/plugged/fzf/CHANGELOG.md	/^### Improvements$/;"	S	section:CHANGELOG""0.9.3
Improvements	autoload/plugged/fzf/CHANGELOG.md	/^### Improvements$/;"	S	section:CHANGELOG""0.9.4
Improvements	autoload/plugged/fzf/CHANGELOG.md	/^### Improvements$/;"	S	section:CHANGELOG""0.9.5
In	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
IndentLevel	autoload/plugged/vim-polyglot/ftplugin/cryptol/folding.vim	/^function! IndentLevel(lnum)$/;"	f
Index	autoload/plugged/fzf/src/item.go	/^func (item *Item) Index() int32 {$/;"	f	struct:fzf.Item	typeref:typename:int32
Index	autoload/plugged/fzf/src/result.go	/^func (result *Result) Index() int32 {$/;"	f	struct:fzf.Result	typeref:typename:int32
Index	autoload/plugged/fzf/src/util/chars.go	/^	Index int32$/;"	m	struct:util.Chars	typeref:typename:int32
Ine	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Info	autoload/plugged/fzf/.github/ISSUE_TEMPLATE.md	/^## Info$/;"	s
Info	autoload/plugged/fzf/src/tui/tui.go	/^	Info         ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
InfoStyle	autoload/plugged/fzf/src/options.go	/^	InfoStyle   infoStyle$/;"	m	struct:fzf.Options	typeref:typename:infoStyle
Init	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Init()             {}$/;"	f	unknown:tui.FullscreenRenderer
Init	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Init() {$/;"	f	struct:tui.LightRenderer
Init	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Init() {$/;"	f	unknown:tui.FullscreenRenderer
Init	autoload/plugged/fzf/src/tui/tui.go	/^	Init()$/;"	n	interface:tui.Renderer
InitPureScript	autoload/plugged/vim-polyglot/ftplugin/purescript.vim	/^fun! InitPureScript()$/;"	f
Input	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) Input() (bool, []rune) {$/;"	f	struct:fzf.Terminal	typeref:typename:(bool, []rune)
Input	autoload/plugged/fzf/src/tui/tui.go	/^	Input        ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Insert	autoload/plugged/fzf/src/tui/tui.go	/^	Insert$/;"	c	package:tui
InsertNToc	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -nargs=? InsertNToc call s:InsertToc('numbers', <args>)$/;"	c
InsertToc	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -nargs=? InsertToc call s:InsertToc('bullets', <args>)$/;"	c
Installation	autoload/plugged/NERDTree/README.markdown	/^## Installation$/;"	s	chapter:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)
Installation	autoload/plugged/auto-pairs/README.md	/^Installation$/;"	s	chapter:Auto Pairs
Installation	autoload/plugged/fzf.vim/README.md	/^Installation$/;"	s	chapter:fzf :heart: vim
Installation	autoload/plugged/fzf/README-VIM.md	/^Installation$/;"	s	chapter:FZF Vim integration
Installation	autoload/plugged/fzf/README.md	/^Installation$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Installation	autoload/plugged/gv.vim/README.md	/^Installation$/;"	s	chapter:gv.vim
Installation	autoload/plugged/palenight.vim/README.md	/^## Installation$/;"	s
Installation	autoload/plugged/vim-airline-themes/README.md	/^# Installation$/;"	c
Installation	autoload/plugged/vim-airline/README.md	/^# Installation$/;"	c
Installation	autoload/plugged/vim-fugitive/README.markdown	/^## Installation$/;"	s	chapter:fugitive.vim
Installation	autoload/plugged/vim-polyglot/README.md	/^## Installation$/;"	s
Installation	autoload/plugged/vim-rhubarb/README.markdown	/^## Installation$/;"	s	chapter:rhubarb.vim
Installation	autoload/plugged/vim-signify/README.md	/^## Installation$/;"	s
Int	autoload/plugged/fzf/src/tui/tui.go	/^func (t EventType) Int() int {$/;"	f	type:tui.EventType	typeref:typename:int
Integrating with powerline fonts	autoload/plugged/vim-airline/README.md	/^# Integrating with powerline fonts$/;"	c
Introduction	autoload/plugged/NERDTree/README.markdown	/^## Introduction$/;"	s	chapter:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)
Introduction	autoload/plugged/fzf/ADVANCED.md	/^Introduction$/;"	s	chapter:Advanced fzf examples
Invalid	autoload/plugged/fzf/src/tui/tui.go	/^	Invalid$/;"	c	package:tui
Ipe	autoload/plugged/coc.nvim/build/index.js	/^`+r)}var Ipe="\\\\*",Fpe="\\\\d+\\\\.",PB="(?:"+[Ipe,Fpe].join("|")+")";function Ape(r,e){let t=/;"	v
Iq	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Ire	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
IsBeginBlockByStr	autoload/plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsBeginBlockByStr(str)$/;"	f
IsBytes	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) IsBytes() bool {$/;"	f	struct:util.Chars	typeref:typename:bool
IsDefault	autoload/plugged/fzf/src/tui/tui.go	/^func (c Color) IsDefault() bool {$/;"	f	type:tui.Color	typeref:typename:bool
IsDoubleCoronByStr	autoload/plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsDoubleCoronByStr(str)$/;"	f
IsEmpty	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) IsEmpty() bool {$/;"	f	struct:fzf.Pattern	typeref:typename:bool
IsEndBlockByStr	autoload/plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsEndBlockByStr(str)$/;"	f
IsFull	autoload/plugged/fzf/src/chunklist.go	/^func (c *Chunk) IsFull() bool {$/;"	f	struct:fzf.Chunk	typeref:typename:bool
IsFunctionArgPar	autoload/plugged/vim-polyglot/indent/julia.vim	/^function IsFunctionArgPar(lnum, c)$/;"	f
IsIfStatementByStr	autoload/plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsIfStatementByStr(str)$/;"	f
IsInBrackets	autoload/plugged/vim-polyglot/indent/julia.vim	/^function IsInBrackets(lnum, c)$/;"	f
IsInContinuationImportLine	autoload/plugged/vim-polyglot/indent/julia.vim	/^function IsInContinuationImportLine(lnum)$/;"	f
IsInDocString	autoload/plugged/vim-polyglot/indent/julia.vim	/^function IsInDocString(lnum)$/;"	f
IsInsideOfBlockByNum	autoload/plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsInsideOfBlockByNum(line_num)$/;"	f
IsInsidePythonBlock	autoload/plugged/vim-polyglot/indent/mako.vim	/^function IsInsidePythonBlock(startline)$/;"	f
IsLightRendererSupported	autoload/plugged/fzf/src/tui/light_unix.go	/^func IsLightRendererSupported() bool {$/;"	f	package:tui	typeref:typename:bool
IsLightRendererSupported	autoload/plugged/fzf/src/tui/light_windows.go	/^func IsLightRendererSupported() bool {$/;"	f	package:tui	typeref:typename:bool
IsReturnByStr	autoload/plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsReturnByStr(str)$/;"	f
IsTty	autoload/plugged/fzf/src/util/util.go	/^func IsTty() bool {$/;"	f	package:util	typeref:typename:bool
IsWindows	autoload/plugged/fzf/src/util/util_unix.go	/^func IsWindows() bool {$/;"	f	package:util	typeref:typename:bool
IsWindows	autoload/plugged/fzf/src/util/util_windows.go	/^func IsWindows() bool {$/;"	f	package:util	typeref:typename:bool
Ise	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
It	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
Italic	autoload/plugged/fzf/src/tui/dummy.go	/^	Italic    = Attr(1 << 2)$/;"	c	package:tui
Italic	autoload/plugged/fzf/src/tui/tcell.go	/^	Italic         = Attr(tcell.AttrItalic)$/;"	c	package:tui
Italics	autoload/plugged/palenight.vim/README.md	/^### Italics$/;"	S	section:Usage
Ite	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
Item	autoload/plugged/fzf/src/item.go	/^type Item struct {$/;"	s	package:fzf
ItemBuilder	autoload/plugged/fzf/src/chunklist.go	/^type ItemBuilder func(*Item, []byte) bool$/;"	t	package:fzf	typeref:typename:func(*Item, []byte) bool
Ix	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
Iy	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
J1	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
J1e	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
J3	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
JB	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	v
JD	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
JF	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	v
JI	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
JL	autoload/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){$L!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	v
JN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
JO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
JX	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
Jb	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
Jbe	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
Jde	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
Je	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
Jee	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Jf	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
Ji	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	f
Jj	autoload/plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[s-1]}async withProgress(e,t){return this.checkDialog()?await new e3(this.nvim/;"	v
Jl	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
Jle	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
Jm	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
Jpe	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
Jq	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Jr	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
JsonnetFmt	autoload/plugged/vim-polyglot/ftplugin/jsonnet.vim	/^command! -nargs=0 JsonnetFmt call jsonnet#Format()$/;"	c
Jte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
JuliaBlocks	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^  augroup JuliaBlocks$/;"	a
JuliaDoc	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^command! -nargs=1 -buffer -complete=customlist,julia#doc#complete JuliaDoc call julia#doc#open(</;"	c
JuliaDoc	autoload/plugged/vim-polyglot/ftplugin/juliadoc.vim	/^command! -nargs=1 -buffer -complete=customlist,julia#doc#complete JuliaDoc call julia#doc#open(</;"	c
JuliaDocKeywordprg	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^command! -nargs=1 -buffer JuliaDocKeywordprg call julia#doc#keywordprg(<q-args>)$/;"	c
JuliaDocKeywordprg	autoload/plugged/vim-polyglot/ftplugin/juliadoc.vim	/^command! -nargs=1 -buffer JuliaDocKeywordprg call julia#doc#keywordprg(<q-args>)$/;"	c
JuliaGetMatchWords	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^  function! JuliaGetMatchWords()$/;"	f
JuliaMatch	autoload/plugged/vim-polyglot/indent/julia.vim	/^function JuliaMatch(lnum, str, regex, st, ...)$/;"	f
JumpLabels	autoload/plugged/fzf/src/options.go	/^	JumpLabels  string$/;"	m	struct:fzf.Options	typeref:typename:string
JumpToMatch	autoload/plugged/vim-polyglot/indent/julia.vim	/^function JumpToMatch(lnum, last_closed_bracket)$/;"	f
Jve	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
Jy	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
K	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:fX.e
K	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
K	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>K <Plug>(llvm-goto-definition)$/;"	m
K	autoload/plugged/vim-polyglot/ftplugin/gitrebase.vim	/^nnoremap <buffer> <expr> K col('.') < 7 && expand('<Lt>cword>') =~ '\\X' && getline('.') =~ '^\\/;"	m
K	autoload/plugged/vim-polyglot/ftplugin/racket.vim	/^  nmap <buffer> K <Plug>RacketDoc$/;"	m
K	autoload/plugged/vim-polyglot/ftplugin/racket.vim	/^  vmap <buffer> K <Plug>RacketDoc$/;"	m
K	plug-config/coc.vim	/^nnoremap <silent> K :call <SID>show_documentation()<CR>$/;"	m
K3	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
KA	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
KD	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
KEY/EVENT	autoload/plugged/fzf/man/man1/fzf.1	/^.SH KEY\/EVENT BINDINGS$/;"	s	title:fzf
KF	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
KG	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
KW	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
KX	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
Kb	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	v
Kbe	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
Kc	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Kd	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
Kee	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
KeepRight	autoload/plugged/fzf/src/options.go	/^	KeepRight   bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Key	autoload/plugged/fzf/src/tui/tui.go	/^func Key(r rune) Event {$/;"	f	package:tui	typeref:typename:Event
Key bindings for command-line	autoload/plugged/fzf/README.md	/^Key bindings for command-line$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Key bindings for git objects	autoload/plugged/fzf/ADVANCED.md	/^Key bindings for git objects$/;"	s	chapter:Advanced fzf examples
Keymap	autoload/plugged/fzf/src/options.go	/^	Keymap      map[tui.Event][]action$/;"	m	struct:fzf.Options	typeref:typename:map[tui.Event][]action
Kf	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
Kfe	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
Ki	autoload/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let o=n.replace(Dpe,"").split(DB);i.push(o.spl/;"	f
KillCommand	autoload/plugged/fzf/src/util/util_unix.go	/^func KillCommand(cmd *exec.Cmd) error {$/;"	f	package:util	typeref:typename:error
KillCommand	autoload/plugged/fzf/src/util/util_windows.go	/^func KillCommand(cmd *exec.Cmd) error {$/;"	f	package:util	typeref:typename:error
Kj	autoload/plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[s-1]}async withProgress(e,t){return this.checkDialog()?await new e3(this.nvim/;"	f
Km	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
Kn	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
Kne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Known Issues	autoload/plugged/auto-pairs/README.md	/^Known Issues$/;"	s	chapter:Auto Pairs
Kpe	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
Kr	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Kre	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ks	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Kte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
Kve	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
Kx	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
L	autoload/plug.vim	/^    nnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	autoload/plug.vim	/^    xnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	c	class:r.u
L	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
L	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
L	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f	function:$D
L$	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
L1	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
L2UAutoSub	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  augroup L2UAutoSub$/;"	a
L2UCompleteDone	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  augroup L2UCompleteDone$/;"	a
L2UInit	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^    augroup L2UInit$/;"	a
L2UInsertLeave	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^    augroup L2UInsertLeave$/;"	a
L2UInsertLeave	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  augroup L2UInsertLeave$/;"	a
L8	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
LA	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
LAYOUT	autoload/plugged/fzf/man/man1/fzf-tmux.1	/^.SH LAYOUT OPTIONS$/;"	s	title:fzf-tmux
LB	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	c
LD	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
LF	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
LG	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
LI	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
LICENSE	autoload/plugged/fzf/man/man1/fzf.1	/^.SH LICENSE$/;"	s	title:fzf
LLI	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    command! -buffer -nargs=? -bar -complete=file LLI call <SID>run_lli(<f-args>)$/;"	c
LO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
LQ	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
LR	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	v
LV	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
LW	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
LYRICS	autoload/plugged/vim-polyglot/scripts/build	/^LYRICS = "Never gonna give you up.  Never gonna let you down.  " +$/;"	C	method:copy_file
La	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
LaTeXtoUnicode#AutoSub	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#AutoSub(...)$/;"	f
LaTeXtoUnicode#CmdTab	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#CmdTab(trigger)$/;"	f
LaTeXtoUnicode#Disable	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Disable(...)$/;"	f
LaTeXtoUnicode#Enable	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Enable(...)$/;"	f
LaTeXtoUnicode#FallbackCallback	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#FallbackCallback()$/;"	f
LaTeXtoUnicode#Init	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Init(...)$/;"	f
LaTeXtoUnicode#PutLiteral	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#PutLiteral(k)$/;"	f
LaTeXtoUnicode#PutLiteralCR	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#PutLiteralCR()$/;"	f
LaTeXtoUnicode#Refresh	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Refresh()$/;"	f
LaTeXtoUnicode#Tab	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Tab()$/;"	f
LaTeXtoUnicode#Toggle	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Toggle()$/;"	f
LaTeXtoUnicode#completefunc	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#completefunc(findstart, base)$/;"	f
Language packs	autoload/plugged/vim-polyglot/README.md	/^## Language packs$/;"	s
LastBlockIndent	autoload/plugged/vim-polyglot/indent/julia.vim	/^function LastBlockIndent(lnum)$/;"	f
Layout	autoload/plugged/fzf/README.md	/^#### Layout$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Layout	autoload/plugged/fzf/src/options.go	/^	Layout      layoutType$/;"	m	struct:fzf.Options	typeref:typename:layoutType
Lb	autoload/plugged/coc.nvim/build/index.js	/^`;function AI(r,e){if(On.existsSync(r))return;let t=On.openSync(r,e.flags,e.mode);On.closeSync(t/;"	v
Ld	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
Lde	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
LeadingWhitespaces	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) LeadingWhitespaces() int {$/;"	f	struct:util.Chars	typeref:typename:int
Lee	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Left	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Left() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Left	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Left() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Left	autoload/plugged/fzf/src/tui/tui.go	/^	Left   bool$/;"	m	struct:tui.MouseEvent	typeref:typename:bool
Left	autoload/plugged/fzf/src/tui/tui.go	/^	Left$/;"	c	package:tui
Left	autoload/plugged/fzf/src/tui/tui.go	/^	Left() int$/;"	n	interface:tui.Window	typeref:typename:int
LeftClick	autoload/plugged/fzf/src/tui/tui.go	/^	LeftClick$/;"	c	package:tui
Len	autoload/plugged/fzf/src/result.go	/^func (a ByOrder) Len() int {$/;"	f	type:fzf.ByOrder	typeref:typename:int
Len	autoload/plugged/fzf/src/result.go	/^func (a ByRelevance) Len() int {$/;"	f	type:fzf.ByRelevance	typeref:typename:int
Len	autoload/plugged/fzf/src/result.go	/^func (a ByRelevanceTac) Len() int {$/;"	f	type:fzf.ByRelevanceTac	typeref:typename:int
Len	autoload/plugged/fzf/src/terminal.go	/^func (a byTimeOrder) Len() int {$/;"	f	type:fzf.byTimeOrder	typeref:typename:int
Length	autoload/plugged/fzf/src/merger.go	/^func (mg *Merger) Length() int {$/;"	f	struct:fzf.Merger	typeref:typename:int
Length	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) Length() int {$/;"	f	struct:util.Chars	typeref:typename:int
Less	autoload/plugged/fzf/src/result.go	/^func (a ByOrder) Less(i, j int) bool {$/;"	f	type:fzf.ByOrder	typeref:typename:bool
Less	autoload/plugged/fzf/src/result.go	/^func (a ByRelevance) Less(i, j int) bool {$/;"	f	type:fzf.ByRelevance	typeref:typename:bool
Less	autoload/plugged/fzf/src/result.go	/^func (a ByRelevanceTac) Less(i, j int) bool {$/;"	f	type:fzf.ByRelevanceTac	typeref:typename:bool
Less	autoload/plugged/fzf/src/terminal.go	/^func (a byTimeOrder) Less(i, j int) bool {$/;"	f	type:fzf.byTimeOrder	typeref:typename:bool
Li	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
License	autoload/plugged/auto-pairs/README.md	/^License$/;"	s	chapter:Auto Pairs
License	autoload/plugged/coc.nvim/Readme.md	/^## License$/;"	s
License	autoload/plugged/fzf.vim/README.md	/^License$/;"	s	chapter:fzf :heart: vim
License	autoload/plugged/fzf/BUILD.md	/^License$/;"	s	chapter:Building fzf
License	autoload/plugged/vim-airline-themes/README.md	/^# License$/;"	c
License	autoload/plugged/vim-airline/README.md	/^# License$/;"	c
License	autoload/plugged/vim-fugitive/README.markdown	/^## License$/;"	s	chapter:fugitive.vim
License	autoload/plugged/vim-polyglot/README.md	/^## License$/;"	s
License	autoload/plugged/vim-rhubarb/README.markdown	/^## License$/;"	s	chapter:rhubarb.vim
License	~./config/nvim/plugged/gruvbox/README.md	/^License$/;"	s
Light mode	~./config/nvim/plugged/gruvbox/README.md	/^### Light mode$/;"	S	section:Palette
Light mode	~./config/nvim/plugged/gruvbox/README.md	/^### Light mode$/;"	S	section:Screenshots
Light256	autoload/plugged/fzf/src/tui/tui.go	/^	Light256  *ColorTheme$/;"	v	package:tui	typeref:typename:*ColorTheme
LightRenderer	autoload/plugged/fzf/src/tui/light.go	/^type LightRenderer struct {$/;"	s	package:tui
LightWindow	autoload/plugged/fzf/src/tui/light.go	/^type LightWindow struct {$/;"	s	package:tui
LiveScriptCompile	autoload/plugged/vim-polyglot/ftplugin/ls.vim	/^\\        LiveScriptCompile call s:LiveScriptCompile(<line1>, <line2>, <q-args>)$/;"	c
LiveScriptCompileAuWatch	autoload/plugged/vim-polyglot/ftplugin/ls.vim	/^    augroup LiveScriptCompileAuWatch$/;"	a
LiveScriptMake	autoload/plugged/vim-polyglot/compiler/ls.vim	/^command! -bang -bar -nargs=* LiveScriptMake make<bang> <args>$/;"	c
LiveScriptRun	autoload/plugged/vim-polyglot/ftplugin/ls.vim	/^command! -range=% -bar LiveScriptRun <line1>,<line2>:w !lsc -sp$/;"	c
LiveScriptUpdateMakePrg	autoload/plugged/vim-polyglot/compiler/ls.vim	/^augroup LiveScriptUpdateMakePrg$/;"	a
Lj	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
Lk	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	v
Lle	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
Lm	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	f
Lne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
LoadBufferMenu	autoload/plugged/vim-polyglot/extras/menu.vim	/^  augroup LoadBufferMenu$/;"	a
Log	autoload/plugged/vim-rooter/test/runner.vim	/^function Log(msg)$/;"	f
Log tailing	autoload/plugged/fzf/ADVANCED.md	/^Log tailing$/;"	s	chapter:Advanced fzf examples
Lookup	autoload/plugged/fzf/src/cache.go	/^func (cc *ChunkCache) Lookup(chunk *Chunk, key string) []Result {$/;"	f	struct:fzf.ChunkCache	typeref:typename:[]Result
Loop	autoload/plugged/fzf/src/matcher.go	/^func (m *Matcher) Loop() {$/;"	f	struct:fzf.Matcher
Loop	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) Loop() {$/;"	f	struct:fzf.Terminal
Lpe	autoload/plugged/coc.nvim/build/index.js	/^`+e+"$2$3")}var TB=function(r,e){return r.match("^(?:"+e+")*"+PB)};function RB(r){return" ".repe/;"	f
Lq	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Lt	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	c
Lte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
Lve	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	f
Lx	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	f
M	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:fX.e
M	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -count=1 M :let s:eregex_tmp_hlsearch = &hlsearch | let v:searchforward = <SID/;"	c
MAKEFILE	autoload/plugged/fzf/Makefile	/^MAKEFILE       := $(realpath $(lastword $(MAKEFILE_LIST)))$/;"	m
MB	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	c
MD	autoload/plugged/coc.nvim/build/index.js	/^`),a++,u=i,s=14;switch(x){case 123:return i++,s=1;case 125:return i++,s=2;case 91:return i++,s=3/;"	f
MF	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
MN	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
MO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
MP	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	v
MQ	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
MS	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
MU	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	v
MW	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
MX	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
Maintainers	autoload/plugged/vim-airline/README.md	/^# Maintainers$/;"	c
Maintenance	autoload/plugged/vim-airline-themes/README.md	/^# Maintenance$/;"	c
Maintenance	autoload/plugged/vim-airline/CONTRIBUTING.md	/^# Maintenance$/;"	c
MakeBorderStyle	autoload/plugged/fzf/src/tui/tui.go	/^func MakeBorderStyle(shape BorderShape, unicode bool) BorderStyle {$/;"	f	package:tui	typeref:typename:BorderStyle
MakeMenu	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>MakeMenu()$/;"	f
MakeSlab	autoload/plugged/fzf/src/util/slab.go	/^func MakeSlab(size16 int, size32 int) *Slab {$/;"	f	package:util	typeref:typename:*Slab
MakeTransparentBorder	autoload/plugged/fzf/src/tui/tui.go	/^func MakeTransparentBorder() BorderStyle {$/;"	f	package:tui	typeref:typename:BorderStyle
MakoIndentClose	autoload/plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentClose(lnum)$/;"	f
MakoIndentOpen	autoload/plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentOpen(lnum)$/;"	f
MakoIndentPush	autoload/plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentPush(tag)$/;"	f
Mappings	autoload/plugged/fzf.vim/README.md	/^Mappings$/;"	s	chapter:fzf :heart: vim
Mappings	autoload/plugged/gv.vim/README.md	/^### Mappings$/;"	S	section:gv.vim""Usage
Margin	autoload/plugged/fzf/src/options.go	/^	Margin      [4]sizeSpec$/;"	m	struct:fzf.Options	typeref:typename:[4]sizeSpec
Marker	autoload/plugged/fzf/src/options.go	/^	Marker      string$/;"	m	struct:fzf.Options	typeref:typename:string
Match	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) Match(chunk *Chunk, slab *util.Slab) []Result {$/;"	f	struct:fzf.Pattern	typeref:typename:[]Result
Match	autoload/plugged/fzf/src/tui/tui.go	/^	Match        ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
MatchCount	autoload/plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MatchCount(expr, pat)$/;"	f
MatchItem	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) MatchItem(item *Item, withPos bool, slab *util.Slab) (*Result, []Offset, *[]in/;"	f	struct:fzf.Pattern	typeref:typename:(*Result, []Offset, *[]int)
MatchRequest	autoload/plugged/fzf/src/matcher.go	/^type MatchRequest struct {$/;"	s	package:fzf
Matcher	autoload/plugged/fzf/src/matcher.go	/^type Matcher struct {$/;"	s	package:fzf
Max	autoload/plugged/fzf/src/util/util.go	/^func Max(first int, second int) int {$/;"	f	package:util	typeref:typename:int
Max16	autoload/plugged/fzf/src/util/util.go	/^func Max16(first int16, second int16) int16 {$/;"	f	package:util	typeref:typename:int16
Max32	autoload/plugged/fzf/src/util/util.go	/^func Max32(first int32, second int32) int32 {$/;"	f	package:util	typeref:typename:int32
MaxX	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) MaxX() int      { return 0 }$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:int
MaxX	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) MaxX() int {$/;"	f	struct:tui.LightRenderer	typeref:typename:int
MaxX	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) MaxX() int {$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:int
MaxX	autoload/plugged/fzf/src/tui/tui.go	/^	MaxX() int$/;"	n	interface:tui.Renderer	typeref:typename:int
MaxY	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) MaxY() int      { return 0 }$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:int
MaxY	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) MaxY() int {$/;"	f	struct:tui.LightRenderer	typeref:typename:int
MaxY	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) MaxY() int {$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:int
MaxY	autoload/plugged/fzf/src/tui/tui.go	/^	MaxY() int$/;"	n	interface:tui.Renderer	typeref:typename:int
Mb	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
Mde	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
Mee	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
MenuExplOpen	autoload/plugged/vim-polyglot/extras/menu.vim	/^  fun MenuExplOpen()$/;"	f
Merge	autoload/plugged/fzf/src/tui/dummy.go	/^func (a Attr) Merge(b Attr) Attr {$/;"	f	type:tui.Attr	typeref:typename:Attr
Merge	autoload/plugged/fzf/src/tui/tcell.go	/^func (a Attr) Merge(b Attr) Attr {$/;"	f	type:tui.Attr	typeref:typename:Attr
Merge	autoload/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) Merge(other ColorPair) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
MergeAttr	autoload/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) MergeAttr(other ColorPair) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
MergeNonDefault	autoload/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) MergeNonDefault(other ColorPair) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
Merger	autoload/plugged/fzf/src/merger.go	/^type Merger struct {$/;"	s	package:fzf
Mf	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	f
Min	autoload/plugged/fzf/src/util/util.go	/^func Min(first int, second int) int {$/;"	f	package:util	typeref:typename:int
Min32	autoload/plugged/fzf/src/util/util.go	/^func Min32(first int32, second int32) int32 {$/;"	f	package:util	typeref:typename:int32
MinHeight	autoload/plugged/fzf/src/options.go	/^	MinHeight   int$/;"	m	struct:fzf.Options	typeref:typename:int
Minor improvements/fixes	autoload/plugged/fzf/CHANGELOG.md	/^### Minor improvements\/fixes$/;"	S	section:CHANGELOG""0.10.0
Minor improvements/fixes	autoload/plugged/fzf/CHANGELOG.md	/^### Minor improvements\/fixes$/;"	S	section:CHANGELOG""0.10.1
Mj	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	v
Mkd	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^augroup Mkd$/;"	a
Mle	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
Mm	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	f
Mo	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	f
Mod	autoload/plugged/fzf/src/tui/tui.go	/^	Mod    bool$/;"	m	struct:tui.MouseEvent	typeref:typename:bool
Modifications to existing themes	autoload/plugged/vim-airline-themes/README.md	/^## Modifications to existing themes$/;"	s	chapter:Contribution Guidelines
Mouse	autoload/plugged/fzf/src/options.go	/^	Mouse       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Mouse	autoload/plugged/fzf/src/tui/tui.go	/^	Mouse$/;"	c	package:tui
MouseEvent	autoload/plugged/fzf/src/tui/tui.go	/^	MouseEvent *MouseEvent$/;"	m	struct:tui.Event	typeref:typename:*MouseEvent
MouseEvent	autoload/plugged/fzf/src/tui/tui.go	/^type MouseEvent struct {$/;"	s	package:tui
Move	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Move(y int, x int) {$/;"	f	struct:tui.LightWindow
Move	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Move(y int, x int) {$/;"	f	struct:tui.TcellWindow
Move	autoload/plugged/fzf/src/tui/tui.go	/^	Move(y int, x int)$/;"	n	interface:tui.Window
MoveAndClear	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) MoveAndClear(y int, x int) {$/;"	f	struct:tui.LightWindow
MoveAndClear	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) MoveAndClear(y int, x int) {$/;"	f	struct:tui.TcellWindow
MoveAndClear	autoload/plugged/fzf/src/tui/tui.go	/^	MoveAndClear(y int, x int)$/;"	n	interface:tui.Window
Mpe	autoload/plugged/coc.nvim/build/index.js	/^`)}var kB=function(r){return r+". "};function Mpe(r,e,t){return TB(e,r)?{num:t+1,line:e.replace(/;"	f
Mre	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ms	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Mse	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Mt	autoload/plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[s-1]}async withProgress(e,t){return this.checkDialog()?await new e3(this.nvim/;"	v
Mte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
Multi	autoload/plugged/fzf/src/options.go	/^	Multi       int$/;"	m	struct:fzf.Options	typeref:typename:int
Multibyte Pairs	autoload/plugged/auto-pairs/README.md	/^Multibyte Pairs$/;"	s	chapter:Auto Pairs
Mx	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	f
MyAppend1	autoload/plugged/vim-airline/t/airline.vim	/^function! MyAppend1(...)$/;"	f
MyAppend2	autoload/plugged/vim-airline/t/airline.vim	/^function! MyAppend2(...)$/;"	f
MyFuncref	autoload/plugged/vim-airline/t/airline.vim	/^function! MyFuncref(...)$/;"	f
MyIgnoreFuncref	autoload/plugged/vim-airline/t/airline.vim	/^function! MyIgnoreFuncref(...)$/;"	f
N$	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
N1	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
N2	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
N7	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
NAME	autoload/plugged/fzf/man/man1/fzf-tmux.1	/^.SH NAME$/;"	s	title:fzf-tmux
NAME	autoload/plugged/fzf/man/man1/fzf.1	/^.SH NAME$/;"	s	title:fzf
NB	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	v
ND	autoload/plugged/coc.nvim/build/index.js	/^`),a++,u=i,s=14;switch(x){case 123:return i++,s=1;case 125:return i++,s=2;case 91:return i++,s=3/;"	f
NERDTree	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=dir -bar NERDTree :call g:NERDTreeCreator.CreateTabTree('<args>')$/;"	c
NERDTree	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree Change Log	autoload/plugged/NERDTree/CHANGELOG.md	/^# NERDTree Change Log$/;"	c
NERDTree Plugins	autoload/plugged/NERDTree/README.markdown	/^## NERDTree Plugins$/;"	s	chapter:The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)
NERDTreeAddKeyMap	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeCWD call NERDTreeCWD()$/;"	c
NERDTreeCWD	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeChDirOnTabSwitch	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^    augroup NERDTreeChDirOnTabSwitch$/;"	a
NERDTreeClose	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeClose :call g:NERDTree.Close()$/;"	c
NERDTreeCopyNode	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeCopyPath	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyPath()$/;"	f
NERDTreeDeleteNode	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	autoload/plugged/NERDTree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	autoload/plugged/NERDTree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeExecuteFileLinux	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileLinux()$/;"	f
NERDTreeExecuteFileWindows	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileWindows()$/;"	f
NERDTreeFind	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=file -bar NERDTreeFind call s:findAndRevealPath('<args>')$/;"	c
NERDTreeFocus	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeFocus call NERDTreeFocus()$/;"	c
NERDTreeFocus	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeFromBookmark	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^    command! -n=1 -complete=customlist,nerdtree#completeBookmarks -bar NERDTreeFromBookmark call/;"	c
NERDTreeHijackNetrw	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeListNode	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNode()$/;"	f
NERDTreeListNodeWin32	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f
NERDTreeMirror	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeMirror call g:NERDTreeCreator.CreateMirror()$/;"	c
NERDTreeMoveNode	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRefreshRoot	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeRefreshRoot call s:refreshRoot()$/;"	c
NERDTreeRender	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealFileLinux	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealFileLinux()$/;"	f
NERDTreeRevealInFinder	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeSystemCommand	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeSystemCommand()$/;"	f
NERDTreeToggle	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=dir -bar NERDTreeToggle :call g:NERDTreeCreator.ToggleTabTree('<args/;"	c
NERDTreeToggleVCS	autoload/plugged/NERDTree/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeToggleVCS :call <SID>ToggleTabTreeVCS('<args>')$/;"	c
NERDTreeVCS	autoload/plugged/NERDTree/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeVCS :call <SID>CreateTabTreeVCS('<args>')$/;"	c
NF	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
NK	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
NN	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
NO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
NQ	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
NR	autoload/plugged/coc.nvim/build/index.js	/^`)}}function vX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
NT	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
NY	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
Nd	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	v
Nde	autoload/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:s}}function oj(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	f
Ne	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	f
New Version Info	autoload/plugged/NERDTree/.github/PULL_REQUEST_TEMPLATE.md	/^### New Version Info$/;"	S
New features	autoload/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.10.0
New features	autoload/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.10.1
New features	autoload/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.10
New features	autoload/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.11
New features	autoload/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.12
New features	autoload/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.13
New features	autoload/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.3
New features	autoload/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.4
New features	autoload/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.5
New features	autoload/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.6
New features	autoload/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.7
New features	autoload/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.9
New themes	autoload/plugged/vim-airline-themes/README.md	/^## New themes$/;"	s	chapter:Contribution Guidelines
NewAtomicBool	autoload/plugged/fzf/src/util/atomicbool.go	/^func NewAtomicBool(initialState bool) *AtomicBool {$/;"	f	package:util	typeref:typename:*AtomicBool
NewChunkCache	autoload/plugged/fzf/src/cache.go	/^func NewChunkCache() ChunkCache {$/;"	f	package:fzf	typeref:typename:ChunkCache
NewChunkList	autoload/plugged/fzf/src/chunklist.go	/^func NewChunkList(trans ItemBuilder) *ChunkList {$/;"	f	package:fzf	typeref:typename:*ChunkList
NewColorAttr	autoload/plugged/fzf/src/tui/tui.go	/^func NewColorAttr() ColorAttr {$/;"	f	package:tui	typeref:typename:ColorAttr
NewColorPair	autoload/plugged/fzf/src/tui/tui.go	/^func NewColorPair(fg Color, bg Color, attr Attr) ColorPair {$/;"	f	package:tui	typeref:typename:ColorPair
NewEventBox	autoload/plugged/fzf/src/util/eventbox.go	/^func NewEventBox() *EventBox {$/;"	f	package:util	typeref:typename:*EventBox
NewFullscreenRenderer	autoload/plugged/fzf/src/tui/tui.go	/^func NewFullscreenRenderer(theme *ColorTheme, forceBlack bool, mouse bool) Renderer {$/;"	f	package:tui	typeref:typename:Renderer
NewHistory	autoload/plugged/fzf/src/history.go	/^func NewHistory(path string, maxSize int) (*History, error) {$/;"	f	package:fzf	typeref:typename:(*History, error)
NewLightRenderer	autoload/plugged/fzf/src/tui/light.go	/^func NewLightRenderer(theme *ColorTheme, forceBlack bool, mouse bool, tabstop int, clearOnExit b/;"	f	package:tui	typeref:typename:Renderer
NewMatcher	autoload/plugged/fzf/src/matcher.go	/^func NewMatcher(patternBuilder func([]rune) *Pattern,$/;"	f	package:fzf	typeref:typename:*Matcher
NewMerger	autoload/plugged/fzf/src/merger.go	/^func NewMerger(pattern *Pattern, lists [][]Result, sorted bool, tac bool) *Merger {$/;"	f	package:fzf	typeref:typename:*Merger
NewReader	autoload/plugged/fzf/src/reader.go	/^func NewReader(pusher func([]byte) bool, eventBox *util.EventBox, delimNil bool, wait bool) *Rea/;"	f	package:fzf	typeref:typename:*Reader
NewTerminal	autoload/plugged/fzf/src/terminal.go	/^func NewTerminal(opts *Options, eventBox *util.EventBox) *Terminal {$/;"	f	package:fzf	typeref:typename:*Terminal
NewTest_filetype_detection	autoload/plugged/vim-polyglot/tests/native.vim	/^func NewTest_filetype_detection()$/;"	f
NewVersion	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function NewVersion()$/;"	f
NewWindow	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) NewWindow(top int, left int, width int, height int, preview bool, b/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:Window
NewWindow	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) NewWindow(top int, left int, width int, height int, preview bool, border/;"	f	struct:tui.LightRenderer	typeref:typename:Window
NewWindow	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) NewWindow(top int, left int, width int, height int, preview bool, b/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:Window
NewWindow	autoload/plugged/fzf/src/tui/tui.go	/^	NewWindow(top int, left int, width int, height int, preview bool, borderStyle BorderStyle) Wind/;"	n	interface:tui.Renderer	typeref:typename:Window
NextNonBlankLine	autoload/plugged/vim-polyglot/ftplugin/cryptol/folding.vim	/^function! NextNonBlankLine(lnum)$/;"	f
Nf	autoload/plugged/coc.nvim/build/index.js	/^`);return i.reduce(function(n,o){var s=vpe(o);return s>n?s:n},0)}});var cB=v((BTe,uB)=>{uB.expor/;"	c
NimAsyncCmdComplete	autoload/plugged/vim-polyglot/autoload/nim.vim	/^fun! NimAsyncCmdComplete(cmd, output) abort$/;"	f
NimComplete	autoload/plugged/vim-polyglot/autoload/nim.vim	/^fun! NimComplete(findstart, base) abort$/;"	f
NimExec	autoload/plugged/vim-polyglot/autoload/nim.vim	/^fun! NimExec(op) abort$/;"	f
NimExecAsync	autoload/plugged/vim-polyglot/autoload/nim.vim	/^fun! NimExecAsync(op, Handler) abort$/;"	f
NimLog	autoload/plugged/vim-polyglot/autoload/nim.vim	/^command! NimLog :e log:\/\/nim$/;"	c
NimRestartService	autoload/plugged/vim-polyglot/autoload/nim.vim	/^command! NimRestartService$/;"	c
NimTerminateService	autoload/plugged/vim-polyglot/autoload/nim.vim	/^command! NimTerminateService$/;"	c
NimVim	autoload/plugged/vim-polyglot/autoload/nim.vim	/^augroup NimVim$/;"	a
Nj	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
Nl	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	f
Nle	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
Nm	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	f
Nn	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Nne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
No ftdetect	autoload/plugged/vim-polyglot/README.md	/^## No ftdetect$/;"	s
NoColorTheme	autoload/plugged/fzf/src/tui/tui.go	/^func NoColorTheme() *ColorTheme {$/;"	f	package:tui	typeref:typename:*ColorTheme
None	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f	function:r
Normalize	autoload/plugged/fzf/src/options.go	/^	Normalize   bool$/;"	m	struct:fzf.Options	typeref:typename:bool
NormalizeRunes	autoload/plugged/fzf/src/algo/normalize.go	/^func NormalizeRunes(runes []rune) []rune {$/;"	f	package:algo	typeref:typename:[]rune
Npe	autoload/plugged/coc.nvim/build/index.js	/^`)}var kB=function(r){return r+". "};function Mpe(r,e,t){return TB(e,r)?{num:t+1,line:e.replace(/;"	f
Nre	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ns	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Nse	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Nte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
Nth	autoload/plugged/fzf/src/options.go	/^	Nth         []Range$/;"	m	struct:fzf.Options	typeref:typename:[]Range
Nx	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
Ny	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
O	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f	function:cb
O	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
O	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
O	autoload/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <buffer> O :call <sid>gld()<cr>$/;"	m
O	autoload/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> O    :call <sid>open(0, 1)<cr>$/;"	m
O	autoload/plugged/gv.vim/plugin/gv.vim	/^  xnoremap <silent> <buffer> O    :<c-u>call <sid>open(1, 1)<cr>$/;"	m
O3	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	v
OB	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	c
OCaml_switch	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  fun OCaml_switch(newwin)$/;"	f
OD	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
OF	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
OMLetFoldLevel	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^function OMLetFoldLevel(l)$/;"	f
ON	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
OO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
OPTIONS	autoload/plugged/fzf/man/man1/fzf.1	/^.SH OPTIONS$/;"	s	title:fzf
OR	plug-config/coc.vim	/^command! -nargs=0 OR   :call     CocAction('runCommand', 'editor.action.organizeImport')$/;"	c
OU	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	v
OW	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
OY	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
Oa	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ocaml_get_type	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^      function Ocaml_get_type(mode)$/;"	f
Ocaml_get_type_or_not	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^      function Ocaml_get_type_or_not(mode)$/;"	f
Ocaml_print_type	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^      function Ocaml_print_type(mode)$/;"	f
Ocpgrep	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^command! -bar -bang -complete=file -nargs=+ Ocpgrep exe s:OcpGrep(<q-bang>, <q-args>)$/;"	c
Ode	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
Oe	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	v
Oee	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Offset	autoload/plugged/fzf/src/result.go	/^type Offset [2]int32$/;"	t	package:fzf	typeref:typename:[2]int32
Oi	autoload/plugged/coc.nvim/build/index.js	/^`),x.log(`Received notification '${T.method}'.`,j)}else Xt("receive-notification",T)}function Oi/;"	f
Ok	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
Ole	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
Once	autoload/plugged/fzf/src/util/util.go	/^func Once(nextResponse bool) func() bool {$/;"	f	package:util	typeref:typename:func() bool
One	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ope	autoload/plugged/coc.nvim/build/index.js	/^`+e+"$2$3")}var TB=function(r,e){return r.match("^(?:"+e+")*"+PB)};function RB(r){return" ".repe/;"	f
OpenBookmark	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=1 OpenBookmark call /;"	c
Options	autoload/plugged/auto-pairs/README.md	/^Options$/;"	s	chapter:Auto Pairs
Options	autoload/plugged/fzf/README.md	/^#### Options$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Options	autoload/plugged/fzf/src/options.go	/^type Options struct {$/;"	s	package:fzf
Ot	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
Ote	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
Overriding Colors	autoload/plugged/palenight.vim/README.md	/^### Overriding Colors$/;"	S	section:Usage
Ow	autoload/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){$L!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	v
Ox	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
P	autoload/plugged/coc.nvim/build/index.js	/^`),a++,u=i,s=14;switch(x){case 123:return i++,s=1;case 125:return i++,s=2;case 91:return i++,s=3/;"	v
P	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
P	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
P	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f	function:$D
P$	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
P0	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	c
P1	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
P2	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
P3	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
PB	autoload/plugged/coc.nvim/build/index.js	/^`+r)}var Ipe="\\\\*",Fpe="\\\\d+\\\\.",PB="(?:"+[Ipe,Fpe].join("|")+")";function Ape(r,e){let t=/;"	v
PD	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
PF	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
PJ	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
PO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
PS1	autoload/plugged/fzf/test/test_go.rb	/^PS1= PROMPT_COMMAND= HISTFILE= HISTSIZE=100$/;"	C
PU	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
PV	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
PY	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
PZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
Padding	autoload/plugged/fzf/src/options.go	/^	Padding     [4]sizeSpec$/;"	m	struct:fzf.Options	typeref:typename:[4]sizeSpec
Palette	~./config/nvim/plugged/gruvbox/README.md	/^Palette$/;"	s
ParseOptions	autoload/plugged/fzf/src/options.go	/^func ParseOptions() *Options {$/;"	f	package:fzf	typeref:typename:*Options
ParseRange	autoload/plugged/fzf/src/tokenizer.go	/^func ParseRange(str *string) (Range, bool) {$/;"	f	package:fzf	typeref:typename:(Range, bool)
PassMerger	autoload/plugged/fzf/src/merger.go	/^func PassMerger(chunks *[]*Chunk, tac bool) *Merger {$/;"	f	package:fzf	typeref:typename:*Merger
Pattern	autoload/plugged/fzf/src/pattern.go	/^type Pattern struct {$/;"	s	package:fzf
Pause	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Pause(bool)        {}$/;"	f	unknown:tui.FullscreenRenderer
Pause	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Pause(clear bool) {$/;"	f	struct:tui.LightRenderer
Pause	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Pause(clear bool) {$/;"	f	unknown:tui.FullscreenRenderer
Pause	autoload/plugged/fzf/src/tui/tui.go	/^	Pause(clear bool)$/;"	n	interface:tui.Renderer
Pb	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
Pc	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
Pde	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
Pe	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
Peek	autoload/plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Peek(event EventType) bool {$/;"	f	struct:util.EventBox	typeref:typename:bool
Performance	autoload/plugged/fzf/README.md	/^### Performance$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics
Performance	autoload/plugged/vim-airline/README.md	/^# Performance$/;"	c
Pg	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	v
PgDn	autoload/plugged/fzf/src/tui/tui.go	/^	PgDn$/;"	c	package:tui
PgUp	autoload/plugged/fzf/src/tui/tui.go	/^	PgUp$/;"	c	package:tui
Phe	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
Phony	autoload/plugged/fzf/src/options.go	/^	Phony       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Pick	autoload/plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Pick   :<line1>,<line2>call s:choose('pick')$/;"	c
Pl	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
Plug	autoload/plug.vim	/^  command! -nargs=+ -bar Plug call plug#(<args>)$/;"	c
PlugClean	autoload/plug.vim	/^  command! -nargs=0 -bar -bang PlugClean call s:clean(<bang>0)$/;"	c
PlugDiff	autoload/plug.vim	/^  command! -nargs=0 -bar PlugDiff    call s:diff()$/;"	c
PlugInstall	autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugInstall call s:install(<bang>0, /;"	c
PlugLOD	autoload/plug.vim	/^    augroup PlugLOD$/;"	a
PlugSnapshot	autoload/plug.vim	/^  command! -nargs=? -bar -bang -complete=file PlugSnapshot call s:snapshot(<bang>0, <f-args>)$/;"	c
PlugStatus	autoload/plug.vim	/^  command! -nargs=0 -bar PlugStatus  call s:status()$/;"	c
PlugUpdate	autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugUpdate  call s:update(<bang>0, [/;"	c
PlugUpgrade	autoload/plug.vim	/^  command! -nargs=0 -bar PlugUpgrade if s:upgrade() | execute 'source' s:esc(s:me) | endif$/;"	c
Pne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Po	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Pointer	autoload/plugged/fzf/src/options.go	/^	Pointer     string$/;"	m	struct:fzf.Options	typeref:typename:string
PolyglotVerify	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! PolyglotVerify()$/;"	f
Popup window support	autoload/plugged/fzf/ADVANCED.md	/^#### Popup window support$/;"	t	subsection:Advanced fzf examples""Screen Layout""`fzf-tmux`
PostscrIndentGet	autoload/plugged/vim-polyglot/indent/postscr.vim	/^function! PostscrIndentGet(lnum)$/;"	f
Pp	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
Ppe	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	f
PrefixMatch	autoload/plugged/fzf/src/algo/algo.go	/^func PrefixMatch(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []r/;"	f	package:algo	typeref:typename:(Result, *[]int)
Prepend	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) Prepend(prefix string) {$/;"	f	struct:util.Chars
Prerequisites	autoload/plugged/fzf/BUILD.md	/^### Prerequisites$/;"	S	section:Building fzf""Build instructions
Preview	autoload/plugged/fzf/src/options.go	/^	Preview     previewOpts$/;"	m	struct:fzf.Options	typeref:typename:previewOpts
Preview window	autoload/plugged/fzf.vim/README.md	/^#### Preview window$/;"	t	subsection:fzf :heart: vim""Customization""Global options
Preview window	autoload/plugged/fzf/README.md	/^### Preview window$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics
PreviewBg	autoload/plugged/fzf/src/tui/tui.go	/^	PreviewBg    ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
PreviewFg	autoload/plugged/fzf/src/tui/tui.go	/^	PreviewFg    ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Print	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Print(text string) {$/;"	f	struct:tui.LightWindow
Print	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Print(text string) {$/;"	f	struct:tui.TcellWindow
Print	autoload/plugged/fzf/src/tui/tui.go	/^	Print(text string)$/;"	n	interface:tui.Window
PrintQuery	autoload/plugged/fzf/src/options.go	/^	PrintQuery  bool$/;"	m	struct:fzf.Options	typeref:typename:bool
PrintSep	autoload/plugged/fzf/src/options.go	/^	PrintSep    string$/;"	m	struct:fzf.Options	typeref:typename:string
Printer	autoload/plugged/fzf/src/options.go	/^	Printer     func(string)$/;"	m	struct:fzf.Options	typeref:typename:func(string)
Problem / Steps to reproduce	autoload/plugged/fzf/.github/ISSUE_TEMPLATE.md	/^## Problem \/ Steps to reproduce$/;"	s
Process IDs	autoload/plugged/fzf/README.md	/^#### Process IDs$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
Promise	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	c
Prompt	autoload/plugged/fzf/src/options.go	/^	Prompt      string$/;"	m	struct:fzf.Options	typeref:typename:string
Prompt	autoload/plugged/fzf/src/tui/tui.go	/^	Prompt       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Pros	autoload/plugged/fzf/README.md	/^Pros$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Protect	autoload/plugged/fzf/src/protector/protector.go	/^func Protect() {$/;"	f	package:protector
Protect	autoload/plugged/fzf/src/protector/protector_openbsd.go	/^func Protect() {$/;"	f	package:protector
Ps	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
Push	autoload/plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) Push(data []byte) bool {$/;"	f	struct:fzf.ChunkList	typeref:typename:bool
Px	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Python2Syntax	autoload/plugged/vim-polyglot/syntax/python.vim	/^command! -buffer Python2Syntax let b:python_version_2 = 1 | let &syntax=&syntax$/;"	c
Python3Syntax	autoload/plugged/vim-polyglot/syntax/python.vim	/^command! -buffer Python3Syntax let b:python_version_2 = 0 | let &syntax=&syntax$/;"	c
Q$	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	v
Q3	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
QB	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	v
QD	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
QF	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	v
QG	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
QI	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
QL	autoload/plugged/coc.nvim/build/index.js	/^`)}catch(t){cl.error("Send error:",e)}}redraw(e=!1){this.send(["redraw",e?"force":""])}commmand(/;"	v
QR	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
QS	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
QW	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
Q_	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
Qbe	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
Qc	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
Qde	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Qf	autoload/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:s}}function oj(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	c
Qfe	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
Qg	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
Qge	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Qi	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Qie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Qj	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	v
Ql	autoload/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(o):i+=Ql(o)+n+Ql(l)+F0}),e.section&&i.length&&(i="["+Ql(e.secti/;"	f
Qle	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
Qpe	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
Qq	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Qr	autoload/plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[s-1]}async withProgress(e,t){return this.checkDialog()?await new e3(this.nvim/;"	v
Qre	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Qs	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
Query	autoload/plugged/fzf/src/options.go	/^	Query       string$/;"	m	struct:fzf.Options	typeref:typename:string
Quick Start	autoload/plugged/coc.nvim/Readme.md	/^## Quick Start$/;"	s
Qy	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
Qye	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
R	autoload/plug.vim	/^  nnoremap <silent> <buffer> R  :call <SID>retry()<cr>$/;"	m
R	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
R	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:m
R2	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
R3	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	v
R6	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
RB	autoload/plugged/coc.nvim/build/index.js	/^`+e+"$2$3")}var TB=function(r,e){return r.match("^(?:"+e+")*"+PB)};function RB(r){return" ".repe/;"	f
RD	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
REVISION	autoload/plugged/fzf/Makefile	/^REVISION       := $(FZF_REVISION)$/;"	m
REVISION	autoload/plugged/fzf/Makefile	/^REVISION       := $(shell git log -n 1 --pretty=format:%h -- $(SOURCES) 2> \/dev\/null)$/;"	m
RF	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	v
RG	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
RG	plug-config/fzf.vim	/^command! -nargs=* -bang RG call RipgrepFzf(<q-args>, <bang>0)$/;"	c
RI	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
RN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
ROOT_DIR	autoload/plugged/fzf/Makefile	/^ROOT_DIR       := $(shell dirname $(MAKEFILE))$/;"	m
RQ	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
RR	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
RRe	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	v
RY	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
RZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
R_	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
Random	autoload/plugged/vim-rooter/test/runner.vim	/^function Random(min, max)$/;"	f
RandomID	autoload/plugged/vim-polyglot/ftplugin/mma.vim	/^	function! RandomID()$/;"	f
Range	autoload/plugged/fzf/src/tokenizer.go	/^type Range struct {$/;"	s	package:fzf
Rationale	autoload/plugged/fzf.vim/README.md	/^Rationale$/;"	s	chapter:fzf :heart: vim
Rationale	autoload/plugged/vim-airline/README.md	/^# Rationale$/;"	c
Rb	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
Rde	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
Re	autoload/plugged/coc.nvim/build/index.js	/^`+(d.tokens?this.parseInline(d.tokens):d.text);i+=t?this.renderer.paragraph(p):p;continue}defaul/;"	f
Read	autoload/plugged/fzf/src/util/util_unix.go	/^func Read(fd int, b []byte) (int, error) {$/;"	f	package:util	typeref:typename:(int, error)
Read	autoload/plugged/fzf/src/util/util_windows.go	/^func Read(fd int, b []byte) (int, error) {$/;"	f	package:util	typeref:typename:(int, error)
ReadBookmarks	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 ReadBookmarks call g:NERDTreeBookmark.CacheBookmarks(0) <bar> call/;"	c
ReadOnPath	autoload/plugged/vim-polyglot/syntax/ragel.vim	/^fun! <SID>ReadOnPath(script)$/;"	f
ReadSource	autoload/plugged/fzf/src/reader.go	/^func (r *Reader) ReadSource() {$/;"	f	struct:fzf.Reader
ReadZero	autoload/plugged/fzf/src/options.go	/^	ReadZero    bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Reader	autoload/plugged/fzf/src/reader.go	/^type Reader struct {$/;"	s	package:fzf
Reduced initial memory footprint (#151)	autoload/plugged/fzf/CHANGELOG.md	/^#### Reduced initial memory footprint (#151)$/;"	t	subsection:CHANGELOG""0.9.5""Improvements
Reducer example	autoload/plugged/fzf.vim/README.md	/^### Reducer example$/;"	S	section:fzf :heart: vim""Custom completion
Refresh	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Refresh()          {}$/;"	f	unknown:tui.FullscreenRenderer
Refresh	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Refresh() {$/;"	f	struct:tui.LightRenderer
Refresh	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Refresh() {$/;"	f	struct:tui.LightWindow
Refresh	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Refresh() {$/;"	f	unknown:tui.FullscreenRenderer
Refresh	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Refresh() {$/;"	f	struct:tui.TcellWindow
Refresh	autoload/plugged/fzf/src/tui/tui.go	/^	Refresh()$/;"	n	interface:tui.Renderer
Refresh	autoload/plugged/fzf/src/tui/tui.go	/^	Refresh()$/;"	n	interface:tui.Window
RefreshWindows	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) RefreshWindows(windows []Window) {}$/;"	f	unknown:tui.FullscreenRenderer
RefreshWindows	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) RefreshWindows(windows []Window) {$/;"	f	struct:tui.LightRenderer
RefreshWindows	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) RefreshWindows(windows []Window) {$/;"	f	unknown:tui.FullscreenRenderer
RefreshWindows	autoload/plugged/fzf/src/tui/tui.go	/^	RefreshWindows(windows []Window)$/;"	n	interface:tui.Renderer
RegExp	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	c
Reindent	autoload/plugged/vim-polyglot/README.md	/^## Reindent$/;"	s
Related projects	autoload/plugged/fzf/README.md	/^Related projects$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Reloading the candidate list	autoload/plugged/fzf/README.md	/^### Reloading the candidate list$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics
Renderer	autoload/plugged/fzf/src/tui/tui.go	/^type Renderer interface {$/;"	i	package:tui
Reproduce the bug	autoload/plugged/coc.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^## Reproduce the bug$/;"	s
Reset	autoload/plugged/fzf/src/matcher.go	/^func (m *Matcher) Reset(chunks []*Chunk, patternRunes []rune, cancel bool, final bool, sort bool/;"	f	struct:fzf.Matcher
Resize	autoload/plugged/fzf/src/tui/tui.go	/^	Resize$/;"	c	package:tui
Respecting `.gitignore`	autoload/plugged/fzf/README.md	/^#### Respecting `.gitignore`$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Tips
Result	autoload/plugged/fzf/src/algo/algo.go	/^type Result struct {$/;"	s	package:algo
Result	autoload/plugged/fzf/src/result.go	/^type Result struct {$/;"	s	package:fzf
Result from CocInfo	autoload/plugged/coc.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^## Result from CocInfo$/;"	s
Resume	autoload/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Resume(bool, bool) {}$/;"	f	unknown:tui.FullscreenRenderer
Resume	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Resume(clear bool, sigcont bool) {$/;"	f	struct:tui.LightRenderer
Resume	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Resume(clear bool, sigcont bool) {$/;"	f	unknown:tui.FullscreenRenderer
Resume	autoload/plugged/fzf/src/tui/tui.go	/^	Resume(clear bool, sigcont bool)$/;"	n	interface:tui.Renderer
RevealBookmark	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=1 RevealBookmark :ca/;"	c
Reverse	autoload/plugged/fzf/src/tui/dummy.go	/^	Reverse   = Attr(1 << 6)$/;"	c	package:tui
Reverse	autoload/plugged/fzf/src/tui/tcell.go	/^	Reverse        = Attr(tcell.AttrReverse)$/;"	c	package:tui
Reword	autoload/plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Reword :<line1>,<line2>call s:choose('reword')$/;"	c
Rg	plug-config/fzf.vim	/^command! -bang -nargs=* Rg$/;"	c
Rh	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Rhe	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
Right	autoload/plugged/fzf/src/tui/tui.go	/^	Right$/;"	c	package:tui
RightClick	autoload/plugged/fzf/src/tui/tui.go	/^	RightClick$/;"	c	package:tui
Ripgrep integration	autoload/plugged/fzf/ADVANCED.md	/^Ripgrep integration$/;"	s	chapter:Advanced fzf examples
RipgrepFzf	plug-config/fzf.vim	/^function! RipgrepFzf(query, fullscreen)$/;"	f
Rj	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	v
Rk	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
Rl	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	f
Rne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Rooter	autoload/plugged/vim-rooter/plugin/rooter.vim	/^command! -bar Rooter call <SID>rooter()$/;"	c
RooterToggle	autoload/plugged/vim-rooter/plugin/rooter.vim	/^command! -bar RooterToggle call <SID>toggle()$/;"	c
Rpe	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	f
RplGetFreeIndent	autoload/plugged/vim-polyglot/indent/rpl.vim	/^function RplGetFreeIndent()$/;"	f
RplGetIndent	autoload/plugged/vim-polyglot/indent/rpl.vim	/^function RplGetIndent(lnum)$/;"	f
Rse	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
RstFold	autoload/plugged/vim-polyglot/ftplugin/rst.vim	/^  augroup RstFold$/;"	a
RstFold#GetRstFold	autoload/plugged/vim-polyglot/autoload/RstFold.vim	/^function RstFold#GetRstFold()$/;"	f
RstFold#GetRstFoldText	autoload/plugged/vim-polyglot/autoload/RstFold.vim	/^function RstFold#GetRstFoldText()$/;"	f
Rt	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	f
RubyBalloonexpr	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^function! RubyBalloonexpr() abort$/;"	f
RubyCursorFile	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^function! RubyCursorFile() abort$/;"	f
RubyCursorIdentifier	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^function! RubyCursorIdentifier() abort$/;"	f
RubyCursorTag	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^function! RubyCursorTag() abort$/;"	f
Run	autoload/plugged/fzf/src/core.go	/^func Run(opts *Options, version string, revision string) {$/;"	f	package:fzf
RunTest	autoload/plugged/vim-rooter/test/runner.vim	/^function RunTest(test)$/;"	f
Run_script_detection	autoload/plugged/vim-polyglot/tests/native.vim	/^func Run_script_detection(test_dict)$/;"	f
Rune	autoload/plugged/fzf/src/tui/tui.go	/^	Rune EventType = iota$/;"	c	package:tui	typeref:type:EventType
RuneWidth	autoload/plugged/fzf/src/util/util.go	/^func RuneWidth(r rune, prefixWidth int, tabstop int) int {$/;"	f	package:util	typeref:typename:int
RunesToChars	autoload/plugged/fzf/src/util/chars.go	/^func RunesToChars(runes []rune) Chars {$/;"	f	package:util	typeref:typename:Chars
Rust	autoload/plugged/vim-polyglot/ctags/rust.ctags	/^--langdef=Rust$/;"	l
RustCargoQuickFixHooks	autoload/plugged/vim-polyglot/compiler/cargo.vim	/^augroup RustCargoQuickFixHooks$/;"	a
RustEmitAsm	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitAsm call rust#Emit("asm", <q-args>)$/;"	c
RustEmitIr	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitIr call rust#Emit("llvm-ir", <q-args>)$/;"	c
RustExpand	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -complete=customlist,rust#CompleteExpand -bang -buffer RustExpand call rust#Ex/;"	c
RustFmt	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^command! -bar -buffer RustFmt call rustfmt#Format()$/;"	c
RustFmtRange	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^command! -range -buffer RustFmtRange call rustfmt#FormatRange(<line1>, <line2>)$/;"	c
RustInfo	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^command! -bar RustInfo call rust#debugging#Info()$/;"	c
RustInfoToClipboard	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^command! -bar RustInfoToClipboard call rust#debugging#InfoToClipboard()$/;"	c
RustInfoToFile	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^command! -bar -nargs=1 RustInfoToFile call rust#debugging#InfoToFile(<f-args>)$/;"	c
RustPlay	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^command! -range=% RustPlay :call rust#Play(<count>, <line1>, <line2>, <f-args>)$/;"	c
RustRun	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -complete=file -bang -buffer RustRun call rust#Run(<bang>0, <q-args>)$/;"	c
RustTest	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^command! -buffer -nargs=* -count -bang RustTest call rust#Test(<q-mods>, <count>, <bang>0, <q-ar/;"	c
Rx	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Ry	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
S	autoload/plug.vim	/^  nnoremap <silent> <buffer> S  :PlugStatus<cr>$/;"	m
S	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
S	autoload/plugged/fzf/src/tui/tui.go	/^	S      int$/;"	m	struct:tui.MouseEvent	typeref:typename:int
S	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -range S :<line1>,<line2>call <SID>Esubstitute(<q-args>) <Bar> :noh$/;"	c
S$	autoload/plugged/coc.nvim/build/index.js	/^`+(d.tokens?this.parseInline(d.tokens):d.text);i+=t?this.renderer.paragraph(p):p;continue}defaul/;"	v
S0	autoload/plugged/coc.nvim/build/index.js	/^`),s=i.line==r.start.line?i.character-r.start.character:i.character,a=UB(o,i.line-r.start.line,s/;"	v
S2	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
S3	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
SB	autoload/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let o=n.replace(Dpe,"").split(DB);i.push(o.spl/;"	f
SD	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	c
SDown	autoload/plugged/fzf/src/tui/tui.go	/^	SDown$/;"	c	package:tui
SEE	autoload/plugged/fzf/man/man1/fzf.1	/^.SH SEE ALSO$/;"	s	title:fzf
SF	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
SG	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
SHELL	autoload/plugged/fzf/Makefile	/^SHELL          := bash$/;"	m
SL	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
SLeft	autoload/plugged/fzf/src/tui/tui.go	/^	SLeft$/;"	c	package:tui
SN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
SOURCES	autoload/plugged/fzf/Makefile	/^SOURCES        := $(wildcard *.go src\/*.go src\/*\/*.go) $(MAKEFILE)$/;"	m
SQ	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
SQLGetType	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^    command! -nargs=0 SQLGetType :call SQL_GetType()$/;"	c
SQLSetType	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^    command! -nargs=* -complete=custom,SQL_GetList SQLSetType :call SQL_SetType(<q-args>)$/;"	c
SQL_GetList	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^    function SQL_GetList(ArgLead, CmdLine, CursorPos)$/;"	f
SQL_GetType	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^    function SQL_GetType()$/;"	f
SQL_SetType	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^    function SQL_SetType(name)$/;"	f
SRight	autoload/plugged/fzf/src/tui/tui.go	/^	SRight$/;"	c	package:tui
SUp	autoload/plugged/fzf/src/tui/tui.go	/^	SUp$/;"	c	package:tui
SX	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
SYNOPSIS	autoload/plugged/fzf/man/man1/fzf-tmux.1	/^.SH SYNOPSIS$/;"	s	title:fzf-tmux
SYNOPSIS	autoload/plugged/fzf/man/man1/fzf.1	/^.SH SYNOPSIS$/;"	s	title:fzf
SZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
S_	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	v
SassIncludeExpr	autoload/plugged/vim-polyglot/ftplugin/sass.vim	/^function! SassIncludeExpr(file) abort$/;"	f
Sb	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
Score	autoload/plugged/fzf/src/algo/algo.go	/^	Score int$/;"	m	struct:algo.Result	typeref:typename:int
Screen Layout	autoload/plugged/fzf/ADVANCED.md	/^Screen Layout$/;"	s	chapter:Advanced fzf examples
Screencasts	autoload/plugged/vim-fugitive/README.markdown	/^## Screencasts$/;"	s	chapter:fugitive.vim
Screenshots	autoload/plugged/vim-airline-themes/README.md	/^# Screenshots$/;"	c
Screenshots	autoload/plugged/vim-airline/README.md	/^# Screenshots$/;"	c
Screenshots	~./config/nvim/plugged/gruvbox/README.md	/^Screenshots$/;"	s
Screenshots (optional)	autoload/plugged/coc.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^## Screenshots (optional)$/;"	s
Sd	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	v
Se	autoload/plugged/coc.nvim/build/index.js	/^${JSON.stringify(T,null,4)}`);let j=T;if(Ut.string(j.id)||Ut.number(j.id)){let V=String(j.id),te/;"	f
Seamless integration	autoload/plugged/vim-airline/README.md	/^## Seamless integration$/;"	s	chapter:Features
Search	autoload/plugged/fzf/src/cache.go	/^func (cc *ChunkCache) Search(chunk *Chunk, key string) []Result {$/;"	f	struct:fzf.ChunkCache	typeref:typename:[]Result
Search syntax	autoload/plugged/fzf/README.md	/^#### Search syntax$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
SectionSpec	autoload/plugged/vim-airline/t/section.vim	/^function! SectionSpec()$/;"	f
Select1	autoload/plugged/fzf/src/options.go	/^	Select1     bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Selected	autoload/plugged/fzf/src/tui/tui.go	/^	Selected     ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Self-Diagnosis	autoload/plugged/NERDTree/.github/ISSUE_TEMPLATE/bug.md	/^#### Self-Diagnosis$/;"	t	section:labels: bug
Self-Diagnosis	autoload/plugged/NERDTree/.github/ISSUE_TEMPLATE/question.md	/^#### Self-Diagnosis$/;"	t	section:labels: "general question"
Self-Promotion	autoload/plugged/vim-fugitive/README.markdown	/^## Self-Promotion$/;"	s	chapter:fugitive.vim
Self-Promotion	autoload/plugged/vim-rhubarb/README.markdown	/^## Self-Promotion$/;"	s	chapter:rhubarb.vim
Self-Promotion	~./config/nvim/plugged/gruvbox/README.md	/^Self-Promotion$/;"	s
Set	autoload/plugged/fzf/src/util/atomicbool.go	/^func (a *AtomicBool) Set(newState bool) bool {$/;"	f	struct:util.AtomicBool	typeref:typename:bool
Set	autoload/plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Set(event EventType, value interface{}) {$/;"	f	struct:util.EventBox
SetNonblock	autoload/plugged/fzf/src/util/util_unix.go	/^func SetNonblock(file *os.File, nonblock bool) {$/;"	f	package:util
SetNonblock	autoload/plugged/fzf/src/util/util_windows.go	/^func SetNonblock(file *os.File, nonblock bool) {$/;"	f	package:util
SetUp	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function SetUp()$/;"	f
SetexToAtx	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -range=% SetexToAtx call s:SetexToAtx(<line1>, <line2>)$/;"	c
Settings	autoload/plugged/fzf/README.md	/^#### Settings$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
SetupLazyloadMenus	autoload/plugged/vim-polyglot/extras/menu.vim	/^  augroup SetupLazyloadMenus$/;"	a
Sfe	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Sh	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Shell	autoload/plugged/fzf/test/test_go.rb	/^class Shell$/;"	c
Shortcuts	autoload/plugged/auto-pairs/README.md	/^Shortcuts$/;"	s	chapter:Auto Pairs
Shuffle	autoload/plugged/vim-rooter/test/runner.vim	/^function Shuffle(list)$/;"	f
SignifyDebug	autoload/plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyDebug           call sy#repo#debug_detection()$/;"	c
SignifyDiff	autoload/plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar -bang SignifyDiff            call sy#repo#diffmode(<bang>1)$/;"	c
SignifyDisable	autoload/plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyDisable         call sy#stop()$/;"	c
SignifyDisableAll	autoload/plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyDisableAll      call sy#stop_all()$/;"	c
SignifyEnable	autoload/plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyEnable          call sy#start()$/;"	c
SignifyEnableAll	autoload/plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyEnableAll       call sy#start_all()$/;"	c
SignifyFold	autoload/plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar -bang SignifyFold            call sy#fold#dispatch(<bang>1)$/;"	c
SignifyFoldExpr	autoload/plugged/vim-signify/autoload/sy/fold.vim	/^function! SignifyFoldExpr(lnum)$/;"	f
SignifyFoldText	autoload/plugged/vim-signify/autoload/sy/fold.vim	/^function! SignifyFoldText()$/;"	f
SignifyHunkDiff	autoload/plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyHunkDiff        call sy#repo#diff_hunk()$/;"	c
SignifyHunkUndo	autoload/plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyHunkUndo        call sy#repo#undo_hunk()$/;"	c
SignifyList	autoload/plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyList            call sy#debug#list_active_buffers()$/;"	c
SignifyRefresh	autoload/plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyRefresh         call sy#util#refresh_windows()$/;"	c
SignifyToggle	autoload/plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyToggle          call sy#toggle()$/;"	c
SignifyToggleHighlight	autoload/plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyToggleHighlight call sy#highlight#line_toggle()$/;"	c
Sk	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	v
SkipBlanksAndComments	autoload/plugged/vim-polyglot/indent/d.vim	/^function! SkipBlanksAndComments(startline)$/;"	f
SkipJavaBlanksAndComments	autoload/plugged/vim-polyglot/indent/java.vim	/^function! SkipJavaBlanksAndComments(startline)$/;"	f
Sl	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
Slab	autoload/plugged/fzf/src/util/slab.go	/^type Slab struct {$/;"	s	package:util
Sleuth	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^  command! -bar -bang Sleuth call s:detect_indent()$/;"	c
SleuthIndicator	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^  func! SleuthIndicator() abort$/;"	f
Smarter tab line	autoload/plugged/vim-airline/README.md	/^## Smarter tab line$/;"	s	chapter:Features
Snapshot	autoload/plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) Snapshot() ([]*Chunk, int) {$/;"	f	struct:fzf.ChunkList	typeref:typename:([]*Chunk, int)
Sne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
So	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	v
Sort	autoload/plugged/fzf/src/options.go	/^	Sort        int$/;"	m	struct:fzf.Options	typeref:typename:int
SpellPopupMenu	autoload/plugged/vim-polyglot/extras/menu.vim	/^  augroup SpellPopupMenu$/;"	a
Spinner	autoload/plugged/fzf/src/tui/tui.go	/^	Spinner      ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Split	autoload/plugged/vim-polyglot/syntax/ragel.vim	/^function! <SID>Split(path) abort " {{{1$/;"	f
Squash	autoload/plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Squash :<line1>,<line2>call s:choose('squash')$/;"	c
Ss	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	v
Sse	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
St	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Start	autoload/plugged/fzf/src/algo/algo.go	/^	Start int$/;"	m	struct:algo.Result	typeref:typename:int
Start Vim with a minimal configuration	autoload/plugged/fzf.vim/.github/ISSUE_TEMPLATE.md	/^Start Vim with a minimal configuration$/;"	c
Starting fzf in a popup window	autoload/plugged/fzf/README-VIM.md	/^#### Starting fzf in a popup window$/;"	t	subsection:FZF Vim integration""Tips""fzf inside terminal buffer
State Your Question	autoload/plugged/NERDTree/.github/ISSUE_TEMPLATE/question.md	/^#### State Your Question$/;"	t	section:labels: "general question"
Status line of terminal buffer	autoload/plugged/fzf.vim/README.md	/^Status line of terminal buffer$/;"	s	chapter:fzf :heart: vim
Ste	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
Steps to Reproduce the Issue	autoload/plugged/NERDTree/.github/ISSUE_TEMPLATE/bug.md	/^#### Steps to Reproduce the Issue$/;"	t	section:labels: bug
Straightforward customization	autoload/plugged/vim-airline/README.md	/^## Straightforward customization$/;"	s	chapter:Features
String	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	c
String	autoload/plugged/fzf/src/pattern.go	/^func (t term) String() string {$/;"	f	struct:fzf.term	typeref:typename:string
String	autoload/plugged/fzf/src/tokenizer.go	/^func (d Delimiter) String() string {$/;"	f	struct:fzf.Delimiter	typeref:typename:string
String	autoload/plugged/fzf/src/tokenizer.go	/^func (t Token) String() string {$/;"	f	struct:fzf.Token	typeref:typename:string
String	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) String() string {$/;"	f	struct:util.Chars	typeref:typename:string
StripTrailingWhitespace	autoload/plugged/vim-polyglot/ftplugin/dhall.vim	/^function! StripTrailingWhitespace()$/;"	f
Style	autoload/plugged/fzf/src/tui/tcell.go	/^func (c Color) Style() tcell.Color {$/;"	f	unknown:tui.Color	typeref:typename:tcell.Color
Stylus	autoload/plugged/vim-polyglot/ftplugin/stylus.vim	/^command! Stylus !clear; cat % | stylus$/;"	c
SuffixMatch	autoload/plugged/fzf/src/algo/algo.go	/^func SuffixMatch(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []r/;"	f	package:algo	typeref:typename:(Result, *[]int)
Summary	autoload/plugged/fzf/README-VIM.md	/^Summary$/;"	s	chapter:FZF Vim integration
Supported commands	autoload/plugged/fzf/README.md	/^#### Supported commands$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
Sve	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
SvgIndentGet	autoload/plugged/vim-polyglot/indent/svg.vim	/^fun! SvgIndentGet(lnum, use_syntax_check)$/;"	f
SvgIndentSum	autoload/plugged/vim-polyglot/indent/svg.vim	/^fun! <SID>SvgIndentSum(lnum, style, add)$/;"	f
SvgIndentSynCheck	autoload/plugged/vim-polyglot/indent/svg.vim	/^fun! <SID>SvgIndentSynCheck(lnum)$/;"	f
SvgIndentWithPattern	autoload/plugged/vim-polyglot/indent/svg.vim	/^fun! <SID>SvgIndentWithPattern(line, pat)$/;"	f
Swap	autoload/plugged/fzf/src/result.go	/^func (a ByOrder) Swap(i, j int) {$/;"	f	type:fzf.ByOrder
Swap	autoload/plugged/fzf/src/result.go	/^func (a ByRelevance) Swap(i, j int) {$/;"	f	type:fzf.ByRelevance
Swap	autoload/plugged/fzf/src/result.go	/^func (a ByRelevanceTac) Swap(i, j int) {$/;"	f	type:fzf.ByRelevanceTac
Swap	autoload/plugged/fzf/src/terminal.go	/^func (a byTimeOrder) Swap(i, j int) {$/;"	f	type:fzf.byTimeOrder
SwiftIndent	autoload/plugged/vim-polyglot/indent/swift.vim	/^function! SwiftIndent(...)$/;"	f
SynDisplay	autoload/plugged/vim-polyglot/syntax/inform.vim	/^command -nargs=+ SynDisplay syntax <args> display$/;"	c
SynFold	autoload/plugged/vim-polyglot/syntax/crystal.vim	/^com! -nargs=* SynFold call s:run_syntax_fold(<q-args>)$/;"	c
SynFold	autoload/plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFold <args> fold$/;"	c
SynFold	autoload/plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFold <args>$/;"	c
SynFold	autoload/plugged/vim-polyglot/syntax/ruby.vim	/^com! -nargs=* SynFold call s:run_syntax_fold(<q-args>)$/;"	c
SynFold	autoload/plugged/vim-polyglot/syntax/yacc.vim	/^ com! -nargs=+ SynFold	<args> fold$/;"	c
SynFold	autoload/plugged/vim-polyglot/syntax/yacc.vim	/^ com! -nargs=+ SynFold	<args>$/;"	c
SynFoldDoc	autoload/plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFoldDoc <args> fold$/;"	c
SynFoldDoc	autoload/plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFoldDoc <args>$/;"	c
Sync	autoload/plugged/fzf/src/options.go	/^	Sync        bool$/;"	m	struct:fzf.Options	typeref:typename:bool
SyntaxCheckers_nim_nim_GetLocList	autoload/plugged/vim-polyglot/autoload/nim.vim	/^fun! SyntaxCheckers_nim_nim_GetLocList() abort$/;"	f
SyntaxCheckers_nim_nim_IsAvailable	autoload/plugged/vim-polyglot/autoload/nim.vim	/^function! SyntaxCheckers_nim_nim_IsAvailable() abort$/;"	f
SystemVerilogIndent	autoload/plugged/vim-polyglot/indent/systemverilog.vim	/^function SystemVerilogIndent()$/;"	f
T1	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	v
T5	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	v
T7	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
T8	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
TAPTestLine_foldtext	autoload/plugged/vim-polyglot/syntax/tap.vim	/^function! TAPTestLine_foldtext()$/;"	f
TB	autoload/plugged/coc.nvim/build/index.js	/^`+e+"$2$3")}var TB=function(r,e){return r.match("^(?:"+e+")*"+PB)};function RB(r){return" ".repe/;"	f
TD	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
TEMPLATE	autoload/plugged/fzf/test/test_go.rb	/^TEMPLATE = DATA.read$/;"	C
TEMPNAME	autoload/plugged/fzf/test/test_go.rb	/^  TEMPNAME = '\/tmp\/output'$/;"	C	class:TestBase
TF	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
TI	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
TL	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
TN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
TU	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	v
TY	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
TZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
Tab	autoload/plugged/fzf/src/tui/tui.go	/^	Tab$/;"	c	package:tui
Table of Contents	autoload/plugged/fzf/README.md	/^Table of Contents$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
TableFormat	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer TableFormat call s:TableFormat()$/;"	c
Tabstop	autoload/plugged/fzf/src/options.go	/^	Tabstop     int$/;"	m	struct:fzf.Options	typeref:typename:int
Tac	autoload/plugged/fzf/src/options.go	/^	Tac         bool$/;"	m	struct:fzf.Options	typeref:typename:bool
TcellWindow	autoload/plugged/fzf/src/tui/tcell.go	/^type TcellWindow struct {$/;"	s	package:tui
Td	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
Tde	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
TearDown	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function TearDown()$/;"	f
Terminal	autoload/plugged/fzf/src/terminal.go	/^type Terminal struct {$/;"	s	package:fzf
Terraform	autoload/plugged/vim-polyglot/ftplugin/terraform.vim	/^command! -nargs=+ -complete=custom,terraform#commands -buffer Terraform$/;"	c
TerraformFmt	autoload/plugged/vim-polyglot/ftplugin/terraform.vim	/^command! -nargs=0 -buffer TerraformFmt call terraform#fmt()$/;"	c
TerraformIndent	autoload/plugged/vim-polyglot/indent/terraform.vim	/^function! TerraformIndent(lnum)$/;"	f
Test	autoload/plugged/vim-polyglot/ftplugin/mma.vim	/^	function! Test()$/;"	f
TestAdditiveExpect	autoload/plugged/fzf/src/options_test.go	/^func TestAdditiveExpect(t *testing.T) {$/;"	f	package:fzf
TestAnsiCodeStringConversion	autoload/plugged/fzf/src/ansi_test.go	/^func TestAnsiCodeStringConversion(t *testing.T) {$/;"	f	package:fzf
TestAtomicBool	autoload/plugged/fzf/src/util/atomicbool_test.go	/^func TestAtomicBool(t *testing.T) {$/;"	f	package:util
TestBase	autoload/plugged/fzf/test/test_go.rb	/^class TestBase < Minitest::Test$/;"	c
TestBash	autoload/plugged/fzf/test/test_go.rb	/^class TestBash < TestBase$/;"	c	mixin:include:TestShell,include:CompletionTest
TestBind	autoload/plugged/fzf/src/options_test.go	/^func TestBind(t *testing.T) {$/;"	f	package:fzf
TestCacheKey	autoload/plugged/fzf/src/pattern_test.go	/^func TestCacheKey(t *testing.T) {$/;"	f	package:fzf
TestCacheable	autoload/plugged/fzf/src/pattern_test.go	/^func TestCacheable(t *testing.T) {$/;"	f	package:fzf
TestCaseSensitivity	autoload/plugged/fzf/src/pattern_test.go	/^func TestCaseSensitivity(t *testing.T) {$/;"	f	package:fzf
TestCharsLength	autoload/plugged/fzf/src/util/chars_test.go	/^func TestCharsLength(t *testing.T) {$/;"	f	package:util
TestCharsToString	autoload/plugged/fzf/src/util/chars_test.go	/^func TestCharsToString(t *testing.T) {$/;"	f	package:util
TestChunkCache	autoload/plugged/fzf/src/cache_test.go	/^func TestChunkCache(t *testing.T) {$/;"	f	package:fzf
TestChunkList	autoload/plugged/fzf/src/chunklist_test.go	/^func TestChunkList(t *testing.T) {$/;"	f	package:fzf
TestColorOffset	autoload/plugged/fzf/src/result_test.go	/^func TestColorOffset(t *testing.T) {$/;"	f	package:fzf
TestColorSpec	autoload/plugged/fzf/src/options_test.go	/^func TestColorSpec(t *testing.T) {$/;"	f	package:fzf
TestContrain	autoload/plugged/fzf/src/util/util_test.go	/^func TestContrain(t *testing.T) {$/;"	f	package:util
TestDefaultCtrlNP	autoload/plugged/fzf/src/options_test.go	/^func TestDefaultCtrlNP(t *testing.T) {$/;"	f	package:fzf
TestDelimiterRegex	autoload/plugged/fzf/src/options_test.go	/^func TestDelimiterRegex(t *testing.T) {$/;"	f	package:fzf
TestDelimiterRegexRegex	autoload/plugged/fzf/src/options_test.go	/^func TestDelimiterRegexRegex(t *testing.T) {$/;"	f	package:fzf
TestDelimiterRegexString	autoload/plugged/fzf/src/options_test.go	/^func TestDelimiterRegexString(t *testing.T) {$/;"	f	package:fzf
TestEmptyMerger	autoload/plugged/fzf/src/merger_test.go	/^func TestEmptyMerger(t *testing.T) {$/;"	f	package:fzf
TestEmptyPattern	autoload/plugged/fzf/src/algo/algo_test.go	/^func TestEmptyPattern(t *testing.T) {$/;"	f	package:algo
TestEqual	autoload/plugged/fzf/src/pattern_test.go	/^func TestEqual(t *testing.T) {$/;"	f	package:fzf
TestEventBox	autoload/plugged/fzf/src/util/eventbox_test.go	/^func TestEventBox(t *testing.T) {$/;"	f	package:util
TestExact	autoload/plugged/fzf/src/pattern_test.go	/^func TestExact(t *testing.T) {$/;"	f	package:fzf
TestExactMatchNaive	autoload/plugged/fzf/src/algo/algo_test.go	/^func TestExactMatchNaive(t *testing.T) {$/;"	f	package:algo
TestExactMatchNaiveBackward	autoload/plugged/fzf/src/algo/algo_test.go	/^func TestExactMatchNaiveBackward(t *testing.T) {$/;"	f	package:algo
TestExtension	autoload/plugged/vim-polyglot/tests/extensions.vim	/^function! TestExtension(filetype, filename, content)$/;"	f
TestExtractColor	autoload/plugged/fzf/src/ansi_test.go	/^func TestExtractColor(t *testing.T) {$/;"	f	package:fzf
TestFiletype	autoload/plugged/vim-polyglot/tests/filetypes.vim	/^func! TestFiletype(filetype)$/;"	f
TestFiletypeFuncs	autoload/plugged/vim-polyglot/extras/filetype.vim	/^func! TestFiletypeFuncs(testlist)$/;"	f
TestFish	autoload/plugged/fzf/test/test_go.rb	/^class TestFish < TestBase$/;"	c	mixin:include:TestShell
TestFuzzyMatch	autoload/plugged/fzf/src/algo/algo_test.go	/^func TestFuzzyMatch(t *testing.T) {$/;"	f	package:algo
TestFuzzyMatchBackward	autoload/plugged/fzf/src/algo/algo_test.go	/^func TestFuzzyMatchBackward(t *testing.T) {$/;"	f	package:algo
TestGoFZF	autoload/plugged/fzf/test/test_go.rb	/^class TestGoFZF < TestBase$/;"	c
TestHexToColor	autoload/plugged/fzf/src/tui/tui_test.go	/^func TestHexToColor(t *testing.T) {$/;"	f	package:tui
TestHistory	autoload/plugged/fzf/src/history_test.go	/^func TestHistory(t *testing.T) {$/;"	f	package:fzf
TestIrrelevantNth	autoload/plugged/fzf/src/options_test.go	/^func TestIrrelevantNth(t *testing.T) {$/;"	f	package:fzf
TestLongString	autoload/plugged/fzf/src/algo/algo_test.go	/^func TestLongString(t *testing.T) {$/;"	f	package:algo
TestMax	autoload/plugged/fzf/src/util/util_test.go	/^func TestMax(t *testing.T) {$/;"	f	package:util
TestMergerSorted	autoload/plugged/fzf/src/merger_test.go	/^func TestMergerSorted(t *testing.T) {$/;"	f	package:fzf
TestMergerUnsorted	autoload/plugged/fzf/src/merger_test.go	/^func TestMergerUnsorted(t *testing.T) {$/;"	f	package:fzf
TestNextAnsiEscapeSequence	autoload/plugged/fzf/src/ansi_test.go	/^func TestNextAnsiEscapeSequence(t *testing.T) {$/;"	f	package:fzf
TestNextAnsiEscapeSequence_Fuzz_Modified	autoload/plugged/fzf/src/ansi_test.go	/^func TestNextAnsiEscapeSequence_Fuzz_Modified(t *testing.T) {$/;"	f	package:fzf
TestNextAnsiEscapeSequence_Fuzz_Random	autoload/plugged/fzf/src/ansi_test.go	/^func TestNextAnsiEscapeSequence_Fuzz_Random(t *testing.T) {$/;"	f	package:fzf
TestNormalize	autoload/plugged/fzf/src/algo/algo_test.go	/^func TestNormalize(t *testing.T) {$/;"	f	package:algo
TestOffsetSort	autoload/plugged/fzf/src/result_test.go	/^func TestOffsetSort(t *testing.T) {$/;"	f	package:fzf
TestOnce	autoload/plugged/fzf/src/util/util_test.go	/^func TestOnce(t *testing.T) {$/;"	f	package:util
TestOrigTextAndTransformed	autoload/plugged/fzf/src/pattern_test.go	/^func TestOrigTextAndTransformed(t *testing.T) {$/;"	f	package:fzf
TestParseAnsiCode	autoload/plugged/fzf/src/ansi_test.go	/^func TestParseAnsiCode(t *testing.T) {$/;"	f	package:fzf
TestParseKeys	autoload/plugged/fzf/src/options_test.go	/^func TestParseKeys(t *testing.T) {$/;"	f	package:fzf
TestParseKeysWithComma	autoload/plugged/fzf/src/options_test.go	/^func TestParseKeysWithComma(t *testing.T) {$/;"	f	package:fzf
TestParseRange	autoload/plugged/fzf/src/tokenizer_test.go	/^func TestParseRange(t *testing.T) {$/;"	f	package:fzf
TestParseTermsEmpty	autoload/plugged/fzf/src/pattern_test.go	/^func TestParseTermsEmpty(t *testing.T) {$/;"	f	package:fzf
TestParseTermsExtended	autoload/plugged/fzf/src/pattern_test.go	/^func TestParseTermsExtended(t *testing.T) {$/;"	f	package:fzf
TestParseTermsExtendedExact	autoload/plugged/fzf/src/pattern_test.go	/^func TestParseTermsExtendedExact(t *testing.T) {$/;"	f	package:fzf
TestPrefixMatch	autoload/plugged/fzf/src/algo/algo_test.go	/^func TestPrefixMatch(t *testing.T) {$/;"	f	package:algo
TestPreviewOpts	autoload/plugged/fzf/src/options_test.go	/^func TestPreviewOpts(t *testing.T) {$/;"	f	package:fzf
TestQuoteEntryCmd	autoload/plugged/fzf/src/terminal_test.go	/^func TestQuoteEntryCmd(t *testing.T) {$/;"	f	package:fzf
TestRankComparison	autoload/plugged/fzf/src/result_test.go	/^func TestRankComparison(t *testing.T) {$/;"	f	package:fzf
TestReadFromCommand	autoload/plugged/fzf/src/reader_test.go	/^func TestReadFromCommand(t *testing.T) {$/;"	f	package:fzf
TestReplacePlaceholder	autoload/plugged/fzf/src/terminal_test.go	/^func TestReplacePlaceholder(t *testing.T) {$/;"	f	package:fzf
TestResultRank	autoload/plugged/fzf/src/result_test.go	/^func TestResultRank(t *testing.T) {$/;"	f	package:fzf
TestShell	autoload/plugged/fzf/test/test_go.rb	/^module TestShell$/;"	m
TestSplitNth	autoload/plugged/fzf/src/options_test.go	/^func TestSplitNth(t *testing.T) {$/;"	f	package:fzf
TestStringPtr	autoload/plugged/fzf/src/item_test.go	/^func TestStringPtr(t *testing.T) {$/;"	f	package:fzf
TestSuffixMatch	autoload/plugged/fzf/src/algo/algo_test.go	/^func TestSuffixMatch(t *testing.T) {$/;"	f	package:algo
TestToCharsAscii	autoload/plugged/fzf/src/util/chars_test.go	/^func TestToCharsAscii(t *testing.T) {$/;"	f	package:util
TestToggle	autoload/plugged/fzf/src/options_test.go	/^func TestToggle(t *testing.T) {$/;"	f	package:fzf
TestTokenize	autoload/plugged/fzf/src/tokenizer_test.go	/^func TestTokenize(t *testing.T) {$/;"	f	package:fzf
TestTransform	autoload/plugged/fzf/src/tokenizer_test.go	/^func TestTransform(t *testing.T) {$/;"	f	package:fzf
TestTransformIndexOutOfBounds	autoload/plugged/fzf/src/tokenizer_test.go	/^func TestTransformIndexOutOfBounds(t *testing.T) {$/;"	f	package:fzf
TestTrimLength	autoload/plugged/fzf/src/util/chars_test.go	/^func TestTrimLength(t *testing.T) {$/;"	f	package:util
TestValidateSign	autoload/plugged/fzf/src/options_test.go	/^func TestValidateSign(t *testing.T) {$/;"	f	package:fzf
TestZsh	autoload/plugged/fzf/test/test_go.rb	/^class TestZsh < TestBase$/;"	c	mixin:include:TestShell,include:CompletionTest
Test_conf_type	autoload/plugged/vim-polyglot/tests/native.vim	/^func Test_conf_type()$/;"	f
Test_detection	autoload/plugged/vim-polyglot/tests/native.vim	/^func Test_detection()$/;"	f
Test_dir_in_project	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_dir_in_project()$/;"	f
Test_emptybuf_ftdetect	autoload/plugged/vim-polyglot/tests/native.vim	/^func Test_emptybuf_ftdetect()$/;"	f
Test_exclude	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_exclude()$/;"	f
Test_file_in_project	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_file_in_project()$/;"	f
Test_file_in_project_subdir	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_file_in_project_subdir()$/;"	f
Test_filetype_indent_off	autoload/plugged/vim-polyglot/tests/native.vim	/^func Test_filetype_indent_off()$/;"	f
Test_glob	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_glob()$/;"	f
Test_has_file_in_subdirectory	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_has_file_in_subdirectory()$/;"	f
Test_hook_file	autoload/plugged/vim-polyglot/tests/native.vim	/^func Test_hook_file()$/;"	f
Test_ignores_suffixesadd	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_ignores_suffixesadd()$/;"	f
Test_non_project_file_change_to_home	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_non_project_file_change_to_home()$/;"	f
Test_non_project_file_change_to_parent	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_non_project_file_change_to_parent()$/;"	f
Test_non_project_file_default	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_non_project_file_default()$/;"	f
Test_other_type	autoload/plugged/vim-polyglot/tests/native.vim	/^func Test_other_type()$/;"	f
Test_project_dir	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_project_dir()$/;"	f
Test_resolve_symlinks	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_resolve_symlinks()$/;"	f
Test_root_contains_wildcards	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_root_contains_wildcards()$/;"	f
Test_root_has_ancestor	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_root_has_ancestor()$/;"	f
Test_root_has_parent	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_root_has_parent()$/;"	f
Test_root_is_directory	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_root_is_directory()$/;"	f
Test_script_detection	autoload/plugged/vim-polyglot/tests/native.vim	/^func Test_script_detection()$/;"	f
Test_setfiletype_completion	autoload/plugged/vim-polyglot/tests/native.vim	/^func Test_setfiletype_completion()$/;"	f
Test_target_directories_only	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_target_directories_only()$/;"	f
Test_target_some_files_only	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_target_some_files_only()$/;"	f
Test_toggle	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_toggle()$/;"	f
Test_user_autocmd	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_user_autocmd()$/;"	f
Test_write_file_to_different_name	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_write_file_to_different_name()$/;"	f
Test_write_new_file	autoload/plugged/vim-rooter/test/test_rooter.vim	/^function Test_write_new_file()$/;"	f
Testing	autoload/plugged/vim-rooter/test/README.markdown	/^# Testing$/;"	c
TexFold	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ com! -nargs=* TexFold <args> $/;"	c
TexFold	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ com! -nargs=* TexFold <args> fold $/;"	c
TexNewMathZone	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ fun! TexNewMathZone(sfx,mathzone,starform)$/;"	f
TextilePreview	autoload/plugged/vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextilePreview call TextileRenderBufferToPreview()$/;"	c
TextileRender	autoload/plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRender(lines)$/;"	f
TextileRenderBufferToFile	autoload/plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToFile()$/;"	f
TextileRenderBufferToPreview	autoload/plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToPreview()$/;"	f
TextileRenderBufferToTab	autoload/plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToTab()$/;"	f
TextileRenderFile	autoload/plugged/vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextileRenderFile call TextileRenderBufferToFile()$/;"	c
TextileRenderFile	autoload/plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderFile(lines, filename)$/;"	f
TextileRenderTab	autoload/plugged/vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextileRenderTab call TextileRenderBufferToTab()$/;"	c
Tf	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Tfe	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Tg	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
Th	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
The	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)	autoload/plugged/NERDTree/README.markdown	/^# The NERDTree [![Vint](https:\/\/github.com\/preservim\/nerdtree\/workflows\/Vint\/badge.svg)](/;"	c
Theme	autoload/plugged/fzf/src/options.go	/^	Theme       *tui.ColorTheme$/;"	m	struct:fzf.Options	typeref:typename:*tui.ColorTheme
Themes	autoload/plugged/vim-airline/CONTRIBUTING.md	/^# Themes$/;"	c
Themes	autoload/plugged/vim-airline/README.md	/^## Themes$/;"	s	chapter:Features
Third-party libraries used	autoload/plugged/fzf/BUILD.md	/^Third-party libraries used$/;"	s	chapter:Building fzf
Ti	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	c
Ti	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
Tips	autoload/plugged/fzf/README-VIM.md	/^Tips$/;"	s	chapter:FZF Vim integration
Tips	autoload/plugged/fzf/README.md	/^Tips$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Tj	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
Tk	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
Tl	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	f
Tmux	autoload/plugged/fzf/test/test_go.rb	/^class Tmux$/;"	c
Tne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
To	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ToChars	autoload/plugged/fzf/src/util/chars.go	/^func ToChars(bytes []byte) Chars {$/;"	f	package:util	typeref:typename:Chars
ToDo	~./config/nvim/plugged/gruvbox/README.md	/^ToDo$/;"	s
ToRunes	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) ToRunes() []rune {$/;"	f	struct:util.Chars	typeref:typename:[]rune
ToString	autoload/plugged/fzf/src/ansi.go	/^func (s *ansiState) ToString() string {$/;"	f	struct:fzf.ansiState	typeref:typename:string
ToString	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) ToString() string {$/;"	f	struct:util.Chars	typeref:typename:string
Toc	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer Toc call s:Toc()$/;"	c
Toch	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer Toch call s:Toc('horizontal')$/;"	c
Toct	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer Toct call s:Toc('tab')$/;"	c
Tocv	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer Tocv call s:Toc('vertical')$/;"	c
ToggleSort	autoload/plugged/fzf/src/options.go	/^	ToggleSort  bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Toggling between data sources	autoload/plugged/fzf/ADVANCED.md	/^### Toggling between data sources$/;"	S	section:Advanced fzf examples""Dynamic reloading of the list
Token	autoload/plugged/fzf/src/tokenizer.go	/^type Token struct {$/;"	s	package:fzf
Tokenize	autoload/plugged/fzf/src/tokenizer.go	/^func Tokenize(text string, delimiter Delimiter) []Token {$/;"	f	package:fzf	typeref:typename:[]Token
Top	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Top() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Top	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Top() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Top	autoload/plugged/fzf/src/tui/tui.go	/^	Top() int$/;"	n	interface:tui.Window	typeref:typename:int
Tpe	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	f
TrailingWhitespaces	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) TrailingWhitespaces() int {$/;"	f	struct:util.Chars	typeref:typename:int
Transform	autoload/plugged/fzf/src/tokenizer.go	/^func Transform(tokens []Token, withNth []Range) []Token {$/;"	f	package:fzf	typeref:typename:[]Token
Tre	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Trim	autoload/plugged/vim-polyglot/indent/qml.vim	/^function! Trim(line)$/;"	f
TrimLength	autoload/plugged/fzf/src/item.go	/^func (item *Item) TrimLength() uint16 {$/;"	f	struct:fzf.Item	typeref:typename:uint16
TrimLength	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) TrimLength() uint16 {$/;"	f	struct:util.Chars	typeref:typename:uint16
TrimTrailingWhitespaces	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) TrimTrailingWhitespaces() {$/;"	f	struct:util.Chars
Trouble shooting	autoload/plugged/coc.nvim/Readme.md	/^## Trouble shooting$/;"	s
TroubleShooting	autoload/plugged/auto-pairs/README.md	/^TroubleShooting$/;"	s	chapter:Auto Pairs
Troubleshooting	autoload/plugged/vim-polyglot/README.md	/^## Troubleshooting$/;"	s
True Colors	autoload/plugged/palenight.vim/README.md	/^### True Colors$/;"	S	section:Usage
Ts	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
TsIncludeExpr	autoload/plugged/vim-polyglot/ftplugin/typescript.vim	/^function! TsIncludeExpr(file)$/;"	f
Tse	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
TtyIn	autoload/plugged/fzf/src/tui/ttyname_unix.go	/^func TtyIn() *os.File {$/;"	f	package:tui	typeref:typename:*os.File
TtyIn	autoload/plugged/fzf/src/tui/ttyname_windows.go	/^func TtyIn() *os.File {$/;"	f	package:tui	typeref:typename:*os.File
Tve	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Tx	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
Ty	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Type	autoload/plugged/fzf/src/tui/tui.go	/^	Type       EventType$/;"	m	struct:tui.Event	typeref:typename:EventType
U	autoload/plug.vim	/^  nnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	autoload/plug.vim	/^  xnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
U0	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	v
U1	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
U2	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
U3	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	v
UB	autoload/plugged/coc.nvim/build/index.js	/^`),a=o.line-n.line-s.length+1,l=s[s.length-1],u=r.line-a;if(r.line!=o.line)return{line:u,charact/;"	f
UI	autoload/plugged/coc.nvim/build/index.js	/^`;function AI(r,e){if(On.existsSync(r))return;let t=On.openSync(r,e.flags,e.mode);On.closeSync(t/;"	f
UN	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
UNAME_M	autoload/plugged/fzf/Makefile	/^UNAME_M := $(shell uname -m)$/;"	m
UNSETS	autoload/plugged/fzf/test/test_go.rb	/^UNSETS = %w[$/;"	C
UR	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
UU	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
UW	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
UY	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
UZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
U_	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
Ub	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
Uc	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ud	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
Uf	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
Uhe	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
Uj	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Uk	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
Ul	autoload/plugged/coc.nvim/build/index.js	/^`),a++,u=i,s=14;switch(x){case 123:return i++,s=1;case 125:return i++,s=2;case 91:return i++,s=3/;"	f
Ule	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
UnIndentByInd	autoload/plugged/vim-polyglot/indent/autohotkey.vim	/^function! UnIndentByInd(indent)$/;"	f
Underline	autoload/plugged/fzf/src/tui/dummy.go	/^	Underline = Attr(1 << 3)$/;"	c	package:tui
Underline	autoload/plugged/fzf/src/tui/tcell.go	/^	Underline      = Attr(tcell.AttrUnderline)$/;"	c	package:tui
Unfinalise	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function Unfinalise()$/;"	f
UnfinaliseMenu	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>UnfinaliseMenu()$/;"	f
Unicode	autoload/plugged/fzf/src/options.go	/^	Unicode     bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Unwatch	autoload/plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Unwatch(events ...EventType) {$/;"	f	struct:util.EventBox
Uo	autoload/plugged/coc.nvim/build/index.js	/^`);e=Zi.Position.create(e.line-o,e.character),t=Zi.Position.create(t.line-o,t.character);let l=k/;"	v
Up	autoload/plugged/fzf/src/tui/tui.go	/^	Up$/;"	c	package:tui
UpdateCount	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateCount(cnt int, final bool, failedCommand *string) {$/;"	f	struct:fzf.Terminal
UpdateHeader	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateHeader(header []string) {$/;"	f	struct:fzf.Terminal
UpdateList	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateList(merger *Merger, reset bool) {$/;"	f	struct:fzf.Terminal
UpdateProgress	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateProgress(progress float32) {$/;"	f	struct:fzf.Terminal
Updating	autoload/plugged/vim-polyglot/README.md	/^## Updating$/;"	s
Updating the list of processes by pressing CTRL-R	autoload/plugged/fzf/ADVANCED.md	/^### Updating the list of processes by pressing CTRL-R$/;"	S	section:Advanced fzf examples""Dynamic reloading of the list
Upe	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	f
Upgrading fzf	autoload/plugged/fzf/README.md	/^Upgrading fzf$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Ur	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
Urgency	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function Urgency(urg)$/;"	f
Usage	autoload/plugged/fzf/README.md	/^Usage$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Usage	autoload/plugged/gv.vim/README.md	/^Usage$/;"	s	chapter:gv.vim
Usage	autoload/plugged/palenight.vim/README.md	/^## Usage$/;"	s
Use	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Using Homebrew	autoload/plugged/fzf/README.md	/^### Using Homebrew$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
Using Linux package managers	autoload/plugged/fzf/README.md	/^### Using Linux package managers$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
Using Makefile	autoload/plugged/fzf/BUILD.md	/^### Using Makefile$/;"	S	section:Building fzf""Build instructions
Using [vim-plug](https://github.com/junegunn/vim-plug)	autoload/plugged/fzf.vim/README.md	/^### Using [vim-plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	S	section:fzf :heart: vim""Installation
Using a Theme	autoload/plugged/vim-airline-themes/README.md	/^# Using a Theme$/;"	c
Using fzf as the secondary filter	autoload/plugged/fzf/ADVANCED.md	/^### Using fzf as the secondary filter$/;"	S	section:Advanced fzf examples""Ripgrep integration
Using git	autoload/plugged/fzf/README.md	/^### Using git$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
Using the finder	autoload/plugged/fzf/README.md	/^#### Using the finder$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Util1	autoload/plugged/vim-airline/t/util.vim	/^function! Util1()$/;"	f
Util2	autoload/plugged/vim-airline/t/util.vim	/^function! Util2()$/;"	f
Util3	autoload/plugged/vim-airline/t/util.vim	/^function! Util3(...)$/;"	f
V	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	c	class:Xt
V	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f	function:Ed
V	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -range=% V :<line1>,<line2>call <SID>Evglobal(<q-args>)$/;"	c
V3	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
VA	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
VB	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	v
VD	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
VERSION	autoload/plugged/fzf/Makefile	/^VERSION        := $(FZF_VERSION)$/;"	m
VERSION	autoload/plugged/fzf/Makefile	/^VERSION        := $(shell git describe --abbrev=0 2> \/dev\/null)$/;"	m
VERSION_REGEX	autoload/plugged/fzf/Makefile	/^VERSION_REGEX  := $(subst .,\\.,$(VERSION_TRIM))$/;"	m
VERSION_TRIM	autoload/plugged/fzf/Makefile	/^VERSION_TRIM   := $(shell sed "s\/-.*\/\/" <<< $(VERSION))$/;"	m
VI	autoload/plugged/coc.nvim/build/index.js	/^`;function AI(r,e){if(On.existsSync(r))return;let t=On.openSync(r,e.flags,e.mode);On.closeSync(t/;"	v
VN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
VO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
VR	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
VT	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
VV	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
VW	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
VX	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
VY	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
VZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
ValaCodingStyle	autoload/plugged/vim-polyglot/ftplugin/vala.vim	/^command! -buffer -bar ValaCodingStyle call ValaCodingStyle()$/;"	c
ValaCodingStyle	autoload/plugged/vim-polyglot/ftplugin/vala.vim	/^function! ValaCodingStyle() abort$/;"	f
Vb	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
VbGetIndent	autoload/plugged/vim-polyglot/indent/vb.vim	/^fun! VbGetIndent(lnum)$/;"	f
VbSearch	autoload/plugged/vim-polyglot/ftplugin/vb.vim	/^fun! <SID>VbSearch(pattern, flags)$/;"	f
Vbe	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
Vc	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Vee	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Version	autoload/plugged/fzf/src/options.go	/^	Version     bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Vf	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
Vfe	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
Vie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Vim functions	autoload/plugged/fzf.vim/README.md	/^#### Vim functions$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Vim plugin	autoload/plugged/fzf/README.md	/^Vim plugin$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Vj	autoload/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[c],!0),await e./;"	c
Vl	autoload/plugged/coc.nvim/build/index.js	/^`);e=Zi.Position.create(e.line-o,e.character),t=Zi.Position.create(t.line-o,t.character);let l=k/;"	v
VlangIndent	autoload/plugged/vim-polyglot/indent/vlang.vim	/^function! VlangIndent(lnum) abort$/;"	f
Vm	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
Vpe	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
Vq	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Vr	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	f
Vs	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Vu	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
Vve	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
W	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
W1	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
WA	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
WB	autoload/plugged/coc.nvim/build/index.js	/^`),a=o.line-n.line-s.length+1,l=s[s.length-1],u=r.line-a;if(r.line!=o.line)return{line:u,charact/;"	f
WD	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
WI	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let WI = [ s:base00 , s:base0A , 235 , 229 ]      " [ warning color ]$/;"	v
WP	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
WT	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
WV	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
WY	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
W_	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
Wait	autoload/plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Wait(callback func(*Events)) {$/;"	f	struct:util.EventBox
WaitFor	autoload/plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) WaitFor(event EventType) {$/;"	f	struct:util.EventBox
WarnIfNotUnfinalised	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>WarnIfNotUnfinalised()$/;"	f
Warning	autoload/plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>Warning(msg) "{{{3$/;"	f
Watch	autoload/plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Watch(events ...EventType) {$/;"	f	struct:util.EventBox
Wc	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Wd	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
We	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
Wf	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
Wh	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
Whe	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
Where did the name come from?	autoload/plugged/vim-airline/README.md	/^# Where did the name come from?$/;"	c
Why you should use fzf on Vim	autoload/plugged/fzf.vim/README.md	/^Why you should use fzf on Vim$/;"	s	chapter:fzf :heart: vim
Why?	autoload/plugged/coc.nvim/Readme.md	/^## Why?$/;"	s
Width	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Width() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Width	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Width() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Width	autoload/plugged/fzf/src/tui/tui.go	/^	Width() int$/;"	n	interface:tui.Window	typeref:typename:int
Wie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Window	autoload/plugged/fzf/src/tui/tui.go	/^type Window interface {$/;"	i	package:tui
Windows	autoload/plugged/fzf/README.md	/^### Windows$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
WithAttr	autoload/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) WithAttr(attr Attr) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
WithNth	autoload/plugged/fzf/src/options.go	/^	WithNth     []Range$/;"	m	struct:fzf.Options	typeref:typename:[]Range
Wj	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
Wk	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
Wle	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Wne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Wpe	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	f
Wq	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Wr	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
WriteBookmarks	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 WriteBookmarks call g:NERDTreeBookmark.Write()$/;"	c
Wte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
Wz	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	v
X	autoload/plug.vim	/^    nnoremap <silent> <buffer> X :call <SID>revert()<cr>$/;"	m
X	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:yR.k
X	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) X() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
X	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) X() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
X	autoload/plugged/fzf/src/tui/tui.go	/^	X      int$/;"	m	struct:tui.MouseEvent	typeref:typename:int
X	autoload/plugged/fzf/src/tui/tui.go	/^	X() int$/;"	n	interface:tui.Window	typeref:typename:int
X$	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	v
X3	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
XB	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	v
XD	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
XG	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
XL	autoload/plugged/coc.nvim/build/index.js	/^`)}catch(t){cl.error("Send error:",e)}}redraw(e=!1){this.send(["redraw",e?"force":""])}commmand(/;"	v
XN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
XO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
XTabReopen	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    com! XTabReopen call airline#extensions#tabline#xtabline#reopen_last_tab()$/;"	c
XW	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
XX	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
Xbe	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
Xde	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	f
Xe	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
Xf	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
Xf86confdeclopt	autoload/plugged/vim-polyglot/syntax/xf86conf.vim	/^	command -nargs=+ Xf86confdeclopt syn keyword xf86confOptionName <args> contained nextgroup=xf86/;"	c
Xf86confdeclopt	autoload/plugged/vim-polyglot/syntax/xf86conf.vim	/^	command -nargs=+ Xf86confdeclopt syn keyword xf86confOptionName <args> contained$/;"	c
Xfe	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
Xi	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Xie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Xj	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	f
Xl	autoload/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[c],!0),await e./;"	v
Xle	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
Xoe	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
Xq	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Xr	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
Xt	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
Xte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
Xx	autoload/plugged/coc.nvim/build/index.js	/^`}strong(e){return"<strong>"+e+"<\/strong>"}em(e){return"<em>"+e+"<\/em>"}codespan(e){return"<co/;"	v
Xy	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
Y	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Y() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Y	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Y() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Y	autoload/plugged/fzf/src/tui/tui.go	/^	Y      int$/;"	m	struct:tui.MouseEvent	typeref:typename:int
Y	autoload/plugged/fzf/src/tui/tui.go	/^	Y() int$/;"	n	interface:tui.Window	typeref:typename:int
Y$	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	f
Y1	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
Y2	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Y3	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
Y7	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
Y8	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
YA	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
YB	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	v
YD	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
YI	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
YM	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	v
YO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
YR	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
YT	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
YV	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
YX	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
Ybe	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
Yde	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
Yee	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Yj	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Yl	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	f
Yle	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
Ym	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	c
Yr	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Yt	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
Yv	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	v
Yx	autoload/plugged/coc.nvim/build/index.js	/^`+n.text);continue}if(e){let l="Infinite loop on byte: "+e.charCodeAt(0);if(this.options.silent)/;"	v
Yy	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
Z0	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	v
Z1	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
Z2	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Z3	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
ZD	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
ZN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
ZR	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
ZRe	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
ZT	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
ZV	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
Zbe	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
Zd	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
Zde	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
Zf	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
Zfe	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
Zi	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
Zie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ZimbuGoEndBlock	autoload/plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! ZimbuGoEndBlock()$/;"	f
ZimbuGoStartBlock	autoload/plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! ZimbuGoStartBlock()$/;"	f
Zl	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Zle	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
Zm	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
Zr	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
Zs	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	v
Zt	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	c	class:Ed.V
Zt	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	c	class:Ed.j
Zt	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	c	class:Ed.te
Zte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
Zx	autoload/plugged/coc.nvim/build/index.js	/^`}strong(e){return"<strong>"+e+"<\/strong>"}em(e){return"<em>"+e+"<\/em>"}codespan(e){return"<co/;"	v
Zy	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
[	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:yR.k
[#	autoload/plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> [# :call search('^\\s*#\\@!', "bW")<CR>$/;"	m
[0.10] - 2018-12-15	autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.10] - 2018-12-15$/;"	s	chapter:Change Log
[0.11] - 2019-11-10	autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.11] - 2019-11-10$/;"	s	chapter:Change Log
[0.12] - Unreleased	autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.12] - Unreleased$/;"	s	chapter:Change Log
[0.1] - 2013-07-17	autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.1] - 2013-07-17$/;"	s	chapter:Change Log
[0.2] - 2013-07-28	autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.2] - 2013-07-28$/;"	s	chapter:Change Log
[0.3] - 2013-08-12	autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.3] - 2013-08-12$/;"	s	chapter:Change Log
[0.4] - 2013-08-26	autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.4] - 2013-08-26$/;"	s	chapter:Change Log
[0.5] - 2013-09-13	autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.5] - 2013-09-13$/;"	s	chapter:Change Log
[0.6] - 2013-10-08	autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.6] - 2013-10-08$/;"	s	chapter:Change Log
[0.7] - 2014-12-10	autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.7] - 2014-12-10$/;"	s	chapter:Change Log
[0.8] - 2016-03-09	autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.8] - 2016-03-09$/;"	s	chapter:Change Log
[0.9] - 2018-01-15	autoload/plugged/vim-airline/CHANGELOG.md	/^## [0.9] - 2018-01-15$/;"	s	chapter:Change Log
[<C-D>	autoload/plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> [<C-D>      :<C-U>exe <SID>jump('edit',v:count)<SID>foldop/;"	m
[C	autoload/plugged/vim-signify/plugin/signify.vim	/^    nmap [C 9999[c$/;"	m
[LanguageClient][57]	autoload/plugged/vim-airline/README.md	/^#### [LanguageClient][57]$/;"	t	section:Features""Seamless integration
[License](LICENSE)	autoload/plugged/fzf/README-VIM.md	/^[License](LICENSE)$/;"	s	chapter:FZF Vim integration
[License](LICENSE)	autoload/plugged/fzf/README.md	/^[License](LICENSE)$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
[M	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'b','n')<CR/;"	m
[M	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'b','v')<CR/;"	m
[Unreleased](https://github.com/morhetz/gruvbox/tree/HEAD)	~./config/nvim/plugged/gruvbox/CHANGELOG.md	/^## [Unreleased](https:\/\/github.com\/morhetz\/gruvbox\/tree\/HEAD)$/;"	s	chapter:Change Log
[Vim-CMake][60]	autoload/plugged/vim-airline/README.md	/^#### [Vim-CMake][60]$/;"	t	section:Features""Seamless integration
[[	autoload/plug.vim	/^  nnoremap <silent> <buffer> [[ :silent! call <SID>section('b')<cr>$/;"	m
[[	autoload/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> <expr> [[ <sid>move('b')$/;"	m
[[	autoload/plugged/gv.vim/plugin/gv.vim	/^  xnoremap <silent> <buffer> <expr> [[ <sid>move('b')$/;"	m
[[	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>[[ <Plug>(llvm-prev-section-begin)$/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/abaqus.vim	/^noremap <silent><buffer> [[ ?^\\*\\a<CR>:nohlsearch<CR>$/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> [[ m':call search('\\c^\\%(\\s*\\<Bar>.\\{6\\}\\s\\+\\)\\zs[A-Za-z/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> [[ ':silent keeppatterns ?'.b:block_begin.'<CR>'$/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> [[ ':silent keeppatterns ?'.b:block_begin.'<CR>'$/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> [[ :call search('^\\s*sub\\>', "bW")<CR>$/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^nnoremap <silent> <buffer> [[ :<C-U>call <SID>sectionmovement('{{','b','n',v:count1)<CR>$/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^xnoremap <silent> <buffer> [[ :<C-U>call <SID>sectionmovement('{{','b','v',v:count1)<CR>$/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^noremap <buffer> <silent> [[ :<C-U>call <SID>SearchSection(0, 1, '')<CR>$/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^xnoremap <buffer> <silent> [[ :<C-U>call <SID>SearchSection(0, 1, visualmode())<CR>$/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:false/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:true)/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:false/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:true)/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['ru/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['ru/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^nnoremap <silent> <buffer> [[ :call rust#Jump('n', 'Back')<CR>$/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^onoremap <silent> <buffer> [[ :call rust#Jump('o', 'Back')<CR>$/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^xnoremap <silent> <buffer> [[ :call rust#Jump('v', 'Back')<CR>$/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/scala.vim	/^noremap <script> <buffer> <silent> [[ :call <SID>NextSection(1)<cr>$/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^nnoremap <buffer> <silent> [[ :call search('\\c^\\s*begin\\>', 'bW' )<CR>$/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^xnoremap <buffer> <silent> [[ :<C-U>exec "normal! gv"<Bar>call search('\\c^\\s*begin\\>', 'bW' )/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/vb.vim	/^nnoremap <buffer> <silent> [[ :call <SID>VbSearch('^\\s*\\(\\(private\\|public\\)\\s\\+\\)\\=\\(/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/vhdl.vim	/^noremap  <buffer><silent>[[ :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>[[ :<C-u>cal <SID>CountWrapper('[[')<CR>$/;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> [[ :call search('^<\\(template\\<Bar>script\\<Bar>style\\)', 'bW')</;"	m
[[	autoload/plugged/vim-polyglot/ftplugin/zimbu.vim	/^  nnoremap <silent> <buffer> [[ m`:call ZimbuGoStartBlock()<CR>$/;"	m
[[Configurable]]	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	p	class:AnonymousFunctionb666889232000.i
[[Configurable]]	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	p	class:AnonymousFunctionb666889232200.i
[[Enumerable]]	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	p	class:AnonymousFunctionb666889232000.i
[[Enumerable]]	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	p	class:AnonymousFunctionb666889232200.i
[[Get]]	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	p	class:AnonymousFunctionb666889232000.i
[[Get]]	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	p	class:AnonymousFunctionb666889232200.i
[[Set]]	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	p	class:AnonymousFunctionb666889232000.i
[[Set]]	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	p	class:AnonymousFunctionb666889232200.i
[[Value]]	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	p	class:AnonymousFunctionb666889232000.i
[[Value]]	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	p	class:AnonymousFunctionb666889232200.i
[[Writable]]	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	p	class:AnonymousFunctionb666889232000.i
[[Writable]]	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	p	class:AnonymousFunctionb666889232200.i
[]	autoload/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> <expr> [] <sid>move('b')$/;"	m
[]	autoload/plugged/gv.vim/plugin/gv.vim	/^  xnoremap <silent> <buffer> <expr> [] <sid>move('b')$/;"	m
[]	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>[] <Plug>(llvm-prev-section-end)$/;"	m
[]	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> [] m':call <SID>toend('b')<CR>$/;"	m
[]	autoload/plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> [] ':silent keeppatterns ?'.b:block_end  .'<CR>'$/;"	m
[]	autoload/plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> [] ':silent keeppatterns ?'.b:block_end  .'<CR>'$/;"	m
[]	autoload/plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> [] :call search('^\\s*endsub\\>', "bW")<CR>$/;"	m
[]	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^noremap <buffer> <silent> [] :<C-U>call <SID>SearchSection(1, 1, '')<CR>$/;"	m
[]	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^xnoremap <buffer> <silent> [] :<C-U>call <SID>SearchSection(1, 1, visualmode())<CR>$/;"	m
[]	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:false/;"	m
[]	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:true)/;"	m
[]	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:false/;"	m
[]	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:true)/;"	m
[]	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass']/;"	m
[]	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass']/;"	m
[]	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^nnoremap <buffer> <silent> [] :call search('\\c^\\s*end\\W*$', 'bW' )<CR>$/;"	m
[]	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^xnoremap <buffer> <silent> [] :<C-U>exec "normal! gv"<Bar>call search('\\c^\\s*end\\W*$', 'bW' )/;"	m
[]	autoload/plugged/vim-polyglot/ftplugin/vb.vim	/^nnoremap <buffer> <silent> [] :call <SID>VbSearch('^\\s*\\<end\\>\\s\\+\\(function\\\\|sub\\)', /;"	m
[]	autoload/plugged/vim-polyglot/ftplugin/vhdl.vim	/^noremap  <buffer><silent>[] :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\/;"	m
[]	autoload/plugged/vim-polyglot/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>[] :<C-u>cal <SID>CountWrapper('[]')<CR>$/;"	m
[]	autoload/plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> [] :call search('^<\/\\(template\\<Bar>script\\<Bar>style\\)', 'bW'/;"	m
[b	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>[b <Plug>(llvm-move-block-prev)$/;"	m
[c	autoload/plugged/vim-signify/plugin/signify.vim	/^  nmap [c <plug>(signify-prev-hunk)$/;"	m
[csv.vim][28]	autoload/plugged/vim-airline/README.md	/^#### [csv.vim][28]$/;"	t	section:Features""Seamless integration
[ctrlp.vim][10]	autoload/plugged/vim-airline/README.md	/^#### [ctrlp.vim][10]$/;"	t	section:Features""Seamless integration
[ctrlspace][38]	autoload/plugged/vim-airline/README.md	/^#### [ctrlspace][38]$/;"	t	section:Features""Seamless integration
[d	autoload/plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> [d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
[denite.nvim][51]	autoload/plugged/vim-airline/README.md	/^#### [denite.nvim][51]$/;"	t	section:Features""Seamless integration
[g	plug-config/coc.vim	/^nmap <silent> [g <Plug>(coc-diagnostic-prev)$/;"	m
[localsearch][54]	autoload/plugged/vim-airline/README.md	/^#### [localsearch][54]$/;"	t	section:Features""Seamless integration
[m	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'b','n')<CR/;"	m
[m	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'b','v')<CR/;"	m
[promptline][36]	autoload/plugged/vim-airline/README.md	/^#### [promptline][36]$/;"	t	section:Features""Seamless integration
[syntastic][5]	autoload/plugged/vim-airline/README.md	/^#### [syntastic][5]$/;"	t	section:Features""Seamless integration
[tagbar][19]	autoload/plugged/vim-airline/README.md	/^#### [tagbar][19]$/;"	t	section:Features""Seamless integration
[tmuxline][35]	autoload/plugged/vim-airline/README.md	/^#### [tmuxline][35]$/;"	t	section:Features""Seamless integration
[unite.vim][9]	autoload/plugged/vim-airline/README.md	/^#### [unite.vim][9]$/;"	t	section:Features""Seamless integration
[v0.0.8](https://github.com/morhetz/gruvbox/tree/v0.0.8) (2012-12-08)	~./config/nvim/plugged/gruvbox/CHANGELOG.md	/^## [v0.0.8](https:\/\/github.com\/morhetz\/gruvbox\/tree\/v0.0.8) (2012-12-08)$/;"	s	chapter:Change Log
[v1.3.5](https://github.com/morhetz/gruvbox/tree/v1.3.5) (2014-03-19)	~./config/nvim/plugged/gruvbox/CHANGELOG.md	/^## [v1.3.5](https:\/\/github.com\/morhetz\/gruvbox\/tree\/v1.3.5) (2014-03-19)$/;"	s	chapter:Change Log
[vim.battery][61]	autoload/plugged/vim-airline/README.md	/^#### [vim.battery][61]$/;"	t	section:Features""Seamless integration
[vimagit][50]	autoload/plugged/vim-airline/README.md	/^#### [vimagit][50]$/;"	t	section:Features""Seamless integration
[vimtex][53]	autoload/plugged/vim-airline/README.md	/^#### [vimtex][53]$/;"	t	section:Features""Seamless integration
[virtualenv][31]	autoload/plugged/vim-airline/README.md	/^#### [virtualenv][31]$/;"	t	section:Features""Seamless integration
[xkb-switch][48]/[xkb-layout][49]	autoload/plugged/vim-airline/README.md	/^#### [xkb-switch][48]\/[xkb-layout][49]$/;"	t	section:Features""Seamless integration
[{	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:false/;"	m
[{	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:true)/;"	m
[{	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:false/;"	m
[{	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:true)/;"	m
]	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:yR.k
]	autoload/plugged/fzf/shell/completion.bash	/^  if [ "$(type -t _fzf_comprun 2>&1)" = function ]; then$/;"	f
]#	autoload/plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> ]# :call search('^\\s*#\\@!', "W")<CR>$/;"	m
]<C-D>	autoload/plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> ]<C-D>      :<C-U>exe <SID>jump('edit',v:count)<SID>foldop/;"	m
]C	autoload/plugged/vim-signify/plugin/signify.vim	/^    nmap ]C 9999]c$/;"	m
]M	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'','n')<CR>$/;"	m
]M	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'','v')<CR>$/;"	m
][	autoload/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> <expr> ][ <sid>move('')$/;"	m
][	autoload/plugged/gv.vim/plugin/gv.vim	/^  xnoremap <silent> <buffer> <expr> ][ <sid>move('')$/;"	m
][	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>][ <Plug>(llvm-next-section-end)$/;"	m
][	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> ][ m':call <SID>toend('')<CR>$/;"	m
][	autoload/plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> ][ ':silent keeppatterns \/'.b:block_end  .'<CR>'$/;"	m
][	autoload/plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> ][ ':silent keeppatterns \/'.b:block_end  .'<CR>'$/;"	m
][	autoload/plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> ][ :call search('^\\s*endsub\\>', "W")<CR>$/;"	m
][	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^noremap <buffer> <silent> ][ :<C-U>call <SID>SearchSection(1, 0, '')<CR>$/;"	m
][	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^xnoremap <buffer> <silent> ][ :<C-U>call <SID>SearchSection(1, 0, visualmode())<CR>$/;"	m
][	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:false/;"	m
][	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:true)/;"	m
][	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:false/;"	m
][	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:true)/;"	m
][	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass']/;"	m
][	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass']/;"	m
][	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^nnoremap <buffer> <silent> ][ :call search('\\c^\\s*end\\W*$', 'W' )<CR>$/;"	m
][	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^xnoremap <buffer> <silent> ][ :<C-U>exec "normal! gv"<Bar>call search('\\c^\\s*end\\W*$', 'W' )</;"	m
][	autoload/plugged/vim-polyglot/ftplugin/vb.vim	/^nnoremap <buffer> <silent> ][ :call <SID>VbSearch('^\\s*\\<end\\>\\s\\+\\(function\\\\|sub\\)', /;"	m
][	autoload/plugged/vim-polyglot/ftplugin/vhdl.vim	/^noremap  <buffer><silent>][ :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\/;"	m
][	autoload/plugged/vim-polyglot/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>][ :<C-u>cal <SID>CountWrapper('][')<CR>$/;"	m
][	autoload/plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> ][ :call search('^<\/\\(template\\<Bar>script\\<Bar>style\\)', 'W')/;"	m
]]	autoload/plug.vim	/^  nnoremap <silent> <buffer> ]] :silent! call <SID>section('')<cr>$/;"	m
]]	autoload/plugged/fzf/shell/completion.zsh	/^  if [[ "$(type _fzf_comprun 2>&1)" =~ function ]]; then$/;"	f
]]	autoload/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> <expr> ]] <sid>move('')$/;"	m
]]	autoload/plugged/gv.vim/plugin/gv.vim	/^  xnoremap <silent> <buffer> <expr> ]] <sid>move('')$/;"	m
]]	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>]] <Plug>(llvm-next-section-begin)$/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/abaqus.vim	/^noremap <silent><buffer> ]] \/^\\*\\a<CR>:nohlsearch<CR>$/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> ]] m':call search('\\c^\\%(\\s*\\<Bar>.\\{6\\}\\s\\+\\)\\zs[A-Za-z/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> ]] ':silent keeppatterns \/'.b:block_begin.'<CR>'$/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> ]] ':silent keeppatterns \/'.b:block_begin.'<CR>'$/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> ]] :call search('^\\s*sub\\>', "W")<CR>$/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^nnoremap <silent> <buffer> ]] :<C-U>call <SID>sectionmovement('{{','' ,'n',v:count1)<CR>$/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^xnoremap <silent> <buffer> ]] :<C-U>call <SID>sectionmovement('{{','' ,'v',v:count1)<CR>$/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^noremap <buffer> <silent> ]] :<C-U>call <SID>SearchSection(0, 0, '')<CR>$/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^xnoremap <buffer> <silent> ]] :<C-U>call <SID>SearchSection(0, 0, visualmode())<CR>$/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:false/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:true)/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:false/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:true)/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['ru/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['ru/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^nnoremap <silent> <buffer> ]] :call rust#Jump('n', 'Forward')<CR>$/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^onoremap <silent> <buffer> ]] :call rust#Jump('o', 'Forward')<CR>$/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^xnoremap <silent> <buffer> ]] :call rust#Jump('v', 'Forward')<CR>$/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/scala.vim	/^noremap <script> <buffer> <silent> ]] :call <SID>NextSection(0)<cr>$/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^nnoremap <buffer> <silent> ]] :call search('\\c^\\s*begin\\>', 'W' )<CR>$/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^xnoremap <buffer> <silent> ]] :<C-U>exec "normal! gv"<Bar>call search('\\c^\\s*begin\\>', 'W' )</;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/vb.vim	/^nnoremap <buffer> <silent> ]] :call <SID>VbSearch('^\\s*\\(\\(private\\|public\\)\\s\\+\\)\\=\\(/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/vhdl.vim	/^noremap  <buffer><silent>]] :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>]] :<C-u>cal <SID>CountWrapper(']]')<CR>$/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> ]] :call search('^<\\(template\\<Bar>script\\<Bar>style\\)', 'W')<C/;"	m
]]	autoload/plugged/vim-polyglot/ftplugin/zimbu.vim	/^  nnoremap <silent> <buffer> ]] m`:call ZimbuGoEndBlock()<CR>$/;"	m
]b	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>]b <Plug>(llvm-move-block-next)$/;"	m
]c	autoload/plugged/vim-signify/plugin/signify.vim	/^  nmap ]c <plug>(signify-next-hunk)$/;"	m
]d	autoload/plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> ]d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
]g	plug-config/coc.vim	/^nmap <silent> ]g <Plug>(coc-diagnostic-next)$/;"	m
]m	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'','n')<CR>$/;"	m
]m	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'','v')<CR>$/;"	m
]}	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:false/;"	m
]}	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:true)/;"	m
]}	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:false/;"	m
]}	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:true)/;"	m
^.+\\\\.tsx?$	autoload/plugged/coc.nvim/package.json	/^      "^.+\\\\.tsx?$": "ts-jest"$/;"	s	object:jest.transform
^[_a-zA-Z]+$	autoload/plugged/coc.nvim/data/schema.json	/^        "^[_a-zA-Z]+$": {$/;"	o	object:properties.languageserver.patternProperties
_	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	p	class:AnonymousFunctionb666889221c00.o
_	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
_	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
_	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f	function:$D
_0	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	c
_1	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
_3	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
_5	autoload/plugged/coc.nvim/build/index.js	/^`)),m=+h.split(" ")[1];$p("got proxy server response: %o",h),e({statusCode:m,buffered:p})}r.on("/;"	v
_A	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
_B	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	f
_D	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	c
_F	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
_G	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
_L	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
_T	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
_X	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
_Y	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
_Z	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
__TEST__	autoload/plugged/coc.nvim/package.json	/^      "__TEST__": true$/;"	b	object:jest.globals
__fsel	autoload/plugged/fzf/shell/key-bindings.zsh	/^__fsel() {$/;"	f
__fzf_cd__	autoload/plugged/fzf/shell/key-bindings.bash	/^__fzf_cd__() {$/;"	f
__fzf_comprun	autoload/plugged/fzf/shell/completion.bash	/^__fzf_comprun() {$/;"	f
__fzf_comprun	autoload/plugged/fzf/shell/completion.zsh	/^__fzf_comprun() {$/;"	f
__fzf_defc	autoload/plugged/fzf/shell/completion.bash	/^__fzf_defc() {$/;"	f
__fzf_extract_command	autoload/plugged/fzf/shell/completion.zsh	/^__fzf_extract_command() {$/;"	f
__fzf_generic_path_completion	autoload/plugged/fzf/shell/completion.bash	/^__fzf_generic_path_completion() {$/;"	f
__fzf_generic_path_completion	autoload/plugged/fzf/shell/completion.zsh	/^__fzf_generic_path_completion() {$/;"	f
__fzf_history__	autoload/plugged/fzf/shell/key-bindings.bash	/^__fzf_history__() {$/;"	f
__fzf_orig_completion	autoload/plugged/fzf/shell/completion.bash	/^__fzf_orig_completion() {$/;"	f
__fzf_select__	autoload/plugged/fzf/shell/key-bindings.bash	/^__fzf_select__() {$/;"	f
__fzfcmd	autoload/plugged/fzf/shell/key-bindings.bash	/^__fzfcmd() {$/;"	f
__fzfcmd	autoload/plugged/fzf/shell/key-bindings.zsh	/^__fzfcmd() {$/;"	f
_append	autoload/plugged/coc.nvim/build/index.js	/^`)}_append(e){let{nvim:t}=this,i=this.lines.length-1,n=e.split(\/\\r?\\n\/),o=this.lines[i]+n[0]/;"	m	class:wD
_b	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	v
_c	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
_cache	autoload/plugged/fzf/src/pattern.go	/^	_cache        ChunkCache$/;"	v	package:fzf	typeref:typename:ChunkCache
_colorToAttribute	autoload/plugged/fzf/src/tui/tcell.go	/^	_colorToAttribute = []tcell.Color{$/;"	v	package:tui
_content	autoload/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:s}}function oj(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	G	class:i0
_de	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
_fetchContent	autoload/plugged/coc.nvim/build/index.js	/^`),s=ij(this.lines,o),a=await this.mutex.acquire();try{let l=await this.nvim.call("coc#util#set_/;"	m	class:o0
_fireContentChanges	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	m	class:o0
_fzf_alias_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_alias_completion() {$/;"	f
_fzf_compgen_dir	autoload/plugged/fzf/shell/completion.bash	/^  _fzf_compgen_dir() {$/;"	f
_fzf_compgen_dir	autoload/plugged/fzf/shell/completion.zsh	/^  _fzf_compgen_dir() {$/;"	f
_fzf_compgen_path	autoload/plugged/fzf/shell/completion.bash	/^  _fzf_compgen_path() {$/;"	f
_fzf_compgen_path	autoload/plugged/fzf/shell/completion.zsh	/^  _fzf_compgen_path() {$/;"	f
_fzf_complete	autoload/plugged/fzf/shell/completion.bash	/^_fzf_complete() {$/;"	f
_fzf_complete	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_complete() {$/;"	f
_fzf_complete_export	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_complete_export() {$/;"	f
_fzf_complete_kill	autoload/plugged/fzf/shell/completion.bash	/^_fzf_complete_kill() {$/;"	f
_fzf_complete_kill	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_complete_kill() {$/;"	f
_fzf_complete_kill_post	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_complete_kill_post() {$/;"	f
_fzf_complete_ssh	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_complete_ssh() {$/;"	f
_fzf_complete_telnet	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_complete_telnet() {$/;"	f
_fzf_complete_unalias	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_complete_unalias() {$/;"	f
_fzf_complete_unset	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_complete_unset() {$/;"	f
_fzf_dir_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_dir_completion() {$/;"	f
_fzf_dir_completion	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_dir_completion() {$/;"	f
_fzf_feed_fifo	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_feed_fifo() ($/;"	f
_fzf_file_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_file_completion() {$/;"	f
_fzf_handle_dynamic_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_handle_dynamic_completion() {$/;"	f
_fzf_host_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_host_completion() {$/;"	f
_fzf_opts_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_opts_completion() {$/;"	f
_fzf_path_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_path_completion() {$/;"	f
_fzf_path_completion	autoload/plugged/fzf/shell/completion.zsh	/^_fzf_path_completion() {$/;"	f
_fzf_proc_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_proc_completion() {$/;"	f
_fzf_proc_completion_post	autoload/plugged/fzf/shell/completion.bash	/^_fzf_proc_completion_post() {$/;"	f
_fzf_setup_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_setup_completion() {$/;"	f
_fzf_statusline	autoload/plugged/fzf.vim/plugin/fzf.vim	/^  augroup _fzf_statusline$/;"	a
_fzf_statusline	autoload/plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^  augroup _fzf_statusline$/;"	a
_fzf_var_completion	autoload/plugged/fzf/shell/completion.bash	/^_fzf_var_completion() {$/;"	f
_i	autoload/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:s}}function oj(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	c
_l	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
_ne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
_onCursorMoved	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	m	class:yD
_patternCache	autoload/plugged/fzf/src/pattern.go	/^	_patternCache map[string]*Pattern$/;"	v	package:fzf	typeref:typename:map[string]*Pattern
_pe	autoload/plugged/coc.nvim/build/index.js	/^`)}function _pe(r,e,t){return r=r.trim(),r=e?Npe(r,t):Lpe(r,t),r}function qf(r){return r+`$/;"	f
_refresh	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	m	class:_0
_runeWidths	autoload/plugged/fzf/src/util/util.go	/^var _runeWidths = make(map[rune]int)$/;"	v	package:util
_screen	autoload/plugged/fzf/src/tui/tcell.go	/^	_screen tcell.Screen$/;"	v	package:tui	typeref:typename:tcell.Screen
_se	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
_splitRegex	autoload/plugged/fzf/src/pattern.go	/^	_splitRegex   *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
_te	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
_u	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
_x	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
`--filter` will not block when sort is disabled	autoload/plugged/fzf/CHANGELOG.md	/^#### `--filter` will not block when sort is disabled$/;"	t	subsection:CHANGELOG""0.9.4""Improvements
`--height`	autoload/plugged/fzf/ADVANCED.md	/^### `--height`$/;"	S	section:Advanced fzf examples""Screen Layout
`:FZF[!]`	autoload/plugged/fzf/README-VIM.md	/^`:FZF[!]`$/;"	s	chapter:FZF Vim integration
`default`	autoload/plugged/vim-airline/README.md	/^#### `default`$/;"	t	section:Features""Smarter tab line
`fzf#run`	autoload/plugged/fzf/README-VIM.md	/^`fzf#run`$/;"	s	chapter:FZF Vim integration
`fzf#wrap`	autoload/plugged/fzf/README-VIM.md	/^`fzf#wrap`$/;"	s	chapter:FZF Vim integration
`fzf-tmux`	autoload/plugged/fzf/ADVANCED.md	/^### `fzf-tmux`$/;"	S	section:Advanced fzf examples""Screen Layout
`fzf-tmux` script	autoload/plugged/fzf/README.md	/^`fzf-tmux` script$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
`jsformatter`	autoload/plugged/vim-airline/README.md	/^#### `jsformatter`$/;"	t	section:Features""Smarter tab line
`unique_tail_improved`	autoload/plugged/vim-airline/README.md	/^#### `unique_tail_improved`$/;"	t	section:Features""Smarter tab line
`unique_tail`	autoload/plugged/vim-airline/README.md	/^#### `unique_tail`$/;"	t	section:Features""Smarter tab line
a	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionb666889210e00
a	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	c	class:AnonymousFunctionb6668892de00.e
a	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	c	class:AnonymousFunctionb6668892fe00.e
a	autoload/plugged/coc.nvim/build/index.js	/^`)),m=+h.split(" ")[1];$p("got proxy server response: %o",h),e({statusCode:m,buffered:p})}r.on("/;"	f	function:AnonymousFunctionb66688922dc00
a	autoload/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),ss("Output buffer: %o",e.outputData[0].data))/;"	f	function:$ve
a	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	c	class:sp.subscribe
a	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
a	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	f	function:AnonymousFunctionb66688922d500
a	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f	function:AnonymousFunctionb666889221c00
a	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f	function:AnonymousFunctionb666889222a00
a	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:AnonymousFunctionb66688923400
a	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
a	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
a	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	c	class:e0.modifyConfiguration
a	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	c	class:fde
a	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	c	class:y3
a	autoload/plugged/coc.nvim/build/index.js	/^`}get document(){return new Promise((e,t)=>{this.nvim.buffer.then(i=>{let n=i.id;if(this.bufnr=n/;"	v
a	autoload/plugged/coc.nvim/build/index.js	/^augroup end`;try{let o=Fe.default.join(process.env.TMPDIR,`coc.nvim-${process.pid}`);St.default./;"	v
a	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:TY
a	autoload/plugged/fzf/src/terminal.go	/^	a string$/;"	m	struct:fzf.action	typeref:typename:string
a$	autoload/plugged/coc.nvim/build/index.js	/^`?t[1].slice(0,-1):t[1]}}text(e,t){let i=this.rules.block.text.exec(e);if(i){let n=t[t.length-1]/;"	v
a0	autoload/plugged/coc.nvim/build/index.js	/^`);e=Zi.Position.create(e.line-o,e.character),t=Zi.Position.create(t.line-o,t.character);let l=k/;"	v
a3	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	v
a5	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
a7	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
aB	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	f
aE	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
aI	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
aL	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
aM	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
aM	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
aM	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^    xnoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
aN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
aR	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	v
aU	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	v
aV	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
aW	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
aZ	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
abe	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
about: Create a report to help us improve	autoload/plugged/coc.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^about: Create a report to help us improve$/;"	s
abstract classes	autoload/plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*abstract class[ \\t]+([a-zA-Z0-9_]+)\/\\2\/a,abstra/;"	k	langdef:typescript
abstract_role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role = {}$/;"	v
abstract_role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['composite'] = abstract_role['widget'] + ['aria-activedescendant']$/;"	v
abstract_role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['input'] = abstract_role['widget']$/;"	v
abstract_role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['landmark'] = role_attributes['region']$/;"	v
abstract_role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['range'] = abstract_role['input'] + ['aria-valuemax', 'aria-valuemin', 'aria-v/;"	v
abstract_role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['roletype'] = ['aria-atomic', 'aria-busy', 'aria-controls', 'aria-describedby'/;"	v
abstract_role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['section'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['sectionhead'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['select'] = abstract_role['composite'] + role_attributes['group'] + abstract_r/;"	v
abstract_role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['structure'] = abstract_role['roletype']$/;"	v
abstract_role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['widget'] = abstract_role['roletype']$/;"	v
abstract_role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['window'] = abstract_role['roletype'] + ['aria-expanded']$/;"	v
abutton_dec	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let abutton_dec = 'details\\\\|embed\\\\|iframe\\\\|keygen\\\\|label\\\\|menu\\\\|select\\\\|tex/;"	v
ac	plug-config/coc.vim	/^omap ac <Plug>(coc-classobj-a)$/;"	m
ac	plug-config/coc.vim	/^xmap ac <Plug>(coc-classobj-a)$/;"	m
acquire	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	m	class:ar
actAbort	autoload/plugged/fzf/src/terminal.go	/^	actAbort$/;"	c	package:fzf
actAccept	autoload/plugged/fzf/src/terminal.go	/^	actAccept$/;"	c	package:fzf
actAcceptNonEmpty	autoload/plugged/fzf/src/terminal.go	/^	actAcceptNonEmpty$/;"	c	package:fzf
actBackwardChar	autoload/plugged/fzf/src/terminal.go	/^	actBackwardChar$/;"	c	package:fzf
actBackwardDeleteChar	autoload/plugged/fzf/src/terminal.go	/^	actBackwardDeleteChar$/;"	c	package:fzf
actBackwardDeleteCharEOF	autoload/plugged/fzf/src/terminal.go	/^	actBackwardDeleteCharEOF$/;"	c	package:fzf
actBackwardKillWord	autoload/plugged/fzf/src/terminal.go	/^	actBackwardKillWord$/;"	c	package:fzf
actBackwardWord	autoload/plugged/fzf/src/terminal.go	/^	actBackwardWord$/;"	c	package:fzf
actBeginningOfLine	autoload/plugged/fzf/src/terminal.go	/^	actBeginningOfLine$/;"	c	package:fzf
actCancel	autoload/plugged/fzf/src/terminal.go	/^	actCancel$/;"	c	package:fzf
actChangePrompt	autoload/plugged/fzf/src/terminal.go	/^	actChangePrompt$/;"	c	package:fzf
actClearQuery	autoload/plugged/fzf/src/terminal.go	/^	actClearQuery$/;"	c	package:fzf
actClearScreen	autoload/plugged/fzf/src/terminal.go	/^	actClearScreen$/;"	c	package:fzf
actClearSelection	autoload/plugged/fzf/src/terminal.go	/^	actClearSelection$/;"	c	package:fzf
actClose	autoload/plugged/fzf/src/terminal.go	/^	actClose$/;"	c	package:fzf
actDeleteChar	autoload/plugged/fzf/src/terminal.go	/^	actDeleteChar$/;"	c	package:fzf
actDeleteCharEOF	autoload/plugged/fzf/src/terminal.go	/^	actDeleteCharEOF$/;"	c	package:fzf
actDeselect	autoload/plugged/fzf/src/terminal.go	/^	actDeselect$/;"	c	package:fzf
actDeselectAll	autoload/plugged/fzf/src/terminal.go	/^	actDeselectAll$/;"	c	package:fzf
actDisableSearch	autoload/plugged/fzf/src/terminal.go	/^	actDisableSearch$/;"	c	package:fzf
actDown	autoload/plugged/fzf/src/terminal.go	/^	actDown$/;"	c	package:fzf
actEnableSearch	autoload/plugged/fzf/src/terminal.go	/^	actEnableSearch$/;"	c	package:fzf
actEndOfLine	autoload/plugged/fzf/src/terminal.go	/^	actEndOfLine$/;"	c	package:fzf
actExecute	autoload/plugged/fzf/src/terminal.go	/^	actExecute$/;"	c	package:fzf
actExecuteMulti	autoload/plugged/fzf/src/terminal.go	/^	actExecuteMulti \/\/ Deprecated$/;"	c	package:fzf
actExecuteSilent	autoload/plugged/fzf/src/terminal.go	/^	actExecuteSilent$/;"	c	package:fzf
actFirst	autoload/plugged/fzf/src/terminal.go	/^	actFirst$/;"	c	package:fzf
actForwardChar	autoload/plugged/fzf/src/terminal.go	/^	actForwardChar$/;"	c	package:fzf
actForwardWord	autoload/plugged/fzf/src/terminal.go	/^	actForwardWord$/;"	c	package:fzf
actHalfPageDown	autoload/plugged/fzf/src/terminal.go	/^	actHalfPageDown$/;"	c	package:fzf
actHalfPageUp	autoload/plugged/fzf/src/terminal.go	/^	actHalfPageUp$/;"	c	package:fzf
actIgnore	autoload/plugged/fzf/src/terminal.go	/^	actIgnore actionType = iota$/;"	c	package:fzf	typeref:type:actionType
actInvalid	autoload/plugged/fzf/src/terminal.go	/^	actInvalid$/;"	c	package:fzf
actJump	autoload/plugged/fzf/src/terminal.go	/^	actJump$/;"	c	package:fzf
actJumpAccept	autoload/plugged/fzf/src/terminal.go	/^	actJumpAccept$/;"	c	package:fzf
actKillLine	autoload/plugged/fzf/src/terminal.go	/^	actKillLine$/;"	c	package:fzf
actKillWord	autoload/plugged/fzf/src/terminal.go	/^	actKillWord$/;"	c	package:fzf
actLast	autoload/plugged/fzf/src/terminal.go	/^	actLast$/;"	c	package:fzf
actMouse	autoload/plugged/fzf/src/terminal.go	/^	actMouse$/;"	c	package:fzf
actNextHistory	autoload/plugged/fzf/src/terminal.go	/^	actNextHistory$/;"	c	package:fzf
actPageDown	autoload/plugged/fzf/src/terminal.go	/^	actPageDown$/;"	c	package:fzf
actPageUp	autoload/plugged/fzf/src/terminal.go	/^	actPageUp$/;"	c	package:fzf
actPreview	autoload/plugged/fzf/src/terminal.go	/^	actPreview$/;"	c	package:fzf
actPreviewBottom	autoload/plugged/fzf/src/terminal.go	/^	actPreviewBottom$/;"	c	package:fzf
actPreviewDown	autoload/plugged/fzf/src/terminal.go	/^	actPreviewDown$/;"	c	package:fzf
actPreviewHalfPageDown	autoload/plugged/fzf/src/terminal.go	/^	actPreviewHalfPageDown$/;"	c	package:fzf
actPreviewHalfPageUp	autoload/plugged/fzf/src/terminal.go	/^	actPreviewHalfPageUp$/;"	c	package:fzf
actPreviewPageDown	autoload/plugged/fzf/src/terminal.go	/^	actPreviewPageDown$/;"	c	package:fzf
actPreviewPageUp	autoload/plugged/fzf/src/terminal.go	/^	actPreviewPageUp$/;"	c	package:fzf
actPreviewTop	autoload/plugged/fzf/src/terminal.go	/^	actPreviewTop$/;"	c	package:fzf
actPreviewUp	autoload/plugged/fzf/src/terminal.go	/^	actPreviewUp$/;"	c	package:fzf
actPreviousHistory	autoload/plugged/fzf/src/terminal.go	/^	actPreviousHistory$/;"	c	package:fzf
actPrintQuery	autoload/plugged/fzf/src/terminal.go	/^	actPrintQuery$/;"	c	package:fzf
actRefreshPreview	autoload/plugged/fzf/src/terminal.go	/^	actRefreshPreview$/;"	c	package:fzf
actReload	autoload/plugged/fzf/src/terminal.go	/^	actReload$/;"	c	package:fzf
actReplaceQuery	autoload/plugged/fzf/src/terminal.go	/^	actReplaceQuery$/;"	c	package:fzf
actRune	autoload/plugged/fzf/src/terminal.go	/^	actRune$/;"	c	package:fzf
actSelect	autoload/plugged/fzf/src/terminal.go	/^	actSelect$/;"	c	package:fzf
actSelectAll	autoload/plugged/fzf/src/terminal.go	/^	actSelectAll$/;"	c	package:fzf
actSigStop	autoload/plugged/fzf/src/terminal.go	/^	actSigStop$/;"	c	package:fzf
actToggle	autoload/plugged/fzf/src/terminal.go	/^	actToggle$/;"	c	package:fzf
actToggleAll	autoload/plugged/fzf/src/terminal.go	/^	actToggleAll$/;"	c	package:fzf
actToggleDown	autoload/plugged/fzf/src/terminal.go	/^	actToggleDown$/;"	c	package:fzf
actToggleIn	autoload/plugged/fzf/src/terminal.go	/^	actToggleIn$/;"	c	package:fzf
actToggleOut	autoload/plugged/fzf/src/terminal.go	/^	actToggleOut$/;"	c	package:fzf
actTogglePreview	autoload/plugged/fzf/src/terminal.go	/^	actTogglePreview$/;"	c	package:fzf
actTogglePreviewWrap	autoload/plugged/fzf/src/terminal.go	/^	actTogglePreviewWrap$/;"	c	package:fzf
actToggleSearch	autoload/plugged/fzf/src/terminal.go	/^	actToggleSearch$/;"	c	package:fzf
actToggleSort	autoload/plugged/fzf/src/terminal.go	/^	actToggleSort$/;"	c	package:fzf
actToggleUp	autoload/plugged/fzf/src/terminal.go	/^	actToggleUp$/;"	c	package:fzf
actUnixLineDiscard	autoload/plugged/fzf/src/terminal.go	/^	actUnixLineDiscard$/;"	c	package:fzf
actUnixWordRubout	autoload/plugged/fzf/src/terminal.go	/^	actUnixWordRubout$/;"	c	package:fzf
actUp	autoload/plugged/fzf/src/terminal.go	/^	actUp$/;"	c	package:fzf
actYank	autoload/plugged/fzf/src/terminal.go	/^	actYank$/;"	c	package:fzf
action	autoload/plugged/fzf/src/terminal.go	/^type action struct {$/;"	s	package:fzf
actionType	autoload/plugged/fzf/src/terminal.go	/^type actionType int$/;"	t	package:fzf	typeref:typename:int
activeTempFiles	autoload/plugged/fzf/src/terminal.go	/^var activeTempFiles []string$/;"	v	package:fzf	typeref:typename:[]string
actual behavior	autoload/plugged/vim-airline-themes/.github/ISSUE_TEMPLATE.md	/^#### actual behavior$/;"	t
actual behavior	autoload/plugged/vim-airline/.github/ISSUE_TEMPLATE.md	/^#### actual behavior$/;"	t
ada#Completion	autoload/plugged/vim-polyglot/autoload/ada.vim	/^function ada#Completion (cmd)$/;"	f
ada#Completion_End	autoload/plugged/vim-polyglot/autoload/ada.vim	/^function ada#Completion_End ()$/;"	f
ada#Create_Tags	autoload/plugged/vim-polyglot/autoload/ada.vim	/^function ada#Create_Tags (option)$/;"	f
ada#Insert_Backspace	autoload/plugged/vim-polyglot/autoload/ada.vim	/^function ada#Insert_Backspace ()$/;"	f
ada#Jump_Tag	autoload/plugged/vim-polyglot/autoload/ada.vim	/^function ada#Jump_Tag (Word, Mode)$/;"	f
ada#List_Tag	autoload/plugged/vim-polyglot/autoload/ada.vim	/^function ada#List_Tag (...)$/;"	f
ada#Map_Menu	autoload/plugged/vim-polyglot/autoload/ada.vim	/^function ada#Map_Menu (Text, Keys, Command)$/;"	f
ada#Map_Popup	autoload/plugged/vim-polyglot/autoload/ada.vim	/^function ada#Map_Popup (Text, Keys, Command)$/;"	f
ada#Pretty_Print_Folding	autoload/plugged/vim-polyglot/autoload/ada.vim	/^   function ada#Pretty_Print_Folding (Line)			     " {{{2$/;"	f
ada#Switch_Session	autoload/plugged/vim-polyglot/autoload/ada.vim	/^function ada#Switch_Session (New_Session)$/;"	f
ada#Switch_Syntax_Option	autoload/plugged/vim-polyglot/autoload/ada.vim	/^function ada#Switch_Syntax_Option (option)$/;"	f
ada#User_Complete	autoload/plugged/vim-polyglot/autoload/ada.vim	/^function! ada#User_Complete(findstart, base)$/;"	f
ada#Word	autoload/plugged/vim-polyglot/autoload/ada.vim	/^function ada#Word (...)$/;"	f
ada_session	autoload/plugged/vim-polyglot/autoload/ada.vim	/^	 augroup ada_session$/;"	a
add	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	m	class:r
add	autoload/plugged/coc.nvim/build/index.js	/^`):[]}catch(t){return[]}}async add(e){let t=await this.load(),i=t.indexOf(e);i!==-1&&t.splice(i,/;"	m	class:l0
addKeymappings	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:CD
addKeymappings	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:SD
addKeys	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:SD
addKeyword	autoload/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:s}}function oj(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	m	class:Qf
addRequest	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	m	class:AnonymousFunctionb66688922d400.e
addSigns	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	m	class:_0
additionalProperties	autoload/plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false$/;"	b	object:properties.suggest.completionItemKindLabels
additionalProperties	autoload/plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:definitions.languageServerCommand
additionalProperties	autoload/plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:definitions.languageServerModule
additionalProperties	autoload/plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:definitions.languageServerSocket
additionalProperties	autoload/plugged/coc.nvim/data/schema.json	/^  "additionalProperties": false,$/;"	b
additionalSchemes	autoload/plugged/coc.nvim/data/schema.json	/^        "additionalSchemes": {$/;"	o	object:definitions.languageServerBase.properties
additionalSchemes	autoload/plugged/coc.nvim/data/schema.json	/^        "additionalSchemes": {},$/;"	o	object:definitions.languageServerCommand.properties
additionalSchemes	autoload/plugged/coc.nvim/data/schema.json	/^        "additionalSchemes": {},$/;"	o	object:definitions.languageServerModule.properties
additionalSchemes	autoload/plugged/coc.nvim/data/schema.json	/^        "additionalSchemes": {},$/;"	o	object:definitions.languageServerSocket.properties
ade	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
ae	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
ae	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^  onoremap <silent> <buffer> ae :<C-U>call <SID>wrap_around()<CR>$/;"	m
ae	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^  xnoremap <silent> <buffer> ae :<C-U>call <SID>wrap_around()<CR>$/;"	m
af	plug-config/coc.vim	/^omap af <Plug>(coc-funcobj-a)$/;"	m
af	plug-config/coc.vim	/^xmap af <Plug>(coc-funcobj-a)$/;"	m
after	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:OW.s.c
ah	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
ahe	autoload/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(o):i+=Ql(o)+n+Ql(l)+F0}),e.section&&i.length&&(i="["+Ql(e.secti/;"	f
airline	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^augroup airline#extensions#cursormode$/;"	a
airline	autoload/plugged/vim-airline/plugin/airline.vim	/^    augroup airline$/;"	a
airline#add_inactive_statusline_func	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#add_inactive_statusline_func(name)$/;"	f
airline#add_statusline_func	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_func(name)$/;"	f
airline#add_statusline_funcref	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_funcref(function)$/;"	f
airline#async#get_mq_async	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#get_mq_async(cmd, file)$/;"	f
airline#async#get_msgfmt_stat	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#get_msgfmt_stat(cmd, file)$/;"	f
airline#async#mq_output	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#mq_output(buf, file)$/;"	f
airline#async#nvim_get_mq_async	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_get_mq_async(cmd, file)$/;"	f
airline#async#nvim_get_msgfmt_stat	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_get_msgfmt_stat(cmd, file)$/;"	f
airline#async#nvim_vcs_clean	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#nvim_vcs_untracked	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#nvim_vcs_untracked(cfg, file, vcs)$/;"	f
airline#async#vcs_clean	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#vcs_clean(cmd, file, vcs)$/;"	f
airline#async#vcs_untracked	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#vcs_untracked(config, file, vcs)$/;"	f
airline#async#vim7_vcs_clean	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#vim7_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#vim_vcs_clean	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#vim_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#vim_vcs_untracked	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#vim_vcs_untracked(config, file)$/;"	f
airline#builder#get_next_group	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#get_next_group(sections, i)$/;"	f
airline#builder#get_prev_group	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#get_prev_group(sections, i)$/;"	f
airline#builder#new	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#new(context)$/;"	f
airline#builder#should_change_group	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#should_change_group(group1, group2)$/;"	f
airline#check_mode	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#check_mode(winnr)$/;"	f
airline#cmdwinenter	autoload/plugged/vim-airline/plugin/airline.vim	/^function! airline#cmdwinenter(...)$/;"	f
airline#debug#profile1	autoload/plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile1()$/;"	f
airline#debug#profile2	autoload/plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile2()$/;"	f
airline#debug#profile3	autoload/plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile3()$/;"	f
airline#extensions#ale#get	autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get(type)$/;"	f
airline#extensions#ale#get_error	autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_error()$/;"	f
airline#extensions#ale#get_warning	autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_warning()$/;"	f
airline#extensions#ale#init	autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#init(ext)$/;"	f
airline#extensions#append_to_section	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#append_to_section(name, value)$/;"	f
airline#extensions#apply	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply(...)$/;"	f
airline#extensions#apply_left_override	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply_left_override(section1, section2)$/;"	f
airline#extensions#battery#init	autoload/plugged/vim-airline/autoload/airline/extensions/battery.vim	/^function! airline#extensions#battery#init(ext) abort$/;"	f
airline#extensions#battery#status	autoload/plugged/vim-airline/autoload/airline/extensions/battery.vim	/^function! airline#extensions#battery#status(...) abort$/;"	f
airline#extensions#bookmark#currentbookmark	autoload/plugged/vim-airline/autoload/airline/extensions/bookmark.vim	/^function! airline#extensions#bookmark#currentbookmark() abort$/;"	f
airline#extensions#bookmark#init	autoload/plugged/vim-airline/autoload/airline/extensions/bookmark.vim	/^function! airline#extensions#bookmark#init(ext) abort$/;"	f
airline#extensions#branch#get_head	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#get_head()$/;"	f
airline#extensions#branch#head	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#head()$/;"	f
airline#extensions#branch#init	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#init(ext)$/;"	f
airline#extensions#branch#update_untracked_config	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#update_untracked_config(file, vcs)$/;"	f
airline#extensions#bufferline#init	autoload/plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^function! airline#extensions#bufferline#init(ext)$/;"	f
airline#extensions#capslock#init	autoload/plugged/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#init(ext)$/;"	f
airline#extensions#capslock#status	autoload/plugged/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#status()$/;"	f
airline#extensions#coc#get	autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get(type) abort$/;"	f
airline#extensions#coc#get_current_function	autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_current_function() abort$/;"	f
airline#extensions#coc#get_error	autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_error() abort$/;"	f
airline#extensions#coc#get_status	autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_status() abort$/;"	f
airline#extensions#coc#get_warning	autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_warning() abort$/;"	f
airline#extensions#coc#init	autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#init(ext) abort$/;"	f
airline#extensions#commandt#apply	autoload/plugged/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#apply(...)$/;"	f
airline#extensions#commandt#init	autoload/plugged/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#init(ext)$/;"	f
airline#extensions#csv#apply	autoload/plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#apply(...)$/;"	f
airline#extensions#csv#get_column	autoload/plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#get_column()$/;"	f
airline#extensions#csv#init	autoload/plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#init(ext)$/;"	f
airline#extensions#ctrlp#apply	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#apply(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline_status	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline_status(...)$/;"	f
airline#extensions#ctrlp#generate_color_map	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#generate_color_map(dark, light, white)$/;"	f
airline#extensions#ctrlp#init	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#init(ext)$/;"	f
airline#extensions#ctrlp#load_theme	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#load_theme(palette)$/;"	f
airline#extensions#ctrlspace#init	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#init(ext) abort$/;"	f
airline#extensions#ctrlspace#statusline	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#statusline(...) abort$/;"	f
airline#extensions#cursormode#activate	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#activate()$/;"	f
airline#extensions#cursormode#apply	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#apply(...)$/;"	f
airline#extensions#cursormode#init	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#init(ext)$/;"	f
airline#extensions#cursormode#set	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#set(...)$/;"	f
airline#extensions#cursormode#tmux_escape	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#tmux_escape(escape)$/;"	f
airline#extensions#default#apply	autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! airline#extensions#default#apply(builder, context)$/;"	f
airline#extensions#denite#apply	autoload/plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#apply(...) abort$/;"	f
airline#extensions#denite#check_denite_mode	autoload/plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#check_denite_mode(bufnr) abort$/;"	f
airline#extensions#denite#init	autoload/plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#init(ext) abort$/;"	f
airline#extensions#dirvish#apply	autoload/plugged/vim-airline/autoload/airline/extensions/dirvish.vim	/^function! airline#extensions#dirvish#apply(...) abort$/;"	f
airline#extensions#dirvish#init	autoload/plugged/vim-airline/autoload/airline/extensions/dirvish.vim	/^function! airline#extensions#dirvish#init(ext) abort$/;"	f
airline#extensions#eclim#creat_line	autoload/plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#creat_line(...)$/;"	f
airline#extensions#eclim#get_warnings	autoload/plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#get_warnings()$/;"	f
airline#extensions#eclim#init	autoload/plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#init(ext)$/;"	f
airline#extensions#example#apply	autoload/plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#apply(...)$/;"	f
airline#extensions#example#get_cats	autoload/plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#get_cats()$/;"	f
airline#extensions#example#init	autoload/plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#init(ext)$/;"	f
airline#extensions#fern#apply	autoload/plugged/vim-airline/autoload/airline/extensions/fern.vim	/^function! airline#extensions#fern#apply(...) abort$/;"	f
airline#extensions#fern#init	autoload/plugged/vim-airline/autoload/airline/extensions/fern.vim	/^function! airline#extensions#fern#init(ext) abort$/;"	f
airline#extensions#fugitiveline#bufname	autoload/plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! airline#extensions#fugitiveline#bufname()$/;"	f
airline#extensions#fugitiveline#init	autoload/plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! airline#extensions#fugitiveline#init(ext)$/;"	f
airline#extensions#fzf#apply	autoload/plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#apply(...) abort$/;"	f
airline#extensions#fzf#inactive_apply	autoload/plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#inactive_apply(...) abort$/;"	f
airline#extensions#fzf#init	autoload/plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#init(ext) abort$/;"	f
airline#extensions#fzf#statusline	autoload/plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#statusline(...) abort$/;"	f
airline#extensions#gen_tags#init	autoload/plugged/vim-airline/autoload/airline/extensions/gen_tags.vim	/^function! airline#extensions#gen_tags#init(ext) abort$/;"	f
airline#extensions#gen_tags#status	autoload/plugged/vim-airline/autoload/airline/extensions/gen_tags.vim	/^function! airline#extensions#gen_tags#status(...) abort$/;"	f
airline#extensions#get_loaded_extensions	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#get_loaded_extensions()$/;"	f
airline#extensions#gina#apply	autoload/plugged/vim-airline/autoload/airline/extensions/gina.vim	/^function! airline#extensions#gina#apply(...) abort$/;"	f
airline#extensions#gina#init	autoload/plugged/vim-airline/autoload/airline/extensions/gina.vim	/^function! airline#extensions#gina#init(ext) abort$/;"	f
airline#extensions#grepper#init	autoload/plugged/vim-airline/autoload/airline/extensions/grepper.vim	/^function! airline#extensions#grepper#init(ext)$/;"	f
airline#extensions#grepper#status	autoload/plugged/vim-airline/autoload/airline/extensions/grepper.vim	/^function! airline#extensions#grepper#status()$/;"	f
airline#extensions#gutentags#init	autoload/plugged/vim-airline/autoload/airline/extensions/gutentags.vim	/^function! airline#extensions#gutentags#init(ext)$/;"	f
airline#extensions#gutentags#status	autoload/plugged/vim-airline/autoload/airline/extensions/gutentags.vim	/^function! airline#extensions#gutentags#status()$/;"	f
airline#extensions#hunks#get_hunks	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_hunks() abort$/;"	f
airline#extensions#hunks#get_raw_hunks	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_raw_hunks() abort$/;"	f
airline#extensions#hunks#init	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#init(ext) abort$/;"	f
airline#extensions#keymap#init	autoload/plugged/vim-airline/autoload/airline/extensions/keymap.vim	/^function! airline#extensions#keymap#init(ext)$/;"	f
airline#extensions#keymap#status	autoload/plugged/vim-airline/autoload/airline/extensions/keymap.vim	/^function! airline#extensions#keymap#status()$/;"	f
airline#extensions#languageclient#get	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get(type)$/;"	f
airline#extensions#languageclient#get_error	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get_error()$/;"	f
airline#extensions#languageclient#get_warning	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get_warning()$/;"	f
airline#extensions#languageclient#init	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#init(ext)$/;"	f
airline#extensions#load	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load()$/;"	f
airline#extensions#load_theme	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load_theme()$/;"	f
airline#extensions#localsearch#apply	autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#apply(...) abort$/;"	f
airline#extensions#localsearch#init	autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#init(ext) abort$/;"	f
airline#extensions#localsearch#load_theme	autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#load_theme(palette) abort$/;"	f
airline#extensions#lsp#get	autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get(type) abort$/;"	f
airline#extensions#lsp#get_error	autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get_error() abort$/;"	f
airline#extensions#lsp#get_warning	autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get_warning() abort$/;"	f
airline#extensions#lsp#init	autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#init(ext) abort$/;"	f
airline#extensions#lsp#progress	autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#progress() abort$/;"	f
airline#extensions#lsp#update	autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#update() abort$/;"	f
airline#extensions#neomake#get_errors	autoload/plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_errors()$/;"	f
airline#extensions#neomake#get_warnings	autoload/plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_warnings()$/;"	f
airline#extensions#neomake#init	autoload/plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#init(ext)$/;"	f
airline#extensions#netrw#apply	autoload/plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#apply(...)$/;"	f
airline#extensions#netrw#init	autoload/plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#init(ext)$/;"	f
airline#extensions#netrw#sortstring	autoload/plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#sortstring()$/;"	f
airline#extensions#nrrwrgn#apply	autoload/plugged/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#apply(...)$/;"	f
airline#extensions#nrrwrgn#init	autoload/plugged/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#init(ext)$/;"	f
airline#extensions#nvimlsp#get	autoload/plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get(type) abort$/;"	f
airline#extensions#nvimlsp#get_error	autoload/plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get_error() abort$/;"	f
airline#extensions#nvimlsp#get_warning	autoload/plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get_warning() abort$/;"	f
airline#extensions#nvimlsp#init	autoload/plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#init(ext) abort$/;"	f
airline#extensions#obsession#get_status	autoload/plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#get_status()$/;"	f
airline#extensions#obsession#init	autoload/plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#init(ext)$/;"	f
airline#extensions#omnisharp#init	autoload/plugged/vim-airline/autoload/airline/extensions/omnisharp.vim	/^function! airline#extensions#omnisharp#init(ext) abort$/;"	f
airline#extensions#omnisharp#server_status	autoload/plugged/vim-airline/autoload/airline/extensions/omnisharp.vim	/^function! airline#extensions#omnisharp#server_status(...) abort$/;"	f
airline#extensions#po#apply	autoload/plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#apply(...)$/;"	f
airline#extensions#po#init	autoload/plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#init(ext)$/;"	f
airline#extensions#po#on_winenter	autoload/plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#on_winenter()$/;"	f
airline#extensions#po#shorten	autoload/plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#shorten()$/;"	f
airline#extensions#po#stats	autoload/plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#stats()$/;"	f
airline#extensions#poetv#apply	autoload/plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#apply(...)$/;"	f
airline#extensions#poetv#init	autoload/plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#init(ext)$/;"	f
airline#extensions#poetv#update	autoload/plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#update()$/;"	f
airline#extensions#prepend_to_section	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#prepend_to_section(name, value)$/;"	f
airline#extensions#promptline#init	autoload/plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#init(ext)$/;"	f
airline#extensions#promptline#set_prompt_colors	autoload/plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#set_prompt_colors(palette)$/;"	f
airline#extensions#quickfix#apply	autoload/plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#apply(...)$/;"	f
airline#extensions#quickfix#get_type	autoload/plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#get_type()$/;"	f
airline#extensions#quickfix#inactive_qf_window	autoload/plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#inactive_qf_window(...)$/;"	f
airline#extensions#quickfix#init	autoload/plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#init(ext)$/;"	f
airline#extensions#scrollbar#calculate	autoload/plugged/vim-airline/autoload/airline/extensions/scrollbar.vim	/^function! airline#extensions#scrollbar#calculate() abort$/;"	f
airline#extensions#scrollbar#init	autoload/plugged/vim-airline/autoload/airline/extensions/scrollbar.vim	/^function! airline#extensions#scrollbar#init(ext) abort$/;"	f
airline#extensions#searchcount#apply	autoload/plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#apply(...) abort$/;"	f
airline#extensions#searchcount#init	autoload/plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#init(ext) abort$/;"	f
airline#extensions#searchcount#status	autoload/plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#status() abort$/;"	f
airline#extensions#syntastic#get	autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get(type)$/;"	f
airline#extensions#syntastic#get_error	autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_error()$/;"	f
airline#extensions#syntastic#get_warning	autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_warning()$/;"	f
airline#extensions#syntastic#init	autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#init(ext)$/;"	f
airline#extensions#tabline#add_label	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#add_label(dict, type, right)$/;"	f
airline#extensions#tabline#add_tab_label	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#add_tab_label(dict)$/;"	f
airline#extensions#tabline#autoshow#off	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#off()$/;"	f
airline#extensions#tabline#autoshow#on	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#on()$/;"	f
airline#extensions#tabline#buffers#clickbuf	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#clickbuf(minwid, clicks, button, modifiers) abort$/;"	f
airline#extensions#tabline#buffers#get	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#get()$/;"	f
airline#extensions#tabline#buffers#invalidate	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#invalidate()$/;"	f
airline#extensions#tabline#buffers#off	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#off()$/;"	f
airline#extensions#tabline#buffers#on	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#on()$/;"	f
airline#extensions#tabline#buflist#clean	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#clean()$/;"	f
airline#extensions#tabline#buflist#invalidate	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#invalidate()$/;"	f
airline#extensions#tabline#buflist#list	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#list()$/;"	f
airline#extensions#tabline#builder#new	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! airline#extensions#tabline#builder#new(context)$/;"	f
airline#extensions#tabline#ctrlspace#add_buffer_section	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_buffer_section(builder, cur_tab, cur_buf, pul/;"	f
airline#extensions#tabline#ctrlspace#add_tab_section	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_tab_section(builder, pull_right)$/;"	f
airline#extensions#tabline#ctrlspace#get	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#get()$/;"	f
airline#extensions#tabline#ctrlspace#invalidate	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#invalidate()$/;"	f
airline#extensions#tabline#ctrlspace#off	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#off()$/;"	f
airline#extensions#tabline#ctrlspace#on	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#on()$/;"	f
airline#extensions#tabline#enable	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  def airline#extensions#tabline#enable(): void$/;"	f
airline#extensions#tabline#enable	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  function! airline#extensions#tabline#enable()$/;"	f
airline#extensions#tabline#formatters#default#format	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^  def airline#extensions#tabline#formatters#default#format(bufnr: number, buffers: list<number>)/;"	f
airline#extensions#tabline#formatters#default#format	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^  function! airline#extensions#tabline#formatters#default#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#default#wrap_name	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^  def airline#extensions#tabline#formatters#default#wrap_name(bufnr: number, buffer_name: string/;"	f
airline#extensions#tabline#formatters#default#wrap_name	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^  function! airline#extensions#tabline#formatters#default#wrap_name(bufnr, buffer_name)$/;"	f
airline#extensions#tabline#formatters#jsformatter#format	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/jsformatter.vim	/^function! airline#extensions#tabline#formatters#jsformatter#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#short_path#format	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/short_path.vim	/^function! airline#extensions#tabline#formatters#short_path#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#tabnr#format	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/tabnr.vim	/^function! airline#extensions#tabline#formatters#tabnr#format(tab_nr_type, nr)$/;"	f
airline#extensions#tabline#formatters#unique_tail#format	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail.vim	/^function! airline#extensions#tabline#formatters#unique_tail#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#unique_tail_improved#format	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^function! airline#extensions#tabline#formatters#unique_tail_improved#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#get	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  def airline#extensions#tabline#get(): string$/;"	f
airline#extensions#tabline#get	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  function! airline#extensions#tabline#get()$/;"	f
airline#extensions#tabline#get_buffer_name	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  def airline#extensions#tabline#get_buffer_name(nr: number, buffers = airline#extensions#tablin/;"	f
airline#extensions#tabline#get_buffer_name	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  function! airline#extensions#tabline#get_buffer_name(nr, ...)$/;"	f
airline#extensions#tabline#group_of_bufnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  def airline#extensions#tabline#group_of_bufnr(tab_bufs: list<number>, bufnr: number): string$/;"	f
airline#extensions#tabline#group_of_bufnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  function! airline#extensions#tabline#group_of_bufnr(tab_bufs, bufnr)$/;"	f
airline#extensions#tabline#init	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#init(ext)$/;"	f
airline#extensions#tabline#load_theme	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  def airline#extensions#tabline#load_theme(palette: dict<any>): number$/;"	f
airline#extensions#tabline#load_theme	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  function! airline#extensions#tabline#load_theme(palette)$/;"	f
airline#extensions#tabline#new_builder	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  def airline#extensions#tabline#new_builder(): dict<any>$/;"	f
airline#extensions#tabline#new_builder	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  function! airline#extensions#tabline#new_builder()$/;"	f
airline#extensions#tabline#redraw	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  def airline#extensions#tabline#redraw(): void$/;"	f
airline#extensions#tabline#redraw	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  function! airline#extensions#tabline#redraw()$/;"	f
airline#extensions#tabline#tabs#get	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#get()$/;"	f
airline#extensions#tabline#tabs#invalidate	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#invalidate()$/;"	f
airline#extensions#tabline#tabs#map_keys	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#map_keys()$/;"	f
airline#extensions#tabline#tabs#off	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#off()$/;"	f
airline#extensions#tabline#tabs#on	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#on()$/;"	f
airline#extensions#tabline#tabs#tabnr_formatter	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#tabnr_formatter(nr, i) abort$/;"	f
airline#extensions#tabline#tabws#add_buffer_section	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#add_buffer_section(builder, cur_tab, cur_buf, pull_ri/;"	f
airline#extensions#tabline#tabws#add_tab_section	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#add_tab_section(builder, pull_right)$/;"	f
airline#extensions#tabline#tabws#get	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#get()$/;"	f
airline#extensions#tabline#tabws#invalidate	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#invalidate()$/;"	f
airline#extensions#tabline#tabws#off	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#off()$/;"	f
airline#extensions#tabline#tabws#on	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#on()$/;"	f
airline#extensions#tabline#title	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  def airline#extensions#tabline#title(n: number): string$/;"	f
airline#extensions#tabline#title	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  function! airline#extensions#tabline#title(n)$/;"	f
airline#extensions#tabline#xtabline#filter_buffers	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#filter_buffers()$/;"	f
airline#extensions#tabline#xtabline#init	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#init()$/;"	f
airline#extensions#tabline#xtabline#maps	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#maps()$/;"	f
airline#extensions#tabline#xtabline#next_buffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#next_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#prev_buffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#prev_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#reopen_last_tab	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#reopen_last_tab()$/;"	f
airline#extensions#tabline#xtabline#select_buffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#select_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#toggle_buffers	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#toggle_buffers()$/;"	f
airline#extensions#tabline#xtabline#toggle_tabs	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#toggle_tabs()$/;"	f
airline#extensions#tabline#xtabline#update_obsession	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#update_obsession()$/;"	f
airline#extensions#tagbar#currenttag	autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#currenttag()$/;"	f
airline#extensions#tagbar#get_status	autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#get_status(...)$/;"	f
airline#extensions#tagbar#inactive_apply	autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#inactive_apply(...)$/;"	f
airline#extensions#tagbar#init	autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#init(ext)$/;"	f
airline#extensions#term#apply	autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#apply(...) abort$/;"	f
airline#extensions#term#inactive_apply	autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#inactive_apply(...) abort$/;"	f
airline#extensions#term#init	autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#init(ext) abort$/;"	f
airline#extensions#term#termmode	autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#termmode() abort$/;"	f
airline#extensions#tmuxline#init	autoload/plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#init(ext)$/;"	f
airline#extensions#tmuxline#set_tmux_colors	autoload/plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#set_tmux_colors(palette)$/;"	f
airline#extensions#undotree#apply	autoload/plugged/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#apply(...)$/;"	f
airline#extensions#undotree#init	autoload/plugged/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#init(ext)$/;"	f
airline#extensions#unicode#apply	autoload/plugged/vim-airline/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#apply(...)$/;"	f
airline#extensions#unicode#init	autoload/plugged/vim-airline/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#init(ext)$/;"	f
airline#extensions#unite#apply	autoload/plugged/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#apply(...)$/;"	f
airline#extensions#unite#init	autoload/plugged/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#init(ext)$/;"	f
airline#extensions#vimagit#apply	autoload/plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#apply(...) abort$/;"	f
airline#extensions#vimagit#get_mode	autoload/plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#get_mode() abort$/;"	f
airline#extensions#vimagit#init	autoload/plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#init(ext) abort$/;"	f
airline#extensions#vimcmake#apply	autoload/plugged/vim-airline/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#apply(...) abort$/;"	f
airline#extensions#vimcmake#inactive_apply	autoload/plugged/vim-airline/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#inactive_apply(...) abort$/;"	f
airline#extensions#vimcmake#init	autoload/plugged/vim-airline/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#init(ext) abort$/;"	f
airline#extensions#vimtex#apply	autoload/plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#apply(...)$/;"	f
airline#extensions#vimtex#get_scope	autoload/plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#get_scope()$/;"	f
airline#extensions#vimtex#init	autoload/plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#init(ext)$/;"	f
airline#extensions#virtualenv#apply	autoload/plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#apply(...)$/;"	f
airline#extensions#virtualenv#init	autoload/plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#init(ext)$/;"	f
airline#extensions#virtualenv#update	autoload/plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#update()$/;"	f
airline#extensions#vista#currenttag	autoload/plugged/vim-airline/autoload/airline/extensions/vista.vim	/^function! airline#extensions#vista#currenttag() abort$/;"	f
airline#extensions#vista#init	autoload/plugged/vim-airline/autoload/airline/extensions/vista.vim	/^function! airline#extensions#vista#init(ext) abort$/;"	f
airline#extensions#whitespace#check	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#check()$/;"	f
airline#extensions#whitespace#disable	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#disable()$/;"	f
airline#extensions#whitespace#init	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#init(...)$/;"	f
airline#extensions#whitespace#toggle	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#toggle()$/;"	f
airline#extensions#windowswap#get_status	autoload/plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#get_status()$/;"	f
airline#extensions#windowswap#init	autoload/plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#init(ext)$/;"	f
airline#extensions#wordcount#apply	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#apply(...)$/;"	f
airline#extensions#wordcount#formatters#default#to_string	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! airline#extensions#wordcount#formatters#default#to_string(wordcount)$/;"	f
airline#extensions#wordcount#formatters#default#update_fmt	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! airline#extensions#wordcount#formatters#default#update_fmt(...)$/;"	f
airline#extensions#wordcount#formatters#readingtime#to_string	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^function! airline#extensions#wordcount#formatters#readingtime#to_string(wordcount) abort$/;"	f
airline#extensions#wordcount#formatters#readingtime#update_fmt	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^function! airline#extensions#wordcount#formatters#readingtime#update_fmt(...) abort$/;"	f
airline#extensions#wordcount#get	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function airline#extensions#wordcount#get()$/;"	f
airline#extensions#wordcount#init	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#init(ext)$/;"	f
airline#extensions#xkblayout#init	autoload/plugged/vim-airline/autoload/airline/extensions/xkblayout.vim	/^function! airline#extensions#xkblayout#init(ext)$/;"	f
airline#extensions#xkblayout#status	autoload/plugged/vim-airline/autoload/airline/extensions/xkblayout.vim	/^function! airline#extensions#xkblayout#status()$/;"	f
airline#extensions#ycm#get_error_count	autoload/plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_error_count() abort$/;"	f
airline#extensions#ycm#get_warning_count	autoload/plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_warning_count()$/;"	f
airline#extensions#ycm#init	autoload/plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#init(ext)$/;"	f
airline#extensions#zoomwintab#apply	autoload/plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^function! airline#extensions#zoomwintab#apply(...) abort$/;"	f
airline#extensions#zoomwintab#init	autoload/plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^function! airline#extensions#zoomwintab#init(ext) abort$/;"	f
airline#formatter#short_path#format	autoload/plugged/vim-airline/autoload/airline/formatter/short_path.vim	/^function! airline#formatter#short_path#format(val) abort$/;"	f
airline#highlighter#add_accent	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  def airline#highlighter#add_accent(accent: string): void$/;"	f
airline#highlighter#add_accent	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  function! airline#highlighter#add_accent(accent) abort$/;"	f
airline#highlighter#add_separator	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  def airline#highlighter#add_separator(from: string, to: string, inverse: bool): void$/;"	f
airline#highlighter#add_separator	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  function! airline#highlighter#add_separator(from, to, inverse) abort$/;"	f
airline#highlighter#exec	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  def airline#highlighter#exec(group: string, clrs: list<any>): void$/;"	f
airline#highlighter#exec	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  function! airline#highlighter#exec(group, colors) abort$/;"	f
airline#highlighter#get_highlight	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  def airline#highlighter#get_highlight(group: string, rest: list<string> = ['']): list<string>$/;"	f
airline#highlighter#get_highlight	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  function! airline#highlighter#get_highlight(group, ...) abort$/;"	f
airline#highlighter#get_highlight2	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  def airline#highlighter#get_highlight2(fg: list<string>, bg: list<string>, rest1: string = '',/;"	f
airline#highlighter#get_highlight2	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  function! airline#highlighter#get_highlight2(fg, bg, ...) abort$/;"	f
airline#highlighter#highlight	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  def airline#highlighter#highlight(modes: list<string>, bufnr: string = ''): void$/;"	f
airline#highlighter#highlight	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  function! airline#highlighter#highlight(modes, ...) abort$/;"	f
airline#highlighter#highlight_modified_inactive	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  def airline#highlighter#highlight_modified_inactive(bufnr: number): void$/;"	f
airline#highlighter#highlight_modified_inactive	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  function! airline#highlighter#highlight_modified_inactive(bufnr) abort$/;"	f
airline#highlighter#load_theme	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  def airline#highlighter#load_theme(): void$/;"	f
airline#highlighter#load_theme	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  function! airline#highlighter#load_theme() abort$/;"	f
airline#highlighter#reset_hlcache	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  def airline#highlighter#reset_hlcache(): void$/;"	f
airline#highlighter#reset_hlcache	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  function! airline#highlighter#reset_hlcache() abort$/;"	f
airline#init#bootstrap	autoload/plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#bootstrap()$/;"	f
airline#init#sections	autoload/plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#sections()$/;"	f
airline#load_theme	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#load_theme()$/;"	f
airline#mode_changed	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#mode_changed()$/;"	f
airline#msdos#round_msdos_colors	autoload/plugged/vim-airline/autoload/airline/msdos.vim	/^	function! airline#msdos#round_msdos_colors(rgblist)$/;"	f
airline#msdos#round_msdos_colors	autoload/plugged/vim-airline/autoload/airline/msdos.vim	/^  def airline#msdos#round_msdos_colors(rgblist: list<number>): string$/;"	f
airline#parts#crypt	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#crypt()$/;"	f
airline#parts#define	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define(key, config)$/;"	f
airline#parts#define_accent	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_accent(key, accent)$/;"	f
airline#parts#define_condition	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_condition(key, predicate)$/;"	f
airline#parts#define_empty	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_empty(keys)$/;"	f
airline#parts#define_function	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_function(key, name)$/;"	f
airline#parts#define_minwidth	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_minwidth(key, width)$/;"	f
airline#parts#define_raw	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_raw(key, raw)$/;"	f
airline#parts#define_text	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_text(key, text)$/;"	f
airline#parts#ffenc	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#ffenc()$/;"	f
airline#parts#filetype	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#filetype()$/;"	f
airline#parts#get	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#get(key)$/;"	f
airline#parts#iminsert	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#iminsert()$/;"	f
airline#parts#mode	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#mode()$/;"	f
airline#parts#paste	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#paste()$/;"	f
airline#parts#readonly	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#readonly()$/;"	f
airline#parts#spell	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#spell()$/;"	f
airline#remove_statusline_func	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#remove_statusline_func(name)$/;"	f
airline#section#create	autoload/plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create(parts)$/;"	f
airline#section#create_left	autoload/plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_left(parts)$/;"	f
airline#section#create_right	autoload/plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_right(parts)$/;"	f
airline#statusline	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#statusline(winnr)$/;"	f
airline#switch_matching_theme	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#switch_matching_theme()$/;"	f
airline#switch_theme	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#switch_theme(name, ...)$/;"	f
airline#themes#	autoload/plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^function! airline#themes#{s:theme}#refresh()$/;"	f
airline#themes#atomic#refresh	autoload/plugged/vim-airline-themes/autoload/airline/themes/atomic.vim	/^function! airline#themes#atomic#refresh()$/;"	f
airline#themes#base16#refresh	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  function! airline#themes#base16#refresh()$/;"	f
airline#themes#base16_shell#refresh	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^function! airline#themes#base16_shell#refresh()$/;"	f
airline#themes#base16_vim#refresh	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_vim.vim	/^function! airline#themes#base16_vim#refresh()$/;"	f
airline#themes#biogoo#refresh	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^function! airline#themes#biogoo#refresh()$/;"	f
airline#themes#generate_color_map	autoload/plugged/vim-airline/autoload/airline/themes.vim	/^  def airline#themes#generate_color_map(sect1: list<any>, sect2: list<any>, sect3: list<any>): d/;"	f
airline#themes#generate_color_map	autoload/plugged/vim-airline/autoload/airline/themes.vim	/^  function! airline#themes#generate_color_map(sect1, sect2, sect3, ...)$/;"	f
airline#themes#get_highlight	autoload/plugged/vim-airline/autoload/airline/themes.vim	/^  def airline#themes#get_highlight(group: string): list<string>$/;"	f
airline#themes#get_highlight	autoload/plugged/vim-airline/autoload/airline/themes.vim	/^  function! airline#themes#get_highlight(group, ...)$/;"	f
airline#themes#get_highlight2	autoload/plugged/vim-airline/autoload/airline/themes.vim	/^  def airline#themes#get_highlight2(fg: list<string>, bg: list<string>): list<string>$/;"	f
airline#themes#get_highlight2	autoload/plugged/vim-airline/autoload/airline/themes.vim	/^  function! airline#themes#get_highlight2(fg, bg, ...)$/;"	f
airline#themes#gruvbox#refresh	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^function! airline#themes#gruvbox#refresh()$/;"	f
airline#themes#hybrid#refresh	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^function! airline#themes#hybrid#refresh()$/;"	f
airline#themes#kalisi#refresh	autoload/plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^function! airline#themes#kalisi#refresh()$/;"	f
airline#themes#lucius#refresh	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^function! airline#themes#lucius#refresh()$/;"	f
airline#themes#monochrome#refresh	autoload/plugged/vim-airline-themes/autoload/airline/themes/monochrome.vim	/^function! airline#themes#monochrome#refresh()$/;"	f
airline#themes#onedark#refresh	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^function! airline#themes#onedark#refresh()$/;"	f
airline#themes#patch	autoload/plugged/vim-airline/autoload/airline/themes.vim	/^  def airline#themes#patch(palette: dict<any>): void$/;"	f
airline#themes#patch	autoload/plugged/vim-airline/autoload/airline/themes.vim	/^  function! airline#themes#patch(palette)$/;"	f
airline#themes#seagull#refresh	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^function! airline#themes#seagull#refresh()$/;"	f
airline#themes#seoul256#refresh	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^function! airline#themes#seoul256#refresh() abort$/;"	f
airline#themes#solarized#refresh	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^function! airline#themes#solarized#refresh()$/;"	f
airline#themes#tomorrow#refresh	autoload/plugged/vim-airline-themes/autoload/airline/themes/tomorrow.vim	/^function! airline#themes#tomorrow#refresh()$/;"	f
airline#themes#zenburn#refresh	autoload/plugged/vim-airline-themes/autoload/airline/themes/zenburn.vim	/^function! airline#themes#zenburn#refresh()$/;"	f
airline#update_statusline	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline()$/;"	f
airline#update_statusline_focuslost	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline_focuslost()$/;"	f
airline#update_statusline_inactive	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline_inactive(range)$/;"	f
airline#update_tabline	autoload/plugged/vim-airline/autoload/airline.vim	/^function! airline#update_tabline()$/;"	f
airline#util#append	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#append(text, minwidth)$/;"	f
airline#util#doautocmd	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#doautocmd(event)$/;"	f
airline#util#exec_funcrefs	autoload/plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#exec_funcrefs(list, ...)$/;"	f
airline#util#getbufvar	autoload/plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getbufvar(bufnr, key, def)$/;"	f
airline#util#getwinvar	autoload/plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getwinvar(winnr, key, def)$/;"	f
airline#util#has_custom_scm	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_custom_scm()$/;"	f
airline#util#has_fugitive	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_fugitive()$/;"	f
airline#util#has_gina	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_gina()$/;"	f
airline#util#has_lawrencium	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_lawrencium()$/;"	f
airline#util#has_vcscommand	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_vcscommand()$/;"	f
airline#util#ignore_buf	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#ignore_buf(name)$/;"	f
airline#util#ignore_next_focusgain	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#ignore_next_focusgain()$/;"	f
airline#util#prepend	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#prepend(text, minwidth)$/;"	f
airline#util#shorten	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#shorten(text, winwidth, minwidth, ...)$/;"	f
airline#util#stl_disabled	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#stl_disabled(winnr)$/;"	f
airline#util#strcharpart	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#strcharpart(...)$/;"	f
airline#util#strchars	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#strchars(str)$/;"	f
airline#util#themes	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#themes(match)$/;"	f
airline#util#try_focusgained	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#try_focusgained()$/;"	f
airline#util#warning	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#warning(msg)$/;"	f
airline#util#winwidth	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#winwidth(...)$/;"	f
airline#util#wrap	autoload/plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#wrap(text, minwidth)$/;"	f
airline_ale	autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^  augroup airline_ale$/;"	a
airline_languageclient	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^  augroup airline_languageclient$/;"	a
airline_lsp_progress	autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^  augroup airline_lsp_progress$/;"	a
airline_omnisharp	autoload/plugged/vim-airline/autoload/airline/extensions/omnisharp.vim	/^  augroup airline_omnisharp$/;"	a
airline_tabline_autoshow	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^  augroup airline_tabline_autoshow$/;"	a
airline_tabline_buffers	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  augroup airline_tabline_buffers$/;"	a
airline_tabline_ctrlspace	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^  augroup airline_tabline_ctrlspace$/;"	a
airline_tabline_tabs	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  augroup airline_tabline_tabs$/;"	a
airline_tabline_tabws	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^  augroup airline_tabline_tabws$/;"	a
airline_whitespace	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^    augroup airline_whitespace$/;"	a
airline_whitespace	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^  augroup airline_whitespace$/;"	a
aj	autoload/plugged/coc.nvim/build/index.js	/^`);e=Zi.Position.create(e.line-o,e.character),t=Zi.Position.create(t.line-o,t.character);let l=k/;"	f
ak	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	v
al	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
algo	autoload/plugged/fzf/src/algo/algo.go	/^package algo$/;"	p
algo	autoload/plugged/fzf/src/algo/algo_test.go	/^package algo$/;"	p
algo	autoload/plugged/fzf/src/algo/normalize.go	/^package algo$/;"	p
all	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	m	class:r
all	autoload/plugged/fzf/Makefile	/^all: target\/$(BINARY)$/;"	t
allOf	autoload/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	a	object:definitions.languageServerCommand
allOf	autoload/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	a	object:definitions.languageServerModule
allOf	autoload/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	a	object:definitions.languageServerSocket
alloc16	autoload/plugged/fzf/src/algo/algo.go	/^func alloc16(offset int, slab *util.Slab, size int) (int, []int16) {$/;"	f	package:algo	typeref:typename:(int, []int16)
alloc32	autoload/plugged/fzf/src/algo/algo.go	/^func alloc32(offset int, slab *util.Slab, size int) (int, []int32) {$/;"	f	package:algo	typeref:typename:(int, []int32)
allowTrailingComma	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:r.DEFAULT
am	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
am	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
am	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^    xnoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
ansi	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	c	class:e.bgColor
ansi	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	c	class:e.color
ansi	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:e.bgColor.ansi
ansi	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:e.color.ansi
ansi	autoload/plugged/fzf/src/terminal.go	/^	ansi         bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
ansi16m	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	c	class:e.bgColor
ansi16m	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	c	class:e.color
ansi256	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	c	class:e.bgColor
ansi256	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	c	class:e.color
ansi256	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:e.bgColor.ansi256
ansi256	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:e.color.ansi256
ansiBenchmarkString	autoload/plugged/fzf/src/ansi_test.go	/^const ansiBenchmarkString = "\\x1b[38;5;81m\\x1b[01;31m\\x1b[Kkernel\/\\x1b[0m\\x1b[38;5;81mbpf\//;"	c	package:fzf
ansiOffset	autoload/plugged/fzf/src/ansi.go	/^type ansiOffset struct {$/;"	s	package:fzf
ansiRegexRefence	autoload/plugged/fzf/src/ansi_test.go	/^var ansiRegexRefence = regexp.MustCompile("(?:\\x1b[\\\\[()][0-9;]*[a-zA-Z@]|\\x1b][0-9];[[:prin/;"	v	package:fzf
ansiState	autoload/plugged/fzf/src/ansi.go	/^type ansiState struct {$/;"	s	package:fzf
any_include?	autoload/plugged/fzf/test/test_go.rb	/^          def any_include?(val)$/;"	f	method:Tmux.until
ao	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	v
ap	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
ape	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	f
append	autoload/plugged/coc.nvim/build/index.js	/^`)}_append(e){let{nvim:t}=this,i=this.lines.length-1,n=e.split(\/\\r?\\n\/),o=this.lines[i]+n[0]/;"	m	class:wD
append	autoload/plugged/fzf/src/history.go	/^func (h *History) append(line string) error {$/;"	f	struct:fzf.History	typeref:typename:error
appendLine	autoload/plugged/coc.nvim/build/index.js	/^`)}_append(e){let{nvim:t}=this,i=this.lines.length-1,n=e.split(\/\\r?\\n\/),o=this.lines[i]+n[0]/;"	m	class:wD
appendOutput	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:sp
append_line	autoload/plugged/fzf/install	/^append_line() {$/;"	f
applyEdits	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	m	class:o0
aq	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
ar	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	c
args	autoload/plugged/coc.nvim/data/schema.json	/^        "args": {$/;"	o	object:definitions.languageServerCommand.properties
args	autoload/plugged/coc.nvim/data/schema.json	/^        "args": {$/;"	o	object:definitions.languageServerModule.properties
args=	autoload/plugged/fzf/bin/fzf-tmux	/^      args=()$/;"	f
args=	autoload/plugged/fzf/bin/fzf-tmux	/^args=()$/;"	f
args=	autoload/plugged/fzf/shell/completion.bash	/^    args=()$/;"	f
args=	autoload/plugged/fzf/shell/completion.zsh	/^    args=()$/;"	f
aria_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, drag_and_drop_attributes)$/;"	v
aria_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, live_region_attributes)$/;"	v
aria_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, relationship_attributes)$/;"	v
aria_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, widget_attributes)$/;"	v
aria_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = global_states_and_properties$/;"	v
aria_attributes_value	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes_value = {$/;"	v
array	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:mne.n
asciiFuzzyIndex	autoload/plugged/fzf/src/algo/algo.go	/^func asciiFuzzyIndex(input *util.Chars, pattern []rune, caseSensitive bool) int {$/;"	f	package:algo	typeref:typename:int
ase	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
ask	autoload/plugged/fzf/install	/^ask() {$/;"	f
ask	autoload/plugged/fzf/uninstall	/^ask() {$/;"	f
assert	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	m	class:AnonymousFunctionb666889235400.n
assert	autoload/plugged/fzf/src/merger_test.go	/^func assert(t *testing.T, cond bool, msg ...string) {$/;"	f	package:fzf
assertMatch	autoload/plugged/fzf/src/algo/algo_test.go	/^func assertMatch(t *testing.T, fun Algo, caseSensitive, forward bool, input, pattern string, sid/;"	f	package:algo
assertMatch2	autoload/plugged/fzf/src/algo/algo_test.go	/^func assertMatch2(t *testing.T, fun Algo, caseSensitive, normalize, forward bool, input, pattern/;"	f	package:algo
at	autoload/plugged/fzf/src/terminal.go	/^	at   time.Time$/;"	m	struct:fzf.selectedItem	typeref:typename:time.Time
at	autoload/plugged/vim-polyglot/syntax/sed.vim	/^let __at = char2nr("@")$/;"	v
ate	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
atof	autoload/plugged/fzf/src/options.go	/^func atof(str string) float64 {$/;"	f	package:fzf	typeref:typename:float64
atoi	autoload/plugged/fzf/src/options.go	/^func atoi(str string) int {$/;"	f	package:fzf	typeref:typename:int
atoi	autoload/plugged/fzf/src/tui/light.go	/^func atoi(s string, defaultValue int) int {$/;"	f	package:tui	typeref:typename:int
attach	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	m	class:o0
attachEvents	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:CD
attachEvents	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:SD
attached	autoload/plugged/coc.nvim/build/index.js	/^`))}get attached(){return this._attached}detach(){this._attached=!1,z(this.disposables),this.dis/;"	G	class:o0
attr	autoload/plugged/fzf/src/ansi.go	/^	attr tui.Attr$/;"	m	struct:fzf.ansiState	typeref:typename:tui.Attr
attr	autoload/plugged/fzf/src/tui/tui.go	/^	attr Attr$/;"	m	struct:tui.ColorPair	typeref:typename:Attr
attrCodes	autoload/plugged/fzf/src/tui/light.go	/^func attrCodes(attr Attr) []string {$/;"	f	package:tui	typeref:typename:[]string
attributes_value	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, event_attributes_value)$/;"	v
attributes_value	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, microdata_attributes_value)$/;"	v
attributes_value	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, rdfa_attributes_value)$/;"	v
attributes_value	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let attributes_value = {$/;"	v
author	autoload/plugged/coc.nvim/package.json	/^  "author": "Qiming Zhao <chemzqm@gmail.com>",$/;"	s
author	~./config/nvim/plugged/gruvbox/package.json	/^  "author": "Pavel Pertsev <morhetz@gmail.com>",$/;"	s
autofill_tokens	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let autofill_tokens = ['on', 'off', 'name', 'honorific-prefix', 'given-name', 'additional-name',/;"	v
aw	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
awe	autoload/plugged/coc.nvim/build/index.js	/^`)>=0)return!1;return!0}function awe(r,e){var t;if(r.indent==="	")t="	";else if(typeof r.indent=/;"	f
awkBlack	autoload/plugged/fzf/src/tokenizer.go	/^	awkBlack$/;"	c	package:fzf
awkNil	autoload/plugged/fzf/src/tokenizer.go	/^	awkNil = iota$/;"	c	package:fzf
awkTokenizer	autoload/plugged/fzf/src/tokenizer.go	/^func awkTokenizer(input string) ([]string, int) {$/;"	f	package:fzf	typeref:typename:([]string, int)
awkWhite	autoload/plugged/fzf/src/tokenizer.go	/^	awkWhite$/;"	c	package:fzf
b	autoload/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[c],!0),await e./;"	v
b.get_group	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  function! b.get_group(i) dict$/;"	f
b.get_group	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  function! b.get_group(i) dict$/;"	f
b.get_posttitle	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    function! b.get_posttitle(i) dict$/;"	f
b.get_pretitle	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    function! b.get_pretitle(i) dict$/;"	f
b.get_title	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  function! b.get_title(i) dict$/;"	f
b.get_title	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  function! b.get_title(i) dict$/;"	f
b3	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
b5	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	v
b7	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
b:	autoload/plugged/vim-polyglot/syntax/liquid.vim	/^      let b:{matchstr(s:type,'[^.]*')}_subtype = matchstr(s:type,'\\.\\zs.*')$/;"	v
b:AutoPairs	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^  let b:AutoPairs = { '{%': '%}' }$/;"	v
b:AutoPairs	autoload/plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let b:AutoPairs = {$/;"	v
b:AutoPairs	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:AutoPairs = {'(':')', '[':']', '{':'}','"':'"', '`':'`'}$/;"	v
b:Xsl_SyntaxFold_by	autoload/plugged/vim-polyglot/syntax/xsl.vim	/^	let b:Xsl_SyntaxFold_by=''$/;"	v
b:bdf_minlines	autoload/plugged/vim-polyglot/syntax/bdf.vim	/^  let b:bdf_minlines = 30$/;"	v
b:bdf_minlines	autoload/plugged/vim-polyglot/syntax/bdf.vim	/^  let b:bdf_minlines = bdf_minlines$/;"	v
b:block_begin	autoload/plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:block_begin = '\\<\\(do$\\|fn\\>\\)'$/;"	v
b:block_end	autoload/plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:block_end = '\\<end\\>'$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/abap.vim	/^  let b:browsefilter = "ABAP Source Files (*.abap)\\t*.abap\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:browsefilter = "Abaqus Input Files (*.inp *.inc)\\t*.inp;*.inc\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/ant.vim	/^    let b:browsefilter = "Build Files (build.xml)\\tbuild.xml\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/aspvbs.vim	/^    let  b:browsefilter="ASP Files (*.asp)\\t*.asp\\n" . s:browsefilter$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/awk.vim	/^  let b:browsefilter = "Awk Source Files (*.awk,*.gawk)\\t*.awk;*.gawk\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/basic.vim	/^  let b:browsefilter = "BASIC Source Files (*.bas)\\t*.bas\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:browsefilter = "Clojure Source Files (*.clj)\\t*.clj\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^  let b:browsefilter = "COBOL Source Files (*.cbl, *.cob)\\t*.cbl;*.cob;*.lib\\n".$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/config.vim	/^    let  b:browsefilter="Configure Scripts (configure.*, config.*)\\tconfigure*;config.*\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/cs.vim	/^    let b:browsefilter = "C# Source Files (*.cs)\\t*.cs\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/dosbatch.vim	/^  let b:browsefilter = "DOS Batch Files (*.bat, *.cmd)\\t*.bat;*.cmd\\nAll Files (*.*)\\t*.*\\n"$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/dtd.vim	/^    let  b:browsefilter="DTD Files (*.dtd)\\t*.dtd\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let b:browsefilter='eCrystal Files (*.ecr)\\t*.ecr\\n' . s:browsefilter$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/falcon.vim	/^  let b:browsefilter = "Falcon Source Files (*.fal *.ftd)\\t*.fal;*.ftd\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/fortran.vim	/^  let b:browsefilter = "Fortran Files (*.f;*.for;*.f77;*.f90;*.f95;*.f03;*.f08;*.fpp;*.ftn)\\t*./;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/haml.vim	/^  let b:browsefilter="Haml Files (*.haml)\\t*.haml\\nSass Files (*.sass)\\t*.sass\\n" . s:browse/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/html.vim	/^    let  b:browsefilter="HTML Files (*.html,*.htm)\\t*.htm;*.html\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^  let b:browsefilter = "J Script Files (*.ijs)\\t*.ijs\\n"$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/java.vim	/^    let  b:browsefilter="Java Files (*.java)\\t*.java\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/jsp.vim	/^    let  b:browsefilter="JSP Files (*.jsp)\\t*.jsp\\n" . s:browsefilter$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:browsefilter = "Julia Source Files (*.jl)\\t*.jl\\n"$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/kwt.vim	/^    let b:browsefilter = "Kimwitu\/Kimwitu++ Files (*.k)\\t*.k\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter = "\\n".b:browsefilter$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter = ''$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter="Liquid Files (*.liquid)\\t*.liquid" . b:browsefilter$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/occam.vim	/^  let b:browsefilter = "All Occam Files (*.occ *.inc)\\t*.occ;*.inc\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/perl.vim	/^    let b:browsefilter = "Perl Source Files (*.pl)\\t*.pl\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/postscr.vim	/^  let b:browsefilter = "PostScript Files (*.ps)\\t*.ps\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/ps1.vim	/^	let b:browsefilter =$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/ps1xml.vim	/^  let b:browsefilter = $/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/pug.vim	/^  let b:browsefilter="Pug Files (*.pug)\\t*.pug\\n" . s:browsefilter$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/pyrex.vim	/^    let  b:browsefilter = "Pyrex files (*.pyx,*.pxd)\\t*.pyx;*.pxd\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/qml.vim	/^   let b:browsefilter =$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/rmd.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rr/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/rnoweb.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rr/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/rrst.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rr/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:browsefilter = "SQL Files (*.sql)\\t*.sql\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/stylus.vim	/^  let b:browsefilter="Stylus Files (*.styl)\\t*.styl\\n" . s:browsefilter$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/tcl.vim	/^    let b:browsefilter = "Tcl Source Files (.tcl)\\t*.tcl\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/tidy.vim	/^  let b:browsefilter = "HTML Tidy Files (tidyrc, .tidyrc, tidy.conf)\\ttidyrc;.tidyrc;tidy.conf\\/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/vala.vim	/^  let b:browsefilter = "Vala Source Files (*.vala)\\t*.vala\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/verilog.vim	/^  let b:browsefilter = "Verilog Source Files (*.v)\\t*.v\\n" .$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let  b:browsefilter="XHTML files (*.xhtml, *.xhtm)\\t*.xhtml;*.xhtm\\n" . s:browsefilter$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/xsd.vim	/^    let  b:browsefilter="XSD Files (*.xsd)\\t*.xsd\\n" . s:browsefilter$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/ftplugin/xslt.vim	/^    let  b:browsefilter="XSLT Files (*.xsl,*.xslt)\\t*.xsl;*.xslt\\n" . b:browsefilter$/;"	v
b:browsefilter	autoload/plugged/vim-polyglot/syntax/lpc.vim	/^    let b:browsefilter = "LPC Source Files (*.c *.d *.h)\\t*.c;*.d;*.h\\n" .$/;"	v
b:c_minlines	autoload/plugged/vim-polyglot/syntax/autodoc.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	autoload/plugged/vim-polyglot/syntax/autodoc.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	autoload/plugged/vim-polyglot/syntax/autodoc.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	autoload/plugged/vim-polyglot/syntax/c.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	autoload/plugged/vim-polyglot/syntax/c.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	autoload/plugged/vim-polyglot/syntax/c.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	autoload/plugged/vim-polyglot/syntax/calendar.vim	/^    let b:c_minlines = 15       " mostly for () constructs$/;"	v
b:c_minlines	autoload/plugged/vim-polyglot/syntax/calendar.vim	/^    let b:c_minlines = 50       " #if 0 constructs can be long$/;"	v
b:c_minlines	autoload/plugged/vim-polyglot/syntax/calendar.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	autoload/plugged/vim-polyglot/syntax/indent.vim	/^    let b:c_minlines = 15       " mostly for () constructs$/;"	v
b:c_minlines	autoload/plugged/vim-polyglot/syntax/indent.vim	/^    let b:c_minlines = 50       " #if 0 constructs can be long$/;"	v
b:c_minlines	autoload/plugged/vim-polyglot/syntax/indent.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	autoload/plugged/vim-polyglot/syntax/lpc.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	autoload/plugged/vim-polyglot/syntax/lpc.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	autoload/plugged/vim-polyglot/syntax/lpc.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	autoload/plugged/vim-polyglot/syntax/pike.vim	/^    let b:c_minlines = 200	" mostly for multiline strings$/;"	v
b:c_minlines	autoload/plugged/vim-polyglot/syntax/pike.vim	/^    let b:c_minlines = 400	" #if 0 constructs can be long$/;"	v
b:c_minlines	autoload/plugged/vim-polyglot/syntax/pike.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:comment_end	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_end = '\\(^\\s*'.b:comment_leader.'.*\\n\\)'.$/;"	v
b:comment_jump_over	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_jump_over  = "call search('".$/;"	v
b:comment_leader	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_leader = '\\(--\\\\|\\\/\\\/\\\\|\\*\\\\|\\\/\\*\\\\|\\*\\\/\\)'$/;"	v
b:comment_skip_back	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_skip_back  = "call search('".$/;"	v
b:comment_start	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_start  = '^\\(\\s*'.b:comment_leader.'.*\\n\\)\\@<!'.$/;"	v
b:commentary_format	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^let b:commentary_format = "# %s"           " for tpope\/vim-commentary$/;"	v
b:control_statement	autoload/plugged/vim-polyglot/indent/cython.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except)>'$/;"	v
b:control_statement	autoload/plugged/vim-polyglot/indent/cython.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except|cdef|cpdef)>'$/;"	v
b:control_statement	autoload/plugged/vim-polyglot/indent/python.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except)>'$/;"	v
b:control_statement	autoload/plugged/vim-polyglot/indent/python.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except|cdef|cpdef)>'$/;"	v
b:crystal_no_expensive	autoload/plugged/vim-polyglot/syntax/crystal.vim	/^  let b:crystal_no_expensive = 1$/;"	v
b:csv_end	autoload/plugged/vim-polyglot/ftplugin/csv.vim	/^let b:csv_end   = get(g:, 'csv_end', line('$'))$/;"	v
b:csv_result	autoload/plugged/vim-polyglot/ftplugin/csv.vim	/^let b:csv_result = ''$/;"	v
b:csv_start	autoload/plugged/vim-polyglot/ftplugin/csv.vim	/^let b:csv_start = get(g:, 'csv_start', 1)$/;"	v
b:cucumber_root	autoload/plugged/vim-polyglot/ftplugin/cucumber.vim	/^let b:cucumber_root = expand('%:p:h:s?.*[\\\/]\\%(features\\|stories\\)\\zs[\\\/].*??')$/;"	v
b:cucumber_steps_glob	autoload/plugged/vim-polyglot/ftplugin/cucumber.vim	/^  let b:cucumber_steps_glob = b:cucumber_root.'\/**\/*.rb'$/;"	v
b:current_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^let b:current_ftplugin = 'sql'$/;"	v
b:current_indent	autoload/plugged/vim-polyglot/indent/pgsql.vim	/^let b:current_indent = "pgsql"$/;"	v
b:current_loading_main_syntax	autoload/plugged/vim-polyglot/syntax/svelte.vim	/^let b:current_loading_main_syntax = 'svelte'$/;"	v
b:current_syntax	autoload/plugged/vim-fugitive/syntax/fugitive.vim	/^let b:current_syntax = "fugitive"$/;"	v
b:current_syntax	autoload/plugged/vim-fugitive/syntax/fugitiveblame.vim	/^let b:current_syntax = "fugitiveblame"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/after/syntax/coffee.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/after/syntax/haskell.vim	/^let b:current_syntax = old_syntax$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/after/syntax/javascript/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/after/syntax/javascript/sql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/after/syntax/jsx.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/after/syntax/jsx.vim	/^let b:current_syntax = 'javascript.jsx'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/after/syntax/mdx.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/after/syntax/php/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/after/syntax/reason/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/after/syntax/rspec.vim	/^let b:current_syntax = 'rspec'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^let   b:current_syntax = "tex"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/after/syntax/tsx.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/after/syntax/tsx.vim	/^let b:current_syntax = 'typescript.tsx'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/after/syntax/typescript/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/8th.vim	/^let b:current_syntax = "8th"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/Jenkinsfile.vim	/^let b:current_syntax = 'Jenkinsfile'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/a2ps.vim	/^let b:current_syntax = "a2ps"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/a65.vim	/^let b:current_syntax = "a65"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/aap.vim	/^let b:current_syntax = "aap"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/abap.vim	/^let b:current_syntax = "abap"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/abaqus.vim	/^let b:current_syntax = "abaqus"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/abc.vim	/^let b:current_syntax = "abc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/abel.vim	/^let b:current_syntax = "abel"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/acedb.vim	/^let b:current_syntax = "acedb"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ada.vim	/^let b:current_syntax = "ada"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ahdl.vim	/^let b:current_syntax = "ahdl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/aidl.vim	/^let b:current_syntax = "aidl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/alsaconf.vim	/^let b:current_syntax = "alsaconf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/aml.vim	/^let b:current_syntax = "aml"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ampl.vim	/^let b:current_syntax = "ampl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ansible.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ansible.vim	/^let b:current_syntax = "ansible"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ansible_hosts.vim	/^let b:current_syntax = "ansible_hosts"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ant.vim	/^let b:current_syntax = "ant"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/apache.vim	/^let b:current_syntax = "apache"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/apachestyle.vim	/^let b:current_syntax = "apachestyle"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/apiblueprint.vim	/^let b:current_syntax = 'apiblueprint'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/applescript.vim	/^let b:current_syntax = "applescript"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/aptconf.vim	/^let b:current_syntax = "aptconf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/arch.vim	/^let b:current_syntax = "arch"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/art.vim	/^let b:current_syntax = "art"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/asciidoc.vim	/^let b:current_syntax = "asciidoc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/asl.vim	/^let b:current_syntax = "asl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/asn.vim	/^let b:current_syntax = "asn"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/aspperl.vim	/^let b:current_syntax = "aspperl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/aspvbs.vim	/^let b:current_syntax = "aspvbs"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/asterisk.vim	/^let b:current_syntax = "asterisk" $/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/asteriskvm.vim	/^let b:current_syntax = "asteriskvm"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/atlas.vim	/^let b:current_syntax = "atlas"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/autodoc.vim	/^let b:current_syntax = "autodoc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/autoit.vim	/^let b:current_syntax = "autoit"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/automake.vim	/^let b:current_syntax = 'automake'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ave.vim	/^let b:current_syntax = "ave"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/awk.vim	/^let b:current_syntax = "awk"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/b.vim	/^let b:current_syntax = "b"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/basic.vim	/^let b:current_syntax = "basic"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/bc.vim	/^let b:current_syntax = "bc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/bdf.vim	/^let b:current_syntax = "bdf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/bib.vim	/^let b:current_syntax = "bib"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/bindzone.vim	/^let b:current_syntax = "bindzone"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/blade.vim	/^let b:current_syntax = 'blade'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/blank.vim	/^let b:current_syntax = "blank"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/brewfile.vim	/^let b:current_syntax = "brewfile"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/bsdl.vim	/^let b:current_syntax = "bsdl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/bst.vim	/^let b:current_syntax = "bst"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/bzl.vim	/^let b:current_syntax = 'bzl'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/bzr.vim	/^let b:current_syntax = "bzr"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/c.vim	/^let b:current_syntax = "c"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cabal-1.vim	/^let b:current_syntax = "cabal"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cabal-2.vim	/^let b:current_syntax = "cabal"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/caddyfile.vim	/^let b:current_syntax = "caddyfile"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/calendar.vim	/^let b:current_syntax = "calendar"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/carp.vim	/^let b:current_syntax = "carp"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/catalog.vim	/^let b:current_syntax = "catalog"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cdl.vim	/^let b:current_syntax = "cdl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cdrdaoconf.vim	/^let b:current_syntax = "cdrdaoconf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cdrtoc.vim	/^let b:current_syntax = "cdrtoc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cf.vim	/^let b:current_syntax = "cfml"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cfg.vim	/^let b:current_syntax = "cfg"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ch.vim	/^let b:current_syntax = "ch"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/chaiscript.vim	/^let b:current_syntax = "chaiscript"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/chill.vim	/^let b:current_syntax = "chill"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/chordpro.vim	/^let b:current_syntax = "chordpro"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cl.vim	/^let b:current_syntax = "cl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/clean.vim	/^let b:current_syntax = "clean"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/clojure.vim	/^let b:current_syntax = "clojure"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cmake.vim	/^let b:current_syntax = "cmake"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cmod.vim	/^let b:current_syntax = "cmod"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cmusrc.vim	/^let b:current_syntax = "cmusrc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cobol.vim	/^let b:current_syntax = "cobol"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/coffee.vim	/^  let b:current_syntax = 'coffee'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/conaryrecipe.vim	/^let b:current_syntax = "conaryrecipe"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/conf.vim	/^let b:current_syntax = "conf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/config.vim	/^let b:current_syntax = "config"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cpp.vim	/^let b:current_syntax = "cpp"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cql.vim	/^let b:current_syntax = "cql"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/crm.vim	/^let b:current_syntax = "crm"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/crontab.vim	/^let b:current_syntax = "crontab"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cryptol.vim	/^let b:current_syntax = "cryptol"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/crystal.vim	/^let b:current_syntax = 'crystal'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cs.vim	/^let b:current_syntax = 'cs'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/csc.vim	/^let b:current_syntax = "csc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/csdl.vim	/^let b:current_syntax = "csdl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/csp.vim	/^let b:current_syntax = "csp"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/css.vim	/^let b:current_syntax = "css"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/csv.vim	/^let b:current_syntax="csv"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cterm.vim	/^let b:current_syntax = "cterm"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cucumber.vim	/^let b:current_syntax = "cucumber"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cuda.vim	/^let b:current_syntax = "cuda"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cuesheet.vim	/^let b:current_syntax='cuesheet'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cupl.vim	/^let b:current_syntax = "cupl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cuplsim.vim	/^let b:current_syntax = "cuplsim"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cvs.vim	/^let b:current_syntax = "cvs"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cvsrc.vim	/^let b:current_syntax = "cvsrc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/cynpp.vim	/^let b:current_syntax = "cynpp"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/d.vim	/^let b:current_syntax = "d"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dart.vim	/^let b:current_syntax = 'dart'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/datascript.vim	/^let b:current_syntax = "datascript"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dcd.vim	/^let b:current_syntax = "dcd"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dcov.vim	/^let b:current_syntax = "dcov"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ddoc.vim	/^    let b:current_syntax = "ddoc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/debchangelog.vim	/^let b:current_syntax = 'debchangelog'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/debcontrol.vim	/^let b:current_syntax = 'debcontrol'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/debcopyright.vim	/^let b:current_syntax = 'debcopyright'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/debsources.vim	/^let b:current_syntax = 'debsources'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/def.vim	/^let b:current_syntax = "def"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/denyhosts.vim	/^let b:current_syntax = "denyhosts"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/desc.vim	/^let b:current_syntax = "desc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/desktop.vim	/^let b:current_syntax = "desktop"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dhall.vim	/^let b:current_syntax = 'dhall'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dictconf.vim	/^let b:current_syntax = "dictconf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dictdconf.vim	/^let b:current_syntax = "dictdconf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/diff.vim	/^let b:current_syntax = "diff"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dircolors.vim	/^let b:current_syntax = "dircolors"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/django.vim	/^let b:current_syntax = "django"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dnsmasq.vim	/^let b:current_syntax = "dnsmasq"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/docker-compose.vim	/^let b:current_syntax = "dockercompose"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dockerfile.vim	/^let b:current_syntax = "dockerfile"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dosbatch.vim	/^let b:current_syntax = "dosbatch"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dosini.vim	/^let b:current_syntax = "dosini"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dot.vim	/^let b:current_syntax = "dot"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dracula.vim	/^let b:current_syntax = "dracula"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dsdl.vim	/^let b:current_syntax = "dsdl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dsl.vim	/^let b:current_syntax = "dsl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dtd.vim	/^let b:current_syntax = "dtd"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dune.vim	/^let b:current_syntax = "dune"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dylan.vim	/^let b:current_syntax = "dylan"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dylanintr.vim	/^let b:current_syntax = "dylanintr"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/dylanlid.vim	/^let b:current_syntax = "dylanlid"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ecd.vim	/^let b:current_syntax = "ecd"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ecrystal.vim	/^let b:current_syntax = 'ecrystal'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/edif.vim	/^let b:current_syntax = "edif"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/eelixir.vim	/^let b:current_syntax = 'eelixir'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/elf.vim	/^let b:current_syntax = "elf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/elinks.vim	/^let b:current_syntax = "elinks"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/elixir.vim	/^let b:current_syntax = "elixir"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/elm.vim	/^let b:current_syntax = 'elm'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/elmfilt.vim	/^let b:current_syntax = "elmfilt"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ember-script.vim	/^let b:current_syntax = 'ember-script'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/emblem.vim	/^let b:current_syntax = 'emblem'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/epuppet.vim	/^let b:current_syntax = "epuppet"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/erlang.vim	/^let b:current_syntax = "erlang"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/eruby.vim	/^let b:current_syntax = matchstr(&syntax, '^.*\\<eruby\\>')$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/esmtprc.vim	/^let b:current_syntax = "esmtprc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/esqlc.vim	/^let b:current_syntax = "esqlc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/esterel.vim	/^let b:current_syntax = "esterel"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/eterm.vim	/^let b:current_syntax = "eterm"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/exim.vim	/^let b:current_syntax = "exim"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/expect.vim	/^let b:current_syntax = "expect"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/exports.vim	/^let b:current_syntax = "exports"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/falcon.vim	/^let b:current_syntax = "falcon"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/fan.vim	/^let b:current_syntax = "fan"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/fbs.vim	/^let b:current_syntax = "fbs"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/fennel.vim	/^let b:current_syntax = "fennel"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ferm.vim	/^let b:current_syntax = "ferm"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/fetchmail.vim	/^let b:current_syntax = "fetchmail"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/fgl.vim	/^let b:current_syntax = "fgl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/fish.vim	/^let b:current_syntax = 'fish'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/focexec.vim	/^let b:current_syntax = "focexec"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/forth.vim	/^let b:current_syntax = "forth"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/fortran.vim	/^let b:current_syntax = "fortran"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/framescript.vim	/^let b:current_syntax = "framescript"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/freebasic.vim	/^let b:current_syntax = "freebasic"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/fsharp.vim	/^let b:current_syntax = 'fsharp'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/fstab.vim	/^let b:current_syntax = "fstab"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/fvwm.vim	/^let b:current_syntax = "fvwm"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gdb.vim	/^let b:current_syntax = "gdb"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gdmo.vim	/^let b:current_syntax = "gdmo"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gdscript3.vim	/^let b:current_syntax = "gdscript3"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gedcom.vim	/^let b:current_syntax = "gedcom"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/git.vim	/^let b:current_syntax = "git"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gitcommit.vim	/^let b:current_syntax = "gitcommit"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gitconfig.vim	/^let b:current_syntax = "gitconfig"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gitignore.vim	/^let b:current_syntax = 'gitignore'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gitolite.vim	/^let b:current_syntax = "gitolite"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gitrebase.vim	/^let b:current_syntax = "gitrebase"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gitsendemail.vim	/^let b:current_syntax = "gitsendemail"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gkrellmrc.vim	/^let b:current_syntax = "gkrellmrc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gleam.vim	/^let b:current_syntax = "gleam"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/glsl.vim	/^  let b:current_syntax = "glsl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gmpl.vim	/^let b:current_syntax = "gmpl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gnash.vim	/^let b:current_syntax = "gnash"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gnuplot.vim	/^let b:current_syntax = "gnuplot"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/go.vim	/^let b:current_syntax = "go"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/godebugoutput.vim	/^let b:current_syntax = "godebugoutput"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/godebugstacktrace.vim	/^let b:current_syntax = "godebugoutput"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/godebugvariables.vim	/^let b:current_syntax = "godebugvariables"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/godefstack.vim	/^let b:current_syntax = "godefstack"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gohtmltmpl.vim	/^let b:current_syntax = "gohtmltmpl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gomod.vim	/^let b:current_syntax = "gomod"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gosum.vim	/^let b:current_syntax = "gomod"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gotexttmpl.vim	/^let b:current_syntax = "gotexttmpl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gp.vim	/^let b:current_syntax = "gp"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gpg.vim	/^let b:current_syntax = "gpg"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/grads.vim	/^let b:current_syntax = "grads"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/graphql.vim	/^let b:current_syntax = 'graphql'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gretl.vim	/^let b:current_syntax="gretl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/groovy.vim	/^let b:current_syntax = "groovy"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/group.vim	/^let b:current_syntax = "group"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/grub.vim	/^let b:current_syntax = "grub"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gsl.vim	/^let b:current_syntax = "gsl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gsp.vim	/^let b:current_syntax = "gsp"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/gtkrc.vim	/^let b:current_syntax = "gtkrc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/haml.vim	/^let b:current_syntax = "haml"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/hamster.vim	/^let b:current_syntax = "hamster"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/handlebars.vim	/^let b:current_syntax = "handlebars"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/haproxy.vim	/^let b:current_syntax = "haproxy"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/haskell.vim	/^let b:current_syntax = "haskell"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/haste.vim	/^let b:current_syntax = "haste"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/hastepreproc.vim	/^let b:current_syntax = "hastepreproc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/haxe.vim	/^let b:current_syntax = "haxe"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/hb.vim	/^let b:current_syntax = "hb"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/hcl.vim	/^let b:current_syntax = "hcl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/helm.vim	/^let b:current_syntax = "helm"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/helm.vim	/^let b:current_syntax = ''$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/help.vim	/^let b:current_syntax = "help"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/hercules.vim	/^let b:current_syntax = "hercules"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/hex.vim	/^let b:current_syntax = "hex"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/hgcommit.vim	/^let b:current_syntax = "hgcommit"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/hive.vim	/^let b:current_syntax = "hive"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/hjson.vim	/^let b:current_syntax = "hjson"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/hog.vim	/^let b:current_syntax = "hog"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/hollywood.vim	/^let b:current_syntax = "hollywood"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/hostconf.vim	/^let b:current_syntax = "hostconf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/hostsaccess.vim	/^let b:current_syntax = "hostsaccess"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/html.vim	/^let b:current_syntax = "html"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/htmldjango.vim	/^let b:current_syntax = "htmldjango"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/htmlm4.vim	/^let b:current_syntax = "htmlm4"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/i3config.vim	/^let b:current_syntax = "i3config"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ibasic.vim	/^let b:current_syntax = "ibasic"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/icalendar.vim	/^let b:current_syntax = "icalendar"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/icemenu.vim	/^let b:current_syntax = "IceMenu"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/icon.vim	/^let b:current_syntax = "icon"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/idris.vim	/^let b:current_syntax = "idris"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/idris2.vim	/^let b:current_syntax = "idris2"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/indent.vim	/^let b:current_syntax = "indent"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/inform.vim	/^let b:current_syntax = "inform"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/initng.vim	/^let b:current_syntax = "initng"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/inittab.vim	/^let b:current_syntax = "inittab"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/iss.vim	/^let b:current_syntax = "iss"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ist.vim	/^let b:current_syntax = "ist"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/j.vim	/^let b:current_syntax = 'j'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/jal.vim	/^let b:current_syntax = "jal"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/jam.vim	/^let b:current_syntax = "jam"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/java.vim	/^let b:current_syntax = "java"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/javacc.vim	/^let b:current_syntax = "javacc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/jess.vim	/^let b:current_syntax = "jess"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/jgraph.vim	/^let b:current_syntax = "jgraph"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/jinja2.vim	/^let b:current_syntax = "jinja2"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/jinja2.vim	/^let b:current_syntax = ''$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/jovial.vim	/^let b:current_syntax = "jovial"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/jproperties.vim	/^let b:current_syntax = "jproperties"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/json.vim	/^let b:current_syntax = "json"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/json5.vim	/^  let b:current_syntax = 'json5'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/jsonc.vim	/^  let b:current_syntax = 'jsonc'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/jsp.vim	/^let b:current_syntax = "jsp"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/jst.vim	/^let b:current_syntax = 'jst'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let b:current_syntax = "julia"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/juliadoc.vim	/^let b:current_syntax = "juliadoc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/kivy.vim	/^let b:current_syntax = "kivy"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/kix.vim	/^let b:current_syntax = "kix"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/kotlin.vim	/^let b:current_syntax = 'kotlin'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/kscript.vim	/^let b:current_syntax = "kscript"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/kwt.vim	/^let b:current_syntax = "kwt"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/lace.vim	/^let b:current_syntax = "lace"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/latte.vim	/^let b:current_syntax = "latte"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ld.vim	/^let b:current_syntax = "ld"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ldif.vim	/^let b:current_syntax = "ldif"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ledger.vim	/^let b:current_syntax = b:is_hledger ? 'hledger' : 'ledger'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/less.vim	/^let b:current_syntax = "less"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/lex.vim	/^let b:current_syntax = "lex"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/lftp.vim	/^let b:current_syntax = "lftp"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/lhaskell.vim	/^let b:current_syntax = "lhaskell"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/libao.vim	/^let b:current_syntax = "libao"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/lidris.vim	/^let b:current_syntax = "lidris"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/lidris2.vim	/^let b:current_syntax = "lidris2"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/lifelines.vim	/^let b:current_syntax = "lifelines"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/lilo.vim	/^let b:current_syntax = "lilo"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/limits.vim	/^let b:current_syntax = "limits"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/liquid.vim	/^let b:current_syntax = 'liquid'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/lisp.vim	/^let b:current_syntax = "lisp"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/litcoffee.vim	/^let b:current_syntax = "litcoffee"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/lite.vim	/^let b:current_syntax = "lite"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/litestep.vim	/^let b:current_syntax = "litestep"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/llvm.vim	/^let b:current_syntax = "llvm"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/log.vim	/^let b:current_syntax = 'log'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/loginaccess.vim	/^let b:current_syntax = "loginaccess"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/logindefs.vim	/^let b:current_syntax = "logindefs"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/logtalk.vim	/^let b:current_syntax = "logtalk"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/lotos.vim	/^let b:current_syntax = "lotos"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/lout.vim	/^let b:current_syntax = "lout"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/lpc.vim	/^let b:current_syntax = "lpc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/lprolog.vim	/^let b:current_syntax = "lprolog"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ls.vim	/^  let b:current_syntax = 'livescript'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ls.vim	/^let b:current_syntax = "ls"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/lsl.vim	/^let b:current_syntax = "lsl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/lss.vim	/^let b:current_syntax = "lss"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/lua.vim	/^let b:current_syntax = "lua"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/lynx.vim	/^let b:current_syntax = "lynx"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/m4.vim	/^let b:current_syntax = "m4"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mail.vim	/^let b:current_syntax = "mail"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mailaliases.vim	/^let b:current_syntax = "mailaliases"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mailcap.vim	/^let b:current_syntax = "mailcap"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/make.vim	/^let b:current_syntax = "make"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mako.vim	/^let b:current_syntax = b:mako_outer_lang$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mallard.vim	/^let b:current_syntax = "mallard"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/manconf.vim	/^let b:current_syntax = "manconf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/maple.vim	/^let b:current_syntax = "maple"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/markdown.vim	/^let b:current_syntax = "mkd"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mason.vim	/^let b:current_syntax = "mason"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/master.vim	/^let b:current_syntax = "master"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mel.vim	/^let b:current_syntax = "mel"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/merlin.vim	/^let b:current_syntax = "merlin"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/meson.vim	/^let b:current_syntax = "meson"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/messages.vim	/^let b:current_syntax = "messages"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mf.vim	/^let b:current_syntax = "mf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mgl.vim	/^let b:current_syntax = "mgl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mgp.vim	/^let b:current_syntax = "mgp"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mib.vim	/^let b:current_syntax = "mib"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mint.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mix.vim	/^let b:current_syntax = "mix"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mlir.vim	/^let b:current_syntax = "mlir"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mma.vim	/^let b:current_syntax = "mma"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mmp.vim	/^let b:current_syntax = "mmp"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/modconf.vim	/^let b:current_syntax = "modconf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/modula2.vim	/^let b:current_syntax = "modula2"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/modula3.vim	/^let b:current_syntax = "modula3"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/monk.vim	/^let b:current_syntax = "monk"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/moo.vim	/^let b:current_syntax = "moo"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/moon.vim	/^  let b:current_syntax = 'moon'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mp.vim	/^let b:current_syntax = "mp"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mplayerconf.vim	/^let b:current_syntax = "mplayerconf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mrxvtrc.vim	/^let b:current_syntax = "mrxvtrc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/msidl.vim	/^let b:current_syntax = "msidl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/msql.vim	/^let b:current_syntax = "msql"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/murphi.vim	/^let b:current_syntax = "murphi"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mush.vim	/^let b:current_syntax = "mush"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/muttrc.vim	/^let b:current_syntax = "muttrc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/mysql.vim	/^let b:current_syntax = "mysql"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/n1ql.vim	/^let b:current_syntax = "n1ql"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/named.vim	/^let b:current_syntax = "named"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/nanorc.vim	/^let b:current_syntax = "nanorc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/natural.vim	/^let b:current_syntax = "natural"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ncf.vim	/^let b:current_syntax = "ncf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/neomuttrc.vim	/^let b:current_syntax = "neomuttrc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/netrc.vim	/^let b:current_syntax = "netrc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/nginx.vim	/^let b:current_syntax = "nginx"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/nim.vim	/^let b:current_syntax = 'nim'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ninja.vim	/^let b:current_syntax = "ninja"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/nix.vim	/^let b:current_syntax = "nix"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/nqc.vim	/^let b:current_syntax = "nqc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/nroff.vim	/^let b:current_syntax = "nroff"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/nsis.vim	/^let b:current_syntax = "nsis"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/oasis.vim	/^let b:current_syntax = "oasis"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/obj.vim	/^let b:current_syntax = "obj"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ocaml.vim	/^let b:current_syntax = "ocaml"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ocamlbuild_tags.vim	/^let b:current_syntax = "ocamlbuild_tags"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/occam.vim	/^let b:current_syntax = "occam"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ocpbuild.vim	/^let b:current_syntax = "ocpbuild"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ocpbuildroot.vim	/^let b:current_syntax = "ocpbuildroot"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/octave.vim	/^let b:current_syntax = "octave"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/odin.vim	/^let b:current_syntax = "odin"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/omake.vim	/^let b:current_syntax = "omake"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/omnimark.vim	/^let b:current_syntax = "omnimark"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/opam.vim	/^let b:current_syntax = "opam"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/opencl.vim	/^let b:current_syntax = "opencl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/openroad.vim	/^let b:current_syntax = "openroad"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/opl.vim	/^let b:current_syntax = "opl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ora.vim	/^let b:current_syntax = "ora"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/pamconf.vim	/^let b:current_syntax = "pamconf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/pamenv.vim	/^let b:current_syntax = "pamenv"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/papp.vim	/^let b:current_syntax = "papp"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/pascal.vim	/^let b:current_syntax = "pascal"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/passwd.vim	/^let b:current_syntax = "passwd"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/pccts.vim	/^let b:current_syntax = "pccts"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/pdf.vim	/^let b:current_syntax = "pdf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/perl.vim	/^let b:current_syntax = "perl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/pf.vim	/^let b:current_syntax = "pf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/pfmain.vim	/^let b:current_syntax = "pfmain"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/pgsql.vim	/^let b:current_syntax = "sql"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/php.vim	/^let b:current_syntax = "php"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/pike.vim	/^let b:current_syntax = "pike"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/pilrc.vim	/^let b:current_syntax = "pilrc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/pine.vim	/^let b:current_syntax = "pine"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/pinfo.vim	/^let b:current_syntax = "pinfo"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/plantuml.vim	/^let b:current_syntax = 'plantuml'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/pli.vim	/^let b:current_syntax = "pl1"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/plm.vim	/^let b:current_syntax = "plm"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/plp.vim	/^let b:current_syntax = "plp"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/plsql.vim	/^let b:current_syntax = "plsql"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/po.vim	/^let b:current_syntax = "po"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/pod.vim	/^let b:current_syntax = "pod"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/pony.vim	/^let b:current_syntax = 'pony'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/postscr.vim	/^let b:current_syntax = "postscr"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/pov.vim	/^let b:current_syntax = "pov"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/povini.vim	/^let b:current_syntax = "povini"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ppd.vim	/^let b:current_syntax = "ppd"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ppwiz.vim	/^let b:current_syntax = "ppwiz"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/privoxy.vim	/^let b:current_syntax = "privoxy"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/procmail.vim	/^let b:current_syntax = "procmail"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/prolog.vim	/^let b:current_syntax = "prolog"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/promela.vim	/^let b:current_syntax = "promela"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/proto.vim	/^let b:current_syntax = "proto"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/protocols.vim	/^let b:current_syntax = "protocols"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ps1.vim	/^let b:current_syntax = "ps1"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ps1xml.vim	/^let b:current_syntax = "ps1xml"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/psf.vim	/^let b:current_syntax = "psf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/pug.vim	/^let b:current_syntax = "pug"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/puppet.vim	/^let b:current_syntax = "puppet"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/purescript.vim	/^let b:current_syntax = "purescript"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/pyrex.vim	/^let b:current_syntax = "pyrex"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/python.vim	/^let b:current_syntax = 'python'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/qmake.vim	/^let b:current_syntax = "qmake"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/qml.vim	/^let b:current_syntax = "qml"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/quake.vim	/^let b:current_syntax = "quake"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/racket.vim	/^let b:current_syntax = "racket"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/radiance.vim	/^let b:current_syntax = "radiance"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ragel.vim	/^let b:current_syntax = "ragel"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/raku.vim	/^let b:current_syntax = "raku"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/raml.vim	/^let b:current_syntax = "raml"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ratpoison.vim	/^let b:current_syntax = "ratpoison"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/razor.vim	/^let b:current_syntax = "razor"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/rc.vim	/^let b:current_syntax = "rc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/rcs.vim	/^let b:current_syntax = "rcs"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/readline.vim	/^let b:current_syntax = 'readline'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/reason.vim	/^let b:current_syntax = "reason"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/rego.vim	/^let b:current_syntax = 'rego'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/remind.vim	/^let b:current_syntax = "remind"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/requirements.vim	/^let b:current_syntax = "requirements"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/resolv.vim	/^let b:current_syntax = "resolv"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/reva.vim	/^let b:current_syntax = "reva"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/rexx.vim	/^let b:current_syntax = "rexx"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/rhelp.vim	/^let   b:current_syntax = "rhelp"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/rib.vim	/^let b:current_syntax = "rib"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/rmd.vim	/^  let b:current_syntax = "rmd"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/rmd.vim	/^let b:current_syntax = "rmd"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/rnc.vim	/^let b:current_syntax = "rnc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/rng.vim	/^let b:current_syntax = 'rng'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/rnoweb-1.vim	/^let   b:current_syntax = "rnoweb"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/rnoweb-2.vim	/^let   b:current_syntax = "rnoweb"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/robots.vim	/^let b:current_syntax = "robots"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/rpcgen.vim	/^let b:current_syntax = "rpcgen"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/rpl.vim	/^let b:current_syntax = "rpl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/rrst.vim	/^let b:current_syntax = "rrst"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/rst.vim	/^let b:current_syntax = "rst"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/rtf.vim	/^let b:current_syntax = "rtf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/rust.vim	/^let b:current_syntax = "rust"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/samba.vim	/^let b:current_syntax = "samba"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sas.vim	/^let b:current_syntax = "sas"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sass.vim	/^let b:current_syntax = "sass"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sather.vim	/^let b:current_syntax = "sather"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/scala.vim	/^let b:current_syntax = "scala"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/scala.vim	/^let b:current_syntax = 'scala'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/scheme.vim	/^let b:current_syntax = 'scheme'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/scilab.vim	/^let b:current_syntax = "scilab"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/screen.vim	/^let b:current_syntax = "screen"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/scss.vim	/^let b:current_syntax = "scss"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sd.vim	/^let b:current_syntax = "sd"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sdc.vim	/^let b:current_syntax = "sdc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sdl.vim	/^let b:current_syntax = "sdl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sed.vim	/^let b:current_syntax = "sed"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sensors.vim	/^let b:current_syntax = "sensors"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/services.vim	/^let b:current_syntax = "services"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/setserial.vim	/^let b:current_syntax = "setserial"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sexplib.vim	/^let b:current_syntax = "sexplib"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sieve.vim	/^let b:current_syntax = "sieve"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sil.vim	/^let b:current_syntax = "sil"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/simula.vim	/^let b:current_syntax = "simula"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sinda.vim	/^let b:current_syntax = "sinda"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sisu.vim	/^let b:current_syntax = "sisu"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/skill.vim	/^let b:current_syntax = "skill"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/slang.vim	/^let b:current_syntax = "slang"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/slice.vim	/^let b:current_syntax = "slice"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/slim.vim	/^let b:current_syntax = "slim"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/slime.vim	/^let b:current_syntax = "slime"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/slpconf.vim	/^let b:current_syntax = "slpconf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/slpreg.vim	/^let b:current_syntax = "slpreg"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/slpspi.vim	/^let b:current_syntax = "slpspi"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/slrnrc.vim	/^let b:current_syntax = "slrnrc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/slrnsc.vim	/^let b:current_syntax = "slrnsc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sm.vim	/^let b:current_syntax = "sm"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/smarty.vim	/^let b:current_syntax = "smarty"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/smcl.vim	/^let b:current_syntax = "smcl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/smith.vim	/^let b:current_syntax = "smith"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sml.vim	/^let b:current_syntax = "sml"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/smt2.vim	/^let b:current_syntax = "smt2"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/snobol4.vim	/^let b:current_syntax = "snobol4"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/spec.vim	/^let b:current_syntax = "spec"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/spice.vim	/^let b:current_syntax = "spice"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/spup.vim	/^let b:current_syntax = "spup"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/spyce.vim	/^let b:current_syntax = "spyce"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sqlj.vim	/^let b:current_syntax = "sqlj"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sqloracle.vim	/^let b:current_syntax = "sql"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sqr.vim	/^let b:current_syntax = "sqr"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/squid.vim	/^let b:current_syntax = "squid"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/srec.vim	/^let b:current_syntax = "srec"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sshconfig.vim	/^let b:current_syntax = "sshconfig"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sshdconfig.vim	/^let b:current_syntax = "sshdconfig"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/st.vim	/^let b:current_syntax = "st"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/stata.vim	/^let b:current_syntax = "stata"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/stp.vim	/^let b:current_syntax = "stp"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/stylus.vim	/^let b:current_syntax = "stylus"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sudoers.vim	/^let b:current_syntax = "sudoers"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/svelte.vim	/^let b:current_syntax = 'svelte'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/svg.vim	/^let b:current_syntax = "svg"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/svn.vim	/^let b:current_syntax = "svn"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/swift.vim	/^let b:current_syntax = "swift"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/swiftgyb.vim	/^let b:current_syntax = "swiftgyb"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sxhkdrc.vim	/^let b:current_syntax = "sxhkdrc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/sysctl.vim	/^let b:current_syntax = "sysctl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/systemd.vim	/^let b:current_syntax = "systemd"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/systemverilog.vim	/^let b:current_syntax = "systemverilog"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tablegen.vim	/^let b:current_syntax = "tablegen"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tads.vim	/^let b:current_syntax = "tads"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tags.vim	/^let b:current_syntax = "tags"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tak.vim	/^let b:current_syntax = "tak"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tap.vim	/^let b:current_syntax="tapVerboseOutput"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/taskdata.vim	/^let b:current_syntax = "taskdata"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/taskedit.vim	/^let b:current_syntax = "taskedit"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tcl.vim	/^let b:current_syntax = "tcl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/teraterm.vim	/^let b:current_syntax = "teraterm"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/terminfo.vim	/^let b:current_syntax = "terminfo"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/terraform.vim	/^let b:current_syntax = 'terraform'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/texinfo.vim	/^let b:current_syntax = "texinfo"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/texmf.vim	/^let b:current_syntax = "texmf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tf.vim	/^let b:current_syntax = "tf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/thrift.vim	/^let b:current_syntax = "thrift"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tidy.vim	/^let b:current_syntax = "tidy"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tilde.vim	/^let b:current_syntax = "tilde"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tli.vim	/^let b:current_syntax = "tli"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tmux.vim	/^let b:current_syntax = "tmux"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/toml.vim	/^let b:current_syntax = 'toml'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tpp.vim	/^let b:current_syntax = 'tpp'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tptp.vim	/^let b:current_syntax = "tptp"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/trasys.vim	/^let b:current_syntax = "trasys"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/treetop.vim	/^let b:current_syntax = 'treetop'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tsalt.vim	/^let b:current_syntax = "tsalt"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tsscl.vim	/^let b:current_syntax = "tsscl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tssgm.vim	/^let b:current_syntax = "tssgm"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tssop.vim	/^let b:current_syntax = "tssop"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tt2.vim	/^let b:current_syntax = "tt2"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tt2html.vim	/^let b:current_syntax = "tt2html"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/tt2js.vim	/^let b:current_syntax = "tt2js"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/typescript.vim	/^let b:current_syntax = "typescript"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/typescriptreact.vim	/^let b:current_syntax = "typescriptreact"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/uc.vim	/^let b:current_syntax = "uc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/udevconf.vim	/^let b:current_syntax = "udevconf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/udevperm.vim	/^let b:current_syntax = "udevperm"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/uil.vim	/^let b:current_syntax = "uil"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/unison.vim	/^let b:current_syntax = "unison"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/updatedb.vim	/^let b:current_syntax = "updatedb"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/upstart.vim	/^let b:current_syntax = "upstart"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/upstreamdat.vim	/^let b:current_syntax = "upstreamdat"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/upstreaminstalllog.vim	/^let b:current_syntax = "upstreaminstalllog"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/upstreamlog.vim	/^let b:current_syntax = "upstreamlog"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/usserverlog.vim	/^let b:current_syntax = "usserverlog"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/usw2kagtlog.vim	/^let b:current_syntax = "usw2kagentlog"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/vala.vim	/^let b:current_syntax = "vala"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/vb.vim	/^let b:current_syntax = "vb"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/vbnet.vim	/^let b:current_syntax = "vbnet"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/velocity.vim	/^let b:current_syntax = "velocity"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/vera.vim	/^let b:current_syntax = "vera"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/verilog.vim	/^let b:current_syntax = "verilog"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/verilogams.vim	/^let b:current_syntax = "verilogams"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/vgrindefs.vim	/^let b:current_syntax = "vgrindefs"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/vhdl.vim	/^let b:current_syntax = "vhdl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/vimgo.vim	/^let b:current_syntax = "vimgo"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/viminfo.vim	/^let b:current_syntax = "viminfo"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/vlang.vim	/^let b:current_syntax = 'vlang'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/vmasm.vim	/^let b:current_syntax = "vmasm"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/voscm.vim	/^let b:current_syntax = "voscm"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/vrml.vim	/^let b:current_syntax = "vrml"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/vroom.vim	/^let b:current_syntax = 'vroom'$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/vue.vim	/^let b:current_syntax = "vue"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/wast.vim	/^let b:current_syntax = "wast"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/webmacro.vim	/^let b:current_syntax = "webmacro"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/wget.vim	/^let b:current_syntax = "wget"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/winbatch.vim	/^let b:current_syntax = "winbatch"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/wml.vim	/^let b:current_syntax = "wml"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/wsh.vim	/^let b:current_syntax = "wsh"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/wsml.vim	/^let b:current_syntax = "wsml"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/wvdial.vim	/^let b:current_syntax = "wvdial"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/xdc.vim	/^let b:current_syntax = "xdc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/xdefaults.vim	/^let b:current_syntax = "xdefaults"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/xf86conf.vim	/^let b:current_syntax = "xf86conf"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/xhtml.vim	/^let b:current_syntax = "xhtml"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/xinetd.vim	/^let b:current_syntax = "xinetd"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/xmath.vim	/^let b:current_syntax = "xmath"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/xml.vim	/^let b:current_syntax = "xml"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/xmodmap.vim	/^let b:current_syntax = "xmodmap"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^let b:current_syntax = "xpm"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^let b:current_syntax = "xpm2"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/xquery.vim	/^let b:current_syntax = "xquery"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/xs.vim	/^let b:current_syntax = "xs"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/xsl.vim	/^let b:current_syntax = "xsl"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/yacc.vim	/^let b:current_syntax = "yacc"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let b:current_syntax = "yaml"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/z8a.vim	/^let b:current_syntax = "z8a"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/zephir.vim	/^let b:current_syntax = "zephir"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/zig.vim	/^let b:current_syntax = "zig"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/zimbu.vim	/^let b:current_syntax = "zimbu"$/;"	v
b:current_syntax	autoload/plugged/vim-polyglot/syntax/zir.vim	/^let b:current_syntax = "zir"$/;"	v
b:current_syntax_embed	autoload/plugged/vim-polyglot/syntax/rust.vim	/^    let b:current_syntax_embed = 1$/;"	v
b:dc_next_index	autoload/plugged/vim-polyglot/syntax/dircolors.vim	/^let b:dc_next_index = 0$/;"	v
b:dhall_ftplugin	autoload/plugged/vim-polyglot/ftplugin/dhall.vim	/^let b:dhall_ftplugin = 1$/;"	v
b:did_8thplugin	autoload/plugged/vim-polyglot/ftplugin/8th.vim	/^let b:did_8thplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-fugitive/ftplugin/fugitiveblame.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/a2ps.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/aap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/abap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/abaqus.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ada.vim	/^let b:did_ftplugin = 45$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/alsaconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ansible_hosts.vim	/^  let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ant.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/arch.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/awk.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/basic.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/bdf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/blade.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/bst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/caddyfile.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/calendar.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/cdrdaoconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/cfg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/clojure.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/conf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/config.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/crm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/cs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/csc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/css.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/csv.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/cucumber.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/cvsrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/dart.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/debcontrol.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/denyhosts.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/dictconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/dictdconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/diff.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/dircolors.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/dockerfile.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/dosbatch.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/dosini.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/dtd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/dune.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/elinks.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/epuppet.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/erlang.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/eterm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/falcon.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/fennel.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/fetchmail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/fish.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/fortran.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/framescript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/freebasic.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/fstab.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/fvwm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/gdb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/git.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/gitcommit.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/gitconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/gitignore.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/gitrebase.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/gleam.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/gpg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/graphql.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/groovy.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/group.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/grub.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/haml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/hamster.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/hcl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/help.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/hgcommit.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/hog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/hostconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/hostsaccess.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/html.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/indent.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ion.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/java.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/jproperties.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/jsp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/kotlin.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ld.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/less.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/lftp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/libao.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/limits.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/liquid.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/lisp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/llvm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/logcheck.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/loginaccess.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/logindefs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/logtalk.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/lprolog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ls.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/m4.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/mail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/mailaliases.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/mailcap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/make.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/mako.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/manconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/meson.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/mlir.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/mma.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/modconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/moon.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/mplayerconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/mrxvtrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/muttrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/nanorc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/neomuttrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/netrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/nix.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/nroff.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/nsis.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/occam.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/omake.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/opencl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/pamconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/pascal.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/passwd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/pdf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/perl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/pinfo.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/pony.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/postscr.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/procmail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/prolog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/protocols.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ps1.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ps1xml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/puppet.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/qml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/quake.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/racket.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/raku.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/razor.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/readline.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/reva.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/rmd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/rnc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/rnoweb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/rpl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/rrst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/rst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sass.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sbt.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/scala.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/scheme.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/screen.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sensors.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/services.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/setserial.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sexplib.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sieve.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/slim.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/slpconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/slpreg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/slpspi.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/spec.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^let b:did_ftplugin     = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sshconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sudoers.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/svelte.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sysctl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/systemd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/tablegen.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/tcl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/terminfo.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/terraform.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/text.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/tidy.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/tmux.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/toml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/treetop.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/typescript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/udevconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/udevperm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/updatedb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/vala.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/vb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/verilog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/vhdl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/vroom.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/wast.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/xdefaults.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/xf86conf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/xhtml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/xinetd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/xmodmap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/xsd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/xslt.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/yaml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/zig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	autoload/plugged/vim-polyglot/ftplugin/zimbu.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/after/indent/html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/after/indent/jsx.vim	/^  let b:did_indent = s:did_indent$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/after/indent/tex.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/after/indent/tsx.vim	/^  let b:did_indent = s:did_indent$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/ada.vim	/^let b:did_indent = 45$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/arduino.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/autohotkey.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/awk.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/bib.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/blade.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/bst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/bzl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/cabal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/caddyfile.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/cdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/ch.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/chaiscript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/clojure.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/cmake.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/cobol.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/crystal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/cs.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/css.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/cucumber.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/cuda.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/cython.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/d.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/dart.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/dictconf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/dictdconf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/dosbatch.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/dune.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/dylan.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/eelixir.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/elixir.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/elm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/ember-script.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/erlang.vim	/^  let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/eterm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/falcon.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/fennel.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/fortran.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/framescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/fsharp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/gdscript3.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/gitconfig.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/gitolite.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/go.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/graphql.vim	/^  let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/haml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/hamster.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/handlebars.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/haskell.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/hcl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/hog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/idris.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/idris2.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/j.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/java.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/json.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/jst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/kotlin.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/ld.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/ledger.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/lifelines.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/liquid.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/lisp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/litcoffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/llvm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/logtalk.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/ls.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/lua.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/mail.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/make.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/mako.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/markdown.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/meson.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/mlir.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/moon.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/mp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/nginx.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/nim.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/nix.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/nsis.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/ocaml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/occam.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/octave.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/odin.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/omake.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/opencl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/pascal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/perl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/pgsql.vim	/^let b:did_indent     = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/plantuml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/pony.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/postscr.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/pov.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/prolog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/proto.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/ps1.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/pug.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/puppet.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/purescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/python.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/qml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/racket.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/raku.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/readline.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/reason.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/rmd.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/rnoweb.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/rpl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/rrst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/rst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/rust.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/sas.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/sass.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/scala.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/scss.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/sdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/slim.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/slime.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/sml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/solidity.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/sshconfig.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/stylus.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/svelte.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/svg.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/swift.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/systemverilog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/tcl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/teraterm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/terraform.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/tf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/tilde.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/treetop.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/typescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/typescriptreact.vim	/^  let b:did_indent=s:did_indent$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/vala.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/vb.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/verilog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/vhdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/vlang.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/vroom.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/vue.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/wast.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/xf86conf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/xinetd.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/yacc.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/zig.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/indent/zimbu.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	autoload/plugged/vim-polyglot/syntax/spyce.vim	/^let b:did_indent = 1	     " don't perform HTML indentation!$/;"	v
b:did_indent_hbs	autoload/plugged/vim-polyglot/indent/handlebars.vim	/^let b:did_indent_hbs = 1$/;"	v
b:did_scheme_ftplugin	autoload/plugged/vim-polyglot/ftplugin/scheme.vim	/^let b:did_scheme_ftplugin = 1$/;"	v
b:did_scheme_syntax	autoload/plugged/vim-polyglot/syntax/scheme.vim	/^let b:did_scheme_syntax = 1$/;"	v
b:dnsmasq_backrgound_light	autoload/plugged/vim-polyglot/syntax/dnsmasq.vim	/^	let b:dnsmasq_backrgound_light = 0$/;"	v
b:dnsmasq_backrgound_light	autoload/plugged/vim-polyglot/syntax/dnsmasq.vim	/^	let b:dnsmasq_backrgound_light = dnsmasq_backrgound_light$/;"	v
b:ecrystal_align_end	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^    let b:ecrystal_align_end = b:ecrystal_subtype !=# 'html' && b:ecrystal_subtype !=# 'xml'$/;"	v
b:ecrystal_align_end	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^    let b:ecrystal_align_end = g:ecrystal_align_end$/;"	v
b:ecrystal_indent_multiline	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^  let b:ecrystal_indent_multiline = get(g:, 'ecrystal_indent_multiline', 1)$/;"	v
b:ecrystal_subtype_indentexpr	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^let b:ecrystal_subtype_indentexpr = &l:indentexpr$/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'javascript'$/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'text'$/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'yaml'$/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = g:eelixir_default_subtype$/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^eex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^leex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^sface\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eex\\|\\.sface\\|\\.lee/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:eelixir_subtype = matchstr(s:lines,'eelixir_subtype=\\zs\\w\\+')$/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'javascript'$/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'text'$/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'yaml'$/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = g:eelixir_default_subtype$/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^eex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^leex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^sface\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eex\\|\\.sface\\|\\.lee/;"	v
b:eelixir_subtype	autoload/plugged/vim-polyglot/syntax/eelixir.vim	/^  let b:eelixir_subtype = matchstr(s:lines,'eelixir_subtype=\\zs\\w\\+')$/;"	v
b:eelixir_subtype_indentexpr	autoload/plugged/vim-polyglot/indent/eelixir.vim	/^let b:eelixir_subtype_indentexpr = &l:indentexpr$/;"	v
b:elixir_no_expensive	autoload/plugged/vim-polyglot/syntax/slime.vim	/^let b:elixir_no_expensive = 1$/;"	v
b:endwise_addition	autoload/plugged/vim-polyglot/ftplugin/fish.vim	/^let b:endwise_addition = 'end'$/;"	v
b:endwise_addition	autoload/plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_addition = '\\=index(["dot","mindmap","uml","salt","wbs"], submatch(0))!=-1 ? "@en/;"	v
b:endwise_pattern	autoload/plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_pattern = '^\\s*\\zs\\(loop\\|group\\|alt\\|note\\ze[^:]*$\\|legend\\|@start\\zs\\/;"	v
b:endwise_syngroups	autoload/plugged/vim-polyglot/ftplugin/fish.vim	/^let b:endwise_syngroups = 'fishKeyword,fishConditional,fishRepeat'$/;"	v
b:endwise_syngroups	autoload/plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_syngroups = 'plantumlKeyword,plantumlPreProc'$/;"	v
b:endwise_words	autoload/plugged/vim-polyglot/ftplugin/fish.vim	/^let b:endwise_words = 'begin,function,if,switch,while,for'$/;"	v
b:endwise_words	autoload/plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_words = 'loop,group,alt,note,legend,startdot,startmindmap,startuml,startsalt,start/;"	v
b:erlang_syntax_synced	autoload/plugged/vim-polyglot/syntax/erlang.vim	/^let b:erlang_syntax_synced = 1$/;"	v
b:eruby_nest_level	autoload/plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_nest_level = strlen(substitute(substitute(&filetype,'\\C\\<eruby\\>','@','g'),'[/;"	v
b:eruby_nest_level	autoload/plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'/;"	v
b:eruby_nest_level	autoload/plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubi/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubi/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^.\\{-\\}\\ze\\.eruby\\>')$/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	autoload/plugged/vim-polyglot/syntax/nginx.vim	/^let b:eruby_subtype = ''$/;"	v
b:eruby_subtype_indentexpr	autoload/plugged/vim-polyglot/indent/eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:eterm_minlines	autoload/plugged/vim-polyglot/syntax/eterm.vim	/^  let b:eterm_minlines = 50$/;"	v
b:eterm_minlines	autoload/plugged/vim-polyglot/syntax/eterm.vim	/^  let b:eterm_minlines = eterm_minlines$/;"	v
b:filetype_in_cpp_family	autoload/plugged/vim-polyglot/syntax/cpp.vim	/^let b:filetype_in_cpp_family = 1$/;"	v
b:fortran_dialect	autoload/plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_dialect = "f08"$/;"	v
b:fortran_dialect	autoload/plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_dialect = g:fortran_dialect$/;"	v
b:fortran_dialect	autoload/plugged/vim-polyglot/syntax/fortran.vim	/^  let b:fortran_dialect = "F"$/;"	v
b:fortran_dialect	autoload/plugged/vim-polyglot/syntax/fortran.vim	/^  let b:fortran_dialect = "f08"$/;"	v
b:fortran_fixed_source	autoload/plugged/vim-polyglot/ftplugin/fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	autoload/plugged/vim-polyglot/ftplugin/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	autoload/plugged/vim-polyglot/ftplugin/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_fixed_source	autoload/plugged/vim-polyglot/indent/fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	autoload/plugged/vim-polyglot/indent/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	autoload/plugged/vim-polyglot/indent/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_fixed_source	autoload/plugged/vim-polyglot/syntax/fortran.vim	/^        let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	autoload/plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	autoload/plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_retype	autoload/plugged/vim-polyglot/syntax/fortran.vim	/^let b:fortran_retype = getline(1)." ".getline(2)." ".getline(3)$/;"	v
b:framescript_minlines	autoload/plugged/vim-polyglot/syntax/framescript.vim	/^let b:framescript_minlines = exists("framescript_minlines")$/;"	v
b:git_dir	autoload/plugged/vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = $GIT_DIR$/;"	v
b:git_dir	autoload/plugged/vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = matchstr(expand('%:p'),'.*\\.git[\\\/]worktrees[\\\/][^\\\/]\\+\\>')$/;"	v
b:git_dir	autoload/plugged/vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = matchstr(expand('%:p'),'.*\\.git\\>')$/;"	v
b:git_dir	autoload/plugged/vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = substitute(b:git_dir,'\\\\','\/','g')$/;"	v
b:git_dir	autoload/plugged/vim-polyglot/ftplugin/gitcommit.vim	/^  let b:git_dir = expand("%:p:h")$/;"	v
b:graphql_nested_syntax	autoload/plugged/vim-polyglot/after/syntax/javascript/graphql.vim	/^let b:graphql_nested_syntax = 1$/;"	v
b:graphql_nested_syntax	autoload/plugged/vim-polyglot/after/syntax/php/graphql.vim	/^let b:graphql_nested_syntax = 1$/;"	v
b:graphql_nested_syntax	autoload/plugged/vim-polyglot/after/syntax/reason/graphql.vim	/^let b:graphql_nested_syntax = 1$/;"	v
b:graphql_nested_syntax	autoload/plugged/vim-polyglot/after/syntax/typescript/graphql.vim	/^let b:graphql_nested_syntax = 1$/;"	v
b:handlebars_subtype_indentexpr	autoload/plugged/vim-polyglot/indent/handlebars.vim	/^let b:handlebars_subtype_indentexpr = &l:indentexpr$/;"	v
b:hi_indent	autoload/plugged/vim-polyglot/after/indent/html.vim	/^let b:hi_indent = {"lnum": -1}$/;"	v
b:hi_indent	autoload/plugged/vim-polyglot/indent/html.vim	/^let b:hi_indent = {"lnum": -1}$/;"	v
b:hi_lasttick	autoload/plugged/vim-polyglot/after/indent/html.vim	/^let b:hi_lasttick = 0$/;"	v
b:hi_lasttick	autoload/plugged/vim-polyglot/indent/html.vim	/^let b:hi_lasttick = 0$/;"	v
b:hi_newstate	autoload/plugged/vim-polyglot/after/indent/html.vim	/^let b:hi_newstate = {}$/;"	v
b:hi_newstate	autoload/plugged/vim-polyglot/indent/html.vim	/^let b:hi_newstate = {}$/;"	v
b:hs_chs	autoload/plugged/vim-polyglot/syntax/chaskell.vim	/^let b:hs_chs=1$/;"	v
b:html_indent_usestate	autoload/plugged/vim-polyglot/indent/eruby.vim	/^let b:html_indent_usestate = 0$/;"	v
b:html_indent_usestate	autoload/plugged/vim-polyglot/indent/handlebars.vim	/^let b:html_indent_usestate = 0$/;"	v
b:indent_use_syntax	autoload/plugged/vim-polyglot/indent/perl.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
b:indent_use_syntax	autoload/plugged/vim-polyglot/indent/raku.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
b:indentexpr_base	autoload/plugged/vim-polyglot/after/indent/javascript-2.vim	/^let b:indentexpr_base = &indentexpr$/;"	v
b:indentexpr_base	autoload/plugged/vim-polyglot/after/indent/php.vim	/^let b:indentexpr_base = &indentexpr$/;"	v
b:indentexpr_base	autoload/plugged/vim-polyglot/after/indent/typescript.vim	/^let b:indentexpr_base = &indentexpr$/;"	v
b:is_hledger	autoload/plugged/vim-polyglot/syntax/ledger.vim	/^    let b:is_hledger = 0$/;"	v
b:is_hledger	autoload/plugged/vim-polyglot/syntax/ledger.vim	/^    let b:is_hledger = 1$/;"	v
b:javascript_indentexpr	autoload/plugged/vim-polyglot/indent/svelte.vim	/^let b:javascript_indentexpr = &indentexpr$/;"	v
b:jst_nest_level	autoload/plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_nest_level = 1$/;"	v
b:jst_nest_level	autoload/plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\/;"	v
b:jst_subtype	autoload/plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'haml'$/;"	v
b:jst_subtype	autoload/plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'html'$/;"	v
b:jst_subtype	autoload/plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'javascript'$/;"	v
b:jst_subtype	autoload/plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'ruby'$/;"	v
b:jst_subtype	autoload/plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'text'$/;"	v
b:jst_subtype	autoload/plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'yaml'$/;"	v
b:jst_subtype	autoload/plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = g:jst_default_subtype$/;"	v
b:jst_subtype	autoload/plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.jst\\)\\+$','',''),'\\.\\zs/;"	v
b:jst_subtype	autoload/plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_subtype = matchstr(&filetype,'^jst\\.\\zs\\w\\+')$/;"	v
b:jst_subtype	autoload/plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_subtype = matchstr(s:lines,'jst_subtype=\\zs\\w\\+')$/;"	v
b:jst_subtype_indentexpr	autoload/plugged/vim-polyglot/indent/jst.vim	/^let b:jst_subtype_indentexpr = &l:indentexpr$/;"	v
b:jsx_pretty_old_cms	autoload/plugged/vim-polyglot/after/ftplugin/jsx.vim	/^let b:jsx_pretty_old_cms = &l:commentstring$/;"	v
b:jsx_pretty_old_cms	autoload/plugged/vim-polyglot/after/ftplugin/tsx.vim	/^let b:jsx_pretty_old_cms = &l:commentstring$/;"	v
b:julia_begin_keywords	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:julia_begin_keywords = '\\%(\\%(\\.\\s*\\)\\@<!\\|\\%(@\\s*.\\s*\\)\\@<=\\)\\<\\%(functi/;"	v
b:julia_begin_keywordsm	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:julia_begin_keywordsm = '\\%(' . s:yesmacro . b:julia_begin_keywords . '\\)\\|'$/;"	v
b:julia_end_keywords	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:julia_end_keywords = '\\<end\\>'$/;"	v
b:julia_vim_loaded	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^let b:julia_vim_loaded = 1$/;"	v
b:lhs_markup	autoload/plugged/vim-polyglot/syntax/lhaskell.vim	/^	    let b:lhs_markup = "unknown"$/;"	v
b:lhs_markup	autoload/plugged/vim-polyglot/syntax/lhaskell.vim	/^	    let b:lhs_markup = matchstr(lhs_markup,'\\<\\%(tex\\|md\\|none\\)\\>')$/;"	v
b:lhs_markup	autoload/plugged/vim-polyglot/syntax/lhaskell.vim	/^	let b:lhs_markup = "plain"$/;"	v
b:lhs_markup	autoload/plugged/vim-polyglot/syntax/lhaskell.vim	/^	let b:lhs_markup = "tex"$/;"	v
b:lhs_markup	autoload/plugged/vim-polyglot/syntax/lhaskell.vim	/^	let b:lhs_markup = "unknown"$/;"	v
b:lhs_markup	autoload/plugged/vim-polyglot/syntax/lhaskell.vim	/^        let b:lhs_markup = "md"$/;"	v
b:liquid_subtype	autoload/plugged/vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	autoload/plugged/vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	autoload/plugged/vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\/;"	v
b:liquid_subtype	autoload/plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype	autoload/plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	autoload/plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	autoload/plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\/;"	v
b:liquid_subtype	autoload/plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = s:subtype$/;"	v
b:liquid_subtype	autoload/plugged/vim-polyglot/syntax/liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype_indentexpr	autoload/plugged/vim-polyglot/indent/liquid.vim	/^let b:liquid_subtype_indentexpr = &l:indentexpr$/;"	v
b:loaded_mustache_handlebars	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^let b:loaded_mustache_handlebars = 1$/;"	v
b:loaded_plantuml_plugin	autoload/plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:loaded_plantuml_plugin = 1$/;"	v
b:main_syntax	autoload/plugged/vim-polyglot/syntax/twig.vim	/^  let b:main_syntax = 'twig'$/;"	v
b:main_syntax	autoload/plugged/vim-polyglot/syntax/twig.vim	/^  let b:main_syntax = b:current_syntax$/;"	v
b:mako_outer_lang	autoload/plugged/vim-polyglot/syntax/mako.vim	/^    let b:mako_outer_lang = "html"$/;"	v
b:mako_outer_lang	autoload/plugged/vim-polyglot/syntax/mako.vim	/^    let b:mako_outer_lang = g:mako_default_outer_lang$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/after/ftplugin/coffee.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/after/ftplugin/tsx.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/aspvbs.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/blade.vim	/^    let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    let b:match_ignorecase=1$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/elixir.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/falcon.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/fish.vim	/^let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/fortran.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/hamster.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/html.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/mako.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/nsis.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:match_ignorecase=0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/pascal.vim	/^    let b:match_ignorecase = 1 " (pascal is case-insensitive)$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/plantuml.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/pony.vim	/^let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/postscr.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/spec.vim	/^let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/svelte.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/typescriptreact.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/vb.vim	/^    let b:match_ignorecase=1$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/verilog.vim	/^  let b:match_ignorecase=0$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/ftplugin/vhdl.vim	/^  let b:match_ignorecase=1$/;"	v
b:match_ignorecase	autoload/plugged/vim-polyglot/syntax/jst.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_skip	autoload/plugged/vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_skip = 's:comment\\|string'$/;"	v
b:match_skip	autoload/plugged/vim-polyglot/after/ftplugin/tsx.vim	/^  let b:match_skip = 's:comment\\|string'$/;"	v
b:match_skip	autoload/plugged/vim-polyglot/ftplugin/blade.vim	/^    let b:match_skip = 'synIDattr(synID(line("."), col("."), 0), "name") !=# "bladeKeyword"'$/;"	v
b:match_skip	autoload/plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:match_skip = 's:comment\\|string\\|regex\\|character'$/;"	v
b:match_skip	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^  let b:match_skip =$/;"	v
b:match_skip	autoload/plugged/vim-polyglot/ftplugin/hog.vim	/^    let b:match_skip = 'r:\\\\.\\{-}$\\|^\\s*#.\\{-}$\\|^\\s*$'$/;"	v
b:match_skip	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:match_skip = 'synIDattr(synID(line("."),col("."),1),"name") =~ '$/;"	v
b:match_skip	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^  let b:match_skip = 'synIDattr(synID(line("."), col("."), 1), "name")$/;"	v
b:match_skip	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^  let b:match_skip = 'synIDattr(synID(line("."), col("."), 1), "name")$/;"	v
b:match_skip	autoload/plugged/vim-polyglot/ftplugin/perl.vim	/^let b:match_skip = 's:comment\\|string\\|perlQQ\\|perlShellCommand\\|perlHereDoc\\|perlSubstitut/;"	v
b:match_skip	autoload/plugged/vim-polyglot/ftplugin/pony.vim	/^let b:match_skip = 's:Comment\\|String\\|Character\\|CaseGuard'$/;"	v
b:match_skip	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:match_skip =$/;"	v
b:match_skip	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^let b:match_skip = 's:comment\\|string\\|rustCharacter\\|rustArrow'$/;"	v
b:match_skip	autoload/plugged/vim-polyglot/ftplugin/vala.vim	/^let b:match_skip = 's:comment\\|string\\|character\\|special'$/;"	v
b:match_skip	autoload/plugged/vim-polyglot/ftplugin/zimbu.vim	/^let b:match_skip = 's:comment\\|string\\|zimbuchar'$/;"	v
b:match_words	autoload/plugged/vim-polyglot/after/ftplugin/coffee.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	autoload/plugged/vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	autoload/plugged/vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_words = '<\\@<=\\([^\/][^ \\t>]*\\)\\g{hlend}[^>]*\\%(\/\\@<!>\\|$\\):<\\@<=\/\\1>/;"	v
b:match_words	autoload/plugged/vim-polyglot/after/ftplugin/tex.vim	/^  let b:match_words .= ',\\\\begin\\s*\\({\\a\\+\\*\\=}\\):\\\\end\\s*\\1'$/;"	v
b:match_words	autoload/plugged/vim-polyglot/after/ftplugin/tsx.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	autoload/plugged/vim-polyglot/after/ftplugin/tsx.vim	/^  let b:match_words = '<\\@<=\\([^\/][^ \\t>]*\\)\\g{hlend}[^>]*\\%(\/\\@<!>\\|$\\):<\\@<=\/\\1>/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:match_words = $/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/ada.vim	/^   let b:match_words =$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/aspvbs.vim	/^  let b:match_words =$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/blade.vim	/^    let b:match_words .= ',' .$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:match_words = &matchpairs$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    let b:match_words=$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^  let b:match_words =$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/csc.vim	/^    let b:match_words=$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/dtd.vim	/^    let b:match_words = '<!--:-->,<!:>'$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/elixir.vim	/^  let b:match_words = '\\:\\@<!\\<\\%(do\\|fn\\)\\:\\@!\\>' .$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/falcon.vim	/^  let b:match_words =$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/fish.vim	/^let b:match_words = escape($/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/fortran.vim	/^  let b:match_words =$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/framescript.vim	/^  let b:match_words =$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/haml.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/hamster.vim	/^  let b:match_words =$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^  let b:match_words = b:match_words$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/hog.vim	/^    let b:match_words =$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/html.vim	/^    let b:match_words = '<:>,' .$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^  let b:match_words = '^\\%(\\s*Note\\|.\\{-}\\<\\%([0-4]\\|13\\|noun\\|adverb\\|conjunction\\|v/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/jsp.vim	/^    let b:match_words = s:match_words$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:match_words = 'JuliaGetMatchWords()'$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words .= ','$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words .= '\\<\\%(if\\w*\\|unless\\|case\\)\\>:\\<\\%(elsif\\|else\\|when\\)\\>:\\</;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words = ''$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/make.vim	/^  let b:match_words = '^ *ifn\\=\\(eq\\|def\\)\\>:^ *else\\(\\s\\+ifn\\=\\(eq\\|def\\)\\)\\=\\>:/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/mako.vim	/^  let b:match_words = "<:>," .$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^  let b:match_words =$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^  let b:match_words =$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/nsis.vim	/^  let b:match_words =$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:match_words = b:mw$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/pascal.vim	/^    let b:match_words .= ',\\<if\\>:\\<else\\>'$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/pascal.vim	/^    let b:match_words .= ',\\<repeat\\>:\\<until\\>'$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/pascal.vim	/^    let b:match_words .= ':\\<^\\s*\\%(except\\|finally\\)\\>:\\<end\\>'$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/pascal.vim	/^    let b:match_words = '\\<\\%(begin\\|case\\|record\\|object\\|try\\)\\>'$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/pdf.vim	/^    let b:match_words = '\\<\\%(\\d\\+\\s\\+\\d\\+\\s\\+\\)obj\\>:\\<endobj\\>,\\<stream$:\\<end/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/perl.vim	/^let b:match_words = '\\<if\\>:\\<elsif\\>:\\<else\\>'$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/plantuml.vim	/^  let b:match_words =$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/pony.vim	/^let b:match_words = '\\v<%(ifdef|if|match|while|for|repeat|try|with|recover|object|lambda|iftype/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/postscr.vim	/^  let b:match_words = '<<:>>,\\<begin\\>:\\<end\\>,\\<save\\>:\\<restore\\>,\\<gsave\\>:\\<grest/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/pug.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:match_words =$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/spec.vim	/^let b:match_words =$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:match_words = &matchpairs .$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/stylus.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/svelte.vim	/^  let b:match_words = '<:>,' .$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/twig.vim	/^        let b:match_words .= ',' . s:pattern$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/typescriptreact.vim	/^  let b:match_words = exists('b:match_words')$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/vala.vim	/^let b:match_words = '^\\s*#\\s*if\\(\\|def\\|ndef\\)\\>:^\\s*#\\s*elif\\>:^\\s*#\\s*else\\>:^\\s/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/vb.vim	/^    let b:match_words=$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/verilog.vim	/^  let b:match_words=$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/vhdl.vim	/^  let b:match_words =$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let b:match_words = s:match_words$/;"	v
b:match_words	autoload/plugged/vim-polyglot/ftplugin/zimbu.vim	/^let b:match_words = '\\(^\\s*\\)\\@<=\\(MODULE\\|CLASS\\|INTERFACE\\|BITS\\|ENUM\\|SHARED\\|FUNC/;"	v
b:match_words	autoload/plugged/vim-polyglot/syntax/cdl.vim	/^let b:match_words='\\<if\\>:\\<then\\>:\\<elseif\\>:\\<else\\>:\\<endif\\>'$/;"	v
b:match_words	autoload/plugged/vim-polyglot/syntax/cmod.vim	/^let b:match_words = "({:}\\\\@1<=),^\\s*#\\s*\\%(if\\%(n\\?def\\)\\|else\\|el\\%(se\\)\\?if\\|en/;"	v
b:match_words	autoload/plugged/vim-polyglot/syntax/jst.vim	/^  let b:match_words = '<:>,' .$/;"	v
b:match_words	autoload/plugged/vim-polyglot/syntax/pike.vim	/^let b:match_words = "({:}\\\\@1<=),(\\\\[:]\\\\@1<=),(<:>\\\\@1<=),^\\s*#\\s*\\%(if\\%(n\\?def\\/;"	v
b:mw	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw =         '\\<let\\>:\\<and\\>:\\(\\<in\\>\\|;;\\)'$/;"	v
b:mw	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(for\\|while\\)\\>:\\<do\\>:\\<done\\>'$/;"	v
b:mw	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(match\\|try\\)\\>:\\<with\\>'$/;"	v
b:mw	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(object\\|sig\\|struct\\|begin\\)\\>:\\<end\\>'$/;"	v
b:mw	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<if\\>:\\<then\\>:\\<else\\>'$/;"	v
b:nroff_is_groff	autoload/plugged/vim-polyglot/syntax/nroff.vim	/^	let b:nroff_is_groff = 1$/;"	v
b:pdf_tagstack	autoload/plugged/vim-polyglot/ftplugin/pdf.vim	/^    let b:pdf_tagstack = []$/;"	v
b:php_version_id	autoload/plugged/vim-polyglot/syntax/php.vim	/^  let b:php_version_id = g:php_version_id$/;"	v
b:ragel_subtype	autoload/plugged/vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'cpp'$/;"	v
b:ragel_subtype	autoload/plugged/vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'objc'$/;"	v
b:ragel_subtype	autoload/plugged/vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'ruby'$/;"	v
b:ragel_subtype	autoload/plugged/vim-polyglot/syntax/ragel.vim	/^    let b:ragel_subtype = g:ragel_default_subtype$/;"	v
b:ragel_subtype	autoload/plugged/vim-polyglot/syntax/ragel.vim	/^    let b:ragel_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.rl\\|\\.ragel\\)\\+$','',/;"	v
b:ragel_subtype	autoload/plugged/vim-polyglot/syntax/ragel.vim	/^  let b:ragel_subtype = matchstr(s:lines, 'ragel_subtype=\\zs\\w\\+')$/;"	v
b:ran_once	autoload/plugged/vim-polyglot/indent/twig.vim	/^let b:ran_once = 1$/;"	v
b:ruby_no_expensive	autoload/plugged/vim-polyglot/syntax/haml.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	autoload/plugged/vim-polyglot/syntax/ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	autoload/plugged/vim-polyglot/syntax/slim.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_version	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^    let b:ruby_version = get(readfile(s:version_file, '', 1), '')$/;"	v
b:rust_last_args	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_last_args = []$/;"	v
b:rust_last_rustc_args	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_last_rustc_args = []$/;"	v
b:rust_original_delimitMate_excluded_regions	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^        let b:rust_original_delimitMate_excluded_regions = b:delimitMate_excluded_regions$/;"	v
b:rust_set_conceallevel	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_set_conceallevel=1$/;"	v
b:rust_set_foldmethod	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_set_foldmethod=1$/;"	v
b:rust_set_style	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_set_style = 1$/;"	v
b:smartcomment_force_linemode	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^let b:smartcomment_force_linemode = 1      " for carlobaldassi\/vim-smartcomment$/;"	v
b:spell_options	autoload/plugged/vim-polyglot/syntax/dart.vim	/^let b:spell_options = 'contained'$/;"	v
b:spell_options	autoload/plugged/vim-polyglot/syntax/groovy.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	autoload/plugged/vim-polyglot/syntax/haxe.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	autoload/plugged/vim-polyglot/syntax/java.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	autoload/plugged/vim-polyglot/syntax/wsml.vim	/^let b:spell_options="contained"$/;"	v
b:sql_compl_savefunc	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:sql_compl_savefunc = &omnifunc$/;"	v
b:sql_type_override	autoload/plugged/vim-polyglot/syntax/php.vim	/^    let b:sql_type_override='mysql'$/;"	v
b:sql_vis	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:sql_vis = 1$/;"	v
b:surround_123	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_123 = "{{ \\r }}"$/;"	v
b:surround_35	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_35 = "<%# \\r %>"$/;"	v
b:surround_45	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_45 = "<% \\r %>"$/;"	v
b:surround_5	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_5 = "<% \\r %>\\n<% end %>"$/;"	v
b:surround_61	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_61 = "<%= \\r %>"$/;"	v
b:svg_indent_close	autoload/plugged/vim-polyglot/indent/svg.vim	/^  let b:svg_indent_close = '.\\{-}<\/'$/;"	v
b:svg_indent_open	autoload/plugged/vim-polyglot/indent/svg.vim	/^  let b:svg_indent_open = '.\\{-}<\\a'$/;"	v
b:syng_str	autoload/plugged/vim-polyglot/ftplugin/svelte.vim	/^let b:syng_str = '^\\%(.*template\\)\\@!.*string\\|special'$/;"	v
b:syng_strcom	autoload/plugged/vim-polyglot/ftplugin/svelte.vim	/^let b:syng_strcom = '^\\%(.*template\\)\\@!.*string\\|comment\\|regex\\|special\\|doc'$/;"	v
b:tex_isk	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^  let b:tex_isk= '@,'.g:tex_isk$/;"	v
b:tex_isk	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^  let b:tex_isk= g:tex_isk$/;"	v
b:tex_isk	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let b:tex_isk="48-57,a-z,A-Z,192-255"$/;"	v
b:tex_isk	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let b:tex_isk="@,48-57,a-z,A-Z,192-255"$/;"	v
b:tex_stylish	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^  let b:tex_stylish= 0$/;"	v
b:tex_stylish	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^  let b:tex_stylish= 1$/;"	v
b:tex_stylish	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let b:tex_stylish= g:tex_stylish$/;"	v
b:tsx_match_words	autoload/plugged/vim-polyglot/ftplugin/typescriptreact.vim	/^  let b:tsx_match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:tsx_ts_indentexpr	autoload/plugged/vim-polyglot/indent/typescriptreact.vim	/^let b:tsx_ts_indentexpr = &indentexpr$/;"	v
b:tt2_syn_inc_perl	autoload/plugged/vim-polyglot/syntax/tt2.vim	/^    let b:tt2_syn_inc_perl = 1$/;"	v
b:tt2_syn_tags	autoload/plugged/vim-polyglot/syntax/tt2.vim	/^    let b:tt2_syn_tags = '\\[% %]'$/;"	v
b:twigMatchWords	autoload/plugged/vim-polyglot/ftplugin/twig.vim	/^    let b:twigMatchWords = [$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/after/ftplugin/javascript-1.vim	/^  let b:undo_ftplugin .= ' | setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/after/ftplugin/javascript-1.vim	/^  let b:undo_ftplugin = 'setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/after/ftplugin/tex.vim	/^let b:undo_ftplugin .= "| setl inex<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/a2ps.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/aap.vim	/^let b:undo_ftplugin = "setl fo< com< et<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:undo_ftplugin .= " foldexpr< foldmethod<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:undo_ftplugin .= "|unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:undo_ftplugin .= "|unlet! b:match_ignorecase b:match_words"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/abaqus.vim	/^let b:undo_ftplugin .= "|unmap <buffer> [[|unmap <buffer> ]]"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/abaqus.vim	/^let b:undo_ftplugin = "let s:cpo_save = &cpoptions|"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/abaqus.vim	/^let b:undo_ftplugin = "setlocal include< includeexpr< isfname<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/alsaconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ansible_hosts.vim	/^let b:undo_ftplugin = "setl comments< commentstring< formatoptions<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ant.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/arch.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let b:undo_ftplugin = "unlet! b:match_words b:match_ignorecase b:browsefilter | " . s:undo_ftplu/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/awk.vim	/^    let b:undo_ftplugin .= " | setl fp<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/awk.vim	/^  let b:undo_ftplugin .= " | setl inc< path<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/awk.vim	/^let b:undo_ftplugin = "setl fo< com< cms< def< sua<" .$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/basic.vim	/^let b:undo_ftplugin = "setl fo< com< cms< sua<" .$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/bdf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/bst.vim	/^let b:undo_ftplugin = "setlocal com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/calendar.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/cdrdaoconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/cfg.vim	/^let b:undo_ftplugin = "setl cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/clojure.vim	/^		let b:undo_ftplugin .= ' | setlocal ' . s:setting . '<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | unlet! b:browsefilter'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | unlet! b:match_words b:match_skip'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/clojure.vim	/^let b:undo_ftplugin = 'setlocal iskeyword< define< formatoptions< comments< commentstring< lispw/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    let b:undo_ftplugin = b:undo_ftplugin .$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^let b:undo_ftplugin = "setlocal com< cms< fo< et< tw<" .$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/conf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/config.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . b:undo_ftplugin$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/crm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/csc.vim	/^let b:undo_ftplugin = "unlet! b:match_words"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/css.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo< ofu< isk<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/cucumber.vim	/^  let b:undo_ftplugin .=$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/cucumber.vim	/^let b:undo_ftplugin = "setl fo< com< cms< ofu<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/cvsrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/dart.vim	/^let b:undo_ftplugin = 'setl et< fo< sw< sts< com< cms< inex< isf<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^let b:undo_ftplugin = 'setlocal tw< comments< foldmethod< foldexpr< foldtext<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/debcontrol.vim	/^let b:undo_ftplugin = 'setlocal tw< foldmethod< foldexpr< foldtext<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/denyhosts.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/dictconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/dictdconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/diff.vim	/^let b:undo_ftplugin = "setl modeline<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/dircolors.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/dockerfile.vim	/^let b:undo_ftplugin = "setl commentstring<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/dosbatch.vim	/^let b:undo_ftplugin = "setlocal comments< formatoptions< keywordprg<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/dosini.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/dtd.vim	/^let b:undo_ftplugin = "setlocal commentstring< comments< formatoptions<" .$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let b:undo_ftplugin = 'setlocal comments< commentstring< shiftwidth<' .$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^let b:undo_ftplugin = "setl cms< " .$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/elinks.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:undo_ftplugin = 'setlocal sw< sts< et< isk< com< cms< path< inex< sua< def< fo<'.$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/epuppet.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/erlang.vim	/^let b:undo_ftplugin = "setlocal keywordprg< foldmethod< foldexpr< foldtext<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^let b:undo_ftplugin = "setl cms< " .$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/eterm.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/falcon.vim	/^let b:undo_ftplugin = "setlocal tabstop< shiftwidth< expandtab< fileencoding<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/fetchmail.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/fish.vim	/^let b:undo_ftplugin = "$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/fortran.vim	/^let b:undo_ftplugin = "setl fo< com< tw< cms< et< inc< sua<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/framescript.vim	/^let b:undo_ftplugin = "setl com< cms< fo< inc< | unlet! b:matchwords"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/fstab.vim	/^let b:undo_ftplugin = "setlocal commentstring<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/fvwm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/gdb.vim	/^let b:undo_ftplugin = "setlocal cms<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/git.vim	/^let b:undo_ftplugin = "setl keywordprg< path< includeexpr<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/gitcommit.vim	/^let b:undo_ftplugin = 'setl modeline< tabstop< formatoptions< tw< com< cms< formatlistpat<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/gitcommit.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|delc DiffGitCached"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/gitconfig.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/gitignore.vim	/^let b:undo_ftplugin = 'setlocal commentstring<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/gitrebase.vim	/^  let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|exe 'nunmap <buffer> K'|exe 'nunmap <buffer> <C-A>'|ex/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin."|setl com< cms< fo< ml<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/gpg.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/graphql.vim	/^let b:undo_ftplugin = 'setlocal com< cms< fo< isk< sts< sw< et<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/groovy.vim	/^let b:undo_ftplugin = 'setlocal commentstring<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/group.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/grub.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/haml.vim	/^let b:undo_ftplugin = "setl def< cms< com< "$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/hamster.vim	/^let b:undo_ftplugin = "setl fo< com< tw< commentstring<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/hcl.vim	/^let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/help.vim	/^let b:undo_ftplugin = "setl fo< tw< cole< cocu< keywordprg<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/hgcommit.vim	/^let b:undo_ftplugin = 'setl modeline<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/hostconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/hostsaccess.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/html.vim	/^let b:undo_ftplugin = "setlocal commentstring< matchpairs< omnifunc< comments< formatoptions<" .$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/indent.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^  let b:undo_ftplugin .= ' | unlet! b:browsefilter'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^  let b:undo_ftplugin .= ' | unlet! b:match_ignorecase b:match_words'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^let b:undo_ftplugin .= ' | silent! execute "unmap <buffer> ]]"'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^let b:undo_ftplugin = 'setlocal suffixesadd< includeexpr< include< path< matchpairs< formatoptio/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/java.vim	/^let b:undo_ftplugin = "setlocal suffixes< suffixesadd<" .$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/jproperties.vim	/^let b:undo_ftplugin = "setl cms< com< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/jsp.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter b:match_words | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^    let b:undo_ftplugin .= " | call julia_blocks#remove_mappings()"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:undo_ftplugin = b:undo_ftplugin . " | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^let b:undo_ftplugin .= " | delcommand JuliaDoc | delcommand JuliaDocKeywordprg"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^let b:undo_ftplugin .= " | setlocal keywordprg<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^let b:undo_ftplugin = "setlocal include< suffixesadd< comments< commentstring<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/juliadoc.vim	/^  let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let b:undo_ftplugin .= " | delcommand JuliaDoc | delcommand JuliaDocKeywordprg"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let b:undo_ftplugin .= " | setlocal keywordprg<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let b:undo_ftplugin .= 'setlocal conceallevel< concealcursor< wrap<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/kwt.vim	/^    let b:undo_ftplugin = "setlocal efm<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/kwt.vim	/^    let b:undo_ftplugin = b:undo_ftplugin . " | setlocal efm<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ld.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/less.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/lftp.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/libao.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/limits.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:undo_ftplugin .= '|'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/liquid.vim	/^let b:undo_ftplugin .= 'setl cms< | unlet! b:browsefilter b:match_words'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/lisp.vim	/^let b:undo_ftplugin = "setlocal comments< define< formatoptions< iskeyword< lisp< commentstring</;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/logcheck.vim	/^let b:undo_ftplugin = 'setl fo<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/loginaccess.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/logindefs.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/logtalk.vim	/^let b:undo_ftplugin = "setl ts< sw< fdm< fdc< ai< dict<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/m4.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/mail.vim	/^let b:undo_ftplugin = "setl modeline< tw< fo< comments<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/mailaliases.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/mailcap.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/make.vim	/^let b:undo_ftplugin = "setl et< sts< sw< fo< com< cms< inc<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/manconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^let b:undo_ftplugin = "setl com< cms< fo< sua< inc< def< ofu<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/modconf.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/moon.vim	/^let b:undo_ftplugin = "setlocal commentstring< comments< formatoptions<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^let b:undo_ftplugin = "setl com< cms< fo< sua< inc< def< ofu<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/mplayerconf.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/mrxvtrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/muttrc.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/nanorc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/neomuttrc.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/netrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/nroff.vim	/^let b:undo_ftplugin = 'setlocal commentstring< comments< sections<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/nsis.vim	/^let b:undo_ftplugin = "setl com< cms< fo< def< inc<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:undo_ftplugin = "setlocal efm< foldmethod< foldexpr<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/occam.vim	/^let b:undo_ftplugin = "setlocal shiftwidth< softtabstop< expandtab<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/pamconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/pascal.vim	/^let b:undo_ftplugin = "unlet! b:match_words"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/passwd.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/pdf.vim	/^let b:undo_ftplugin .= " | silent! nunmap <buffer> <C-]> | silent! nunmap <buffer> <C-T>"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/pdf.vim	/^let b:undo_ftplugin = "setlocal cms< com< | unlet! b:match_words"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/perl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isk< isf< kp< path<" .$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/pinfo.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/pony.vim	/^let b:undo_ftplugin = 'set comments< commentstring< formatoptions< path< include< includeexpr< d/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/postscr.vim	/^let b:undo_ftplugin = "setlocal comments< formatoptions<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/procmail.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/prolog.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/protocols.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ps1.vim	/^let b:undo_ftplugin = "setlocal tw< cms< fo< iskeyword< keywordprg<" .$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ps1xml.vim	/^let b:undo_ftplugin = "setlocal tw< cms< fo<" .$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/pug.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/puppet.vim	/^let b:undo_ftplugin = "$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/qml.vim	/^let b:undo_ftplugin =$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/quake.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/racket.vim	/^let b:undo_ftplugin =$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/raku.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isf< isk< kp< path<" .$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/readline.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/rmd.vim	/^  let b:undo_ftplugin .= " | setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/rmd.vim	/^  let b:undo_ftplugin = "setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/rnc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/rnoweb.vim	/^  let b:undo_ftplugin .= " | setl isk< sua< com< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/rnoweb.vim	/^  let b:undo_ftplugin = "setl isk< sua< com< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/rpl.vim	/^let b:undo_ftplugin = "setlocal fo< comments<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/rrst.vim	/^  let b:undo_ftplugin .= " | setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/rrst.vim	/^  let b:undo_ftplugin = "setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/rst.vim	/^let b:undo_ftplugin = "setl com< cms< et< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:undo_ftplugin .= "| setl bexpr="$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:undo_ftplugin .= ' | setl sw< sts< et<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^let b:undo_ftplugin .= "| sil! cunmap <buffer> <Plug><ctag>| sil! cunmap <buffer> <Plug><cfile>"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^let b:undo_ftplugin = "setl inc= sua= path= tags= fo< com< cms< kp="$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^let b:undo_ftplugin = "$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sass.vim	/^  let b:undo_ftplugin .= ' isk<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sass.vim	/^let b:undo_ftplugin = "setl com< cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/scheme.vim	/^let b:undo_ftplugin = 'setl lisp< comments< commentstring< define< iskeyword<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/scheme.vim	/^let b:undo_ftplugin = b:undo_ftplugin . ' lispwords<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/screen.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sensors.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/services.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/setserial.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sieve.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/slim.vim	/^let b:undo_ftplugin = "setl isk<" . " | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/slpconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/slpreg.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/slpspi.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/spec.vim	/^let b:undo_ftplugin = "unlet! b:match_ignorecase b:match_words"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^let b:undo_ftplugin = "setl comments< formatoptions< define< omnifunc<" .$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sshconfig.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/stylus.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sudoers.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sxhkdrc.vim	/^	let b:undo_ftplugin .= "|setlocal commentstring<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sxhkdrc.vim	/^	let b:undo_ftplugin = "setlocal commentstring<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/sysctl.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/systemd.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/tcl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isf< kp<" .$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/terminfo.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/terraform.vim	/^  let b:undo_ftplugin .= ' foldmethod<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/terraform.vim	/^  let b:undo_ftplugin .= ' iskeyword<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/terraform.vim	/^  let b:undo_ftplugin .= '|iunmap <buffer> ='$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/terraform.vim	/^let b:undo_ftplugin .= ' commentstring<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/terraform.vim	/^let b:undo_ftplugin .= '|delcommand Terraform|delcommand TerraformFmt'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/terraform.vim	/^let b:undo_ftplugin = 'setlocal formatoptions<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/text.vim	/^let b:undo_ftplugin = 'setlocal comments< commentstring<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/tidy.vim	/^let b:undo_ftplugin = "setl fo< com< cms<" .$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/tmux.vim	/^let b:undo_ftplugin = "setlocal comments< commentstring<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/toml.vim	/^let b:undo_ftplugin = 'setlocal commentstring< comments<'$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/treetop.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/twig.vim	/^  let b:undo_ftplugin .= "|setlocal comments< formatoptions<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/twig.vim	/^  let b:undo_ftplugin = "setlocal comments< formatoptions<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/udevconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/udevperm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/updatedb.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/verilog.vim	/^let b:undo_ftplugin = "setlocal fo< com< tw<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/vlang.vim	/^	let b:undo_ftplugin .= "|setlocal commentstring< makeprg<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/vlang.vim	/^	let b:undo_ftplugin = "setlocal commentstring< makeprg<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/vroom.vim	/^let b:undo_ftplugin = 'setlocal formatoptions< shiftwidth< softtabstop<' .$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/wast.vim	/^let b:undo_ftplugin = "setlocal comments< commentstring< formatoptions< iskeyword<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/xdefaults.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/xf86conf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/xhtml.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter b:match_words | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/xinetd.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/xmodmap.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/xsd.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/yaml.vim	/^  let b:undo_ftplugin .= " sw< sts<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/yaml.vim	/^let b:undo_ftplugin = "setl com< cms< et< fo<"$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/zig.vim	/^let b:undo_ftplugin =$/;"	v
b:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/zimbu.vim	/^let b:undo_ftplugin = "setl fo< com< ofu< efm< tw< et< sts< sw< | if has('vms') | setl isk< | en/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/after/indent/html.vim	/^let b:undo_indent = "setlocal inde< indk<"$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/arduino.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/autohotkey.vim	/^let b:undo_indent = 'setlocal '.join([$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/bib.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/clojure.vim	/^	let b:undo_indent .= '| setlocal lisp<'$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/clojure.vim	/^let b:undo_indent = 'setlocal autoindent< smartindent< expandtab< softtabstop< shiftwidth< inden/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/cs.vim	/^let b:undo_indent = 'setlocal indentexpr<'$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/css.vim	/^let b:undo_indent = "setl smartindent< indentkeys< indentexpr<"$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/cucumber.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/cuda.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/dart.vim	/^let b:undo_indent = 'setl cin< cino<'$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/fennel.vim	/^	let b:undo_indent .= '| setlocal lisp<'$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/gitconfig.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/hog.vim	/^let b:undo_indent = 'setlocal smartindent< indentexpr< indentkeys<'$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/html.vim	/^let b:undo_indent = "setlocal inde< indk<"$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/j.vim	/^let b:undo_indent = 'setlocal indentkeys< indentexpr<'$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/java.vim	/^let b:undo_indent = "set cin< cino< indentkeys< indentexpr<"$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/javascript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys<'$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/lifelines.vim	/^let b:undo_indent = "setl cin< cino< cinw<"$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/lisp.vim	/^let b:undo_indent = "setl ai< si<"$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/mp.vim	/^let b:undo_indent = "setl indentkeys< indentexpr<"$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/pony.vim	/^let b:undo_indent = 'set lisp< cindent< autoindent< smartindent< indentexpr< indentkeys< cinkeys/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/proto.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/ps1.vim	/^let b:undo_indent = "setl si<"$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/puppet.vim	/^let b:undo_indent = "$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/racket.vim	/^let b:undo_indent = "setl ai< si<"$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/rpl.vim	/^let b:undo_indent = "set ai< indentkeys< indentexpr<"$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/scss.vim	/^let b:undo_indent = 'setl smartindent< indentkeys< indentexpr<'$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/sshconfig.vim	/^let b:undo_indent = "setlocal autoindent< indentexpr< indentkeys<"$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/terraform.vim	/^let b:undo_indent = 'setlocal lisp< autoindent< shiftwidth< tabstop< softtabstop<'$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/vb.vim	/^let b:undo_indent = "set ai< indentexpr< indentkeys<"$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/vroom.vim	/^let b:undo_indent = 'setlocal autoindent<'$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/wast.vim	/^let b:undo_indent = "setl lisp< indentexpr<"$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let b:undo_indent = 'setlocal indentexpr< indentkeys< smartindent<'$/;"	v
b:undo_indent	autoload/plugged/vim-polyglot/indent/zimbu.vim	/^let b:undo_indent = "setl et< sw< ai< indentkeys< indentexpr="$/;"	v
b:vala_minlines	autoload/plugged/vim-polyglot/syntax/vala.vim	/^  let b:vala_minlines = 50$/;"	v
b:vala_minlines	autoload/plugged/vim-polyglot/syntax/vala.vim	/^  let b:vala_minlines = vala_minlines$/;"	v
b:vera_minlines	autoload/plugged/vim-polyglot/syntax/vera.vim	/^    let b:vera_minlines = 15	" mostly for () constructs$/;"	v
b:vera_minlines	autoload/plugged/vim-polyglot/syntax/vera.vim	/^    let b:vera_minlines = 50	" #if 0 constructs can be long$/;"	v
b:vera_minlines	autoload/plugged/vim-polyglot/syntax/vera.vim	/^  let b:vera_minlines = vera_minlines$/;"	v
b:vhdl_explore	autoload/plugged/vim-polyglot/ftplugin/vhdl.vim	/^let b:vhdl_explore = '\\%(architecture\\|block\\|configuration\\|component\\|entity\\|function\\/;"	v
b:xf86conf_xfree86_version	autoload/plugged/vim-polyglot/syntax/xf86conf.vim	/^		let b:xf86conf_xfree86_version = 4$/;"	v
b:xf86conf_xfree86_version	autoload/plugged/vim-polyglot/syntax/xf86conf.vim	/^		let b:xf86conf_xfree86_version = xf86conf_xfree86_version$/;"	v
b:yaml_schema	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^    let b:yaml_schema = 'core'$/;"	v
b:yaml_schema	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^    let b:yaml_schema = g:yaml_schema$/;"	v
bA	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	v
bB	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	f
bD	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	f
bN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
bP	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
bX	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
ba	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
base	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^    let base = split(pkg, '\\.')$/;"	v
bash	autoload/plugged/fzf/test/test_go.rb	/^    def bash$/;"	S	class:Shell
basicMatch	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) basicMatch(item *Item, withPos bool, slab *util.Slab) (Offset, int, *[]int) {$/;"	f	struct:fzf.Pattern	typeref:typename:(Offset, int, *[]int)
bde	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
before	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:OW.s.c
begin	autoload/plugged/fzf/src/tokenizer.go	/^	begin int$/;"	m	struct:fzf.Range	typeref:typename:int
bench	autoload/plugged/fzf/Makefile	/^bench:$/;"	t
bf	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
bg	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
bg	autoload/plugged/fzf/src/ansi.go	/^	bg   tui.Color$/;"	m	struct:fzf.ansiState	typeref:typename:tui.Color
bg	autoload/plugged/fzf/src/tui/light.go	/^	bg       Color$/;"	m	struct:tui.LightWindow	typeref:typename:Color
bg	autoload/plugged/fzf/src/tui/tui.go	/^	bg   Color$/;"	m	struct:tui.ColorPair	typeref:typename:Color
bgBlack	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.bgColor
bgBlack	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.bgColor
bgBlackBright	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.bgColor
bgBlackBright	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.bgColor
bgBlue	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.bgColor
bgBlue	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.bgColor
bgBlueBright	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.bgColor
bgBlueBright	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.bgColor
bgColor	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	c	class:Qfe.e
bgColor	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	c	class:xpe.e
bgCyan	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.bgColor
bgCyan	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.bgColor
bgCyanBright	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.bgColor
bgCyanBright	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.bgColor
bgGreen	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.bgColor
bgGreen	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.bgColor
bgGreenBright	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.bgColor
bgGreenBright	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.bgColor
bgMagenta	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.bgColor
bgMagenta	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.bgColor
bgMagentaBright	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.bgColor
bgMagentaBright	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.bgColor
bgRed	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.bgColor
bgRed	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.bgColor
bgRedBright	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.bgColor
bgRedBright	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.bgColor
bgWhite	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.bgColor
bgWhite	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.bgColor
bgWhiteBright	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.bgColor
bgWhiteBright	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.bgColor
bgYellow	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.bgColor
bgYellow	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.bgColor
bgYellowBright	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.bgColor
bgYellowBright	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.bgColor
bh	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
bi	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	v
bie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
bin	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:mne.n
bin/fzf	autoload/plugged/fzf/Makefile	/^bin\/fzf: target\/$(BINARY) | bin$/;"	t
black	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.color
black	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.color
blackBright	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.color
blockquote	autoload/plugged/coc.nvim/build/index.js	/^`+e+"\\n```\\n"}blockquote(e){return qf(this.o.blockquote(kpe(this.tab,e.trim())))}html(e){retur/;"	m	class:FB
blockquote	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
blue	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.color
blue	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.color
blueBright	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.color
blueBright	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.color
bm	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
bmenu_priority	autoload/plugged/vim-polyglot/extras/menu.vim	/^  let bmenu_priority = 60$/;"	v
bne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
body_attributes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let body_attributes = {'onafterprint': [], 'onbeforeprint': [], 'onbeforeunload': [], 'onblu/;"	v
body_attributes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let body_attributes = {}$/;"	v
bold	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.modifier
bold	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.modifier
bonusAt	autoload/plugged/fzf/src/algo/algo.go	/^func bonusAt(input *util.Chars, idx int) int16 {$/;"	f	package:algo	typeref:typename:int16
bonusBoundary	autoload/plugged/fzf/src/algo/algo.go	/^	bonusBoundary = scoreMatch \/ 2$/;"	c	package:algo
bonusCamel123	autoload/plugged/fzf/src/algo/algo.go	/^	bonusCamel123 = bonusBoundary + scoreGapExtention$/;"	c	package:algo
bonusConsecutive	autoload/plugged/fzf/src/algo/algo.go	/^	bonusConsecutive = -(scoreGapStart + scoreGapExtention)$/;"	c	package:algo
bonusFirstCharMultiplier	autoload/plugged/fzf/src/algo/algo.go	/^	bonusFirstCharMultiplier = 2$/;"	c	package:algo
bonusFor	autoload/plugged/fzf/src/algo/algo.go	/^func bonusFor(prevClass charClass, class charClass) int16 {$/;"	f	package:algo	typeref:typename:int16
bonusNonWord	autoload/plugged/fzf/src/algo/algo.go	/^	bonusNonWord = scoreMatch \/ 2$/;"	c	package:algo
boolean	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:jie.l
bools	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	p	class:AnonymousFunctionb666889221c00.t
border	autoload/plugged/fzf/src/options.go	/^	border      tui.BorderShape$/;"	m	struct:fzf.previewOpts	typeref:typename:tui.BorderShape
border	autoload/plugged/fzf/src/terminal.go	/^	border       tui.Window$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Window
border	autoload/plugged/fzf/src/tui/light.go	/^	border   BorderStyle$/;"	m	struct:tui.LightWindow	typeref:typename:BorderStyle
borderShape	autoload/plugged/fzf/src/terminal.go	/^	borderShape  tui.BorderShape$/;"	m	struct:fzf.Terminal	typeref:typename:tui.BorderShape
borderStyle	autoload/plugged/fzf/src/tui/tcell.go	/^	borderStyle BorderStyle$/;"	m	struct:tui.TcellWindow	typeref:typename:BorderStyle
bottomLeft	autoload/plugged/fzf/src/tui/tui.go	/^	bottomLeft  rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
bottomRight	autoload/plugged/fzf/src/tui/tui.go	/^	bottomRight rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
br	autoload/plugged/coc.nvim/build/index.js	/^`}tablecell(e,t){return e+DB}strong(e){return this.o.strong(e)}em(e){return e=_B(e,this.o.reflow/;"	m	class:FB
brace_expansion	autoload/plugged/vim-polyglot/scripts/build	/^def brace_expansion(s)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
brace_expansion	autoload/plugged/vim-polyglot/scripts/import_vim	/^def brace_expansion(s)$/;"	f
bte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
buffer	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:d
buffer	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	G	class:SD
buffer	autoload/plugged/fzf/src/tui/light.go	/^	buffer        []byte$/;"	m	struct:tui.LightRenderer	typeref:typename:[]byte
buffer_list	autoload/plugged/vim-polyglot/extras/menu.vim	/^  aug buffer_list$/;"	a
bufname	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	G	class:wD
bufnr	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	p	class:mq.fire.n
bufnr	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	G	class:o0
bugs	autoload/plugged/coc.nvim/package.json	/^  "bugs": {$/;"	o
build	autoload/plugged/fzf/Makefile	/^build:$/;"	t
build	autoload/plugged/vim-polyglot/Makefile	/^build:$/;"	t
buildCacheKey	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) buildCacheKey() string {$/;"	f	struct:fzf.Pattern	typeref:typename:string
buildLists	autoload/plugged/fzf/src/merger_test.go	/^func buildLists(partiallySorted bool) ([][]Result, []Result) {$/;"	f	package:fzf	typeref:typename:([][]Result, []Result)
buildPlusList	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) buildPlusList(template string, forcePlus bool) (bool, []*Item) {$/;"	f	struct:fzf.Terminal	typeref:typename:(bool, []*Item)
buildResult	autoload/plugged/fzf/src/result.go	/^func buildResult(item *Item, offsets []Offset, score int) Result {$/;"	f	package:fzf	typeref:typename:Result
busy	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	G	class:ar
byBegin	autoload/plugged/fzf/src/options.go	/^	byBegin$/;"	c	package:fzf
byEnd	autoload/plugged/fzf/src/options.go	/^	byEnd$/;"	c	package:fzf
byLength	autoload/plugged/fzf/src/options.go	/^	byLength$/;"	c	package:fzf
byScore	autoload/plugged/fzf/src/options.go	/^	byScore criterion = iota$/;"	c	package:fzf	typeref:type:criterion
byTimeOrder	autoload/plugged/fzf/src/terminal.go	/^type byTimeOrder []selectedItem$/;"	t	package:fzf	typeref:typename:[]selectedItem
bytes	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:AnonymousFunctionb666889228a00.t.e
c	autoload/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),ss("Output buffer: %o",e.outputData[0].data))/;"	f	function:$ve
c	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
c	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c	class:OW.s
c	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb66688922d100.e
c	autoload/plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Nf.prototype.render;Nf.prototype.toString=function(){var r=""/;"	f	function:AnonymousFunctionb66688921aa00
c	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f	function:AnonymousFunctionb666889221c00
c	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
c	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:yR.k
c	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
c	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:jie
c	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v	class:o
c	autoload/plugged/coc.nvim/build/index.js	/^augroup end`;try{let o=Fe.default.join(process.env.TMPDIR,`coc.nvim-${process.pid}`);St.default./;"	v
c	autoload/plugged/vim-airline/t/airline.vim	/^    let c = len(g:airline_statusline_funcrefs)$/;"	v
c$	autoload/plugged/coc.nvim/build/index.js	/^]`).replace("lheading",se.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replac/;"	f
c0	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
c1	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	v
c3	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
cB	autoload/plugged/coc.nvim/build/index.js	/^`);return i.reduce(function(n,o){var s=vpe(o);return s>n?s:n},0)}});var cB=v((BTe,uB)=>{uB.expor/;"	v
cI	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
cK	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
cL	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
cU	autoload/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(o):i+=Ql(o)+n+Ql(l)+F0}),e.section&&i.length&&(i="["+Ql(e.secti/;"	v
cW	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
cZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
cache	autoload/plugged/fzf/src/cache.go	/^	cache map[*Chunk]*queryCache$/;"	m	struct:fzf.ChunkCache	typeref:typename:map[*Chunk]*queryCache
cacheKey	autoload/plugged/fzf/src/pattern.go	/^	cacheKey      string$/;"	m	struct:fzf.Pattern	typeref:typename:string
cacheable	autoload/plugged/fzf/src/merger.go	/^func (mg *Merger) cacheable() bool {$/;"	f	struct:fzf.Merger	typeref:typename:bool
cacheable	autoload/plugged/fzf/src/pattern.go	/^	cacheable     bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
calculateScore	autoload/plugged/fzf/src/algo/algo.go	/^func calculateScore(caseSensitive bool, normalize bool, text *util.Chars, pattern []rune, sidx i/;"	f	package:algo	typeref:typename:(int, *[]int)
calculateSize	autoload/plugged/fzf/src/terminal.go	/^func calculateSize(base int, size sizeSpec, occupied int, minSize int, pad int) int {$/;"	f	package:fzf	typeref:typename:int
callback	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	m	class:AnonymousFunctionb66688922d400.e
camelize	autoload/plugged/vim-polyglot/scripts/build	/^def camelize(str)$/;"	f
cancelPreview	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) cancelPreview() {$/;"	f	struct:fzf.Terminal
capture	autoload/plugged/fzf/test/test_go.rb	/^  def capture$/;"	f	class:Tmux
cargo#Load	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#Load()$/;"	f
cargo#bench	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#bench(args)$/;"	f
cargo#build	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#build(args)$/;"	f
cargo#check	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#check(args)$/;"	f
cargo#clean	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#clean(args)$/;"	f
cargo#cmd	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#cmd(args) abort$/;"	f
cargo#doc	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#doc(args)$/;"	f
cargo#init	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#init(args)$/;"	f
cargo#install	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#install(args)$/;"	f
cargo#nearestCargo	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#nearestCargo(is_getcwd) abort$/;"	f
cargo#nearestRootCargo	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#nearestRootCargo(is_getcwd) abort$/;"	f
cargo#nearestWorkspaceCargo	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#nearestWorkspaceCargo(is_getcwd) abort$/;"	f
cargo#new	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#new(args)$/;"	f
cargo#publish	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#publish(args)$/;"	f
cargo#quickfix#CmdPost	autoload/plugged/vim-polyglot/autoload/cargo/quickfix.vim	/^function! cargo#quickfix#CmdPost() abort$/;"	f
cargo#quickfix#CmdPre	autoload/plugged/vim-polyglot/autoload/cargo/quickfix.vim	/^function! cargo#quickfix#CmdPre() abort$/;"	f
cargo#run	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#run(args)$/;"	f
cargo#runtarget	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#runtarget(args)$/;"	f
cargo#search	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#search(args)$/;"	f
cargo#test	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#test(args)$/;"	f
cargo#update	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#update(args)$/;"	f
carp_syntax_init	autoload/plugged/vim-polyglot/syntax/carp.vim	/^    let carp_syntax_init = 1$/;"	v
case classes	autoload/plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy)[ \\t]*)*(private[^ ]*|protected)?/;"	k	langdef:scala
case objects	autoload/plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy)[ \\t]*)*(private[^ ]*|protected)?/;"	k	langdef:scala
caseSensitive	autoload/plugged/fzf/src/pattern.go	/^	caseSensitive bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
caseSensitive	autoload/plugged/fzf/src/pattern.go	/^	caseSensitive bool$/;"	m	struct:fzf.term	typeref:typename:bool
cb	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
cb	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:AnonymousFunctionb666889228a00.t.e
cde	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
cee	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
cg	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
chain	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:t
changeLines	autoload/plugged/coc.nvim/build/index.js	/^`),s=ij(this.lines,o),a=await this.mutex.acquire();try{let l=await this.nvim.call("coc#util#set_/;"	m	class:o0
changeState	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	m	class:_0
changedtick	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	G	class:o0
changelogMenu	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^augroup changelogMenu$/;"	a
charClass	autoload/plugged/fzf/src/algo/algo.go	/^type charClass int$/;"	t	package:algo	typeref:typename:int
charClassOf	autoload/plugged/fzf/src/algo/algo.go	/^func charClassOf(char rune) charClass {$/;"	f	package:algo	typeref:typename:charClass
charClassOfAscii	autoload/plugged/fzf/src/algo/algo.go	/^func charClassOfAscii(char rune) charClass {$/;"	f	package:algo	typeref:typename:charClass
charClassOfNonAscii	autoload/plugged/fzf/src/algo/algo.go	/^func charClassOfNonAscii(char rune) charClass {$/;"	f	package:algo	typeref:typename:charClass
charLetter	autoload/plugged/fzf/src/algo/algo.go	/^	charLetter$/;"	c	package:algo
charLower	autoload/plugged/fzf/src/algo/algo.go	/^	charLower$/;"	c	package:algo
charNonWord	autoload/plugged/fzf/src/algo/algo.go	/^	charNonWord charClass = iota$/;"	c	package:algo	typeref:type:charClass
charNumber	autoload/plugged/fzf/src/algo/algo.go	/^	charNumber$/;"	c	package:algo
charUpper	autoload/plugged/fzf/src/algo/algo.go	/^	charUpper$/;"	c	package:algo
character	autoload/plugged/coc.nvim/build/index.js	/^`),s=i.line==r.start.line?i.character-r.start.character:i.character,a=UB(o,i.line-r.start.line,s/;"	p	class:Bl.t
chars	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^	 let chars = escape(chars, '\/\\*^$.~[]')$/;"	v
chars	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^	 let chars = substitute(chars, '.$', '', '')$/;"	v
chars	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^	 let chars = substitute(s, '"\\(.\\{'.cpp.'}\\s\\).*"', '\\1', '')$/;"	v
chars	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^let chars  = ""$/;"	v
chars	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^	let chars = escape(chars, '\/\\*^$.~[]')$/;"	v
chars	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^	let chars = substitute(chars, "[ \\t][ \\t]*", "\\\\\\\\s\\\\\\\\+", "g")$/;"	v
chars	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^	let chars = substitute(chars, '\\\\s\\\\+$', '', '')$/;"	v
chars	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^	let chars = substitute(s, '\\(.\\{'.cpp.'}\\s\\+\\).*', '\\1', '')$/;"	v
chars	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^  let chars  = ""$/;"	v
charset	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let charset = [$/;"	v
checkAscii	autoload/plugged/fzf/src/util/chars.go	/^func checkAscii(bytes []byte) (bool, int) {$/;"	f	package:util	typeref:typename:(bool, int)
checkCapability	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:sp
checkDocument	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	m	class:o0
checkDocumentChanges	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	m	class:r
check_binary	autoload/plugged/fzf/install	/^check_binary() {$/;"	f
check_binary	autoload/plugged/fzf/install.ps1	/^function check_binary () {$/;"	f
checkbox	autoload/plugged/coc.nvim/build/index.js	/^`+hD+t(e)}checkbox(e){return"["+(e?"X":" ")+"] "}paragraph(e){return e=this.compose(this.o.parag/;"	m	class:FB
children	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:BD.i
chill_minlines	autoload/plugged/vim-polyglot/syntax/chill.vim	/^  let chill_minlines = 15$/;"	v
chunkSize	autoload/plugged/fzf/src/constants.go	/^	chunkSize int = 100$/;"	c	package:fzf	typeref:typename:int
chunks	autoload/plugged/fzf/src/chunklist.go	/^	chunks []*Chunk$/;"	m	struct:fzf.ChunkList	typeref:typename:[]*Chunk
chunks	autoload/plugged/fzf/src/matcher.go	/^	chunks     []*Chunk$/;"	m	struct:fzf.MatchRequest	typeref:typename:[]*Chunk
chunks	autoload/plugged/fzf/src/merger.go	/^	chunks  *[]*Chunk$/;"	m	struct:fzf.Merger	typeref:typename:*[]*Chunk
circular	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:OW.s.c
cj	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
clangd.path	coc-settings.json	/^  "clangd.path": "\/Users\/johnrobinson\/.config\/coc\/extensions\/coc-clangd-data\/install\/12./;"	s
class	autoload/plugged/coc.nvim/data/schema.json	/^        "class": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
class	autoload/plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*class[[:space:]]*([a-z][a-zA-Z0-9_:\\-]+)\/::\\1\/c,class\/$/;"	k	langdef:puppet
class	autoload/plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*class[[:space:]]*([a-z][a-zA-Z0-9_:\\-]+)\/\\1\/c,class\/$/;"	k	langdef:puppet
classes	autoload/plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy)[ \\t]*)*(private[^ ]*|protected)?/;"	k	langdef:scala
classes	autoload/plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*class[ \\t]+([a-zA-Z0-9_]+)\/\\2\/c,classes\/$/;"	k	langdef:typescript
clean	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:l0
clean	autoload/plugged/fzf/Makefile	/^clean:$/;"	t
cleanExit	autoload/plugged/fzf/src/terminal.go	/^	cleanExit    bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
cleanTemporaryFiles	autoload/plugged/fzf/src/terminal.go	/^func cleanTemporaryFiles() {$/;"	f	package:fzf
cleanse	autoload/plugged/fzf/src/tui/light.go	/^func cleanse(str string) string {$/;"	f	package:tui	typeref:typename:string
cleanup	autoload/plugged/fzf/bin/fzf-tmux	/^cleanup() {$/;"	f
clear	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:u
clear	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	m	class:r
clear	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:wD
clearCache	autoload/plugged/fzf/src/matcher.go	/^	clearCache bool$/;"	m	struct:fzf.MatchRequest	typeref:typename:bool
clearChunkCache	autoload/plugged/fzf/src/pattern.go	/^func clearChunkCache() {$/;"	f	package:fzf
clearCode	autoload/plugged/fzf/src/terminal.go	/^const clearCode string = "\\x1b[2J"$/;"	c	package:fzf	typeref:typename:string
clearMocks	autoload/plugged/coc.nvim/package.json	/^    "clearMocks": true,$/;"	b	object:jest
clearOnExit	autoload/plugged/fzf/src/tui/light.go	/^	clearOnExit   bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
clearPatternCache	autoload/plugged/fzf/src/pattern.go	/^func clearPatternCache() {$/;"	f	package:fzf
click	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:DD
clickY	autoload/plugged/fzf/src/tui/light.go	/^	clickY        []int$/;"	m	struct:tui.LightRenderer	typeref:typename:[]int
clickY	autoload/plugged/fzf/src/tui/tui.go	/^	clickY       []int$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:[]int
clojurecomplete#Complete	autoload/plugged/vim-polyglot/autoload/clojurecomplete.vim	/^function! clojurecomplete#Complete(findstart, base)$/;"	f
clone	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:Fr
clone	autoload/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:s}}function oj(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	m	class:Qf
close	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e
close	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	p	class:yD.createPopup.l
close	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e
close	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:DD
close	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	p	class:CD.show.o
close	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	p	class:AnonymousFunctionb66688921a100.i
close	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	p	class:AnonymousFunctionb66688921a200.n
closePlatform	autoload/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) closePlatform() {$/;"	f	unknown:tui.LightRenderer
closePlatform	autoload/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) closePlatform() {$/;"	f	unknown:tui.LightRenderer
closeRe	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	p	class:AnonymousFunctionb66688921a100.i
closeRe	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	p	class:AnonymousFunctionb66688921a200.n
closure.Process	autoload/plugged/vim-polyglot/autoload/RstFold.vim	/^  function closure.Process(match) dict$/;"	f
cm	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
coc#_cancel	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_cancel()$/;"	f
coc#_complete	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_complete() abort$/;"	f
coc#_do_complete	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_do_complete(start, items, preselect)$/;"	f
coc#_hide	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_hide() abort$/;"	f
coc#_insert_key	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_insert_key(method, key, ...) abort$/;"	f
coc#_map	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_map()$/;"	f
coc#_select	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_select() abort$/;"	f
coc#_select_confirm	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_select_confirm() abort$/;"	f
coc#_selected	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_selected()$/;"	f
coc#_unmap	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_unmap()$/;"	f
coc#_unwatch	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_unwatch(key)$/;"	f
coc#_watch	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_watch(key)$/;"	f
coc#add_command	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#add_command(id, cmd, ...)$/;"	f
coc#add_extension	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#add_extension(...)$/;"	f
coc#api#call	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#call(method, args) abort$/;"	f
coc#api#func_names	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#func_names() abort$/;"	f
coc#api#notify	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#notify(method, args) abort$/;"	f
coc#client#create	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#create(name, command)$/;"	f
coc#client#get_channel	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#get_channel(client)$/;"	f
coc#client#get_client	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#get_client(name) abort$/;"	f
coc#client#is_running	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#is_running(name) abort$/;"	f
coc#client#notify	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#notify(name, method, args)$/;"	f
coc#client#on_response	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#on_response(name, id, resp, isErr)$/;"	f
coc#client#open_log	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#open_log()$/;"	f
coc#client#request	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#request(name, method, args)$/;"	f
coc#client#request_async	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#request_async(name, method, args, cb)$/;"	f
coc#client#restart	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#restart(name) abort$/;"	f
coc#client#restart_all	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#restart_all()$/;"	f
coc#client#stop	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#stop(name) abort$/;"	f
coc#color#rgb2term	autoload/plugged/coc.nvim/autoload/coc/color.vim	/^function! coc#color#rgb2term(rgb)$/;"	f
coc#compat#buf_del_keymap	autoload/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#buf_del_keymap(bufnr, mode, lhs) abort$/;"	f
coc#compat#buf_win_id	autoload/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#buf_win_id(bufnr) abort$/;"	f
coc#compat#clear_matches	autoload/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#clear_matches(winid) abort$/;"	f
coc#compat#execute	autoload/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#execute(winid, command) abort$/;"	f
coc#compat#matchaddgroups	autoload/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#matchaddgroups(winid, groups) abort$/;"	f
coc#compat#matchaddpos	autoload/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#matchaddpos(group, pos, priority, winid) abort$/;"	f
coc#compat#win_is_valid	autoload/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#win_is_valid(winid) abort$/;"	f
coc#config	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#config(section, value)$/;"	f
coc#do_notify	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#do_notify(id, method, result)$/;"	f
coc#expandable	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#expandable() abort$/;"	f
coc#expandableOrJumpable	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#expandableOrJumpable() abort$/;"	f
coc#float#check_related	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#check_related() abort$/;"	f
coc#float#close	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#close(winid) abort$/;"	f
coc#float#close_all	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#close_all(...) abort$/;"	f
coc#float#close_auto_hide_wins	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#close_auto_hide_wins(...) abort$/;"	f
coc#float#close_i	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#close_i(winid) abort$/;"	f
coc#float#close_related	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#close_related(winid, ...) abort$/;"	f
coc#float#content_height	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#content_height(bufnr, width, wrap) abort$/;"	f
coc#float#create_border_lines	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_border_lines(border, title, width, height, hasbtn) abort$/;"	f
coc#float#create_buf	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_buf(bufnr, ...) abort$/;"	f
coc#float#create_cursor_float	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_cursor_float(winid, bufnr, lines, config) abort$/;"	f
coc#float#create_dialog	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_dialog(lines, config) abort$/;"	f
coc#float#create_float_win	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_float_win(winid, bufnr, config) abort$/;"	f
coc#float#create_menu	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_menu(lines, config) abort$/;"	f
coc#float#create_notification	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_notification(lines, config) abort$/;"	f
coc#float#create_prompt_win	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_prompt_win(title, default, opts) abort$/;"	f
coc#float#create_pum_float	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_pum_float(winid, bufnr, lines, config) abort$/;"	f
coc#float#cursor_relative	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#cursor_relative(winid) abort$/;"	f
coc#float#get_config_cursor	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#get_config_cursor(lines, config) abort$/;"	f
coc#float#get_float_win	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#get_float_win() abort$/;"	f
coc#float#get_float_win_list	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#get_float_win_list(...) abort$/;"	f
coc#float#get_related	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#get_related(winid, kind) abort$/;"	f
coc#float#has_float	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#has_float(...) abort$/;"	f
coc#float#has_scroll	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#has_scroll() abort$/;"	f
coc#float#jump	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#jump() abort$/;"	f
coc#float#nvim_border_win	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_border_win(config, winid, border, title, hasbtn, hlgroup, related) abor/;"	f
coc#float#nvim_buttons	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_buttons(config, winid, buttons, borderbottom, pad, hlgroup, borderhighl/;"	f
coc#float#nvim_close_btn	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_close_btn(config, winid, border, hlgroup, related) abort$/;"	f
coc#float#nvim_create_related	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_create_related(winid, config, opts) abort$/;"	f
coc#float#nvim_float_click	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_float_click() abort$/;"	f
coc#float#nvim_refresh_scrollbar	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_refresh_scrollbar(winid) abort$/;"	f
coc#float#nvim_right_pad	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_right_pad(config, winid, hlgroup, related) abort$/;"	f
coc#float#nvim_scrollbar	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_scrollbar(winid) abort$/;"	f
coc#float#nvim_win_enter	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_win_enter(winid) abort$/;"	f
coc#float#prompt_confirm	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#prompt_confirm(title, cb) abort$/;"	f
coc#float#prompt_insert	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#prompt_insert(text) abort$/;"	f
coc#float#reflow	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#reflow(top) abort$/;"	f
coc#float#scroll	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#scroll(forward, ...)$/;"	f
coc#float#scroll_win	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#scroll_win(winid, forward, amount) abort$/;"	f
coc#float#scrollable	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#scrollable(winid) abort$/;"	f
coc#float#valid	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#valid(winid) abort$/;"	f
coc#float#vim_buttons	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#vim_buttons(winid, config) abort$/;"	f
coc#float#vim_filter	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#vim_filter(winid, key, keys) abort$/;"	f
coc#helper#dict_omit	autoload/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#dict_omit(dict, keys) abort$/;"	f
coc#helper#dict_pick	autoload/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#dict_pick(dict, keys) abort$/;"	f
coc#helper#max	autoload/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#max(first, ...) abort$/;"	f
coc#helper#min	autoload/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#min(first, ...) abort$/;"	f
coc#helper#str_compose	autoload/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#str_compose(line, position, inserted) abort$/;"	f
coc#highlight#add_highlight	autoload/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#add_highlight(bufnr, src_id, hl_group, line, col_start, col_end) abort$/;"	f
coc#highlight#add_highlights	autoload/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#add_highlights(winid, codes, highlights) abort$/;"	f
coc#highlight#clear_highlight	autoload/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#clear_highlight(bufnr, key, start_line, end_line) abort$/;"	f
coc#highlight#clear_match_group	autoload/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#clear_match_group(winid, match) abort$/;"	f
coc#highlight#clear_matches	autoload/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#clear_matches(winid, ids)$/;"	f
coc#highlight#compose_hlgroup	autoload/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#compose_hlgroup(fgGroup, bgGroup) abort$/;"	f
coc#highlight#highlight_lines	autoload/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#highlight_lines(winid, blocks) abort$/;"	f
coc#highlight#match_ranges	autoload/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#match_ranges(winid, bufnr, ranges, hlGroup, priority) abort$/;"	f
coc#highlight#ranges	autoload/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#ranges(bufnr, key, hlGroup, ranges) abort$/;"	f
coc#jumpable	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#jumpable() abort$/;"	f
coc#list#clean_up	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#clean_up() abort$/;"	f
coc#list#create	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#create(position, height, name, numberSelect)$/;"	f
coc#list#get_preview	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#get_preview(...) abort$/;"	f
coc#list#getchar	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#getchar() abort$/;"	f
coc#list#has_preview	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#has_preview()$/;"	f
coc#list#hide	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#hide(original, height, winid) abort$/;"	f
coc#list#names	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#names(...) abort$/;"	f
coc#list#options	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#options(...)$/;"	f
coc#list#preview	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#preview(lines, config) abort$/;"	f
coc#list#restore	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#restore(winid, height)$/;"	f
coc#list#scroll_preview	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#scroll_preview(dir) abort$/;"	f
coc#list#set_height	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#set_height(height) abort$/;"	f
coc#list#setlines	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#setlines(bufnr, lines, append)$/;"	f
coc#list#setup	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#setup(source)$/;"	f
coc#list#status	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#status(name)$/;"	f
coc#on_enter	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#on_enter()$/;"	f
coc#on_notify	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#on_notify(id, method, Cb)$/;"	f
coc#prompt#activated	autoload/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#activated() abort$/;"	f
coc#prompt#getc	autoload/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#getc() abort$/;"	f
coc#prompt#getchar	autoload/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#getchar() abort$/;"	f
coc#prompt#start_prompt	autoload/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#start_prompt(session) abort$/;"	f
coc#prompt#stop_prompt	autoload/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#stop_prompt(session)$/;"	f
coc#refresh	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#refresh() abort$/;"	f
coc#rpc#async_request	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#async_request(id, method, args)$/;"	f
coc#rpc#async_response	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#async_response(id, resp, isErr) abort$/;"	f
coc#rpc#get_errors	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#get_errors()$/;"	f
coc#rpc#kill	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#kill()$/;"	f
coc#rpc#notify	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#notify(method, args) abort$/;"	f
coc#rpc#ready	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#ready()$/;"	f
coc#rpc#request	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#request(method, args) abort$/;"	f
coc#rpc#request_async	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#request_async(method, args, cb) abort$/;"	f
coc#rpc#restart	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#restart()$/;"	f
coc#rpc#start_server	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#start_server()$/;"	f
coc#rpc#started	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#started() abort$/;"	f
coc#rpc#stop	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#stop()$/;"	f
coc#snippet#_select_mappings	autoload/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#_select_mappings()$/;"	f
coc#snippet#disable	autoload/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#disable()$/;"	f
coc#snippet#enable	autoload/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#enable()$/;"	f
coc#snippet#show_choices	autoload/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#show_choices(lnum, col, len, values) abort$/;"	f
coc#start	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#start(...)$/;"	f
coc#status	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! coc#status()$/;"	f
coc#task#running	autoload/plugged/coc.nvim/autoload/coc/task.vim	/^function! coc#task#running(id)$/;"	f
coc#task#start	autoload/plugged/coc.nvim/autoload/coc/task.vim	/^function! coc#task#start(id, opts)$/;"	f
coc#task#stop	autoload/plugged/coc.nvim/autoload/coc/task.vim	/^function! coc#task#stop(id)$/;"	f
coc#terminal#close	autoload/plugged/coc.nvim/autoload/coc/terminal.vim	/^function! coc#terminal#close(bufnr) abort$/;"	f
coc#terminal#send	autoload/plugged/coc.nvim/autoload/coc/terminal.vim	/^function! coc#terminal#send(bufnr, text, add_new_line) abort$/;"	f
coc#terminal#start	autoload/plugged/coc.nvim/autoload/coc/terminal.vim	/^function! coc#terminal#start(cmd, cwd, env) abort$/;"	f
coc#util#api_version	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#api_version() abort$/;"	f
coc#util#change_lines	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#change_lines(bufnr, list) abort$/;"	f
coc#util#check_refresh	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#check_refresh(bufnr)$/;"	f
coc#util#clear_signs	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#clear_signs()$/;"	f
coc#util#clearmatches	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#clearmatches(ids, ...)$/;"	f
coc#util#cursor	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#cursor()$/;"	f
coc#util#cursor_pos	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#cursor_pos() abort$/;"	f
coc#util#diff_content	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#diff_content(lines) abort$/;"	f
coc#util#do_autocmd	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#do_autocmd(name) abort$/;"	f
coc#util#do_complete	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#do_complete(name, opt, cb) abort$/;"	f
coc#util#echo_hover	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_hover(msg)$/;"	f
coc#util#echo_line	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_line()$/;"	f
coc#util#echo_lines	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_lines(lines)$/;"	f
coc#util#echo_messages	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_messages(hl, msgs)$/;"	f
coc#util#echo_signatures	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_signatures(signatures) abort$/;"	f
coc#util#execute	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#execute(cmd)$/;"	f
coc#util#extension_root	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#extension_root() abort$/;"	f
coc#util#get_buf_lines	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_buf_lines(bufnr, changedtick)$/;"	f
coc#util#get_bufoptions	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_bufoptions(bufnr, maxFileSize) abort$/;"	f
coc#util#get_changeinfo	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_changeinfo()$/;"	f
coc#util#get_complete_option	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_complete_option()$/;"	f
coc#util#get_config	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_config(key) abort$/;"	f
coc#util#get_config_home	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_config_home()$/;"	f
coc#util#get_data_home	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_data_home()$/;"	f
coc#util#get_format_opts	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_format_opts(bufnr) abort$/;"	f
coc#util#get_input	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_input()$/;"	f
coc#util#get_offset	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_offset() abort$/;"	f
coc#util#get_pretext	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_pretext() abort$/;"	f
coc#util#get_syntax_name	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_syntax_name(lnum, col)$/;"	f
coc#util#getpid	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#getpid()$/;"	f
coc#util#has_preview	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#has_preview()$/;"	f
coc#util#highlight_options	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#highlight_options()$/;"	f
coc#util#install	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#install() abort$/;"	f
coc#util#install_extension	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#install_extension(args) abort$/;"	f
coc#util#iterm_open	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#iterm_open(dir)$/;"	f
coc#util#job_command	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#job_command()$/;"	f
coc#util#jump	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#jump(cmd, filepath, ...) abort$/;"	f
coc#util#jumpTo	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#jumpTo(line, character) abort$/;"	f
coc#util#move_cursor	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#move_cursor(delta)$/;"	f
coc#util#on_error	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#on_error(msg) abort$/;"	f
coc#util#open_file	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_file(cmd, file)$/;"	f
coc#util#open_files	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_files(files)$/;"	f
coc#util#open_terminal	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_terminal(opts) abort$/;"	f
coc#util#open_url	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_url(url)$/;"	f
coc#util#path_replace_patterns	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#path_replace_patterns() abort$/;"	f
coc#util#pick_color	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#pick_color(default_color)$/;"	f
coc#util#preview_info	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#preview_info(info, filetype, ...) abort$/;"	f
coc#util#quickpick	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#quickpick(title, items, cb) abort$/;"	f
coc#util#rebuild	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#rebuild()$/;"	f
coc#util#refactor_fold_text	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#refactor_fold_text(lnum) abort$/;"	f
coc#util#refactor_foldlevel	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#refactor_foldlevel(lnum) abort$/;"	f
coc#util#remote_fns	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#remote_fns(name)$/;"	f
coc#util#root_patterns	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#root_patterns() abort$/;"	f
coc#util#run_terminal	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#run_terminal(opts, cb)$/;"	f
coc#util#set_buf_lines	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#set_buf_lines(bufnr, lines) abort$/;"	f
coc#util#set_buf_var	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#set_buf_var(bufnr, name, val) abort$/;"	f
coc#util#set_lines	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#set_lines(bufnr, replacement, start, end) abort$/;"	f
coc#util#setline	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#setline(lnum, line)$/;"	f
coc#util#timer	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#timer(method, args)$/;"	f
coc#util#unmap	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#unmap(bufnr, keys) abort$/;"	f
coc#util#unplace_signs	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#unplace_signs(bufnr, sign_ids)$/;"	f
coc#util#update_extensions	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#update_extensions(...) abort$/;"	f
coc#util#version	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#version()$/;"	f
coc#util#vim_info	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#vim_info()$/;"	f
coc#util#win_gotoid	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#win_gotoid(winid) abort$/;"	f
coc#util#with_callback	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#with_callback(method, args, cb)$/;"	f
coc.preferences.bracketEnterImprove	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.bracketEnterImprove": {$/;"	o	object:properties
coc.preferences.colorSupport	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.colorSupport": {$/;"	o	object:properties
coc.preferences.currentFunctionSymbolAutoUpdate	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.currentFunctionSymbolAutoUpdate": {$/;"	o	object:properties
coc.preferences.enableFloatHighlight	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.enableFloatHighlight": {$/;"	o	object:properties
coc.preferences.enableMarkdown	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.enableMarkdown": {$/;"	o	object:properties
coc.preferences.enableMessageDialog	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.enableMessageDialog": {$/;"	o	object:properties
coc.preferences.extensionUpdateCheck	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.extensionUpdateCheck": {$/;"	o	object:properties
coc.preferences.floatActions	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.floatActions": {$/;"	o	object:properties
coc.preferences.formatOnSaveFiletypes	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.formatOnSaveFiletypes": {$/;"	o	object:properties
coc.preferences.formatOnSaveFiletypes	coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["css", "markdown", "javascript", "graphql", "html", /;"	a
coc.preferences.formatOnType	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.formatOnType": {$/;"	o	object:properties
coc.preferences.formatOnTypeFiletypes	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.formatOnTypeFiletypes": {$/;"	o	object:properties
coc.preferences.highlightTimeout	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.highlightTimeout": {$/;"	o	object:properties
coc.preferences.jumpCommand	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.jumpCommand": {$/;"	o	object:properties
coc.preferences.listOfWorkspaceEdit	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.listOfWorkspaceEdit": {$/;"	o	object:properties
coc.preferences.maxFileSize	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.maxFileSize": {$/;"	o	object:properties
coc.preferences.messageLevel	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.messageLevel": {$/;"	o	object:properties
coc.preferences.previewAutoClose	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.previewAutoClose": {$/;"	o	object:properties
coc.preferences.previewMaxHeight	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.previewMaxHeight": {$/;"	o	object:properties
coc.preferences.promptInput	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.promptInput": {$/;"	o	object:properties
coc.preferences.promptWorkspaceEdit	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.promptWorkspaceEdit": {$/;"	o	object:properties
coc.preferences.rootPatterns	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.rootPatterns": {$/;"	o	object:properties
coc.preferences.silentAutoupdate	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.silentAutoupdate": {$/;"	o	object:properties
coc.preferences.snippetStatusText	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.snippetStatusText": {$/;"	o	object:properties
coc.preferences.snippets.enable	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.snippets.enable": {$/;"	o	object:properties
coc.preferences.useQuickfixForLocations	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.useQuickfixForLocations": {$/;"	o	object:properties
coc.preferences.watchmanPath	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.watchmanPath": {$/;"	o	object:properties
coc.preferences.willSaveHandlerTimeout	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.willSaveHandlerTimeout": {$/;"	o	object:properties
coc.source.around.disableSyntaxes	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.source.around.disableSyntaxes": {$/;"	o	object:properties
coc.source.around.enable	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.source.around.enable": {$/;"	o	object:properties
coc.source.around.firstMatch	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.source.around.firstMatch": {$/;"	o	object:properties
coc.source.around.priority	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.source.around.priority": {$/;"	o	object:properties
coc.source.around.shortcut	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.source.around.shortcut": {$/;"	o	object:properties
coc.source.buffer.disableSyntaxes	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.disableSyntaxes": {$/;"	o	object:properties
coc.source.buffer.enable	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.enable": {$/;"	o	object:properties
coc.source.buffer.firstMatch	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.firstMatch": {$/;"	o	object:properties
coc.source.buffer.ignoreGitignore	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.ignoreGitignore": {$/;"	o	object:properties
coc.source.buffer.priority	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.priority": {$/;"	o	object:properties
coc.source.buffer.shortcut	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.shortcut": {$/;"	o	object:properties
coc.source.file.disableSyntaxes	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.source.file.disableSyntaxes": {$/;"	o	object:properties
coc.source.file.enable	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.source.file.enable": {$/;"	o	object:properties
coc.source.file.ignoreHidden	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.source.file.ignoreHidden": {$/;"	o	object:properties
coc.source.file.ignorePatterns	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.source.file.ignorePatterns": {$/;"	o	object:properties
coc.source.file.priority	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.source.file.priority": {$/;"	o	object:properties
coc.source.file.shortcut	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.source.file.shortcut": {$/;"	o	object:properties
coc.source.file.triggerCharacters	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.source.file.triggerCharacters": {$/;"	o	object:properties
coc.source.file.trimSameExts	autoload/plugged/coc.nvim/data/schema.json	/^    "coc.source.file.trimSameExts": {$/;"	o	object:properties
coc_nvim	autoload/plugged/coc.nvim/plugin/coc.vim	/^  augroup coc_nvim$/;"	a
code	autoload/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let o=n.replace(Dpe,"").split(DB);i.push(o.spl/;"	m	class:FB
code	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
codeLens.enable	autoload/plugged/coc.nvim/data/schema.json	/^    "codeLens.enable": {$/;"	o	object:properties
codeLens.separator	autoload/plugged/coc.nvim/data/schema.json	/^    "codeLens.separator": {$/;"	o	object:properties
codeLens.subseparator	autoload/plugged/coc.nvim/data/schema.json	/^    "codeLens.subseparator": {$/;"	o	object:properties
codes	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	p	class:yD.createPopup.l
codespan	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
codespan	autoload/plugged/coc.nvim/build/index.js	/^`}tablecell(e,t){return e+DB}strong(e){return this.o.strong(e)}em(e){return e=_B(e,this.o.reflow/;"	m	class:FB
coffee#CoffeeSetUpErrorFormat	autoload/plugged/vim-polyglot/autoload/coffee.vim	/^function! coffee#CoffeeSetUpErrorFormat()$/;"	f
coffee#CoffeeSetUpVariables	autoload/plugged/vim-polyglot/autoload/coffee.vim	/^function! coffee#CoffeeSetUpVariables()$/;"	f
col	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	p	class:mq.fire.n
col	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	p	class:p
colBlack	autoload/plugged/fzf/src/tui/tui.go	/^	colBlack Color = iota$/;"	c	package:tui	typeref:type:Color
colBlue	autoload/plugged/fzf/src/tui/tui.go	/^	colBlue$/;"	c	package:tui
colCyan	autoload/plugged/fzf/src/tui/tui.go	/^	colCyan$/;"	c	package:tui
colDefault	autoload/plugged/fzf/src/tui/tui.go	/^	colDefault   Color = -1$/;"	c	package:tui	typeref:type:Color
colGreen	autoload/plugged/fzf/src/tui/tui.go	/^	colGreen$/;"	c	package:tui
colMagenta	autoload/plugged/fzf/src/tui/tui.go	/^	colMagenta$/;"	c	package:tui
colRed	autoload/plugged/fzf/src/tui/tui.go	/^	colRed$/;"	c	package:tui
colUndefined	autoload/plugged/fzf/src/tui/tui.go	/^	colUndefined Color = -2$/;"	c	package:tui	typeref:type:Color
colWhite	autoload/plugged/fzf/src/tui/tui.go	/^	colWhite$/;"	c	package:tui
colYellow	autoload/plugged/fzf/src/tui/tui.go	/^	colYellow$/;"	c	package:tui
color	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	c	class:Qfe.e
color	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	c	class:xpe.e
color	autoload/plugged/coc.nvim/data/schema.json	/^        "color": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
color	autoload/plugged/fzf/src/ansi.go	/^	color  ansiState$/;"	m	struct:fzf.ansiOffset	typeref:typename:ansiState
color	autoload/plugged/fzf/src/result.go	/^	color  tui.ColorPair$/;"	m	struct:fzf.colorOffset	typeref:typename:tui.ColorPair
color	autoload/plugged/fzf/src/tui/tcell.go	/^	color       bool$/;"	m	struct:tui.TcellWindow	typeref:typename:bool
color	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^		     let color = ""$/;"	v
color	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^		  let color = substitute(s, '".*\\sm\\s\\+\\(.\\{-}\\)\\s*\\(s\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^	       let color = substitute(s, '".*\\sg4\\s\\+\\(.\\{-}\\)\\s*\\([ms]\\s.*\\)*\\s*"', '\\1', /;"	v
color	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^	    let color = substitute(color, '\\(\\x\\)\\(\\x\\)\\(\\x\\)', '0\\10\\20\\3', '')$/;"	v
color	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^	    let color = substitute(color, '\\(\\x\\x\\)\\x', '\\1', 'g')$/;"	v
color	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^	    let color = substitute(color, '\\(\\x\\x\\)\\x\\x', '\\1', 'g')$/;"	v
color	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^	    let color = substitute(s, '".*\\sg\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\|[ms]\\)\\s.*\\)*\\s*"', /;"	v
color	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^	 let color = substitute(s, '".*\\sc\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\=\\|[ms]\\)\\s.*\\)*\\s*"', /;"	v
color	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^let color  = ""$/;"	v
color	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^		let color = ""$/;"	v
color	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^	      let color = substitute(s, '.*\\sm\\s\\+\\(.\\{-}\\)\\s*\\(s\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^	    let color = substitute(s, '.*\\sg4\\s\\+\\(.\\{-}\\)\\s*\\([ms]\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\)\\(\\x\\)\\(\\x\\)', '0\\10\\20\\3', '')$/;"	v
color	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\x\\)\\x', '\\1', 'g')$/;"	v
color	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\x\\)\\x\\x', '\\1', 'g')$/;"	v
color	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^	  let color = substitute(s, '.*\\sg\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\|[ms]\\)\\s.*\\)*\\s*', '\\1/;"	v
color	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^	let color = substitute(s, '.*\\sc\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\=\\|[ms]\\)\\s.*\\)*\\s*', '\\/;"	v
color	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^  let color  = ""$/;"	v
colorCodes	autoload/plugged/fzf/src/tui/light.go	/^func colorCodes(fg Color, bg Color) []string {$/;"	f	package:tui	typeref:typename:[]string
colorOffset	autoload/plugged/fzf/src/result.go	/^type colorOffset struct {$/;"	s	package:fzf
colorOffsets	autoload/plugged/fzf/src/result.go	/^func (result *Result) colorOffsets(matchOffsets []Offset, theme *tui.ColorTheme, colBase tui.Col/;"	f	struct:fzf.Result	typeref:typename:[]colorOffset
colored	autoload/plugged/fzf/src/ansi.go	/^func (s *ansiState) colored() bool {$/;"	f	struct:fzf.ansiState	typeref:typename:bool
colored	autoload/plugged/fzf/src/tui/light.go	/^	colored  bool$/;"	m	struct:tui.LightWindow	typeref:typename:bool
colors	autoload/plugged/fzf/src/item.go	/^	colors      *[]ansiOffset \/\/ 8$/;"	m	struct:fzf.Item	typeref:typename:*[]ansiOffset
colors	autoload/plugged/vim-airline/t/themes.vim	/^      let colors = airline#themes#get_highlight('Foo')$/;"	v
colors	autoload/plugged/vim-airline/t/themes.vim	/^    let colors = airline#themes#get_highlight('Foo')$/;"	v
colors	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^	 let colors = substitute(s, '"\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*"', '\\1', '')$/;"	v
colors	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^let colors = 0$/;"	v
colors	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^	let colors = substitute(s, '\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*', '\\1', '')$/;"	v
colors	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^  let colors = 0$/;"	v
comma_expanson	autoload/plugged/vim-polyglot/scripts/build	/^def comma_expanson(s)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
comma_expanson	autoload/plugged/vim-polyglot/scripts/import_vim	/^def comma_expanson(s)$/;"	f
command	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892de00.e.a
command	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:sp
command	autoload/plugged/coc.nvim/data/schema.json	/^        "command": {$/;"	o	object:definitions.languageServerCommand.properties
command	autoload/plugged/fzf/src/options.go	/^	command     string$/;"	m	struct:fzf.previewOpts	typeref:typename:string
command	autoload/plugged/fzf/src/reader.go	/^	command  *string$/;"	m	struct:fzf.Reader	typeref:typename:*string
command	autoload/plugged/fzf/src/terminal.go	/^	command *string$/;"	m	struct:fzf.searchRequest	typeref:typename:*string
commands	autoload/plugged/vim-polyglot/syntax/sh.vim	/^let commands = [ 'arch', 'awk', 'b2sum', 'base32', 'base64', 'basename', 'basenc', 'bash', 'brew/;"	v
commands	autoload/plugged/vim-polyglot/syntax/zsh.vim	/^let commands = [ 'arch', 'awk', 'b2sum', 'base32', 'base64', 'basename', 'basenc', 'bash', 'brew/;"	v
compareRanks	autoload/plugged/fzf/src/result_others.go	/^func compareRanks(irank Result, jrank Result, tac bool) bool {$/;"	f	package:fzf	typeref:typename:bool
compareRanks	autoload/plugged/fzf/src/result_x86.go	/^func compareRanks(irank Result, jrank Result, tac bool) bool {$/;"	f	package:fzf	typeref:typename:bool
compose	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	m	class:FB
cond	autoload/plugged/fzf/src/util/eventbox.go	/^	cond   *sync.Cond$/;"	m	struct:util.EventBox	typeref:typename:*sync.Cond
consoleDevice	autoload/plugged/fzf/src/tui/light.go	/^const consoleDevice string = "\/dev\/tty"$/;"	c	package:tui	typeref:typename:string
consoleFlagsInput	autoload/plugged/fzf/src/tui/light_windows.go	/^	consoleFlagsInput  = uint32(windows.ENABLE_VIRTUAL_TERMINAL_INPUT | windows.ENABLE_PROCESSED_IN/;"	v	package:tui
consoleFlagsOutput	autoload/plugged/fzf/src/tui/light_windows.go	/^	consoleFlagsOutput = uint32(windows.ENABLE_VIRTUAL_TERMINAL_PROCESSING | windows.ENABLE_PROCESS/;"	v	package:tui
constant	autoload/plugged/coc.nvim/data/schema.json	/^        "constant": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
constrain	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) constrain() {$/;"	f	struct:fzf.Terminal
constructor	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	m	class:mq
constructor	autoload/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[c],!0),await e./;"	m	class:Vj
constructor	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	m	class:ar
constructor	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	m	class:yD
constructor	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:Hj
constructor	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:d0
constructor	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:f0
constructor	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:p0
constructor	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:sp
constructor	autoload/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let o=n.replace(Dpe,"").split(DB);i.push(o.spl/;"	m	class:FB
constructor	autoload/plugged/coc.nvim/build/index.js	/^`),s=i.line==r.start.line?i.character-r.start.character:i.character,a=UB(o,i.line-r.start.line,s/;"	m	class:wD
constructor	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	m	class:AnonymousFunctionb66688922d400.e
constructor	autoload/plugged/coc.nvim/build/index.js	/^`);e=Zi.Position.create(e.line-o,e.character),t=Zi.Position.create(t.line-o,t.character);let l=k/;"	m	class:l0
constructor	autoload/plugged/coc.nvim/build/index.js	/^`);e=Zi.Position.create(e.line-o,e.character),t=Zi.Position.create(t.line-o,t.character);let l=k/;"	m	class:s0
constructor	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	m	class:P0
constructor	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	m	class:_0
constructor	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	m	class:t
constructor	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:CD
constructor	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:DD
constructor	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:ED
constructor	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:SD
constructor	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:_D
constructor	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:xD
constructor	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:ID
constructor	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:Fr
constructor	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:Ym
constructor	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:e0
constructor	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:r0
constructor	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:ta
constructor	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get lineCount(){return this.lines.length+(this.eol?1:0)}getText(e){if(e){let t=this.offset/;"	m	class:o0
constructor	autoload/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:s}}function oj(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	m	class:Qf
constructor	autoload/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:s}}function oj(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	m	class:_i
constructor	autoload/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:s}}function oj(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	m	class:i0
constructor	autoload/plugged/coc.nvim/data/schema.json	/^        "constructor": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
consts,static constants	autoload/plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?(static|const)[ \\t]+([a-zA-Z0-9_]+)\/\\3\/c,consts,static c/;"	k	langdef:Rust
contained	autoload/plugged/vim-polyglot/syntax/plantuml.vim	/^let contained = []$/;"	v
contains	autoload/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:s}}function oj(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	m	class:_i
content	autoload/plugged/coc.nvim/build/index.js	/^`),s=i.line==r.start.line?i.character-r.start.character:i.character,a=UB(o,i.line-r.start.line,s/;"	G	class:wD
content	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:b3.w
content	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get lineCount(){return this.lines.length+(this.eol?1:0)}getText(e){if(e){let t=this.offset/;"	G	class:o0
contents	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	G	class:Fr
contents	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:ta.constructor.n.workspace
convertBoolToInt32	autoload/plugged/fzf/src/util/atomicbool.go	/^func convertBoolToInt32(b bool) int32 {$/;"	f	package:util	typeref:typename:int32
convertFiletype	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	m	class:o0
coordinatorDelayMax	autoload/plugged/fzf/src/constants.go	/^	coordinatorDelayMax  time.Duration = 100 * time.Millisecond$/;"	c	package:fzf	typeref:typename:time.Duration
coordinatorDelayStep	autoload/plugged/fzf/src/constants.go	/^	coordinatorDelayStep time.Duration = 10 * time.Millisecond$/;"	c	package:fzf	typeref:typename:time.Duration
copy	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	m	class:jc
copySlice	autoload/plugged/fzf/src/terminal.go	/^func copySlice(slice []rune) []rune {$/;"	f	package:fzf	typeref:typename:[]rune
copy_file	autoload/plugged/vim-polyglot/scripts/build	/^def copy_file(name, src, dest)$/;"	f
core_attributes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let core_attributes = {'accesskey': [], 'class': [], 'contenteditable': ['true', 'false', ''], '/;"	v
count	autoload/plugged/fzf/src/chunklist.go	/^	count int$/;"	m	struct:fzf.Chunk	typeref:typename:int
count	autoload/plugged/fzf/src/merger.go	/^	count   int$/;"	m	struct:fzf.Merger	typeref:typename:int
count	autoload/plugged/fzf/src/terminal.go	/^	count        int$/;"	m	struct:fzf.Terminal	typeref:typename:int
counts	autoload/plugged/fzf/test/test_go.rb	/^          def counts$/;"	f	method:Tmux.until
coverageDirectory	autoload/plugged/coc.nvim/package.json	/^    "coverageDirectory": ".\/coverage\/"$/;"	s	object:jest
cpe	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	f
cpp	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^	 let cpp = substitute(s, '"\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*"', '\\1', '')$/;"	v
cpp	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^let cpp    = 0$/;"	v
cpp	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^	let cpp = substitute(s, '\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*', '\\1', '')$/;"	v
cpp	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^  let cpp    = 0$/;"	v
cprint2	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) cprint2(fg Color, bg Color, attr Attr, text string) {$/;"	f	struct:tui.LightWindow
cq	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
cr	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
cr	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889226800
create	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	m	class:yD
create	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:d0
create	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:zB
createClient	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:sp
createFile	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	m	class:r
createOutputChannel	autoload/plugged/coc.nvim/build/index.js	/^`)],!0)}async runTerminalCommand(e,t,i=!1){return t=t||b.cwd,await this.nvim.callAsync("coc#util/;"	m	class:Vj
createPopup	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	m	class:yD
createStatusBarItem	autoload/plugged/coc.nvim/build/index.js	/^`)],!0)}async runTerminalCommand(e,t,i=!1){return t=t||b.cwd,await this.nvim.callAsync("coc#util/;"	m	class:Vj
createStatusBarItem	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:ID
create_file	autoload/plugged/fzf/install	/^create_file() {$/;"	f
criterion	autoload/plugged/fzf/src/options.go	/^type criterion int$/;"	t	package:fzf	typeref:typename:int
crossorigin	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let crossorigin = ['anonymous', 'use-credentials']$/;"	v
cry_minlines	autoload/plugged/vim-polyglot/syntax/cryptol.vim	/^  let cry_minlines = 50$/;"	v
crystal#indent#AfterBlockOpening	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterBlockOpening(pline_info) abort$/;"	f
crystal#indent#AfterEndKeyword	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterEndKeyword(pline_info) abort$/;"	f
crystal#indent#AfterEndMacroTag	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterEndMacroTag(pline_info) abort$/;"	f
crystal#indent#AfterIndentKeyword	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterIndentKeyword(pline_info) abort$/;"	f
crystal#indent#AfterIndentMacroTag	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterIndentMacroTag(pline_info) abort$/;"	f
crystal#indent#AfterLeadingOperator	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterLeadingOperator(pline_info) abort$/;"	f
crystal#indent#AfterLinkAttribute	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterLinkAttribute(pline_info) abort$/;"	f
crystal#indent#AfterTypeDeclaration	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterTypeDeclaration(pline_info) abort$/;"	f
crystal#indent#AfterUnbalancedBracket	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterUnbalancedBracket(pline_info) abort$/;"	f
crystal#indent#ClosingBracketOnEmptyLine	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#ClosingBracketOnEmptyLine(cline_info) abort$/;"	f
crystal#indent#ContinuedHangingOperator	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#ContinuedHangingOperator(msl_info) abort$/;"	f
crystal#indent#ContinuedLine	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#ContinuedLine(pline_info) abort$/;"	f
crystal#indent#DeindentingKeyword	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#DeindentingKeyword(cline_info) abort$/;"	f
crystal#indent#DeindentingMacroTag	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#DeindentingMacroTag(cline_info) abort$/;"	f
crystal#indent#EmptyInsideString	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#EmptyInsideString(pline_info) abort$/;"	f
crystal#indent#ExtraBrackets	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#ExtraBrackets(lnum) abort$/;"	f
crystal#indent#GetMSL	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#GetMSL(lnum) abort$/;"	f
crystal#indent#IndentingKeywordInMSL	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IndentingKeywordInMSL(msl_info) abort$/;"	f
crystal#indent#IsAssignment	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsAssignment(str, pos) abort$/;"	f
crystal#indent#IsInString	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsInString(lnum, col) abort$/;"	f
crystal#indent#IsInStringDelimiter	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsInStringDelimiter(lnum, col) abort$/;"	f
crystal#indent#IsInStringOrComment	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsInStringOrComment(lnum, col) abort$/;"	f
crystal#indent#IsInStringOrCommentOrDelimiter	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsInStringOrCommentOrDelimiter(lnum, col) abort$/;"	f
crystal#indent#IsLineComment	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsLineComment(lnum) abort$/;"	f
crystal#indent#LeadingOperator	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#LeadingOperator(cline_info) abort$/;"	f
crystal#indent#Match	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#Match(lnum, regex) abort$/;"	f
crystal#indent#MultilineString	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#MultilineString(cline_info) abort$/;"	f
crystal#indent#PrevNonBlank	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#PrevNonBlank(lnum) abort$/;"	f
crystal#indent#PreviousNotMSL	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#PreviousNotMSL(msl_info) abort$/;"	f
crystal#indent#RelativeMacroDepth	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#RelativeMacroDepth(a, b) abort$/;"	f
crystal#indent#StartOfFile	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#StartOfFile(pline_info) abort$/;"	f
crystal_lang#complete	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#complete(findstart, base) abort$/;"	f
crystal_lang#context	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#context(file, pos, option_str) abort$/;"	f
crystal_lang#entrypoint_for	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#entrypoint_for(file_path) abort$/;"	f
crystal_lang#expand	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#expand(file, pos, ...) abort$/;"	f
crystal_lang#format	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#format(option_str, ...) abort$/;"	f
crystal_lang#format_string	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#format_string(code, ...) abort$/;"	f
crystal_lang#get_spec_switched_path	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#get_spec_switched_path(absolute_path) abort$/;"	f
crystal_lang#impl	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#impl(file, pos, option_str) abort$/;"	f
crystal_lang#jump_to_definition	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#jump_to_definition(file, pos) abort$/;"	f
crystal_lang#run_all_spec	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#run_all_spec(...) abort$/;"	f
crystal_lang#run_current_spec	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#run_current_spec(...) abort$/;"	f
crystal_lang#switch_spec_file	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#switch_spec_file(...) abort$/;"	f
crystal_lang#tool	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#tool(name, file, pos, option_str) abort$/;"	f
crystal_lang#type_hierarchy	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#type_hierarchy(file, option_str) abort$/;"	f
csc_minlines	autoload/plugged/vim-polyglot/syntax/csc.vim	/^	let csc_minlines = 50	" mostly for () constructs$/;"	v
cse	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
csi	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) csi(code string) {$/;"	f	unknown:tui.LightRenderer
csi	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) csi(code string) {$/;"	f	struct:tui.LightWindow
csiColor	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) csiColor(fg Color, bg Color, attr Attr) bool {$/;"	f	struct:tui.LightWindow	typeref:typename:bool
csv#AddColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#AddColumn(start, stop, ...) range "{{{3$/;"	f
csv#AnalyzeColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#AnalyzeColumn(...) "{{{3$/;"	f
csv#ArrangeCol	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ArrangeCol(first, last, bang, limit, ...) range "{{{3$/;"	f
csv#AvgColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#AvgColumn(list) "{{{3$/;"	f
csv#CSVArrangeCol	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CSVArrangeCol(first, last, bang, limit) range "{{{2$/;"	f
csv#CSVMappings	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CSVMappings() "{{{3$/;"	f
csv#CSVSortValues	autoload/plugged/vim-polyglot/autoload/csv.vim	/^  fu! csv#CSVSortValues(i1, i2) "{{{3$/;"	f
csv#CSV_SetOption	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CSV_SetOption(csvfile, header, option, value) "{{{3$/;"	f
csv#CalculateColumnWidth	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CalculateColumnWidth(row, silent) "{{{3$/;"	f
csv#CheckDuplicates	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CheckDuplicates(list) "{{{3$/;"	f
csv#CheckHeaderLine	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CheckHeaderLine() "{{{3$/;"	f
csv#ColWidth	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ColWidth(colnr, row, silent) "{{{3$/;"	f
csv#ColumnMode	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ColumnMode() "{{{3$/;"	f
csv#ColumnWidth	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ColumnWidth()$/;"	f
csv#Columnize	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Columnize(field) "{{{3$/;"	f
csv#CommandDefinitions	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CommandDefinitions() "{{{3$/;"	f
csv#CompleteColumnNr	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CompleteColumnNr(A,L,P) "{{{3$/;"	f
csv#CopyCol	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CopyCol(reg, col, cnt) "{{{3$/;"	f
csv#CountColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CountColumn(list) "{{{3$/;"	f
csv#DelColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DelColumn(colnr) "{{{3$/;"	f
csv#DeleteColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DeleteColumn(arg) "{{{3$/;"	f
csv#DisableFolding	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DisableFolding() "{{{3$/;"	f
csv#DoAutoCommands	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DoAutoCommands() "{{{3$/;"	f
csv#DoForEachColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DoForEachColumn(start, stop, bang) range "{{{3$/;"	f
csv#DupColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DupColumn(start, stop, ...) range "{{{3$/;"	f
csv#DuplicateRows	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DuplicateRows(columnlist) "{{{3$/;"	f
csv#EscapeValue	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#EscapeValue(val) "{{{3$/;"	f
csv#EvalColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#EvalColumn(nr, func, first, last, ...) range "{{{3$/;"	f
csv#FoldValue	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#FoldValue(lnum, filter) "{{{3$/;"	f
csv#GetCells	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetCells(list) "{{{3$/;"	f
csv#GetColPat	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetColPat(colnr, zs_flag) "{{{3$/;"	f
csv#GetColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetColumn(line, col, strip) "{{{3$/;"	f
csv#GetCursorChar	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetCursorChar() "{{{3$/;"	f
csv#GetDelimiter	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetDelimiter(first, last, ...) "{{{3$/;"	f
csv#GetPat	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetPat(colnr, maxcolnr, pat, allowmore) "{{{3$/;"	f
csv#HiCol	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#HiCol(colnr, bang) "{{{3$/;"	f
csv#IN	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#IN(list, value) "{{{3$/;"	f
csv#Init	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Init(start, end, ...) "{{{3$/;"	f
csv#InitCSVFixedWidth	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#InitCSVFixedWidth() "{{{3$/;"	f
csv#LocalCmd	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#LocalCmd(name, definition, args) "{{{3$/;"	f
csv#LocalSettings	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#LocalSettings(type) "{{{3$/;"	f
csv#Map	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Map(map, name, definition, ...) "{{{3$/;"	f
csv#MaxColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MaxColumn(list) "{{{3$/;"	f
csv#MaxColumns	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MaxColumns(...) "{{{3$/;"	f
csv#Menu	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Menu(enable) "{{{3$/;"	f
csv#MoveCol	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MoveCol(forward, line, ...) "{{{3$/;"	f
csv#MoveColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MoveColumn(start, stop, ...) range "{{{3$/;"	f
csv#MoveOver	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MoveOver(outer) "{{{3$/;"	f
csv#NewDelimiter	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#NewDelimiter(newdelimiter, firstl, lastl) "{{{3$/;"	f
csv#NewRecord	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#NewRecord(line1, line2, count) "{{{3$/;"	f
csv#NrColumns	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#NrColumns(bang) "{{{3$/;"	f
csv#NumberFormat	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#NumberFormat() "{{{3$/;"	f
csv#OutputFilters	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#OutputFilters(bang) "{{{3$/;"	f
csv#PopStdDevColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PopStdDevColumn(list) "{{{2$/;"	f
csv#PopVarianceColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PopVarianceColumn(list) "{{{2$/;"	f
csv#PrepUnArrangeCol	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PrepUnArrangeCol(first, last) "{{{3$/;"	f
csv#PrepareDoForEachColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PrepareDoForEachColumn(start, stop, bang) range"{{{3$/;"	f
csv#PrepareFolding	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PrepareFolding(add, match)  "{{{3$/;"	f
csv#ProcessFieldValue	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ProcessFieldValue(field) "{{{3$/;"	f
csv#ProgressBar	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ProgressBar(cnt, max) "{{{3$/;"	f
csv#RemoveLastItem	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#RemoveLastItem(count) "{{{3$/;"	f
csv#SameFieldRegion	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SameFieldRegion() "{{{3$/;"	f
csv#SaveOptions	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SaveOptions(list) "{{{3$/;"	f
csv#SearchColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SearchColumn(arg) "{{{3$/;"	f
csv#SetupAutoCmd	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SetupAutoCmd(window,bufnr) "{{{3$/;"	f
csv#SmplStdDevColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SmplStdDevColumn(list) "{{{2$/;"	f
csv#SmplVarianceColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SmplVarianceColumn(list) "{{{2$/;"	f
csv#Sort	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Sort(bang, line1, line2, colnr) range "{{{3$/;"	f
csv#SortComplete	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SortComplete(A,L,P) "{{{3$/;"	f
csv#SortFilter	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SortFilter(a, b) "{{{3$/;"	f
csv#SplitHeaderLine	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SplitHeaderLine(lines, bang, hor) "{{{3$/;"	f
csv#SplitHeaderToggle	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SplitHeaderToggle(hor) "{{{3$/;"	f
csv#SubstituteInColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SubstituteInColumn(command, line1, line2) range "{{{3$/;"	f
csv#SumCSVRow	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SumCSVRow(line, nr) "{{{3$/;"	f
csv#SumColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SumColumn(list) "{{{3$/;"	f
csv#Tabularize	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Tabularize(bang, first, last) "{{{3$/;"	f
csv#Timeout	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Timeout(start) "{{{3$/;"	f
csv#Transpose	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Transpose(line1, line2) "{{{3$/;"	f
csv#UnArrangeCol	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#UnArrangeCol(match) "{{{3$/;"	f
csv#VarianceColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#VarianceColumn(list, is_population) "{{{3$/;"	f
csv#Vertfold	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Vertfold(bang, col) "{{{3$/;"	f
csv#WColumn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#WColumn(...) "{{{3$/;"	f
csv#Warn	autoload/plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Warn(mess) "{{{3$/;"	f
current	autoload/plugged/fzf/src/history.go	/^func (h *History) current() string {$/;"	f	struct:fzf.History	typeref:typename:string
current	autoload/plugged/fzf/src/terminal.go	/^	current  bool$/;"	m	struct:fzf.itemLine	typeref:typename:bool
currentItem	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) currentItem() *Item {$/;"	f	struct:fzf.Terminal	typeref:typename:*Item
current_compiler	autoload/plugged/vim-polyglot/after/compiler/tex.vim	/^		let current_compiler = "latex"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/after/compiler/tex.vim	/^		let current_compiler = b:tex_flavor$/;"	v
current_compiler	autoload/plugged/vim-polyglot/after/compiler/tex.vim	/^		let current_compiler = g:tex_flavor$/;"	v
current_compiler	autoload/plugged/vim-polyglot/after/compiler/tex.vim	/^	let current_compiler = 'make'$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/ant.vim	/^let current_compiler = "ant"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/bdf.vim	/^let current_compiler = "bdf"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/cake.vim	/^let current_compiler = 'cake'$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/cargo.vim	/^let current_compiler = "cargo"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/coffee.vim	/^let current_compiler = 'coffee'$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/credo.vim	/^let current_compiler = 'credo'$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/cryptol.vim	/^let current_compiler = "cryptol"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/cs.vim	/^let current_compiler = "cs"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/cucumber.vim	/^let current_compiler = "cucumber"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/dot.vim	/^let current_compiler = "dot"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/exunit.vim	/^let current_compiler = "exunit"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/fish.vim	/^let current_compiler = 'fish'$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/gleam.vim	/^let current_compiler = "gleam"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/gradle.vim	/^let current_compiler = "gradle"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/gradlew.vim	/^let current_compiler = "gradlew"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/haml.vim	/^let current_compiler = "haml"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/ledger.vim	/^let current_compiler = g:ledger_bin$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/ls.vim	/^let current_compiler = 'ls'$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/mix.vim	/^let current_compiler = 'mix'$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/nim.vim	/^let current_compiler = 'nim'$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/nix-build.vim	/^let current_compiler = 'nix-build'$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/ocaml.vim	/^let current_compiler = "ocaml"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/powershell.vim	/^let current_compiler = "powershell"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/puppet-lint.vim	/^let current_compiler = "puppet-lint"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/python.vim	/^let current_compiler = "python"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/rake.vim	/^let current_compiler = "rake"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/rustc.vim	/^let current_compiler = "rustc"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/sass.vim	/^let current_compiler = "sass"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/sbt.vim	/^let current_compiler = 'sbt'$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/sml.vim	/^let current_compiler = "sml"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/swift.vim	/^let current_compiler = "swiftc"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/tcl.vim	/^let current_compiler = "tcl"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/tidy.vim	/^let current_compiler = "tidy"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/typescript.vim	/^let current_compiler='typescript'$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/zig.vim	/^let current_compiler = "zig"$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/zig_build.vim	/^let current_compiler = 'zig_build'$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/zig_build_exe.vim	/^let current_compiler = 'zig_build_exe'$/;"	v
current_compiler	autoload/plugged/vim-polyglot/compiler/zig_test.vim	/^let current_compiler = 'zig_test'$/;"	v
cursor	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	G	class:mq
cursor	autoload/plugged/fzf/src/history.go	/^	cursor   int$/;"	m	struct:fzf.History	typeref:typename:int
cursorline	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	p	class:CD.show.o
cursors	autoload/plugged/fzf/src/merger.go	/^	cursors []int$/;"	m	struct:fzf.Merger	typeref:typename:[]int
cursors.cancelKey	autoload/plugged/coc.nvim/data/schema.json	/^    "cursors.cancelKey": {$/;"	o	object:properties
cursors.nextKey	autoload/plugged/coc.nvim/data/schema.json	/^    "cursors.nextKey": {$/;"	o	object:properties
cursors.previousKey	autoload/plugged/coc.nvim/data/schema.json	/^    "cursors.previousKey": {$/;"	o	object:properties
cv	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
cw	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
cwd	autoload/plugged/coc.nvim/data/schema.json	/^        "cwd": {$/;"	o	object:definitions.languageServerBase.properties
cwd	autoload/plugged/coc.nvim/data/schema.json	/^        "cwd": {},$/;"	o	object:definitions.languageServerCommand.properties
cwd	autoload/plugged/coc.nvim/data/schema.json	/^        "cwd": {},$/;"	o	object:definitions.languageServerModule.properties
cx	autoload/plugged/fzf/src/terminal.go	/^	cx           int$/;"	m	struct:fzf.Terminal	typeref:typename:int
cy	autoload/plugged/fzf/src/terminal.go	/^	cy           int$/;"	m	struct:fzf.Terminal	typeref:typename:int
cyan	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.color
cyan	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.color
cyanBright	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.color
cyanBright	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.color
cycle	autoload/plugged/fzf/src/options.go	/^	cycle       bool$/;"	m	struct:fzf.previewOpts	typeref:typename:bool
cycle	autoload/plugged/fzf/src/terminal.go	/^	cycle        bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
d	autoload/plug.vim	/^      nnoremap <silent> <buffer> d :set opfunc=<sid>delete_op<cr>g@$/;"	m
d	autoload/plug.vim	/^      xnoremap <silent> <buffer> d :<c-u>call <sid>delete_op(visualmode(), 1)<cr>$/;"	m
d	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
d	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
d	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:yR.k
d	autoload/plugged/coc.nvim/build/index.js	/^`)}function d(g,w){var x=[],E=0;if(!Array.isArray(g)&&typeof g=="object"){var P=Object.keys(g)[0/;"	f	function:AnonymousFunctionb66688921aa00
d	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:zf
d	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
d	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v	class:o
d0	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	c
d2	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
d3	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
dD	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	v
dG	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
dK	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
dN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
dO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
dR	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
dS	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
dW	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
dZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
d_	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	v
dart#ToggleFormatOnSave	autoload/plugged/vim-polyglot/autoload/dart.vim	/^function! dart#ToggleFormatOnSave() abort$/;"	f
dart#analyzer	autoload/plugged/vim-polyglot/autoload/dart.vim	/^function! dart#analyzer(q_args) abort$/;"	f
dart#fmt	autoload/plugged/vim-polyglot/autoload/dart.vim	/^function! dart#fmt(...) abort$/;"	f
dart#resolveUri	autoload/plugged/vim-polyglot/autoload/dart.vim	/^function! dart#resolveUri(uri) abort$/;"	f
dart#setModifiable	autoload/plugged/vim-polyglot/autoload/dart.vim	/^function! dart#setModifiable() abort$/;"	f
dart#tojs	autoload/plugged/vim-polyglot/autoload/dart.vim	/^function! dart#tojs(q_args) abort$/;"	f
db	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	v
db#adapter#ecto#canonicalize	autoload/plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^function! db#adapter#ecto#canonicalize(url) abort$/;"	f
db#adapter#ecto#complete_opaque	autoload/plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^function! db#adapter#ecto#complete_opaque(url) abort$/;"	f
dc	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
dd	autoload/plug.vim	/^      nmap     <silent> <buffer> dd d_$/;"	m
dd	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
debugV2	autoload/plugged/fzf/src/algo/algo.go	/^func debugV2(T []rune, pattern []rune, F []int32, lastIdx int, H []int16, C []int16) {$/;"	f	package:algo
dee	autoload/plugged/coc.nvim/build/index.js	/^`;function AI(r,e){if(On.existsSync(r))return;let t=On.openSync(r,e.flags,e.mode);On.closeSync(t/;"	f
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerBase.properties.cwd
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerCommand.properties.command
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerModule.properties.module
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerModule.properties.runtime
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": "127.0.0.1",$/;"	s	object:definitions.languageServerSocket.properties.host
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": "ipc",$/;"	s	object:definitions.languageServerModule.properties.transport
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": "never",$/;"	s	object:definitions.languageServerBase.properties.revealOutputChannelOn
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": "off",$/;"	s	object:definitions.languageServerBase.properties.trace.server
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": "utf8",$/;"	s	object:definitions.languageServerBase.properties.stdioEncoding
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": 0,$/;"	n	object:definitions.languageServerBase.properties.formatterPriority
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.additionalSchemes
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.filetypes
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.ignoredRootPaths
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.rootPatterns
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerCommand.properties.args
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerModule.properties.args
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerModule.properties.execArgv
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.disableCompletion
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.disableDiagnostics
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.disableDynamicRegister
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.disableSnippetCompletion
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.disableWorkspaceFolders
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.requireRootPattern
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerCommand.properties.detached
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerCommand.properties.shell
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": null,$/;"	z	object:definitions.languageServerBase.properties.env
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": true$/;"	b	object:definitions.languageServerBase.properties.enable
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": true,$/;"	b	object:definitions.languageServerBase.properties.progressOnInitialization
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": {},$/;"	o	object:definitions.languageServerBase.properties.initializationOptions
default	autoload/plugged/coc.nvim/data/schema.json	/^          "default": {},$/;"	o	object:definitions.languageServerBase.properties.settings
default	autoload/plugged/coc.nvim/data/schema.json	/^        "default": { "type": "string" }$/;"	o	object:properties.suggest.completionItemKindLabels.properties
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": " "$/;"	s	object:properties.codeLens.subseparator
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": " "$/;"	s	object:properties.diagnostic.virtualTextPrefix
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": " \\\\ "$/;"	s	object:properties.diagnostic.virtualTextLineSeparator
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "",$/;"	s	object:properties.http.proxy
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "*",$/;"	s	object:properties.list.selectedSignText
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "10MB",$/;"	s	object:properties.coc.preferences.maxFileSize
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "<C-j>",$/;"	s	object:properties.list.nextKeymap
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "<C-k>",$/;"	s	object:properties.list.previousKeymap
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "<C-n>",$/;"	s	object:properties.cursors.nextKey
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "<C-p>",$/;"	s	object:properties.cursors.previousKey
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "<cr>",$/;"	s	object:properties.dialog.confirmKey
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "<esc>",$/;"	s	object:properties.cursors.cancelKey
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": ">",$/;"	s	object:properties.list.indicator
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": ">>"$/;"	s	object:properties.diagnostic.errorSign
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": ">>"$/;"	s	object:properties.diagnostic.hintSign
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": ">>"$/;"	s	object:properties.diagnostic.infoSign
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "A"$/;"	s	object:properties.coc.source.around.shortcut
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "B"$/;"	s	object:properties.coc.source.buffer.shortcut
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "CocFloating",$/;"	s	object:properties.notification.highlightGroup
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "F"$/;"	s	object:properties.coc.source.file.shortcut
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "SNIP",$/;"	s	object:properties.coc.preferences.snippetStatusText
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "Search",$/;"	s	object:properties.list.matchHighlightGroup
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "Search",$/;"	s	object:properties.list.previewHighlightGroup
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "[%source%code] [%severity] %message"$/;"	s	object:properties.diagnostic.format
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "always",$/;"	s	object:properties.diagnostic.enableMessage
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "always",$/;"	s	object:properties.suggest.autoTrigger
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "edit"$/;"	s	object:properties.coc.preferences.jumpCommand
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "float",$/;"	s	object:properties.diagnostic.messageTarget
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "float",$/;"	s	object:properties.signature.target
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "full"$/;"	s	object:properties.list.source.diagnostics.pathFormat
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "hint",$/;"	s	object:properties.diagnostic.level
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "length",$/;"	s	object:properties.suggest.defaultSortMethod
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "more",$/;"	s	object:properties.coc.preferences.messageLevel
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "never",$/;"	s	object:properties.coc.preferences.extensionUpdateCheck
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "npm",$/;"	s	object:properties.npm.binPath
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "preview",$/;"	s	object:properties.suggest.detailField
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "quickfix",$/;"	s	object:properties.coc.preferences.listOfWorkspaceEdit
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "vsplit"$/;"	s	object:properties.refactor.openCommand
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "~",$/;"	s	object:properties.suggest.snippetIndicator
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "‣"$/;"	s	object:properties.codeLens.separator
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": "⚠"$/;"	s	object:properties.diagnostic.warningSign
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 1$/;"	n	object:properties.coc.source.around.priority
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 1$/;"	n	object:properties.coc.source.buffer.priority
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 1,$/;"	n	object:properties.notification.marginRight
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 1,$/;"	n	object:properties.notification.marginTop
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 1,$/;"	n	object:properties.suggest.minTriggerInputLength
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 10$/;"	n	object:properties.coc.source.file.priority
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 10$/;"	n	object:properties.diagnostic.signPriority
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 10,$/;"	n	object:properties.list.height
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 10,$/;"	n	object:properties.notification.maxHeight
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 100$/;"	n	object:properties.suggest.detailMaxLength
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 100,$/;"	n	object:properties.list.interactiveDebounceTime
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 100,$/;"	n	object:properties.suggest.triggerCompletionWait
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 1000$/;"	n	object:properties.diagnostic.highlightOffset
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 12,$/;"	n	object:properties.coc.preferences.previewMaxHeight
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 12,$/;"	n	object:properties.list.maxPreviewHeight
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 20,$/;"	n	object:properties.dialog.maxHeight
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 200$/;"	n	object:properties.diagnostic.messageDelay
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 200$/;"	n	object:properties.suggest.labelMaxLength
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 3$/;"	n	object:properties.diagnostic.virtualTextLines
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 3,$/;"	n	object:properties.refactor.afterContext
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 3,$/;"	n	object:properties.refactor.beforeContext
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 30,$/;"	n	object:properties.notification.minProgressWidth
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 30000,$/;"	n	object:properties.list.limitLines
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 50,$/;"	n	object:properties.suggest.maxCompleteItemCount
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 500,$/;"	n	object:properties.coc.preferences.highlightTimeout
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 500,$/;"	n	object:properties.coc.preferences.willSaveHandlerTimeout
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 500,$/;"	n	object:properties.signature.triggerSignatureWait
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 5000,$/;"	n	object:properties.suggest.timeout
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 60,$/;"	n	object:properties.notification.maxWidth
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 8$/;"	n	object:properties.diagnostic.maxWindowHeight
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 8$/;"	n	object:properties.signature.maxWindowHeight
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 80$/;"	n	object:properties.diagnostic.maxWindowWidth
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 80,$/;"	n	object:properties.dialog.maxWidth
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 80,$/;"	n	object:properties.hover.floatMaxWidth
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 80,$/;"	n	object:properties.signature.maxWindowWidth
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 80,$/;"	n	object:properties.suggest.maxPreviewWidth
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 900,$/;"	n	object:properties.list.signOffset
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": 99,$/;"	n	object:properties.suggest.languageSourcePriority
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	a	object:properties.suggest.invalidInsertCharacters
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [".git", ".hg", ".projections.json"],$/;"	a	object:properties.coc.preferences.rootPatterns
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [".ts", ".js"],$/;"	a	object:properties.coc.source.file.trimSameExts
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": ["\/"],$/;"	a	object:properties.coc.source.file.triggerCharacters
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	a	object:properties.workspace.ignoredFiletypes
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [$/;"	a	object:properties.list.statusLineSegments
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.preferences.formatOnSaveFiletypes
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.preferences.formatOnTypeFiletypes
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.around.disableSyntaxes
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.buffer.disableSyntaxes
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.file.disableSyntaxes
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.file.ignorePatterns
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.list.source.outline.ctagsFilestypes
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.list.source.symbols.excludes
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.workspace.bottomUpFiletypes
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.coc.preferences.currentFunctionSymbolAutoUpdate
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.coc.preferences.formatOnType
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.coc.preferences.useQuickfixForLocations
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.codeLens.enable
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.checkCurrentLine
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.displayByAle
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.refreshOnInsertMode
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.virtualText
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.signature.hideOnTextChange
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.asciiCharactersOnly
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.disableKind
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.disableMenu
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.disableMenuShortcut
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.enablePreselect
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.enablePreview
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.keepCompleteopt
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.numberSelect
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.preferCompleteThanJumpPlaceholder
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.removeDuplicateItems
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.triggerAfterInsertEnter
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.coc.preferences.enableMessageDialog
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.diagnostic.separateRelatedInformationAsDiagnostics
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.list.alignColumns
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.list.previewSplitRight
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.suggest.acceptSuggestionOnCommitCharacter
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.suggest.echodocSupport
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": null$/;"	z	object:properties.coc.preferences.watchmanPath
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": null$/;"	z	object:properties.http.proxyAuthorization
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": null$/;"	z	object:properties.http.proxyCA
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": null,$/;"	z	object:properties.dialog.floatBorderHighlight
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": null,$/;"	z	object:properties.dialog.floatHighlight
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.bracketEnterImprove
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.colorSupport
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.enableFloatHighlight
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.enableMarkdown
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.floatActions
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.previewAutoClose
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.promptInput
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.promptWorkspaceEdit
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.silentAutoupdate
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.snippets.enable
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.around.enable
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.around.firstMatch
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.buffer.enable
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.buffer.firstMatch
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.file.enable
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.diagnostic.enable
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.diagnostic.locationlistUpdate
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.diagnostic.virtualTextCurrentLineOnly
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.http.proxyStrictSSL
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.list.source.diagnostics.includeCode
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.refactor.saveToFile
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.signature.enable
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.signature.preferShownAbove
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.fixInsertedWord
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.floatEnable
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.localityBonus
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.noselect
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.coc.source.buffer.ignoreGitignore
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.coc.source.file.ignoreHidden
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.diagnostic.enableHighlightLineNumber
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.diagnostic.enableSign
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.diagnostic.showDeprecated
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.diagnostic.showUnused
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.dialog.pickerButtonShortcut
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.dialog.pickerButtons
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.hover.autoHide
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.list.extendedSearchMode
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.workspace.workspaceFolderCheckCwd
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": {}$/;"	o	object:properties.diagnostic.filetypeMap
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.languageserver
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.list.insertMappings
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.list.normalMappings
default	autoload/plugged/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.suggest.completionItemKindLabels
default	autoload/plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/([A-Z][a-zA-Z0-9_:]+)[[:space:]]*\\{\/\\1\/f,default\/$/;"	k	langdef:puppet
defaultCommand	autoload/plugged/fzf/src/constants.go	/^var defaultCommand string$/;"	v	package:fzf	typeref:typename:string
defaultEscDelay	autoload/plugged/fzf/src/tui/light.go	/^	defaultEscDelay = 100$/;"	c	package:tui
defaultHeight	autoload/plugged/fzf/src/tui/light.go	/^	defaultHeight = 24$/;"	c	package:tui
defaultHistoryMax	autoload/plugged/fzf/src/constants.go	/^	defaultHistoryMax int = 1000$/;"	c	package:fzf	typeref:typename:int
defaultJumpLabels	autoload/plugged/fzf/src/constants.go	/^	defaultJumpLabels string = "asdfghjklqwertyuiopzxcvbnm1234567890ASDFGHJKLQWERTYUIOPZXCVBNM`~;:,/;"	c	package:fzf	typeref:typename:string
defaultKeymap	autoload/plugged/fzf/src/terminal.go	/^func defaultKeymap() map[tui.Event][]action {$/;"	f	package:fzf	typeref:typename:map[tui.Event][]action
defaultMargin	autoload/plugged/fzf/src/options.go	/^func defaultMargin() [4]sizeSpec {$/;"	f	package:fzf	typeref:typename:[4]sizeSpec
defaultOptions	autoload/plugged/fzf/src/options.go	/^func defaultOptions() *Options {$/;"	f	package:fzf	typeref:typename:*Options
defaultPort	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	G	class:AnonymousFunctionb66688922d400.e
defaultPort	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	S	class:AnonymousFunctionb66688922d400.e
defaultPreviewOpts	autoload/plugged/fzf/src/options.go	/^func defaultPreviewOpts(command string) previewOpts {$/;"	f	package:fzf	typeref:typename:previewOpts
defaultTheme	autoload/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) defaultTheme() *ColorTheme {$/;"	f	unknown:tui.LightRenderer	typeref:typename:*ColorTheme
defaultTheme	autoload/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) defaultTheme() *ColorTheme {$/;"	f	unknown:tui.LightRenderer	typeref:typename:*ColorTheme
defaultTheme	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) defaultTheme() *ColorTheme {$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:*ColorTheme
defaultWidth	autoload/plugged/fzf/src/tui/light.go	/^	defaultWidth  = 80$/;"	c	package:tui
default_role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let default_role = {$/;"	v
default_role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let default_role = {}$/;"	v
defaults	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	G	class:Ym
defaults	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:l
defaults	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:ta.constructor.n
definition	autoload/plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*define[[:space:]]*([a-z][a-zA-Z0-9_:\\-]+)\/\\1\/d,definition\/$/;"	k	langdef:puppet
definitions	autoload/plugged/coc.nvim/data/schema.json	/^  "definitions": {$/;"	o
del	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
del	autoload/plugged/coc.nvim/build/index.js	/^`}del(e){return this.o.del(e)}link(e,t,i){let n;if(this.options.sanitize){try{n=decodeURICompone/;"	m	class:FB
delChar	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) delChar() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
delete	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	m	class:r
delete	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:d0
delete	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:OW.s.c
delete	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:r0
deleteFile	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	m	class:r
delimNil	autoload/plugged/fzf/src/reader.go	/^	delimNil bool$/;"	m	struct:fzf.Reader	typeref:typename:bool
delimiter	autoload/plugged/fzf/src/pattern.go	/^	delimiter     Delimiter$/;"	m	struct:fzf.Pattern	typeref:typename:Delimiter
delimiter	autoload/plugged/fzf/src/terminal.go	/^	delimiter    Delimiter$/;"	m	struct:fzf.Terminal	typeref:typename:Delimiter
delimiterRegexp	autoload/plugged/fzf/src/options.go	/^func delimiterRegexp(str string) Delimiter {$/;"	f	package:fzf	typeref:typename:Delimiter
dependencies	autoload/plugged/coc.nvim/package.json	/^  "dependencies": {}$/;"	o
depth	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	p	class:r.u.L
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Absolute path of javascript file, should works in IPC mode"$/;"	s	object:definitions.languageServerModule.properties.module
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Absolute path of node runtime."$/;"	s	object:definitions.languageServerModule.properties.runtime
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Absolute root paths that language server should not use as rootPath, h/;"	s	object:definitions.languageServerBase.properties.ignoredRootPaths
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Additional uri schemes, default schemes including file & untitled.",$/;"	s	object:definitions.languageServerBase.properties.additionalSchemes
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Arguments of command",$/;"	s	object:definitions.languageServerCommand.properties.args
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Argv passed to node when using module, normally used for debugging, ex/;"	s	object:definitions.languageServerModule.properties.execArgv
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Configure message level to show the output channel buffer",$/;"	s	object:definitions.languageServerBase.properties.revealOutputChannelOn
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Detach the languageserver process"$/;"	s	object:definitions.languageServerCommand.properties.detached
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Disable completion feature for this languageserver."$/;"	s	object:definitions.languageServerBase.properties.disableCompletion
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Disable completion snippet feature for this languageserver, the langua/;"	s	object:definitions.languageServerBase.properties.disableSnippetCompletion
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Disable dynamic registerCapability feature for this languageserver to /;"	s	object:definitions.languageServerBase.properties.disableDynamicRegister
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Disable handle diagnostics for this languageserver."$/;"	s	object:definitions.languageServerBase.properties.disableDiagnostics
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Disable workspaceFolders feature for this languageserver."$/;"	s	object:definitions.languageServerBase.properties.disableWorkspaceFolders
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Enable progress report on languageserver initialize."$/;"	s	object:definitions.languageServerBase.properties.progressOnInitialization
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Encoding used for stdio of child process."$/;"	s	object:definitions.languageServerBase.properties.stdioEncoding
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Environment variables for child process."$/;"	s	object:definitions.languageServerBase.properties.env
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Executable in $PATH to start languageserver, should not used with modu/;"	s	object:definitions.languageServerCommand.properties.command
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Extra arguments of module",$/;"	s	object:definitions.languageServerModule.properties.args
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Host of server"$/;"	s	object:definitions.languageServerSocket.properties.host
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "If true, doesn't start server when root pattern not found."$/;"	s	object:definitions.languageServerBase.properties.requireRootPattern
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Port number of socket server"$/;"	s	object:definitions.languageServerSocket.properties.port
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Port number used when transport is 'socket'"$/;"	s	object:definitions.languageServerModule.properties.transportPort
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Priority of this languageserver's fomatter."$/;"	s	object:definitions.languageServerBase.properties.formatterPriority
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Root patterns used to resolve rootPath from current file, default to w/;"	s	object:definitions.languageServerBase.properties.rootPatterns
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Settings of languageserver"$/;"	s	object:definitions.languageServerBase.properties.settings
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Supported filetypes, add * in array for all filetypes.",$/;"	s	object:definitions.languageServerBase.properties.filetypes
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Trace level of communication between server and client"$/;"	s	object:definitions.languageServerBase.properties.trace.server
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Transport kind used by server, could be 'ipc', 'stdio', 'socket' and '/;"	s	object:definitions.languageServerModule.properties.transport
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Use shell for process"$/;"	s	object:definitions.languageServerCommand.properties.shell
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "Working directory of languageserver, absolute path or relative to work/;"	s	object:definitions.languageServerBase.properties.cwd
description	autoload/plugged/coc.nvim/data/schema.json	/^          "description": "initializationOptions passed to languageserver"$/;"	s	object:definitions.languageServerBase.properties.initializationOptions
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "A map between buffer filetype and the filetype assigned to diagnostics. To/;"	s	object:properties.diagnostic.filetypeMap
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Add preview option to completeopt, default: false.",$/;"	s	object:properties.suggest.enablePreview
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "An array of statusline segments that will be used to draw the status line /;"	s	object:properties.list.statusLineSegments
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Auto close preview window on cursor move.",$/;"	s	object:properties.coc.preferences.previewAutoClose
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Automatically hide hover float window on CursorMove or InsertEnter."$/;"	s	object:properties.hover.autoHide
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Automatically update the value of b:coc_current_function on CursorHold eve/;"	s	object:properties.coc.preferences.currentFunctionSymbolAutoUpdate
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Boost suggestions that appear closer to the cursor position.",$/;"	s	object:properties.suggest.localityBonus
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "CA (file) to use as Certificate Authority",$/;"	s	object:properties.http.proxyCA
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Command or absolute path to npm or yarn."$/;"	s	object:properties.npm.binPath
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Command used for location jump, like goto definition, goto references etc./;"	s	object:properties.coc.preferences.jumpCommand
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Confirm completion instead of jump to next placeholder when completion is /;"	s	object:properties.suggest.preferCompleteThanJumpPlaceholder
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Confirm key for confirm selection used by menu and picker, you can always /;"	s	object:properties.dialog.confirmKey
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Controls whether suggestions should be accepted on commit characters. For /;"	s	object:properties.suggest.acceptSuggestionOnCommitCharacter
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Controls whether the proxy server certificate should be verified against t/;"	s	object:properties.http.proxyStrictSSL
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Custom keymappings on insert mode."$/;"	s	object:properties.list.insertMappings
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Custom keymappings on normal mode."$/;"	s	object:properties.list.normalMappings
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Debouce time for input change on interactive mode."$/;"	s	object:properties.list.interactiveDebounceTime
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Decide how the filepath is shown in the list.",$/;"	s	object:properties.list.source.diagnostics.pathFormat
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Default sorting behavior for suggested completion items.",$/;"	s	object:properties.suggest.defaultSortMethod
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Define the diagnostic format that shown in float window or echoed, availab/;"	s	object:properties.diagnostic.format
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Diagnostic message target.",$/;"	s	object:properties.diagnostic.messageTarget
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Dictionary of languageservers, key is used as id of languageserver.",$/;"	s	object:properties.languageserver
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Disable shortcut of completion source in menu.",$/;"	s	object:properties.suggest.disableMenuShortcut
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Enable codeLens feature, require neovim with set virtual text feature.",$/;"	s	object:properties.codeLens.enable
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Enable color highlight if language server support it.",$/;"	s	object:properties.coc.preferences.colorSupport
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Enable diagnostic refresh on insert mode, default false.",$/;"	s	object:properties.diagnostic.refreshOnInsertMode
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Enable extended search mode which allows multiple search patterns delimite/;"	s	object:properties.list.extendedSearchMode
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Enable floating window for documentation when possible.",$/;"	s	object:properties.suggest.floatEnable
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Enable highlight for floating window.",$/;"	s	object:properties.coc.preferences.enableFloatHighlight
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Enable highlighting line numbers for diagnostics, only works with neovim a/;"	s	object:properties.diagnostic.enableHighlightLineNumber
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Enable messages shown in notification dialog."$/;"	s	object:properties.coc.preferences.enableMessageDialog
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Enable preselect feature of LSP, only works on neovim",$/;"	s	object:properties.suggest.enablePreselect
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Enable signature help when trigger character typed, require restart servic/;"	s	object:properties.signature.enable
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Enable signs for diagnostics."$/;"	s	object:properties.diagnostic.enableSign
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Filetypes that should be ignored for resolve workspace folder.",$/;"	s	object:properties.workspace.ignoredFiletypes
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Filetypes that should have workspace folder should resolved from base dire/;"	s	object:properties.workspace.bottomUpFiletypes
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Filetypes that should run format on save.",$/;"	s	object:properties.coc.preferences.formatOnSaveFiletypes
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Filetypes that should run format on typing. Only take effect when `coc.pre/;"	s	object:properties.coc.preferences.formatOnTypeFiletypes
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Filetypes that should use ctags for outline instead of language server.",$/;"	s	object:properties.list.source.outline.ctagsFilestypes
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Filter complete items by first letter strict match.",$/;"	s	object:properties.coc.source.around.firstMatch
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Filter complete items by first letter strict match.",$/;"	s	object:properties.coc.source.buffer.firstMatch
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Height of split list window."$/;"	s	object:properties.list.height
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Hide signature float window when text changed on insert mode.",$/;"	s	object:properties.signature.hideOnTextChange
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Highlight group for border of dialog window\/popup, default to 'CocFloatin/;"	s	object:properties.dialog.floatBorderHighlight
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Highlight group for dialog window\/popup, default to 'CocFloating'"$/;"	s	object:properties.dialog.floatHighlight
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Highlight group of notification dialog."$/;"	s	object:properties.notification.highlightGroup
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Highlight group used for highlight the range in preview window."$/;"	s	object:properties.list.previewHighlightGroup
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Highlight group used for matched texts in list window."$/;"	s	object:properties.list.matchHighlightGroup
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Highlight timeout for buffer in floating window."$/;"	s	object:properties.coc.preferences.highlightTimeout
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "How long to wait (in milliseconds) before displaying the diagnostic messag/;"	s	object:properties.diagnostic.messageDelay
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "How should completion be triggered",$/;"	s	object:properties.suggest.autoTrigger
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Ignore completion for hidden files"$/;"	s	object:properties.coc.source.file.ignoreHidden
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Ignore git ignored files for buffer words"$/;"	s	object:properties.coc.source.buffer.ignoreGitignore
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Ignore patterns of matcher",$/;"	s	object:properties.coc.source.file.ignorePatterns
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Improve enter inside bracket `<> {} [] ()` by add new empty line below and/;"	s	object:properties.coc.preferences.bracketEnterImprove
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Input number to select complete item, works on neovim >= 0.4.0 only.",$/;"	s	object:properties.suggest.numberSelect
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Interval for check extension update, could be daily, weekly, never",$/;"	s	object:properties.coc.preferences.extensionUpdateCheck
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Invalid character for strip valid word when inserting text of complete ite/;"	s	object:properties.suggest.invalidInsertCharacters
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Key used for cancel cursors session."$/;"	s	object:properties.cursors.cancelKey
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Key used for jump to next cursors position. "$/;"	s	object:properties.cursors.nextKey
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Key used for jump to previous cursors position."$/;"	s	object:properties.cursors.previousKey
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Key used for select next line on insert mode."$/;"	s	object:properties.list.nextKeymap
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Key used for select previous line on insert mode."$/;"	s	object:properties.list.previousKeymap
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Limit lines for list buffer."$/;"	s	object:properties.list.limitLines
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "List should contains changed locations after workspace edit, default to vi/;"	s	object:properties.coc.preferences.listOfWorkspaceEdit
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Make inserted word replace word characters after cursor position.",$/;"	s	object:properties.suggest.fixInsertedWord
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Margin right for notification dialog."$/;"	s	object:properties.notification.marginRight
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Margin top for notification dialog."$/;"	s	object:properties.notification.marginTop
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Max height for preview window of list."$/;"	s	object:properties.list.maxPreviewHeight
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Max height of preview window for hover."$/;"	s	object:properties.coc.preferences.previewMaxHeight
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Max items count for source priority bigger than or equal to 90."$/;"	s	object:properties.suggest.highPrioritySourceLimit
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Max items count for source priority lower than 90."$/;"	s	object:properties.suggest.lowPrioritySourceLimit
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Max length of abbr that shown as label of complete item.",$/;"	s	object:properties.suggest.labelMaxLength
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Max length of detail that should be shown in popup menu.",$/;"	s	object:properties.suggest.detailMaxLength
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Maximum content height of notification dialog."$/;"	s	object:properties.notification.maxHeight
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Maximum content width of notification dialog."$/;"	s	object:properties.notification.maxWidth
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Maximum file size in bytes that coc.nvim should handle, default '10MB'"$/;"	s	object:properties.coc.preferences.maxFileSize
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Maximum height of diagnostics floating window.",$/;"	s	object:properties.diagnostic.maxWindowHeight
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Maximum height of dialog window."$/;"	s	object:properties.dialog.maxHeight
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Maximum height of signature float window (or popup on vim8).",$/;"	s	object:properties.signature.maxWindowHeight
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Maximum number of complete items shown in vim"$/;"	s	object:properties.suggest.maxCompleteItemCount
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Maximum width of diagnostics floating window.",$/;"	s	object:properties.diagnostic.maxWindowWidth
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Maximum width of dialog window."$/;"	s	object:properties.dialog.maxWidth
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Maximum width of floating preview window."$/;"	s	object:properties.suggest.maxPreviewWidth
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Maximum width of hover float window, not bigger than 80."$/;"	s	object:properties.hover.floatMaxHeight
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Maximum width of hover float window, not bigger than 80."$/;"	s	object:properties.hover.floatMaxWidth
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Maximum width of signature float window (or popup on vim8)."$/;"	s	object:properties.signature.maxWindowWidth
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Message level for filter echoed messages, could be 'more', 'warning' and '/;"	s	object:properties.coc.preferences.messageLevel
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Minimum width of progress notification."$/;"	s	object:properties.notification.minProgressWidth
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Mininal input length for trigger completion, default 1"$/;"	s	object:properties.suggest.minTriggerInputLength
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Not make vim select first item on completion start",$/;"	s	object:properties.suggest.noselect
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Not open split window with update status when performing auto update.",$/;"	s	object:properties.coc.preferences.silentAutoupdate
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Offset number of buffer.addHighlight, neovim only.",$/;"	s	object:properties.diagnostic.highlightOffset
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Only show virtualText diagnostic on current cursor line",$/;"	s	object:properties.diagnostic.virtualTextCurrentLineOnly
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Open command for refactor window.",$/;"	s	object:properties.refactor.openCommand
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Patterns of minimatch for filepath to execlude from symbols list.",$/;"	s	object:properties.list.source.symbols.excludes
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Print num lines of leading context before each match."$/;"	s	object:properties.refactor.beforeContext
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Print num lines of trailing context after each match."$/;"	s	object:properties.refactor.afterContext
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Priority of diagnostic signs, default to 10",$/;"	s	object:properties.diagnostic.signPriority
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Priority of language sources."$/;"	s	object:properties.suggest.languageSourcePriority
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Prompt confirm from user when apply workspace edit for unloaded files.",$/;"	s	object:properties.coc.preferences.promptWorkspaceEdit
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Remove completion items with duplicated word for all sources, snippet item/;"	s	object:properties.suggest.removeDuplicateItems
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Remove kind field from vim complete item.",$/;"	s	object:properties.suggest.disableKind
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Remove menu field from vim complete item.",$/;"	s	object:properties.suggest.disableMenu
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Root patterns to resolve workspaceFolder from parent folders of opened fil/;"	s	object:properties.coc.preferences.rootPatterns
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Save to file when write refactor buffer with ':noa wa' command, set to fal/;"	s	object:properties.refactor.saveToFile
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Separate related information as diagnostics"$/;"	s	object:properties.diagnostic.separateRelatedInformationAsDiagnostics
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Separator text for codeLens in virtual text",$/;"	s	object:properties.codeLens.separator
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Set custom labels to completion items' kinds.",$/;"	s	object:properties.suggest.completionItemKindLabels
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Set to false to disable diagnostic display",$/;"	s	object:properties.diagnostic.enable
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Set to false to disable float\/popup support for actions menu, won't work /;"	s	object:properties.coc.preferences.floatActions
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Set to false to disable snippets support.",$/;"	s	object:properties.coc.preferences.snippets.enable
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Set to true to enable format on type",$/;"	s	object:properties.coc.preferences.formatOnType
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Show buttons for picker dialog window\/popup."$/;"	s	object:properties.dialog.pickerButtons
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Show deprecated variables"$/;"	s	object:properties.diagnostic.showDeprecated
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Show shortcut in buttons of picker dialog window\/popup, used when dialog./;"	s	object:properties.dialog.pickerButtonShortcut
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Show signature help float window above cursor when possible, require resta/;"	s	object:properties.signature.preferShownAbove
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Show unused variables"$/;"	s	object:properties.diagnostic.showUnused
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Sign offset of list, should be different from other plugins."$/;"	s	object:properties.list.signOffset
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Sign text for selected lines."$/;"	s	object:properties.list.selectedSignText
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Subseparator between codeLenses in virtual text",$/;"	s	object:properties.codeLens.subseparator
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Suggest ASCII characters only",$/;"	s	object:properties.suggest.asciiCharactersOnly
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Target of signature help, use float when possible by default.",$/;"	s	object:properties.signature.target
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Target to show hover information, default is floating window when possible/;"	s	object:properties.hover.target
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Tell the language server that markdown text format is supported, note that/;"	s	object:properties.coc.preferences.enableMarkdown
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Text of error sign",$/;"	s	object:properties.diagnostic.errorSign
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Text of hint sign",$/;"	s	object:properties.diagnostic.hintSign
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Text of info sign",$/;"	s	object:properties.diagnostic.infoSign
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Text of warning sign",$/;"	s	object:properties.diagnostic.warningSign
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Text shown in statusline to indicate snippet session is activated."$/;"	s	object:properties.coc.preferences.snippetStatusText
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "The character used as first character in prompt line"$/;"	s	object:properties.list.indicator
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "The character used in abbr of complete item to indicate the item could be /;"	s	object:properties.suggest.snippetIndicator
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "The number of non empty lines from a diagnostic to display",$/;"	s	object:properties.diagnostic.virtualTextLines
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "The prefix added virtual text diagnostics",$/;"	s	object:properties.diagnostic.virtualTextPrefix
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "The proxy setting to use. If not set, will be inherited from the `http_pro/;"	s	object:properties.http.proxy
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "The text that will mark a line end from the diagnostic message",$/;"	s	object:properties.diagnostic.virtualTextLineSeparator
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "The value to send as the `Proxy-Authorization` header for every network re/;"	s	object:properties.http.proxyAuthorization
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Timeout for completion, in miliseconds."$/;"	s	object:properties.suggest.timeout
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Timeout for trigger signature help, in miliseconds."$/;"	s	object:properties.signature.triggerSignatureWait
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Trigger completion after InsertEnter, auto trigger should be 'always' to e/;"	s	object:properties.suggest.triggerAfterInsertEnter
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Trim same extension on file completion",$/;"	s	object:properties.coc.source.file.trimSameExts
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Update locationlist on diagnostics change, only works with locationlist op/;"	s	object:properties.diagnostic.locationlistUpdate
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Use Ale for display diagnostics in vim, will disable coc for display diagn/;"	s	object:properties.diagnostic.displayByAle
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Use NeoVim virtual text to display diagnostics",$/;"	s	object:properties.diagnostic.virtualText
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Use prompt buffer in float window for user input.",$/;"	s	object:properties.coc.preferences.promptInput
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Use vim's quickfix list for jump locations,\\n need restart on change.",$/;"	s	object:properties.coc.preferences.useQuickfixForLocations
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Use vsplit for preview window."$/;"	s	object:properties.list.previewSplitRight
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Used for filter diagnostics by diagnostic severity.",$/;"	s	object:properties.diagnostic.level
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Wait time between text change and completion start, cancel completion when/;"	s	object:properties.suggest.triggerCompletionWait
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "When enabled, add function signature to user_data.signature to support ech/;"	s	object:properties.suggest.echodocSupport
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "When enabled, completeopt is not overriden, auto completion will be disabl/;"	s	object:properties.suggest.keepCompleteopt
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "When enabled, show all diagnostics of current line if there are none at th/;"	s	object:properties.diagnostic.checkCurrentLine
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "When to enable show messages of diagnostics.",$/;"	s	object:properties.diagnostic.enableMessage
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Where to show the detail text of CompleteItem from LS.",$/;"	s	object:properties.suggest.detailField
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Whether the cwd directory should be checked first when resolving workspace/;"	s	object:properties.workspace.workspaceFolderCheckCwd
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Whether to align lists in columns, default: `false`"$/;"	s	object:properties.list.alignColumns
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Whether to show the diagnostic code in the list.",$/;"	s	object:properties.list.source.diagnostics.includeCode
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "Will save handler timeout"$/;"	s	object:properties.coc.preferences.willSaveHandlerTimeout
description	autoload/plugged/coc.nvim/data/schema.json	/^      "description": "executable path for https:\/\/facebook.github.io\/watchman\/, detected fro/;"	s	object:properties.coc.preferences.watchmanPath
description	autoload/plugged/coc.nvim/data/schema.json	/^  "description": "Configuration file for coc.nvim",$/;"	s
description	autoload/plugged/coc.nvim/package.json	/^  "description": "LSP based intellisense engine for neovim & vim8.",$/;"	s
deselectItem	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) deselectItem(item *Item) {$/;"	f	struct:fzf.Terminal
deselectItemChanged	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) deselectItemChanged(item *Item) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
destroy	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	m	class:AnonymousFunctionb66688922d400.e
detach	autoload/plugged/coc.nvim/build/index.js	/^`))}get attached(){return this._attached}detach(){this._attached=!1,z(this.disposables),this.dis/;"	m	class:o0
detached	autoload/plugged/coc.nvim/data/schema.json	/^        "detached": {$/;"	o	object:definitions.languageServerCommand.properties
detail	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892ff00.e.u
detect_filetypes	autoload/plugged/vim-polyglot/scripts/build	/^def detect_filetypes(glob)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
detect_filetypes_str	autoload/plugged/vim-polyglot/scripts/build	/^def detect_filetypes_str(contents)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
dev	autoload/plugged/vim-polyglot/Makefile	/^dev:$/;"	t
devDependencies	autoload/plugged/coc.nvim/package.json	/^  "devDependencies": {},$/;"	o
devPrefixes	autoload/plugged/fzf/src/tui/ttyname_unix.go	/^var devPrefixes = [...]string{"\/dev\/pts\/", "\/dev\/"}$/;"	v	package:tui
dg	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
dhe	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
diagnostic.checkCurrentLine	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.checkCurrentLine": {$/;"	o	object:properties
diagnostic.displayByAle	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.displayByAle": {$/;"	o	object:properties
diagnostic.enable	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.enable": {$/;"	o	object:properties
diagnostic.enableHighlightLineNumber	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.enableHighlightLineNumber": {$/;"	o	object:properties
diagnostic.enableMessage	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.enableMessage": {$/;"	o	object:properties
diagnostic.enableSign	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.enableSign": {$/;"	o	object:properties
diagnostic.errorSign	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.errorSign": {$/;"	o	object:properties
diagnostic.filetypeMap	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.filetypeMap": {$/;"	o	object:properties
diagnostic.format	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.format": {$/;"	o	object:properties
diagnostic.highlightOffset	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.highlightOffset": {$/;"	o	object:properties
diagnostic.hintSign	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.hintSign": {$/;"	o	object:properties
diagnostic.infoSign	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.infoSign": {$/;"	o	object:properties
diagnostic.level	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.level": {$/;"	o	object:properties
diagnostic.locationlistUpdate	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.locationlistUpdate": {$/;"	o	object:properties
diagnostic.maxWindowHeight	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.maxWindowHeight": {$/;"	o	object:properties
diagnostic.maxWindowWidth	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.maxWindowWidth": {$/;"	o	object:properties
diagnostic.messageDelay	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.messageDelay": {$/;"	o	object:properties
diagnostic.messageTarget	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.messageTarget": {$/;"	o	object:properties
diagnostic.refreshOnInsertMode	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.refreshOnInsertMode": {$/;"	o	object:properties
diagnostic.separateRelatedInformationAsDiagnostics	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.separateRelatedInformationAsDiagnostics": {$/;"	o	object:properties
diagnostic.showDeprecated	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.showDeprecated": {$/;"	o	object:properties
diagnostic.showUnused	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.showUnused": {$/;"	o	object:properties
diagnostic.signPriority	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.signPriority": {$/;"	o	object:properties
diagnostic.virtualText	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.virtualText": {$/;"	o	object:properties
diagnostic.virtualTextCurrentLineOnly	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.virtualTextCurrentLineOnly": {$/;"	o	object:properties
diagnostic.virtualTextLineSeparator	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.virtualTextLineSeparator": {$/;"	o	object:properties
diagnostic.virtualTextLines	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.virtualTextLines": {$/;"	o	object:properties
diagnostic.virtualTextPrefix	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.virtualTextPrefix": {$/;"	o	object:properties
diagnostic.warningSign	autoload/plugged/coc.nvim/data/schema.json	/^    "diagnostic.warningSign": {$/;"	o	object:properties
diagnostics	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb666889210100.e.o
dialog.confirmKey	autoload/plugged/coc.nvim/data/schema.json	/^    "dialog.confirmKey": {$/;"	o	object:properties
dialog.floatBorderHighlight	autoload/plugged/coc.nvim/data/schema.json	/^    "dialog.floatBorderHighlight": {$/;"	o	object:properties
dialog.floatHighlight	autoload/plugged/coc.nvim/data/schema.json	/^    "dialog.floatHighlight": {$/;"	o	object:properties
dialog.maxHeight	autoload/plugged/coc.nvim/data/schema.json	/^    "dialog.maxHeight": {$/;"	o	object:properties
dialog.maxWidth	autoload/plugged/coc.nvim/data/schema.json	/^    "dialog.maxWidth": {$/;"	o	object:properties
dialog.pickerButtonShortcut	autoload/plugged/coc.nvim/data/schema.json	/^    "dialog.pickerButtonShortcut": {$/;"	o	object:properties
dialog.pickerButtons	autoload/plugged/coc.nvim/data/schema.json	/^    "dialog.pickerButtons": {$/;"	o	object:properties
did_c_syn_inits	autoload/plugged/vim-polyglot/syntax/llvm.vim	/^    let did_c_syn_inits = 1$/;"	v
did_c_syn_inits	autoload/plugged/vim-polyglot/syntax/mlir.vim	/^    let did_c_syn_inits = 1$/;"	v
did_c_syn_inits	autoload/plugged/vim-polyglot/syntax/tablegen.vim	/^    let did_c_syn_inits = 1$/;"	v
did_cql_syn_inits	autoload/plugged/vim-polyglot/syntax/cql.vim	/^    let did_cql_syn_inits = 1$/;"	v
did_cry_syntax_inits	autoload/plugged/vim-polyglot/syntax/cryptol.vim	/^    let did_cry_syntax_inits = 1$/;"	v
did_css_syn_inits	autoload/plugged/vim-polyglot/syntax/stylus.vim	/^    let did_css_syn_inits = 1$/;"	v
did_dot_syntax_inits	autoload/plugged/vim-polyglot/syntax/dot.vim	/^    let did_dot_syntax_inits = 1$/;"	v
did_eighth_syntax_inits	autoload/plugged/vim-polyglot/syntax/8th.vim	/^    let did_eighth_syntax_inits=1$/;"	v
did_fs_syntax_inits	autoload/plugged/vim-polyglot/syntax/fsharp.vim	/^        let did_fs_syntax_inits = 1$/;"	v
did_gnuplot_syntax_inits	autoload/plugged/vim-polyglot/syntax/gnuplot.vim	/^    let did_gnuplot_syntax_inits = 1$/;"	v
did_haxe_syn_inits	autoload/plugged/vim-polyglot/syntax/haxe.vim	/^    let did_haxe_syn_inits = 1$/;"	v
did_install_default_menus	autoload/plugged/vim-polyglot/extras/menu.vim	/^let did_install_default_menus = 1$/;"	v
did_install_syntax_menu	autoload/plugged/vim-polyglot/extras/menu.vim	/^  let did_install_syntax_menu = 1$/;"	v
did_javascript_syn_inits	autoload/plugged/vim-polyglot/extras/flow.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	autoload/plugged/vim-polyglot/extras/jsdoc.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	autoload/plugged/vim-polyglot/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_load_filetypes	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^let did_load_filetypes = 1$/;"	v
did_load_filetypes	autoload/plugged/vim-polyglot/extras/filetype.vim	/^let did_load_filetypes = 1$/;"	v
did_load_polyglot	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^let did_load_polyglot = 1$/;"	v
did_lua_syn_inits	autoload/plugged/vim-polyglot/syntax/lua.vim	/^    let did_lua_syn_inits = 1$/;"	v
did_mako_syn_inits	autoload/plugged/vim-polyglot/syntax/mako.vim	/^    let did_mako_syn_inits = 1$/;"	v
did_mmp_syntax_inits	autoload/plugged/vim-polyglot/syntax/mmp.vim	/^  let did_mmp_syntax_inits=1$/;"	v
did_nim_syn_inits	autoload/plugged/vim-polyglot/syntax/nim.vim	/^    let did_nim_syn_inits = 1$/;"	v
did_octave_syntax_inits	autoload/plugged/vim-polyglot/syntax/octave.vim	/^    let did_octave_syntax_inits = 1$/;"	v
did_proto_syn_inits	autoload/plugged/vim-polyglot/syntax/fbs.vim	/^    let did_proto_syn_inits = 1$/;"	v
did_proto_syn_inits	autoload/plugged/vim-polyglot/syntax/proto.vim	/^    let did_proto_syn_inits = 1$/;"	v
did_ps1_syn_inits	autoload/plugged/vim-polyglot/syntax/ps1.vim	/^		let did_ps1_syn_inits = 1$/;"	v
did_python_syn_inits	autoload/plugged/vim-polyglot/syntax/python.vim	/^        let did_python_syn_inits = 1$/;"	v
did_qml_syn_inits	autoload/plugged/vim-polyglot/syntax/qml.vim	/^    let did_qml_syn_inits = 1$/;"	v
did_racket_syntax_inits	autoload/plugged/vim-polyglot/syntax/racket.vim	/^    let did_racket_syntax_inits = 1$/;"	v
did_raku_syntax_inits	autoload/plugged/vim-polyglot/syntax/raku.vim	/^        let did_raku_syntax_inits = 1$/;"	v
did_reva_syntax_inits	autoload/plugged/vim-polyglot/syntax/reva.vim	/^    let did_reva_syntax_inits=1$/;"	v
did_rhelp_syntax_inits	autoload/plugged/vim-polyglot/syntax/rhelp.vim	/^    let did_rhelp_syntax_inits = 1$/;"	v
did_sexplib_syntax_inits	autoload/plugged/vim-polyglot/syntax/sexplib.vim	/^    let did_sexplib_syntax_inits = 1$/;"	v
did_tapverboseoutput_syntax_inits	autoload/plugged/vim-polyglot/syntax/tap.vim	/^  let did_tapverboseoutput_syntax_inits = 1$/;"	v
did_thrift_syn_inits	autoload/plugged/vim-polyglot/syntax/thrift.vim	/^    let did_thrift_syn_inits = 1$/;"	v
did_toolbar_tmenu	autoload/plugged/vim-polyglot/extras/menu.vim	/^  let did_toolbar_tmenu = 1$/;"	v
did_tptp_syntax_inits	autoload/plugged/vim-polyglot/syntax/tptp.vim	/^    let did_tptp_syntax_inits = 1$/;"	v
did_twig_syn_inits	autoload/plugged/vim-polyglot/syntax/twig.vim	/^    let did_twig_syn_inits = 1$/;"	v
did_txt_syn_inits	autoload/plugged/vim-polyglot/syntax/textile.vim	/^        let did_txt_syn_inits = 1$/;"	v
did_typescript_hilink	autoload/plugged/vim-polyglot/syntax/common.vim	/^let did_typescript_hilink = 1$/;"	v
did_u_syntax_inits	autoload/plugged/vim-polyglot/syntax/unison.vim	/^    let did_u_syntax_inits = 1$/;"	v
did_vbnet_syntax_inits	autoload/plugged/vim-polyglot/syntax/vbnet.vim	/^        let did_vbnet_syntax_inits = 1$/;"	v
did_velocity_syn_inits	autoload/plugged/vim-polyglot/syntax/velocity.vim	/^    let did_velocity_syn_inits = 1$/;"	v
die	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
dim	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.modifier
dim	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.modifier
dirty	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	G	class:o0
disableCompletion	autoload/plugged/coc.nvim/data/schema.json	/^        "disableCompletion": {$/;"	o	object:definitions.languageServerBase.properties
disableCompletion	autoload/plugged/coc.nvim/data/schema.json	/^        "disableCompletion": {},$/;"	o	object:definitions.languageServerCommand.properties
disableCompletion	autoload/plugged/coc.nvim/data/schema.json	/^        "disableCompletion": {},$/;"	o	object:definitions.languageServerModule.properties
disableCompletion	autoload/plugged/coc.nvim/data/schema.json	/^        "disableCompletion": {},$/;"	o	object:definitions.languageServerSocket.properties
disableDiagnostics	autoload/plugged/coc.nvim/data/schema.json	/^        "disableDiagnostics": {$/;"	o	object:definitions.languageServerBase.properties
disableDiagnostics	autoload/plugged/coc.nvim/data/schema.json	/^        "disableDiagnostics": {},$/;"	o	object:definitions.languageServerCommand.properties
disableDiagnostics	autoload/plugged/coc.nvim/data/schema.json	/^        "disableDiagnostics": {},$/;"	o	object:definitions.languageServerModule.properties
disableDiagnostics	autoload/plugged/coc.nvim/data/schema.json	/^        "disableDiagnostics": {},$/;"	o	object:definitions.languageServerSocket.properties
disableDynamicRegister	autoload/plugged/coc.nvim/data/schema.json	/^        "disableDynamicRegister": {$/;"	o	object:definitions.languageServerBase.properties
disableDynamicRegister	autoload/plugged/coc.nvim/data/schema.json	/^        "disableDynamicRegister": {},$/;"	o	object:definitions.languageServerCommand.properties
disableDynamicRegister	autoload/plugged/coc.nvim/data/schema.json	/^        "disableDynamicRegister": {},$/;"	o	object:definitions.languageServerModule.properties
disableDynamicRegister	autoload/plugged/coc.nvim/data/schema.json	/^        "disableDynamicRegister": {},$/;"	o	object:definitions.languageServerSocket.properties
disableSnippetCompletion	autoload/plugged/coc.nvim/data/schema.json	/^        "disableSnippetCompletion": {$/;"	o	object:definitions.languageServerBase.properties
disableSnippetCompletion	autoload/plugged/coc.nvim/data/schema.json	/^        "disableSnippetCompletion": {},$/;"	o	object:definitions.languageServerCommand.properties
disableSnippetCompletion	autoload/plugged/coc.nvim/data/schema.json	/^        "disableSnippetCompletion": {},$/;"	o	object:definitions.languageServerModule.properties
disableSnippetCompletion	autoload/plugged/coc.nvim/data/schema.json	/^        "disableSnippetCompletion": {},$/;"	o	object:definitions.languageServerSocket.properties
disableWorkspaceFolders	autoload/plugged/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {$/;"	o	object:definitions.languageServerBase.properties
disableWorkspaceFolders	autoload/plugged/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {},$/;"	o	object:definitions.languageServerCommand.properties
disableWorkspaceFolders	autoload/plugged/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {},$/;"	o	object:definitions.languageServerModule.properties
disableWorkspaceFolders	autoload/plugged/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {},$/;"	o	object:definitions.languageServerSocket.properties
displayByAle	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	G	class:_0
displayWidth	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) displayWidth(runes []rune) int {$/;"	f	struct:fzf.Terminal	typeref:typename:int
displayWidth	autoload/plugged/fzf/src/tui/light.go	/^	displayWidth int$/;"	m	struct:tui.wrappedLine	typeref:typename:int
displayWidthWithLimit	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) displayWidthWithLimit(runes []rune, prefixWidth int, limit int) int {$/;"	f	struct:fzf.Terminal	typeref:typename:int
dispose	autoload/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[c],!0),await e./;"	m	class:Vj
dispose	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:d0
dispose	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:f0
dispose	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:p0
dispose	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:sp
dispose	autoload/plugged/coc.nvim/build/index.js	/^`);e=Zi.Position.create(e.line-o,e.character),t=Zi.Position.create(t.line-o,t.character);let l=k/;"	m	class:s0
dispose	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:ED
dispose	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:SD
dispose	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:wD
dispose	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:xD
dispose	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:zB
dispose	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	m	class:AnonymousFunctionb6668892bf00.e
dispose	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:ID
dispose	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:_D
dispose	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	p	class:ID.createStatusBarItem.n
distance	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:zfe.r
dl	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
dm	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	f
docker	autoload/plugged/fzf/Makefile	/^docker:$/;"	t
docker-test	autoload/plugged/fzf/Makefile	/^docker-test:$/;"	t
document	autoload/plugged/coc.nvim/build/index.js	/^augroup end`;try{let o=Fe.default.join(process.env.TMPDIR,`coc.nvim-${process.pid}`);St.default./;"	p	class:o
document_structure	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let document_structure = [$/;"	v
document_structure	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let document_structure = ['article', 'cell', 'columnheader', 'definition', 'directory', 'doc/;"	v
dosbatch_cmdextversion	autoload/plugged/vim-polyglot/syntax/dosbatch.vim	/^  let dosbatch_cmdextversion = 2$/;"	v
doubleClickDuration	autoload/plugged/fzf/src/tui/tui.go	/^	doubleClickDuration = 500 * time.Millisecond$/;"	c	package:tui
download	autoload/plugged/fzf/install	/^download() {$/;"	f
download	autoload/plugged/fzf/install.ps1	/^function download {$/;"	f
download	autoload/plugged/vim-polyglot/scripts/build	/^def download(packages)$/;"	f	method:copy_file
dpub_role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let dpub_role = [$/;"	v
dpub_role	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let dpub_role = ['dpub-abstract', 'dpub-afterword', 'dpub-appendix', 'dpub-biblioentry', 'dp/;"	v
dq	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	f
dr	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
drag_and_drop_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let drag_and_drop_attributes = {$/;"	v
drawBorder	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) drawBorder() {$/;"	f	struct:tui.LightWindow
drawBorder	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) drawBorder() {$/;"	f	struct:tui.TcellWindow
drawBorderAround	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) drawBorderAround() {$/;"	f	struct:tui.LightWindow
drawBorderHorizontal	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) drawBorderHorizontal(top, bottom bool) {$/;"	f	struct:tui.LightWindow
drawBorderVertical	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) drawBorderVertical(left, right bool) {$/;"	f	struct:tui.LightWindow
dre	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
dt	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
dte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
dupeTheme	autoload/plugged/fzf/src/options.go	/^func dupeTheme(theme *tui.ColorTheme) *tui.ColorTheme {$/;"	f	package:fzf	typeref:typename:*tui.ColorTheme
dw	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
e	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f	function:AnonymousFunctionb66688921f500
e	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f	function:AnonymousFunctionb66688925900
e	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f	function:AnonymousFunctionb66688925b00
e	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	c	class:Qfe
e	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:Xfe
e	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:Zfe
e	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f	function:Sl
e	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionb666889211d00
e	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionb666889211e00
e	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionb666889212300
e	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionb666889212400
e	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionb666889212500
e	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionb666889215900
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb666889210100
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb666889210200
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb666889210300
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb666889210400
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb666889210500
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb666889210600
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892d100
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892d200
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892d300
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892d400
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892d500
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892d600
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892d700
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892d900
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892da00
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892dd00
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892de00
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892df00
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892e000
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892e100
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892e200
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892e300
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892e400
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892eb00
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892ec00
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892ed00
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892ef00
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892f000
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892f400
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892f500
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892f600
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892f700
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892f800
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892f900
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892fb00
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892fe00
e	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892ff00
e	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
e	autoload/plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[s-1]}async withProgress(e,t){return this.checkDialog()?await new e3(this.nvim/;"	v
e	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c	class:AnonymousFunctionb666889228a00.t
e	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889228500
e	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb66688922d100
e	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:d.scan
e	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	c	class:AnonymousFunctionb66688922d400
e	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	c	class:UU
e	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	c	class:jU
e	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f	function:AnonymousFunctionb666889221700
e	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	c	class:xpe
e	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	v
e	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	c	class:AnonymousFunctionb6668892bf00
e	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f	function:AnonymousFunctionb6668892be00
e	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	c	class:fX
e	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:GY
e	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	c	class:IX
e	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
e	autoload/plugged/coc.nvim/build/index.js	/^`,"\\r"],Dx;(function(r){function e(o,s,a,l){return new Lse(o,s,a,l)}r.create=e;function t(o){va/;"	f	function:AnonymousFunctionb666889210700
e	autoload/plugged/coc.nvim/build/index.js	/^`,LM=class{constructor(e="utf8"){this.encoding=e,this.index=0,this.buffer=Buffer.allocUnsafe(Bw)/;"	f	function:AnonymousFunctionb6668892c100
e	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c	class:rne
e	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:JO
e	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:ine
e	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:sie
e	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f	function:AnonymousFunctionb6668892c200
e	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f	function:AnonymousFunctionb6668892c300
e	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f	function:AnonymousFunctionb6668892c900
e	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f	function:AnonymousFunctionb6668892cb00
e	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f	function:AnonymousFunctionb6668892cf00
e	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
e	autoload/plugged/coc.nvim/build/index.js	/^`}get document(){return new Promise((e,t)=>{this.nvim.buffer.then(i=>{let n=i.id;if(this.bufnr=n/;"	v
e	autoload/plugged/coc.nvim/build/index.js	/^augroup end`;try{let o=Fe.default.join(process.env.TMPDIR,`coc.nvim-${process.pid}`);St.default./;"	v
e	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	c
e	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:AnonymousFunctionb66688920a00
e	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:TY
e0	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	c
e1	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
e7	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	v
eN	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	v
eP	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
eR	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	v
eRe	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	v
eU	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	v
eX	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
eZ	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
ea	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	v
eachLine	autoload/plugged/fzf/src/terminal.go	/^type eachLine struct {$/;"	s	package:fzf
each_hash	autoload/plugged/vim-polyglot/scripts/build	/^def each_hash(data, &block)$/;"	f
echoLines	autoload/plugged/coc.nvim/build/index.js	/^`)],!0)}async runTerminalCommand(e,t,i=!1){return t=t||b.cwd,await this.nvim.callAsync("coc#util/;"	m	class:Vj
ecrystal#SetSubtype	autoload/plugged/vim-polyglot/autoload/ecrystal.vim	/^function! ecrystal#SetSubtype() abort$/;"	f
ede	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
edits	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:r.getTextEditChange.o
eg	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
ehe	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
eie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ej	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
elixir#indent	autoload/plugged/vim-polyglot/indent/elixir.vim	/^function! elixir#indent(lnum)$/;"	f
elixir#indent#handle_follow_prev_nb	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_follow_prev_nb(context)$/;"	f
elixir#indent#handle_following_trailing_binary_operator	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_following_trailing_binary_operator(context)$/;"	f
elixir#indent#handle_inside_block	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_inside_block(context)$/;"	f
elixir#indent#handle_inside_generic_block	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_inside_generic_block(context)$/;"	f
elixir#indent#handle_starts_with_binary_operator	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_binary_operator(context)$/;"	f
elixir#indent#handle_starts_with_end	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_end(context)$/;"	f
elixir#indent#handle_starts_with_pipe	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_pipe(context)$/;"	f
elixir#indent#handle_starts_with_string_continuation	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_string_continuation(context)$/;"	f
elixir#indent#handle_top_of_file	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_top_of_file(context)$/;"	f
elixir#indent#indent	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#indent(lnum)$/;"	f
elixir#indent#searchpair_back_skip	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#searchpair_back_skip()$/;"	f
elixir#util#get_filename	autoload/plugged/vim-polyglot/autoload/elixir/util.vim	/^function! elixir#util#get_filename(word) abort$/;"	f
ellipsis	autoload/plugged/fzf/src/terminal.go	/^const ellipsis string = ".."$/;"	c	package:fzf	typeref:typename:string
em	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
em	autoload/plugged/coc.nvim/build/index.js	/^`}tablecell(e,t){return e+DB}strong(e){return this.o.strong(e)}em(e){return e=_B(e,this.o.reflow/;"	m	class:FB
emit	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:AnonymousFunctionb66688929c00.t
emoji	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
emptyLine	autoload/plugged/fzf/src/terminal.go	/^var emptyLine = itemLine{}$/;"	v	package:fzf
enable	autoload/plugged/coc.nvim/data/schema.json	/^        "enable": {$/;"	o	object:definitions.languageServerBase.properties
enable	autoload/plugged/coc.nvim/data/schema.json	/^        "enable": {},$/;"	o	object:definitions.languageServerCommand.properties
enable	autoload/plugged/coc.nvim/data/schema.json	/^        "enable": {},$/;"	o	object:definitions.languageServerModule.properties
enable	autoload/plugged/coc.nvim/data/schema.json	/^        "enable": {},$/;"	o	object:definitions.languageServerSocket.properties
enabled	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	G	class:_0
enabled	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	G	class:o0
enabled	autoload/plugged/fzf/src/terminal.go	/^	enabled    bool$/;"	m	struct:fzf.previewer	typeref:typename:bool
encoding	autoload/plugged/coc.nvim/build/index.js	/^`;function AI(r,e){if(On.existsSync(r))return;let t=On.openSync(r,e.flags,e.mode);On.closeSync(t/;"	p	class:hee.i
end	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:s
end	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:fde.a
end	autoload/plugged/fzf/src/tokenizer.go	/^	end   int$/;"	m	struct:fzf.Range	typeref:typename:int
endLine	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892d900.e.l
engines	autoload/plugged/coc.nvim/package.json	/^  "engines": {$/;"	o
enum	autoload/plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	a	object:definitions.languageServerBase.properties.revealOutputChannelOn
enum	autoload/plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	a	object:definitions.languageServerModule.properties.transport
enum	autoload/plugged/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	a	object:definitions.languageServerBase.properties.trace.server
enum	autoload/plugged/coc.nvim/data/schema.json	/^        "enum": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
enum	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	a	object:properties.suggest.detailField
enum	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	a	object:properties.diagnostic.enableMessage
enum	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	a	object:properties.suggest.autoTrigger
enum	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	a	object:properties.coc.preferences.extensionUpdateCheck
enum	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["echo", "float"]$/;"	a	object:properties.diagnostic.messageTarget
enum	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["edit", "split", "vsplit", "tabe", "drop", "tab drop", "pedit"],$/;"	a	object:properties.coc.preferences.jumpCommand
enum	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["float", "echo"]$/;"	a	object:properties.signature.target
enum	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["full", "short", "filename", "hidden"],$/;"	a	object:properties.list.source.diagnostics.pathFormat
enum	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	a	object:properties.diagnostic.level
enum	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["length", "alphabetical", "none"]$/;"	a	object:properties.suggest.defaultSortMethod
enum	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	a	object:properties.coc.preferences.messageLevel
enum	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	a	object:properties.hover.target
enum	autoload/plugged/coc.nvim/data/schema.json	/^      "enum": ["quickfix", "location", "none"]$/;"	a	object:properties.coc.preferences.listOfWorkspaceEdit
enum,enumeration names	autoload/plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?enum[ \\t]+([a-zA-Z0-9_]+)\/\\2\/g,enum,enumeration names\/$/;"	k	langdef:Rust
enumMember	autoload/plugged/coc.nvim/data/schema.json	/^        "enumMember": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
enums	autoload/plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*enum[ \\t]+([a-zA-Z0-9_]+)\/\\2\/e,enums\/$/;"	k	langdef:typescript
env	autoload/plugged/coc.nvim/data/schema.json	/^        "env": {$/;"	o	object:definitions.languageServerBase.properties
env	autoload/plugged/coc.nvim/data/schema.json	/^        "env": {},$/;"	o	object:definitions.languageServerCommand.properties
env	autoload/plugged/coc.nvim/data/schema.json	/^        "env": {},$/;"	o	object:definitions.languageServerModule.properties
environment	autoload/plugged/vim-airline-themes/.github/ISSUE_TEMPLATE.md	/^#### environment$/;"	t
environment	autoload/plugged/vim-airline/.github/ISSUE_TEMPLATE.md	/^#### environment$/;"	t
ep	autoload/plugged/coc.nvim/build/index.js	/^`);e=Zi.Position.create(e.line-o,e.character),t=Zi.Position.create(t.line-o,t.character);let l=k/;"	v
eq	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
equals	autoload/plugged/fzf/src/ansi.go	/^func (s *ansiState) equals(t *ansiState) bool {$/;"	f	struct:fzf.ansiState	typeref:typename:bool
ere	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
eregex#toggle	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! eregex#toggle(...)$/;"	f
err	autoload/plugged/fzf/src/terminal.go	/^	err  error$/;"	m	struct:fzf.eachLine	typeref:typename:error
error	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	p	class:i
error	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	p	class:Ed.V.Zt
errorExit	autoload/plugged/fzf/src/options.go	/^func errorExit(msg string) {$/;"	f	package:fzf
errorExit	autoload/plugged/fzf/src/tui/tui.go	/^func errorExit(message string) {$/;"	f	package:tui
errorItems	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	G	class:ta
escDelay	autoload/plugged/fzf/src/tui/light.go	/^	escDelay      int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
escPollInterval	autoload/plugged/fzf/src/tui/light.go	/^	escPollInterval = 5$/;"	c	package:tui
escSequence	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) escSequence(sz *int) Event {$/;"	f	struct:tui.LightRenderer	typeref:typename:Event
escapedColon	autoload/plugged/fzf/src/options.go	/^	escapedColon = 0$/;"	c	package:fzf
escapedComma	autoload/plugged/fzf/src/options.go	/^	escapedComma = 1$/;"	c	package:fzf
escapedPlus	autoload/plugged/fzf/src/options.go	/^	escapedPlus  = 2$/;"	c	package:fzf
eue	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
evaluateScrollOffset	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) evaluateScrollOffset(list []*Item, height int) int {$/;"	f	struct:fzf.Terminal	typeref:typename:int
event	autoload/plugged/coc.nvim/data/schema.json	/^        "event": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
event	autoload/plugged/fzf/src/reader.go	/^	event    int32$/;"	m	struct:fzf.Reader	typeref:typename:int32
eventBox	autoload/plugged/fzf/src/matcher.go	/^	eventBox       *util.EventBox$/;"	m	struct:fzf.Matcher	typeref:typename:*util.EventBox
eventBox	autoload/plugged/fzf/src/reader.go	/^	eventBox *util.EventBox$/;"	m	struct:fzf.Reader	typeref:typename:*util.EventBox
eventBox	autoload/plugged/fzf/src/terminal.go	/^	eventBox     *util.EventBox$/;"	m	struct:fzf.Terminal	typeref:typename:*util.EventBox
event_attributes_value	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let event_attributes_value = {$/;"	v
event_handler_attributes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let event_handler_attributes = {'onabort': [], 'onblur': [], 'oncanplay': [], 'oncanplaythro/;"	v
events	autoload/plugged/fzf/src/util/eventbox.go	/^	events Events$/;"	m	struct:util.EventBox	typeref:typename:Events
ew	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ewe	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
except	autoload/plugged/vim-polyglot/scripts/build	/^def except(hash, *keys)$/;"	f
exec	autoload/plugged/fzf/src/reader.go	/^	exec     *exec.Cmd$/;"	m	struct:fzf.Reader	typeref:typename:*exec.Cmd
execArgv	autoload/plugged/coc.nvim/data/schema.json	/^        "execArgv": {$/;"	o	object:definitions.languageServerModule.properties
execute	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:DD
executeCommand	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) executeCommand(template string, forcePlus bool, background bool) {$/;"	f	struct:fzf.Terminal
executeRegexp	autoload/plugged/fzf/src/options.go	/^var executeRegexp *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
executing	autoload/plugged/fzf/src/terminal.go	/^	executing    *util.AtomicBool$/;"	m	struct:fzf.Terminal	typeref:typename:*util.AtomicBool
exists	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:r0
exitCancel	autoload/plugged/fzf/src/constants.go	/^	exitCancel    = -1$/;"	c	package:fzf
exitError	autoload/plugged/fzf/src/constants.go	/^	exitError     = 2$/;"	c	package:fzf
exitInterrupt	autoload/plugged/fzf/src/constants.go	/^	exitInterrupt = 130$/;"	c	package:fzf
exitNoMatch	autoload/plugged/fzf/src/constants.go	/^	exitNoMatch   = 1$/;"	c	package:fzf
exitOk	autoload/plugged/fzf/src/constants.go	/^	exitOk        = 0$/;"	c	package:fzf
expand_all	autoload/plugged/vim-polyglot/scripts/build	/^def expand_all(pattern, all = false)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
expect	autoload/plugged/fzf/src/terminal.go	/^	expect       map[tui.Event]string$/;"	m	struct:fzf.Terminal	typeref:typename:map[tui.Event]string
expected behavior	autoload/plugged/vim-airline-themes/.github/ISSUE_TEMPLATE.md	/^#### expected behavior$/;"	t
expected behavior	autoload/plugged/vim-airline/.github/ISSUE_TEMPLATE.md	/^#### expected behavior$/;"	t
expression	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	p	class:sp.subscribe.a
ext	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:mne.n
extended	autoload/plugged/fzf/src/pattern.go	/^	extended      bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
extendedMatch	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) extendedMatch(item *Item, withPos bool, slab *util.Slab) ([]Offset, int, *[]in/;"	f	struct:fzf.Pattern	typeref:typename:([]Offset, int, *[]int)
extendsDefaults	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:ta
extract	autoload/plugged/vim-polyglot/scripts/build	/^def extract(packages)$/;"	f	method:copy_file.rules_to_code.rule_to_code
extractColor	autoload/plugged/fzf/src/ansi.go	/^func extractColor(str string, state *ansiState, proc func(string, *ansiState) bool) (string, *[]/;"	f	package:fzf	typeref:typename:(string, *[]ansiOffset, *ansiState)
f	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:AnonymousFunctionb666889216f00
f	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	v
f	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
f	autoload/plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Nf.prototype.render;Nf.prototype.toString=function(){var r=""/;"	f	function:AnonymousFunctionb66688921aa00
f	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
f	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:yR.k
f	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:r.read
f	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
f	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v	class:o
f	autoload/plugged/coc.nvim/build/index.js	/^`}get document(){return new Promise((e,t)=>{this.nvim.buffer.then(i=>{let n=i.id;if(this.bufnr=n/;"	v
f$	autoload/plugged/coc.nvim/build/index.js	/^]`).replace("lheading",se.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replac/;"	v
f0	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	c
f1e	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
f3	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
f5	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
f7	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
fB	autoload/plugged/coc.nvim/build/index.js	/^`);return i.reduce(function(n,o){var s=vpe(o);return s>n?s:n},0)}});var cB=v((BTe,uB)=>{uB.expor/;"	v
fD	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	f
fE	autoload/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),ss("Output buffer: %o",e.outputData[0].data))/;"	f
fF	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
fO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
fQ	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
fRe	autoload/plugged/coc.nvim/build/index.js	/^`),s=i.line==r.start.line?i.character-r.start.character:i.character,a=UB(o,i.line-r.start.line,s/;"	v
fV	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
fX	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
fZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
fail	autoload/plugged/fzf/bin/fzf-tmux	/^fail() {$/;"	f
failed	autoload/plugged/fzf/src/terminal.go	/^	failed       *string$/;"	m	struct:fzf.Terminal	typeref:typename:*string
fb	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	v
fc	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
fd	autoload/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) fd() int {$/;"	f	unknown:tui.LightRenderer	typeref:typename:int
fde	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
fe	autoload/plugged/coc.nvim/build/index.js	/^`),x.log(`Sending notification '${T.method}'.`,j)}else Xt("send-notification",T)}function fe(T,j/;"	f
feed	autoload/plugged/fzf/src/reader.go	/^func (r *Reader) feed(src io.Reader) {$/;"	f	struct:fzf.Reader
fetch	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:r0
fg	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
fg	autoload/plugged/fzf/src/ansi.go	/^	fg   tui.Color$/;"	m	struct:fzf.ansiState	typeref:typename:tui.Color
fg	autoload/plugged/fzf/src/tui/light.go	/^	fg       Color$/;"	m	struct:tui.LightWindow	typeref:typename:Color
fg	autoload/plugged/fzf/src/tui/tui.go	/^	fg   Color$/;"	m	struct:tui.ColorPair	typeref:typename:Color
fie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
field	autoload/plugged/coc.nvim/data/schema.json	/^        "field": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
fields	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	p	class:sp.subscribe.a
file	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f	function:r
file	autoload/plugged/coc.nvim/data/schema.json	/^        "file": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
file	autoload/plugged/fzf/src/terminal.go	/^	file          bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
filename	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	p	class:p
filename	autoload/plugged/vim-polyglot/indent/sql.vim	/^        let filename = b:sql_type_override$/;"	v
filename	autoload/plugged/vim-polyglot/indent/sql.vim	/^        let filename = g:sql_type_default$/;"	v
filename	autoload/plugged/vim-polyglot/indent/sql.vim	/^let filename = 'sqlanywhere'$/;"	v
filename	autoload/plugged/vim-polyglot/syntax/sql.vim	/^        let filename = b:sql_type_override$/;"	v
filename	autoload/plugged/vim-polyglot/syntax/sql.vim	/^        let filename = g:sql_type_default$/;"	v
filename	autoload/plugged/vim-polyglot/syntax/sql.vim	/^let filename = 'sqloracle'$/;"	v
filetype	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	G	class:o0
filetypedetect	autoload/plug.vim	/^        augroup filetypedetect$/;"	a
filetypedetect	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^augroup filetypedetect$/;"	a
filetypedetect	autoload/plugged/vim-polyglot/extras/filetype.vim	/^augroup filetypedetect$/;"	a
filetypedetect	autoload/plugged/vim-polyglot/tests/native.vim	/^  augroup filetypedetect$/;"	a
filetypes	autoload/plugged/coc.nvim/data/schema.json	/^        "filetypes": {$/;"	o	object:definitions.languageServerBase.properties
filetypes	autoload/plugged/coc.nvim/data/schema.json	/^        "filetypes": {},$/;"	o	object:definitions.languageServerCommand.properties
filetypes	autoload/plugged/coc.nvim/data/schema.json	/^        "filetypes": {},$/;"	o	object:definitions.languageServerModule.properties
filetypes	autoload/plugged/coc.nvim/data/schema.json	/^        "filetypes": {},$/;"	o	object:definitions.languageServerSocket.properties
fill	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) fill(str string, onMove func()) FillReturn {$/;"	f	struct:tui.LightWindow	typeref:typename:FillReturn
fill	autoload/plugged/fzf/src/tui/tcell.go	/^func fill(x, y, w, h int, n ColorPair, r rune) {$/;"	f	package:tui
fillString	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) fillString(text string, pair ColorPair) FillReturn {$/;"	f	struct:tui.TcellWindow	typeref:typename:FillReturn
filled	autoload/plugged/fzf/src/terminal.go	/^	filled   bool$/;"	m	struct:fzf.previewed	typeref:typename:bool
fin	autoload/plugged/fzf/src/reader.go	/^func (r *Reader) fin(success bool) {$/;"	f	struct:fzf.Reader
finChan	autoload/plugged/fzf/src/reader.go	/^	finChan  chan bool$/;"	m	struct:fzf.Reader	typeref:typename:chan bool
final	autoload/plugged/fzf/src/matcher.go	/^	final      bool$/;"	m	struct:fzf.MatchRequest	typeref:typename:bool
final	autoload/plugged/fzf/src/merger.go	/^	final   bool$/;"	m	struct:fzf.Merger	typeref:typename:bool
final	autoload/plugged/fzf/src/terminal.go	/^	final      bool$/;"	m	struct:fzf.previewer	typeref:typename:bool
findFirstMatch	autoload/plugged/fzf/src/terminal.go	/^func findFirstMatch(pattern string, str string) int {$/;"	f	package:fzf	typeref:typename:int
findLastMatch	autoload/plugged/fzf/src/terminal.go	/^func findLastMatch(pattern string, str string) int {$/;"	f	package:fzf	typeref:typename:int
findOffset	autoload/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) findOffset() (row int, col int) {$/;"	f	unknown:tui.LightRenderer	typeref:typename:(row int, col int)
findOffset	autoload/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) findOffset() (row int, col int) {$/;"	f	unknown:tui.LightRenderer	typeref:typename:(row int, col int)
fire	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	m	class:mq
firstHeading	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
firstKey	autoload/plugged/fzf/src/options.go	/^func firstKey(keymap map[tui.Event]string) tui.Event {$/;"	f	package:fzf	typeref:typename:tui.Event
fish	autoload/plugged/fzf/test/test_go.rb	/^    def fish$/;"	S	class:Shell
fish#Complete	autoload/plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Complete(findstart, base)$/;"	f
fish#Fold	autoload/plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Fold()$/;"	f
fish#Format	autoload/plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Format()$/;"	f
fish#Indent	autoload/plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Indent()$/;"	f
fish#errorformat	autoload/plugged/vim-polyglot/autoload/fish.vim	/^function! fish#errorformat()$/;"	f
fixStartcol	autoload/plugged/coc.nvim/build/index.js	/^`),s=ij(this.lines,o),a=await this.mutex.acquire();try{let l=await this.nvim.call("coc#util#set_/;"	m	class:o0
fix_quotes	autoload/plugged/vim-polyglot/scripts/import_vim	/^def fix_quotes(a)$/;"	f
fj	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
flags	autoload/plugged/coc.nvim/build/index.js	/^`;function AI(r,e){if(On.existsSync(r))return;let t=On.openSync(r,e.flags,e.mode);On.closeSync(t/;"	p	class:hee.i
float32	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:mne.n
float64	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:mne.n
flow_elements	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let flow_elements = phrasing_elements + ['p', 'hr', 'pre', 'ul', 'ol', 'dl', 'div', 'h1', 'h2', /;"	v
flush	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:u
flush	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:d
flush	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) flush() {$/;"	f	unknown:tui.LightRenderer
fm	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
fn	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	v
fne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
focus	autoload/plugged/fzf/test/test_go.rb	/^  def focus$/;"	f	class:Tmux
foldConfigurations	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	G	class:ta
folder	autoload/plugged/coc.nvim/data/schema.json	/^        "folder": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
follow	autoload/plugged/fzf/src/options.go	/^	follow      bool$/;"	m	struct:fzf.previewOpts	typeref:typename:bool
following	autoload/plugged/fzf/src/terminal.go	/^	following  bool$/;"	m	struct:fzf.previewer	typeref:typename:bool
foobar	autoload/plugged/vim-polyglot/tests/indent/2.1/test.js	/^function foobar() {$/;"	f
foobar	autoload/plugged/vim-polyglot/tests/indent/4.1/test.js	/^function foobar() {$/;"	f
forEach	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	m	class:Array
forceBlack	autoload/plugged/fzf/src/tui/light.go	/^	forceBlack    bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
forceBlack	autoload/plugged/fzf/src/tui/tui.go	/^	forceBlack   bool$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:bool
forceRefresh	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	m	class:_0
forceSync	autoload/plugged/coc.nvim/build/index.js	/^`),s=ij(this.lines,o),a=await this.mutex.acquire();try{let l=await this.nvim.call("coc#util#set_/;"	m	class:o0
formatterPriority	autoload/plugged/coc.nvim/data/schema.json	/^        "formatterPriority": {$/;"	o	object:definitions.languageServerBase.properties
formatterPriority	autoload/plugged/coc.nvim/data/schema.json	/^        "formatterPriority": {},$/;"	o	object:definitions.languageServerCommand.properties
formatterPriority	autoload/plugged/coc.nvim/data/schema.json	/^        "formatterPriority": {},$/;"	o	object:definitions.languageServerModule.properties
formatterPriority	autoload/plugged/coc.nvim/data/schema.json	/^        "formatterPriority": {},$/;"	o	object:definitions.languageServerSocket.properties
fortran_free_source	autoload/plugged/vim-polyglot/syntax/sinda.vim	/^let fortran_free_source=1$/;"	v
fortran_free_source	autoload/plugged/vim-polyglot/syntax/tak.vim	/^let fortran_free_source=1$/;"	v
fortran_free_source	autoload/plugged/vim-polyglot/syntax/trasys.vim	/^let fortran_free_source=1$/;"	v
forward	autoload/plugged/fzf/src/pattern.go	/^	forward       bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
fq	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
fre	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
freeSocket	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	m	class:AnonymousFunctionb66688922d400.e
freeze	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:Fr
friendly_name	autoload/plugged/vim-rooter/test/runner.vim	/^  let friendly_name = substitute(test[5:-3], '_', ' ', 'g')$/;"	v
from	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f	function:r
fromKeywordOption	autoload/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:s}}function oj(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	m	class:_i
fse	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
fsharp#OnCursorMove	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#OnCursorMove()$/;"	f
fsharp#OnFSProjSave	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#OnFSProjSave()$/;"	f
fsharp#documentation	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#documentation(filePath, line, character, cont)$/;"	f
fsharp#getServerConfig	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! g:fsharp#getServerConfig()$/;"	f
fsharp#loadProject	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#loadProject(...)$/;"	f
fsharp#loadWorkspaceAuto	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#loadWorkspaceAuto()$/;"	f
fsharp#openFsi	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#openFsi(returnFocus)$/;"	f
fsharp#quitFsi	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#quitFsi()$/;"	f
fsharp#reloadProjects	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#reloadProjects()$/;"	f
fsharp#resetFsi	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#resetFsi()$/;"	f
fsharp#sendAllToFsi	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#sendAllToFsi()$/;"	f
fsharp#sendFsi	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#sendFsi(text)$/;"	f
fsharp#sendLineToFsi	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#sendLineToFsi()$/;"	f
fsharp#sendSelectionToFsi	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#sendSelectionToFsi() range$/;"	f
fsharp#showF1Help	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#showF1Help()$/;"	f
fsharp#showSignature	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#showSignature()$/;"	f
fsharp#showTooltip	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#showTooltip()$/;"	f
fsharp#toSnakeCase	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#toSnakeCase(str)$/;"	f
fsharp#toggleFsi	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#toggleFsi()$/;"	f
fsharp#updateFSAC	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#updateFSAC(...)$/;"	f
fsharp#updateServerConfig	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! g:fsharp#updateServerConfig()$/;"	f
fte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
fugitive	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#Autowrite	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Autowrite() abort$/;"	f
fugitive#BlameComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameComplete(A, L, P) abort$/;"	f
fugitive#BlameFileType	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameFileType() abort$/;"	f
fugitive#BlameSyntax	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameSyntax() abort$/;"	f
fugitive#BrowseCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BrowseCommand(line1, count, range, bang, mods, arg, args) abort$/;"	f
fugitive#BufReadCmd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadCmd(...) abort$/;"	f
fugitive#BufReadStatus	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadStatus() abort$/;"	f
fugitive#BufWriteCmd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufWriteCmd(...) abort$/;"	f
fugitive#CanDiffoff	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CanDiffoff(buf) abort$/;"	f
fugitive#Cd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cd(path, ...) abort$/;"	f
fugitive#CdComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CdComplete(A, L, P) abort$/;"	f
fugitive#Cfile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cfile() abort$/;"	f
fugitive#Command	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Command(line1, line2, range, bang, mods, arg) abort$/;"	f
fugitive#CommitComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CommitComplete(A, L, P, ...) abort$/;"	f
fugitive#CommonDir	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CommonDir(dir) abort$/;"	f
fugitive#Complete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Complete(lead, ...) abort$/;"	f
fugitive#CompleteForWorkingDir	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompleteForWorkingDir(A, L, P, ...) abort$/;"	f
fugitive#CompleteObject	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompleteObject(base, ...) abort$/;"	f
fugitive#CompletePath	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompletePath(base, ...) abort$/;"	f
fugitive#Config	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Config(...) abort$/;"	f
fugitive#Cwindow	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cwindow() abort$/;"	f
fugitive#DeleteCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#DeleteCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#DiffClose	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#DiffClose() abort$/;"	f
fugitive#Diffsplit	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Diffsplit(autodir, keepfocus, mods, arg, args) abort$/;"	f
fugitive#EditComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#EditComplete(A, L, P) abort$/;"	f
fugitive#EfmDir	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#EfmDir(...) abort$/;"	f
fugitive#Expand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Expand(object) abort$/;"	f
fugitive#FetchComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FetchComplete(A, L, P, ...) abort$/;"	f
fugitive#FileReadCmd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileReadCmd(...) abort$/;"	f
fugitive#FileWriteCmd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileWriteCmd(...) abort$/;"	f
fugitive#Find	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Find(object, ...) abort$/;"	f
fugitive#Foldtext	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Foldtext() abort$/;"	f
fugitive#GX	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GX() abort$/;"	f
fugitive#GitVersion	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GitVersion(...) abort$/;"	f
fugitive#GrepCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GrepCommand(line1, line2, range, bang, mods, arg) abort$/;"	f
fugitive#GrepComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GrepComplete(A, L, P) abort$/;"	f
fugitive#Head	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Head(...) abort$/;"	f
fugitive#Init	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Init() abort$/;"	f
fugitive#LogCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#LogCommand(line1, count, range, bang, mods, args, type) abort$/;"	f
fugitive#LogComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#LogComplete(A, L, P) abort$/;"	f
fugitive#MapCfile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapCfile(...) abort$/;"	f
fugitive#MapJumps	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapJumps(...) abort$/;"	f
fugitive#MergeComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MergeComplete(A, L, P, ...) abort$/;"	f
fugitive#MessageCfile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MessageCfile() abort$/;"	f
fugitive#MoveCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MoveCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#Object	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Object(...) abort$/;"	f
fugitive#Open	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Open(cmd, bang, mods, arg, args) abort$/;"	f
fugitive#PagerFor	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PagerFor(argv, ...) abort$/;"	f
fugitive#Path	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Path(url, ...) abort$/;"	f
fugitive#PathComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PathComplete(...) abort$/;"	f
fugitive#Prepare	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Prepare(...) abort$/;"	f
fugitive#PrepareDirEnvGitArgv	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PrepareDirEnvGitArgv(...) abort$/;"	f
fugitive#PullComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PullComplete(A, L, P, ...) abort$/;"	f
fugitive#PushComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PushComplete(A, L, P, ...) abort$/;"	f
fugitive#ReadCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReadCommand(line1, count, range, bang, mods, arg, args) abort$/;"	f
fugitive#ReadComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReadComplete(A, L, P) abort$/;"	f
fugitive#Real	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Real(url) abort$/;"	f
fugitive#RebaseComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RebaseComplete(A, L, P, ...) abort$/;"	f
fugitive#ReloadStatus	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReloadStatus(...) abort$/;"	f
fugitive#RemoteUrl	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoteUrl(...) abort$/;"	f
fugitive#RemoveCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoveCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#RenameCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RenameCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#RenameComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RenameComplete(A,L,P) abort$/;"	f
fugitive#ResolveRemote	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ResolveRemote(remote) abort$/;"	f
fugitive#Result	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Result(...) abort$/;"	f
fugitive#Resume	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Resume() abort$/;"	f
fugitive#RevParse	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RevParse(rev, ...) abort$/;"	f
fugitive#RevertComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RevertComplete(A, L, P, ...) abort$/;"	f
fugitive#SourceCmd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#SourceCmd(...) abort$/;"	f
fugitive#SshHostAlias	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#SshHostAlias(...) abort$/;"	f
fugitive#StatusCfile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#StatusCfile() abort$/;"	f
fugitive#Statusline	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Statusline(...) abort$/;"	f
fugitive#WqCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#WqCommand(...) abort$/;"	f
fugitive#WriteCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#WriteCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#buffer	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#delete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#delete(url, ...) abort$/;"	f
fugitive#detect	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#filereadable	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filereadable(url) abort$/;"	f
fugitive#filewritable	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filewritable(url) abort$/;"	f
fugitive#foldtext	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#getfperm	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfperm(url) abort$/;"	f
fugitive#getfsize	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfsize(url) abort$/;"	f
fugitive#getftime	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftime(url) abort$/;"	f
fugitive#getftype	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftype(url) abort$/;"	f
fugitive#glob	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#glob(url, ...) abort$/;"	f
fugitive#head	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#isdirectory	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#isdirectory(url) abort$/;"	f
fugitive#readfile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#readfile(url, ...) abort$/;"	f
fugitive#repo	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#resolve	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#resolve(url) abort$/;"	f
fugitive#setfperm	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#setfperm(url, perm) abort$/;"	f
fugitive#simplify	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#simplify(url) abort$/;"	f
fugitive#statusline	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive#writefile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#writefile(lines, url, ...) abort$/;"	f
fugitive.vim	autoload/plugged/vim-fugitive/README.markdown	/^# fugitive.vim$/;"	c
fugitive_blame	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_diff	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_job	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_job$/;"	a
fugitive_status	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_temp	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_temp$/;"	a
fullscreen	autoload/plugged/fzf/src/terminal.go	/^	fullscreen   bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
fullscreen	autoload/plugged/fzf/src/tui/light.go	/^	fullscreen    bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
function	autoload/plugged/coc.nvim/data/schema.json	/^        "function": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
function	autoload/plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*function[[:space:]]*([a-zA-Z0-9_:]*)[[:space:]]*\/\\1\/u,function\/$/;"	k	langdef:puppet
functions	autoload/plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*function[ \\t]+([a-zA-Z0-9_]+)\/\\2\/f,functions\/$/;"	k	langdef:typescript
functions,function definitions	autoload/plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(#\\[[^\\]]\\][ \\t]*)*(pub[ \\t]+)?(extern[ \\t]+)?("[^"]+"[ \\t]+)?(uns/;"	k	langdef:Rust
fuzzy	autoload/plugged/fzf/src/pattern.go	/^	fuzzy         bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
fuzzyAlgo	autoload/plugged/fzf/src/pattern.go	/^	fuzzyAlgo     algo.Algo$/;"	m	struct:fzf.Pattern	typeref:typename:algo.Algo
fv	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	f
fzf	autoload/plugged/fzf/man/man1/fzf.1	/^.TH fzf 1 "Apr 2021" "fzf 0.27.0" "fzf - a command-line fuzzy finder"$/;"	t
fzf	autoload/plugged/fzf/src/ansi.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/ansi_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/cache.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/cache_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/chunklist.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/chunklist_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/constants.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/core.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/history.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/history_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/item.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/item_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/matcher.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/merger.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/merger_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/options.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/options_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/pattern.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/pattern_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/reader.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/reader_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/result.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/result_others.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/result_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/result_x86.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/terminal.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/terminal_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/terminal_unix.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/terminal_windows.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/tokenizer.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/src/tokenizer_test.go	/^package fzf$/;"	p
fzf	autoload/plugged/fzf/test/test_go.rb	/^  def fzf(*opts)$/;"	f	class:TestBase
fzf :heart: vim	autoload/plugged/fzf.vim/README.md	/^fzf :heart: vim$/;"	c
fzf inside terminal buffer	autoload/plugged/fzf/README-VIM.md	/^### fzf inside terminal buffer$/;"	S	section:FZF Vim integration""Tips
fzf!	autoload/plugged/fzf/test/test_go.rb	/^  def fzf!(*opts)$/;"	f	class:TestBase
fzf#complete	autoload/plugged/fzf.vim/plugin/fzf.vim	/^function! fzf#complete(...)$/;"	f
fzf#exec	autoload/plugged/fzf/plugin/fzf.vim	/^function! fzf#exec(...)$/;"	f
fzf#install	autoload/plugged/fzf/plugin/fzf.vim	/^function! fzf#install()$/;"	f
fzf#run	autoload/plugged/fzf/plugin/fzf.vim	/^function! fzf#run(...) abort$/;"	f
fzf#shellescape	autoload/plugged/fzf/plugin/fzf.vim	/^function! fzf#shellescape(arg, ...)$/;"	f
fzf#vim#_buflisted_sorted	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_buflisted_sorted()$/;"	f
fzf#vim#_format_buffer	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_format_buffer(b)$/;"	f
fzf#vim#_lines	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_lines(all)$/;"	f
fzf#vim#_recent_files	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_recent_files()$/;"	f
fzf#vim#_uniq	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_uniq(list)$/;"	f
fzf#vim#ag	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag(query, ...)$/;"	f
fzf#vim#ag_raw	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag_raw(command_suffix, ...)$/;"	f
fzf#vim#buffer_commits	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_commits(...)$/;"	f
fzf#vim#buffer_lines	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_lines(...)$/;"	f
fzf#vim#buffer_tags	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_tags(query, ...)$/;"	f
fzf#vim#buffers	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffers(...)$/;"	f
fzf#vim#colors	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#colors(...)$/;"	f
fzf#vim#command_history	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#command_history(...)$/;"	f
fzf#vim#commands	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commands(...)$/;"	f
fzf#vim#commits	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commits(...)$/;"	f
fzf#vim#complete	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#complete(...)$/;"	f
fzf#vim#complete#buffer_line	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#buffer_line(...)$/;"	f
fzf#vim#complete#line	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#line(...)$/;"	f
fzf#vim#complete#path	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#path(command, ...)$/;"	f
fzf#vim#complete#word	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#word(...)$/;"	f
fzf#vim#files	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#files(dir, ...)$/;"	f
fzf#vim#filetypes	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#filetypes(...)$/;"	f
fzf#vim#gitfiles	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#gitfiles(args, ...)$/;"	f
fzf#vim#grep	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#grep(grep_command, has_column, ...)$/;"	f
fzf#vim#helptags	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#helptags(...)$/;"	f
fzf#vim#history	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#history(...)$/;"	f
fzf#vim#lines	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#lines(...)$/;"	f
fzf#vim#locate	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#locate(query, ...)$/;"	f
fzf#vim#maps	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#maps(mode, ...)$/;"	f
fzf#vim#marks	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#marks(...)$/;"	f
fzf#vim#search_history	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#search_history(...)$/;"	f
fzf#vim#snippets	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#snippets(...)$/;"	f
fzf#vim#tags	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#tags(query, ...)$/;"	f
fzf#vim#windows	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#windows(...)$/;"	f
fzf#vim#with_preview	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#with_preview(...)$/;"	f
fzf#wrap	autoload/plugged/fzf/plugin/fzf.vim	/^function! fzf#wrap(...)$/;"	f
fzf-cd-widget	autoload/plugged/fzf/shell/key-bindings.zsh	/^fzf-cd-widget() {$/;"	f
fzf-completion	autoload/plugged/fzf/shell/completion.zsh	/^fzf-completion() {$/;"	f
fzf-file-widget	autoload/plugged/fzf/shell/key-bindings.bash	/^fzf-file-widget() {$/;"	f
fzf-file-widget	autoload/plugged/fzf/shell/key-bindings.zsh	/^fzf-file-widget() {$/;"	f
fzf-history-widget	autoload/plugged/fzf/shell/key-bindings.zsh	/^fzf-history-widget() {$/;"	f
fzf-tmux	autoload/plugged/fzf/man/man1/fzf-tmux.1	/^.TH fzf-tmux 1 "Apr 2021" "fzf 0.27.0" "fzf-tmux - open fzf in tmux split pane"$/;"	t
fzf.on_exit	autoload/plugged/fzf/plugin/fzf.vim	/^      function! fzf.on_exit(job_id, exit_status, event) dict$/;"	f
fzf.on_exit	autoload/plugged/fzf/plugin/fzf.vim	/^  function! fzf.on_exit(id, code, ...)$/;"	f
fzf.switch_back	autoload/plugged/fzf/plugin/fzf.vim	/^  function! fzf.switch_back(inplace)$/;"	f
fzf_base	autoload/plugged/fzf/install.ps1	/^$fzf_base=Split-Path -Parent $MyInvocation.MyCommand.Definition$/;"	v
fzf_buffers	autoload/plugged/fzf.vim/plugin/fzf.vim	/^augroup fzf_buffers$/;"	a
fzf_gitignore#run	autoload/plugged/vim-polyglot/autoload/fzf_gitignore.vim	/^function! fzf_gitignore#run() abort$/;"	f
fzf_popd	autoload/plugged/fzf/plugin/fzf.vim	/^augroup fzf_popd$/;"	a
fzf_swap	autoload/plugged/fzf/plugin/fzf.vim	/^    augroup fzf_swap$/;"	a
g	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
g	autoload/plugged/coc.nvim/build/index.js	/^`),a++,u=i,s=14;switch(x){case 123:return i++,s=1;case 125:return i++,s=2;case 91:return i++,s=3/;"	v
g	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
g	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:a
g	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f	function:$D
g3	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
g7	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
g8	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
g:AutoPairs	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairs = {'(':')', '[':']', '{':'}',"'":"'",'"':'"', '```':'```', '"""':'"""', "'''":/;"	v
g:AutoPairsCenterLine	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsCenterLine = 1$/;"	v
g:AutoPairsFlyMode	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsFlyMode = 0$/;"	v
g:AutoPairsLoaded	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^let g:AutoPairsLoaded = 1$/;"	v
g:AutoPairsMapBS	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapBS = 1$/;"	v
g:AutoPairsMapCR	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapCR = 1$/;"	v
g:AutoPairsMapCh	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapCh = 1$/;"	v
g:AutoPairsMapSpace	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapSpace = 1$/;"	v
g:AutoPairsMoveCharacter	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMoveCharacter = "()[]{}\\"'"$/;"	v
g:AutoPairsMultilineClose	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMultilineClose = 1$/;"	v
g:AutoPairsShortcutBackInsert	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutBackInsert = '<M-b>'$/;"	v
g:AutoPairsShortcutFastWrap	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutFastWrap = '<M-e>'$/;"	v
g:AutoPairsShortcutJump	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutJump = '<M-n>'$/;"	v
g:AutoPairsShortcutToggle	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutToggle = '<M-p>'$/;"	v
g:AutoPairsSmartQuotes	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsSmartQuotes = 1$/;"	v
g:AutoPairsWildClosedPair	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsWildClosedPair = ''$/;"	v
g:CtrlSpaceStatuslineFunction	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^  let g:CtrlSpaceStatuslineFunction = "airline#extensions#ctrlspace#statusline()"$/;"	v
g:Ferm_SpecialDelimiters	autoload/plugged/vim-polyglot/syntax/ferm.vim	/^    let   g:Ferm_SpecialDelimiters = g:fermSpecialDelimiters$/;"	v
g:NERDCustomDelimiters	autoload/plugged/vim-polyglot/ftplugin/caddyfile.vim	/^	let g:NERDCustomDelimiters = {'caddyfile': s:delimiters}$/;"	v
g:NERDCustomDelimiters	autoload/plugged/vim-polyglot/ftplugin/hcl.vim	/^        let g:NERDCustomDelimiters.hcl = s:delims$/;"	v
g:NERDCustomDelimiters	autoload/plugged/vim-polyglot/ftplugin/hcl.vim	/^    let g:NERDCustomDelimiters = { 'hcl': s:delims }$/;"	v
g:NERDDelimiterMap	autoload/plugged/vim-polyglot/ftplugin/caddyfile.vim	/^		let g:NERDDelimiterMap.caddyfile = s:delimiters$/;"	v
g:NERDDelimiterMap	autoload/plugged/vim-polyglot/ftplugin/hcl.vim	/^        let g:NERDDelimiterMap.hcl = s:delims$/;"	v
g:NERDTree	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoCenter	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeAutoCenter            = get(g:, 'NERDTreeAutoCenter',            1)$/;"	v
g:NERDTreeAutoCenterThreshold	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeAutoCenterThreshold   = get(g:, 'NERDTreeAutoCenterThreshold',   3)$/;"	v
g:NERDTreeAutoDeleteBuffer	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeBookmarks	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^        let g:NERDTreeBookmarks = []$/;"	v
g:NERDTreeBookmarksFile	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeBookmarksFile         = get(g:, 'NERDTreeBookmarksFile',         expand('$HOME') ./;"	v
g:NERDTreeBookmarksSort	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeBookmarksSort         = get(g:, 'NERDTreeBookmarksSort',         1)$/;"	v
g:NERDTreeCascadeOpenSingleChildDir	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeCascadeOpenSingleChildDir = get(g:, 'NERDTreeCascadeOpenSingleChildDir', 1)$/;"	v
g:NERDTreeCascadeSingleChildDir	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeCascadeSingleChildDir     = get(g:, 'NERDTreeCascadeSingleChildDir',     1)$/;"	v
g:NERDTreeCaseSensitiveSort	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeCaseSensitiveSort     = get(g:, 'NERDTreeCaseSensitiveSort',     0)$/;"	v
g:NERDTreeChDirMode	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeChDirMode             = get(g:, 'NERDTreeChDirMode',             0)$/;"	v
g:NERDTreeCopyCmd	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyCmd      = get(g:, 'NERDTreeCopyCmd',      'cp -r ')$/;"	v
g:NERDTreeCopyDirCmd	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyDirCmd   = get(g:, 'NERDTreeCopyDirCmd',   'xcopy \/s \/e \/i \/y \/q ')$/;"	v
g:NERDTreeCopyFileCmd	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyFileCmd  = get(g:, 'NERDTreeCopyFileCmd',  'copy \/y ')$/;"	v
g:NERDTreeCreatePrefix	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeCreatePrefix          = get(g:, 'NERDTreeCreatePrefix',          'silent')$/;"	v
g:NERDTreeCreator	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeCustomOpenArgs	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^        let g:NERDTreeCustomOpenArgs = get(g:, 'NERDTreeCustomOpenArgs', {})$/;"	v
g:NERDTreeCustomOpenArgs	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^        let g:NERDTreeCustomOpenArgs = l:defaultOpenArgs$/;"	v
g:NERDTreeDirArrowCollapsible	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowCollapsible = get(g:, 'NERDTreeDirArrowCollapsible', '~')$/;"	v
g:NERDTreeDirArrowCollapsible	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowCollapsible = get(g:, 'NERDTreeDirArrowCollapsible', '▾')$/;"	v
g:NERDTreeDirArrowExpandable	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowExpandable  = get(g:, 'NERDTreeDirArrowExpandable',  '+')$/;"	v
g:NERDTreeDirArrowExpandable	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowExpandable  = get(g:, 'NERDTreeDirArrowExpandable',  '▸')$/;"	v
g:NERDTreeDirNode	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	autoload/plugged/NERDTree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	autoload/plugged/NERDTree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeGlyphReadOnly	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeGlyphReadOnly = get(g:, 'NERDTreeGlyphReadOnly', 'RO')$/;"	v
g:NERDTreeHighlightCursorline	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeHighlightCursorline   = get(g:, 'NERDTreeHighlightCursorline',   1)$/;"	v
g:NERDTreeHijackNetrw	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeHijackNetrw           = get(g:, 'NERDTreeHijackNetrw',           1)$/;"	v
g:NERDTreeIgnore	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeIgnore                = get(g:, 'NERDTreeIgnore',                ['\\~$'])$/;"	v
g:NERDTreeInvalidBookmarks	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^        let g:NERDTreeInvalidBookmarks = []$/;"	v
g:NERDTreeKeyMap	autoload/plugged/NERDTree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMapActivateNode	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapActivateNode    = get(g:, 'NERDTreeMapActivateNode',    'o')$/;"	v
g:NERDTreeMapCWD	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCWD             = get(g:, 'NERDTreeMapCWD',             'CD')$/;"	v
g:NERDTreeMapChangeRoot	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapChangeRoot      = get(g:, 'NERDTreeMapChangeRoot',      'C')$/;"	v
g:NERDTreeMapChdir	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapChdir           = get(g:, 'NERDTreeMapChdir',           'cd')$/;"	v
g:NERDTreeMapCloseChildren	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCloseChildren   = get(g:, 'NERDTreeMapCloseChildren',   'X')$/;"	v
g:NERDTreeMapCloseDir	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCloseDir        = get(g:, 'NERDTreeMapCloseDir',        'x')$/;"	v
g:NERDTreeMapCustomOpen	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCustomOpen      = get(g:, 'NERDTreeMapCustomOpen',      '<CR>')$/;"	v
g:NERDTreeMapDeleteBookmark	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapDeleteBookmark  = get(g:, 'NERDTreeMapDeleteBookmark',  'D')$/;"	v
g:NERDTreeMapHelp	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapHelp            = get(g:, 'NERDTreeMapHelp',            '?')$/;"	v
g:NERDTreeMapJumpFirstChild	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpFirstChild  = get(g:, 'NERDTreeMapJumpFirstChild',  'K')$/;"	v
g:NERDTreeMapJumpLastChild	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpLastChild   = get(g:, 'NERDTreeMapJumpLastChild',   'J')$/;"	v
g:NERDTreeMapJumpNextSibling	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpNextSibling = get(g:, 'NERDTreeMapJumpNextSibling', '<C-j>')$/;"	v
g:NERDTreeMapJumpParent	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpParent      = get(g:, 'NERDTreeMapJumpParent',      'p')$/;"	v
g:NERDTreeMapJumpPrevSibling	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpPrevSibling = get(g:, 'NERDTreeMapJumpPrevSibling', '<C-k>')$/;"	v
g:NERDTreeMapJumpRoot	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpRoot        = get(g:, 'NERDTreeMapJumpRoot',        'P')$/;"	v
g:NERDTreeMapMenu	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapMenu            = get(g:, 'NERDTreeMapMenu',            'm')$/;"	v
g:NERDTreeMapOpenExpl	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenExpl        = get(g:, 'NERDTreeMapOpenExpl',        'e')$/;"	v
g:NERDTreeMapOpenInTab	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenInTab       = get(g:, 'NERDTreeMapOpenInTab',       't')$/;"	v
g:NERDTreeMapOpenInTabSilent	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenInTabSilent = get(g:, 'NERDTreeMapOpenInTabSilent', 'T')$/;"	v
g:NERDTreeMapOpenRecursively	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenRecursively = get(g:, 'NERDTreeMapOpenRecursively', 'O')$/;"	v
g:NERDTreeMapOpenSplit	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenSplit       = get(g:, 'NERDTreeMapOpenSplit',       'i')$/;"	v
g:NERDTreeMapOpenVSplit	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenVSplit      = get(g:, 'NERDTreeMapOpenVSplit',      's')$/;"	v
g:NERDTreeMapPreview	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreview         = get(g:, 'NERDTreeMapPreview',         'g'.NERDTreeMapActivate/;"	v
g:NERDTreeMapPreviewSplit	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreviewSplit    = get(g:, 'NERDTreeMapPreviewSplit',    'g'.NERDTreeMapOpenSpli/;"	v
g:NERDTreeMapPreviewVSplit	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreviewVSplit   = get(g:, 'NERDTreeMapPreviewVSplit',   'g'.NERDTreeMapOpenVSpl/;"	v
g:NERDTreeMapQuit	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapQuit            = get(g:, 'NERDTreeMapQuit',            'q')$/;"	v
g:NERDTreeMapRefresh	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapRefresh         = get(g:, 'NERDTreeMapRefresh',         'r')$/;"	v
g:NERDTreeMapRefreshRoot	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapRefreshRoot     = get(g:, 'NERDTreeMapRefreshRoot',     'R')$/;"	v
g:NERDTreeMapToggleBookmarks	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleBookmarks = get(g:, 'NERDTreeMapToggleBookmarks', 'B')$/;"	v
g:NERDTreeMapToggleFiles	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleFiles     = get(g:, 'NERDTreeMapToggleFiles',     'F')$/;"	v
g:NERDTreeMapToggleFilters	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleFilters   = get(g:, 'NERDTreeMapToggleFilters',   'f')$/;"	v
g:NERDTreeMapToggleHidden	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleHidden    = get(g:, 'NERDTreeMapToggleHidden',    'I')$/;"	v
g:NERDTreeMapToggleZoom	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleZoom      = get(g:, 'NERDTreeMapToggleZoom',      'A')$/;"	v
g:NERDTreeMapUpdir	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapUpdir           = get(g:, 'NERDTreeMapUpdir',           'u')$/;"	v
g:NERDTreeMapUpdirKeepOpen	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMapUpdirKeepOpen   = get(g:, 'NERDTreeMapUpdirKeepOpen',   'U')$/;"	v
g:NERDTreeMarkBookmarks	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMarkBookmarks         = get(g:, 'NERDTreeMarkBookmarks',         1)$/;"	v
g:NERDTreeMenuController	autoload/plugged/NERDTree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuDown	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMenuDown           = get(g:, 'NERDTreeMenuDown',           'j')$/;"	v
g:NERDTreeMenuItem	autoload/plugged/NERDTree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeMenuUp	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMenuUp             = get(g:, 'NERDTreeMenuUp',             'k')$/;"	v
g:NERDTreeMinimalMenu	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMinimalMenu           = get(g:, 'NERDTreeMinimalMenu',           0)$/;"	v
g:NERDTreeMinimalUI	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMinimalUI             = get(g:, 'NERDTreeMinimalUI',             0)$/;"	v
g:NERDTreeMouseMode	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeMouseMode             = get(g:, 'NERDTreeMouseMode',             1)$/;"	v
g:NERDTreeNaturalSort	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeNaturalSort           = get(g:, 'NERDTreeNaturalSort',           0)$/;"	v
g:NERDTreeNodeDelimiter	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\u00a0")$/;"	v
g:NERDTreeNodeDelimiter	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\u00b7")$/;"	v
g:NERDTreeNodeDelimiter	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\x07")$/;"	v
g:NERDTreeNotificationThreshold	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeNotificationThreshold = get(g:, 'NERDTreeNotificationThreshold', 100)$/;"	v
g:NERDTreeOldSortOrder	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^    let g:NERDTreeOldSortOrder = g:NERDTreeSortOrder$/;"	v
g:NERDTreeOldSortOrder	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^                let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOldSortOrder	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^        let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOldSortOrder	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOpener	autoload/plugged/NERDTree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	autoload/plugged/NERDTree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeQuitOnOpen	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeQuitOnOpen            = get(g:, 'NERDTreeQuitOnOpen',            0)$/;"	v
g:NERDTreeRemoveDirCmd	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^    let g:NERDTreeRemoveDirCmd = get(g:, 'NERDTreeRemoveDirCmd', 'rm -rf ')$/;"	v
g:NERDTreeRemoveDirCmd	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^    let g:NERDTreeRemoveDirCmd = get(g:, 'NERDTreeRemoveDirCmd', 'rmdir \/s \/q ')$/;"	v
g:NERDTreeRespectWildIgnore	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeRespectWildIgnore     = get(g:, 'NERDTreeRespectWildIgnore',     0)$/;"	v
g:NERDTreeShowBookmarks	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeShowBookmarks         = get(g:, 'NERDTreeShowBookmarks',         0)$/;"	v
g:NERDTreeShowFiles	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeShowFiles             = get(g:, 'NERDTreeShowFiles',             1)$/;"	v
g:NERDTreeShowHidden	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeShowHidden            = get(g:, 'NERDTreeShowHidden',            0)$/;"	v
g:NERDTreeShowLineNumbers	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeShowLineNumbers       = get(g:, 'NERDTreeShowLineNumbers',       0)$/;"	v
g:NERDTreeSortDirs	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeSortDirs              = get(g:, 'NERDTreeSortDirs',              1)$/;"	v
g:NERDTreeSortHiddenFirst	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeSortHiddenFirst       = get(g:, 'NERDTreeSortHiddenFirst',       1)$/;"	v
g:NERDTreeSortOrder	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeSortOrder    = get(g:, 'NERDTreeSortOrder', ['\\\/$', '*', '\\.swp$', '\\.bak$', '/;"	v
g:NERDTreeStatusline	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeStatusline = get(g:, 'NERDTreeStatusline', "%{exists('b:NERDTree')?b:NERDTree.root/;"	v
g:NERDTreeUI	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:NERDTreeUseTCD	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeUseTCD                = get(g:, 'NERDTreeUseTCD',                0)$/;"	v
g:NERDTreeWinPos	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeWinPos  = get(g:, 'NERDTreeWinPos', 'left')$/;"	v
g:NERDTreeWinSize	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let g:NERDTreeWinSize = get(g:, 'NERDTreeWinSize', 31)$/;"	v
g:TextileBrowser	autoload/plugged/vim-polyglot/ftplugin/textile.vim	/^    let g:TextileBrowser='Safari'$/;"	v
g:__fzf_command	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let g:__fzf_command = "normal ".prefix.item."\\<cr>"$/;"	v
g:__vital_color_echo_already_highlighted	autoload/plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^        let g:__vital_color_echo_already_highlighted = 1$/;"	v
g:_fugitive_last_job	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:_fugitive_last_job = a:state$/;"	v
g:_plug_bang	autoload/plug.vim	/^    let g:_plug_bang = (s:is_win && has('gui_running') ? 'silent ' : '').'!'.escape(cmd, '#!%')$/;"	v
g:ada#Comment	autoload/plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#Comment	   = "\\\\v^(\\"[^\\"]*\\"|'.'|[^\\"']){-}\\\\zs\\\\s*--.*"$/;"	v
g:ada#Ctags_Kinds	autoload/plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#Ctags_Kinds = {$/;"	v
g:ada#DotWordRegex	autoload/plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#DotWordRegex	   = '\\a\\w*\\(\\_s*\\.\\_s*\\a\\w*\\)*'$/;"	v
g:ada#Keywords	autoload/plugged/vim-polyglot/autoload/ada.vim	/^	let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	autoload/plugged/vim-polyglot/autoload/ada.vim	/^       let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	autoload/plugged/vim-polyglot/autoload/ada.vim	/^    let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	autoload/plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#Keywords	   = []$/;"	v
g:ada#WordRegex	autoload/plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#WordRegex	   = '\\a\\w*'$/;"	v
g:ada_	autoload/plugged/vim-polyglot/autoload/ada.vim	/^      let g:ada_{a:option}=1$/;"	v
g:ada_default_compiler	autoload/plugged/vim-polyglot/ftplugin/ada.vim	/^      let g:ada_default_compiler = 'decada'$/;"	v
g:ada_default_compiler	autoload/plugged/vim-polyglot/ftplugin/ada.vim	/^      let g:ada_default_compiler = 'gnat'$/;"	v
g:airline#extensions#default#layout	autoload/plugged/vim-airline/t/extensions_default.vim	/^let g:airline#extensions#default#layout = [$/;"	v
g:airline#extensions#example#number_of_cats	autoload/plugged/vim-airline/autoload/airline/extensions/example.vim	/^  let g:airline#extensions#example#number_of_cats = 42$/;"	v
g:airline#extensions#localsearch#inverted	autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let g:airline#extensions#localsearch#inverted = get(g:, 'airline#extensions#localsearch#inverted/;"	v
g:airline#extensions#localsearch#loaded	autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let g:airline#extensions#localsearch#loaded = 001$/;"	v
g:airline#extensions#obsession#indicator_text	autoload/plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^  let g:airline#extensions#obsession#indicator_text = '$'$/;"	v
g:airline#extensions#quickfix#location_text	autoload/plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^  let g:airline#extensions#quickfix#location_text = 'Location'$/;"	v
g:airline#extensions#quickfix#quickfix_text	autoload/plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^  let g:airline#extensions#quickfix#quickfix_text = 'Quickfix'$/;"	v
g:airline#extensions#tabline#enabled	autoload/plugged/vim-airline/t/extensions_tabline.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#tabline#enabled	themes/airline.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#tabline#exclude_buffers	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:airline#extensions#tabline#exclude_buffers = []$/;"	v
g:airline#extensions#tabline#exclude_buffers	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    let g:airline#extensions#tabline#exclude_buffers = []$/;"	v
g:airline#extensions#tabline#left_alt_sep	themes/airline.vim	/^let g:airline#extensions#tabline#left_alt_sep = ''$/;"	v
g:airline#extensions#tabline#left_sep	themes/airline.vim	/^let g:airline#extensions#tabline#left_sep = ''$/;"	v
g:airline#extensions#tabline#right_alt_sep	themes/airline.vim	/^let g:airline#extensions#tabline#right_alt_sep = ''$/;"	v
g:airline#extensions#tabline#right_sep	themes/airline.vim	/^let g:airline#extensions#tabline#right_sep = ''$/;"	v
g:airline#extensions#tabline#show_tabs	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:airline#extensions#tabline#show_tabs = 0$/;"	v
g:airline#extensions#tabline#show_tabs	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:airline#extensions#tabline#show_tabs = 1$/;"	v
g:airline#extensions#whitespace#enabled	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^    let g:airline#extensions#whitespace#enabled = s:enabled$/;"	v
g:airline#extensions#windowswap#indicator_text	autoload/plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^  let g:airline#extensions#windowswap#indicator_text = 'WS'$/;"	v
g:airline#extensions#wordcount#filetypes	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^  let g:airline#extensions#wordcount#filetypes = filetypes$/;"	v
g:airline#highlighter#normal_fg_hi	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^      let g:airline#highlighter#normal_fg_hi = synIDattr(synIDtrans(hlID('Normal')), 'fg', 'cter/;"	v
g:airline#init#bootstrapping	autoload/plugged/vim-airline/autoload/airline/init.vim	/^  let g:airline#init#bootstrapping = 1$/;"	v
g:airline#init#is_windows	autoload/plugged/vim-airline/autoload/airline/init.vim	/^  let g:airline#init#is_windows = has('win32') || has('win64')$/;"	v
g:airline#init#vim_async	autoload/plugged/vim-airline/autoload/airline/init.vim	/^  let g:airline#init#vim_async = (v:version >= 800 && has('job'))$/;"	v
g:airline#themes#	autoload/plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^    let g:airline#themes#{s:theme}#palette = palette$/;"	v
g:airline#themes#alduin#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette = {}$/;"	v
g:airline#themes#alduin#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#alduin#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN2, s/;"	v
g:airline#themes#alduin#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.inactive_modified = s:modified$/;"	v
g:airline#themes#alduin#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#alduin#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.insert_modified = s:modified$/;"	v
g:airline#themes#alduin#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#alduin#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.normal_modified = s:modified$/;"	v
g:airline#themes#alduin#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3/;"	v
g:airline#themes#alduin#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.replace_modified = s:modified$/;"	v
g:airline#themes#alduin#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#alduin#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.visual_modified = s:modified$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette = {}$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.inactive_modified = {$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:I3)$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert.airline_error =$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert.airline_warning =$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert_modified = copy(g:airline#themes#angr#palette.normal_mo/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert_modified.airline_error =$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert_paste = {$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.normal.airline_error = [$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.normal.airline_warning = [$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.normal_modified = {$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.normal_modified.airline_error =$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.replace = {$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.replace.airline_error =$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.replace.airline_warning =$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.replace_modified = copy(g:airline#themes#angr#palette.insert_m/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.replace_modified.airline_error =$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:V3)$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.visual.airline_error =$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.visual.airline_warning =$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.visual_modified = copy(g:airline#themes#angr#palette.insert_mo/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.visual_modified.airline_error =$/;"	v
g:airline#themes#angr#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette = {}$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.accents = {$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.inactive = airline#themes#generate_color_map(s:airline_a/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.inactive_modified = s:modified$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.insert = airline#themes#generate_color_map(s:airline_a_i/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.insert.airline_error = s:error$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.insert.airline_warning = s:warning$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.insert_modified = s:modified$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.insert_modified.airline_error = s:error$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.insert_modified.airline_warning = s:warning$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.normal = airline#themes#generate_color_map(s:airline_a_n/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.normal.airline_error = s:error$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.normal.airline_warning = s:warning$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.normal_modified = s:modified$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.normal_modified.airline_error = s:error$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.normal_modified.airline_warning = s:warning$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.replace = airline#themes#generate_color_map(s:airline_a_/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.replace.airline_error = s:error$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.replace.airline_warning = s:warning$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.replace_modified = s:modified$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.replace_modified.airline_error = s:error$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.replace_modified.airline_warning = s:warning$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.visual = airline#themes#generate_color_map(s:airline_a_v/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.visual.airline_error = s:error$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.visual.airline_warning = s:warning$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.visual_modified = s:modified$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.visual_modified.airline_error = s:error$/;"	v
g:airline#themes#apprentice#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.visual_modified.airline_warning = s:warning$/;"	v
g:airline#themes#atomic#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/atomic.vim	/^	let g:airline#themes#atomic#palette.accents = {'black' : airline#themes#get_highlight2(['LineNr/;"	v
g:airline#themes#atomic#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/atomic.vim	/^	let g:airline#themes#atomic#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, /;"	v
g:airline#themes#atomic#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/atomic.vim	/^	let g:airline#themes#atomic#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3/;"	v
g:airline#themes#atomic#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/atomic.vim	/^	let g:airline#themes#atomic#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3/;"	v
g:airline#themes#atomic#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/atomic.vim	/^	let g:airline#themes#atomic#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R/;"	v
g:airline#themes#atomic#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/atomic.vim	/^	let g:airline#themes#atomic#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3/;"	v
g:airline#themes#atomic#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/atomic.vim	/^let g:airline#themes#atomic#palette = {}$/;"	v
g:airline#themes#ayu_dark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let g:airline#themes#ayu_dark#palette = {}$/;"	v
g:airline#themes#ayu_dark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let g:airline#themes#ayu_dark#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s/;"	v
g:airline#themes#ayu_dark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let g:airline#themes#ayu_dark#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I/;"	v
g:airline#themes#ayu_dark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let g:airline#themes#ayu_dark#palette.insert_replace = {$/;"	v
g:airline#themes#ayu_dark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let g:airline#themes#ayu_dark#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N/;"	v
g:airline#themes#ayu_dark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let g:airline#themes#ayu_dark#palette.replace = copy(g:airline#themes#ayu_dark#palette.normal)$/;"	v
g:airline#themes#ayu_dark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let g:airline#themes#ayu_dark#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[3/;"	v
g:airline#themes#ayu_dark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let g:airline#themes#ayu_dark#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V/;"	v
g:airline#themes#ayu_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let g:airline#themes#ayu_light#palette = {}$/;"	v
g:airline#themes#ayu_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let g:airline#themes#ayu_light#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, /;"	v
g:airline#themes#ayu_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let g:airline#themes#ayu_light#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:/;"	v
g:airline#themes#ayu_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let g:airline#themes#ayu_light#palette.insert_replace = {$/;"	v
g:airline#themes#ayu_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let g:airline#themes#ayu_light#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:/;"	v
g:airline#themes#ayu_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let g:airline#themes#ayu_light#palette.replace = copy(g:airline#themes#ayu_light#palette.normal)$/;"	v
g:airline#themes#ayu_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let g:airline#themes#ayu_light#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[/;"	v
g:airline#themes#ayu_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let g:airline#themes#ayu_light#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:/;"	v
g:airline#themes#ayu_mirage#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette = {}$/;"	v
g:airline#themes#ayu_mirage#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA,/;"	v
g:airline#themes#ayu_mirage#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s/;"	v
g:airline#themes#ayu_mirage#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.insert_replace = {$/;"	v
g:airline#themes#ayu_mirage#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s/;"	v
g:airline#themes#ayu_mirage#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.replace = copy(g:airline#themes#ayu_mirage#palette.norma/;"	v
g:airline#themes#ayu_mirage#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE/;"	v
g:airline#themes#ayu_mirage#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s/;"	v
g:airline#themes#badwolf#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette = {}$/;"	v
g:airline#themes#badwolf#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.accents = {$/;"	v
g:airline#themes#badwolf#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:/;"	v
g:airline#themes#badwolf#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.inactive_modified = {$/;"	v
g:airline#themes#badwolf#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3/;"	v
g:airline#themes#badwolf#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert_modified = {$/;"	v
g:airline#themes#badwolf#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert_paste = {$/;"	v
g:airline#themes#badwolf#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3/;"	v
g:airline#themes#badwolf#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.normal_modified = {$/;"	v
g:airline#themes#badwolf#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.normal_modified.airline_term = s:N3$/;"	v
g:airline#themes#badwolf#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace = copy(airline#themes#badwolf#palette.insert)$/;"	v
g:airline#themes#badwolf#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1]/;"	v
g:airline#themes#badwolf#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace_modified = g:airline#themes#badwolf#palette.insert_/;"	v
g:airline#themes#badwolf#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.terminal = airline#themes#generate_color_map(s:I1, s:I2, s:/;"	v
g:airline#themes#badwolf#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.terminal.airline_term = s:I3$/;"	v
g:airline#themes#badwolf#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3/;"	v
g:airline#themes#badwolf#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.visual_modified = {$/;"	v
g:airline#themes#badwolf#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.visual_modified.airline_term = s:V2$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette = {}$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.accents = {$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.inactive =$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.inactive_modified =$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.insert.airline_error =$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.insert.airline_warning =$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.insert_modified = g:airline#themes#base16#palette.normal/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.insert_modified.airline_error =$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.normal.airline_error = [$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.normal.airline_warning = [$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.normal_modified = {$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.normal_modified.airline_error =$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, /;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.replace.airline_error =$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.replace.airline_warning =$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.replace_modified = g:airline#themes#base16#palette.norma/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.replace_modified.airline_error =$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.visual.airline_error =$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.visual.airline_warning =$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.visual_modified = g:airline#themes#base16#palette.normal/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.visual_modified.airline_error =$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let g:airline#themes#base16#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette = {}$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.inactive_modified = {$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:I/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert_modified = copy(g:airline#themes#base16#palette.nor/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert_paste = {$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.normal_modified = {$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.replace = {$/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.replace_modified = copy(g:airline#themes#base16#palette.in/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:V/;"	v
g:airline#themes#base16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.visual_modified = copy(g:airline#themes#base16#palette.ins/;"	v
g:airline#themes#base16_3024#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette = {}$/;"	v
g:airline#themes#base16_3024#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_3024#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette.inactive = airline#themes#generate_color_map(s:IA1, s:I/;"	v
g:airline#themes#base16_3024#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, /;"	v
g:airline#themes#base16_3024#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, /;"	v
g:airline#themes#base16_3024#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette.replace = airline#themes#generate_color_map(s:R1, s:R2,/;"	v
g:airline#themes#base16_3024#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, /;"	v
g:airline#themes#base16_adwaita#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let g:airline#themes#base16_adwaita#palette = {}$/;"	v
g:airline#themes#base16_adwaita#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let g:airline#themes#base16_adwaita#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_adwaita#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let g:airline#themes#base16_adwaita#palette.inactive = airline#themes#generate_color_map(s:IA1, /;"	v
g:airline#themes#base16_adwaita#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let g:airline#themes#base16_adwaita#palette.insert = airline#themes#generate_color_map(s:I1, s:I/;"	v
g:airline#themes#base16_adwaita#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let g:airline#themes#base16_adwaita#palette.normal = airline#themes#generate_color_map(s:N1, s:N/;"	v
g:airline#themes#base16_adwaita#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let g:airline#themes#base16_adwaita#palette.replace = airline#themes#generate_color_map(s:R1, s:/;"	v
g:airline#themes#base16_adwaita#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let g:airline#themes#base16_adwaita#palette.visual = airline#themes#generate_color_map(s:V1, s:V/;"	v
g:airline#themes#base16_apathy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette = {}$/;"	v
g:airline#themes#base16_apathy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_apathy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette.inactive = airline#themes#generate_color_map(s:IA1, s/;"	v
g:airline#themes#base16_apathy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette.insert = airline#themes#generate_color_map(s:I1, s:I2/;"	v
g:airline#themes#base16_apathy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette.normal = airline#themes#generate_color_map(s:N1, s:N2/;"	v
g:airline#themes#base16_apathy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette.replace = airline#themes#generate_color_map(s:R1, s:R/;"	v
g:airline#themes#base16_apathy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette.visual = airline#themes#generate_color_map(s:V1, s:V2/;"	v
g:airline#themes#base16_ashes#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette = {}$/;"	v
g:airline#themes#base16_ashes#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_ashes#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette.inactive = airline#themes#generate_color_map(s:IA1, s:/;"	v
g:airline#themes#base16_ashes#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette.insert = airline#themes#generate_color_map(s:I1, s:I2,/;"	v
g:airline#themes#base16_ashes#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette.normal = airline#themes#generate_color_map(s:N1, s:N2,/;"	v
g:airline#themes#base16_ashes#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette.replace = airline#themes#generate_color_map(s:R1, s:R2/;"	v
g:airline#themes#base16_ashes#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette.visual = airline#themes#generate_color_map(s:V1, s:V2,/;"	v
g:airline#themes#base16_atelierdune#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette = {}$/;"	v
g:airline#themes#base16_atelierdune#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.ctrlp = airline#extensions#ctrlp#generate_color_/;"	v
g:airline#themes#base16_atelierdune#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.inactive = airline#themes#generate_color_map(s:I/;"	v
g:airline#themes#base16_atelierdune#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.insert = airline#themes#generate_color_map(s:I1,/;"	v
g:airline#themes#base16_atelierdune#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.insert.airline_error = s:ERROR$/;"	v
g:airline#themes#base16_atelierdune#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.insert.airline_warning = s:WARNING$/;"	v
g:airline#themes#base16_atelierdune#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.normal = airline#themes#generate_color_map(s:N1,/;"	v
g:airline#themes#base16_atelierdune#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.normal.airline_error = s:ERROR$/;"	v
g:airline#themes#base16_atelierdune#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.normal.airline_warning = s:WARNING$/;"	v
g:airline#themes#base16_atelierdune#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.replace = airline#themes#generate_color_map(s:R1/;"	v
g:airline#themes#base16_atelierdune#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.replace.airline_error = s:ERROR$/;"	v
g:airline#themes#base16_atelierdune#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.replace.airline_warning = s:WARNING$/;"	v
g:airline#themes#base16_atelierdune#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.visual = airline#themes#generate_color_map(s:V1,/;"	v
g:airline#themes#base16_atelierdune#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.visual.airline_error = s:ERROR$/;"	v
g:airline#themes#base16_atelierdune#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.visual.airline_warning = s:WARNING$/;"	v
g:airline#themes#base16_atelierforest#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette = {}$/;"	v
g:airline#themes#base16_atelierforest#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette.ctrlp = airline#extensions#ctrlp#generate_colo/;"	v
g:airline#themes#base16_atelierforest#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette.inactive = airline#themes#generate_color_map(s/;"	v
g:airline#themes#base16_atelierforest#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette.insert = airline#themes#generate_color_map(s:I/;"	v
g:airline#themes#base16_atelierforest#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette.normal = airline#themes#generate_color_map(s:N/;"	v
g:airline#themes#base16_atelierforest#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette.replace = airline#themes#generate_color_map(s:/;"	v
g:airline#themes#base16_atelierforest#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette.visual = airline#themes#generate_color_map(s:V/;"	v
g:airline#themes#base16_atelierheath#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette = {}$/;"	v
g:airline#themes#base16_atelierheath#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette.ctrlp = airline#extensions#ctrlp#generate_color/;"	v
g:airline#themes#base16_atelierheath#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette.inactive = airline#themes#generate_color_map(s:/;"	v
g:airline#themes#base16_atelierheath#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette.insert = airline#themes#generate_color_map(s:I1/;"	v
g:airline#themes#base16_atelierheath#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette.normal = airline#themes#generate_color_map(s:N1/;"	v
g:airline#themes#base16_atelierheath#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette.replace = airline#themes#generate_color_map(s:R/;"	v
g:airline#themes#base16_atelierheath#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette.visual = airline#themes#generate_color_map(s:V1/;"	v
g:airline#themes#base16_atelierlakeside#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette = {}$/;"	v
g:airline#themes#base16_atelierlakeside#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette.ctrlp = airline#extensions#ctrlp#generate_co/;"	v
g:airline#themes#base16_atelierlakeside#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette.inactive = airline#themes#generate_color_map/;"	v
g:airline#themes#base16_atelierlakeside#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette.insert = airline#themes#generate_color_map(s/;"	v
g:airline#themes#base16_atelierlakeside#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette.normal = airline#themes#generate_color_map(s/;"	v
g:airline#themes#base16_atelierlakeside#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette.replace = airline#themes#generate_color_map(/;"	v
g:airline#themes#base16_atelierlakeside#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette.visual = airline#themes#generate_color_map(s/;"	v
g:airline#themes#base16_atelierseaside#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette = {}$/;"	v
g:airline#themes#base16_atelierseaside#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette.ctrlp = airline#extensions#ctrlp#generate_col/;"	v
g:airline#themes#base16_atelierseaside#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette.inactive = airline#themes#generate_color_map(/;"	v
g:airline#themes#base16_atelierseaside#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette.insert = airline#themes#generate_color_map(s:/;"	v
g:airline#themes#base16_atelierseaside#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette.normal = airline#themes#generate_color_map(s:/;"	v
g:airline#themes#base16_atelierseaside#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette.replace = airline#themes#generate_color_map(s/;"	v
g:airline#themes#base16_atelierseaside#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette.visual = airline#themes#generate_color_map(s:/;"	v
g:airline#themes#base16_bespin#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette = {}$/;"	v
g:airline#themes#base16_bespin#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_bespin#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette.inactive = airline#themes#generate_color_map(s:IA1, s/;"	v
g:airline#themes#base16_bespin#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette.insert = airline#themes#generate_color_map(s:I1, s:I2/;"	v
g:airline#themes#base16_bespin#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette.normal = airline#themes#generate_color_map(s:N1, s:N2/;"	v
g:airline#themes#base16_bespin#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette.replace = airline#themes#generate_color_map(s:R1, s:R/;"	v
g:airline#themes#base16_bespin#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette.visual = airline#themes#generate_color_map(s:V1, s:V2/;"	v
g:airline#themes#base16_brewer#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette = {}$/;"	v
g:airline#themes#base16_brewer#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_brewer#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette.inactive = airline#themes#generate_color_map(s:IA1, s/;"	v
g:airline#themes#base16_brewer#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette.insert = airline#themes#generate_color_map(s:I1, s:I2/;"	v
g:airline#themes#base16_brewer#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette.normal = airline#themes#generate_color_map(s:N1, s:N2/;"	v
g:airline#themes#base16_brewer#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette.replace = airline#themes#generate_color_map(s:R1, s:R/;"	v
g:airline#themes#base16_brewer#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette.visual = airline#themes#generate_color_map(s:V1, s:V2/;"	v
g:airline#themes#base16_bright#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette = {}$/;"	v
g:airline#themes#base16_bright#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_bright#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette.inactive = airline#themes#generate_color_map(s:IA1, s/;"	v
g:airline#themes#base16_bright#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette.insert = airline#themes#generate_color_map(s:I1, s:I2/;"	v
g:airline#themes#base16_bright#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette.normal = airline#themes#generate_color_map(s:N1, s:N2/;"	v
g:airline#themes#base16_bright#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette.replace = airline#themes#generate_color_map(s:R1, s:R/;"	v
g:airline#themes#base16_bright#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette.visual = airline#themes#generate_color_map(s:V1, s:V2/;"	v
g:airline#themes#base16_chalk#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette = {}$/;"	v
g:airline#themes#base16_chalk#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_chalk#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette.inactive = airline#themes#generate_color_map(s:IA1, s:/;"	v
g:airline#themes#base16_chalk#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette.insert = airline#themes#generate_color_map(s:I1, s:I2,/;"	v
g:airline#themes#base16_chalk#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette.normal = airline#themes#generate_color_map(s:N1, s:N2,/;"	v
g:airline#themes#base16_chalk#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette.replace = airline#themes#generate_color_map(s:R1, s:R2/;"	v
g:airline#themes#base16_chalk#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette.visual = airline#themes#generate_color_map(s:V1, s:V2,/;"	v
g:airline#themes#base16_classic#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette = {}$/;"	v
g:airline#themes#base16_classic#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_classic#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette.inactive = airline#themes#generate_color_map(s:IA1, /;"	v
g:airline#themes#base16_classic#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette.insert = airline#themes#generate_color_map(s:I1, s:I/;"	v
g:airline#themes#base16_classic#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette.normal = airline#themes#generate_color_map(s:N1, s:N/;"	v
g:airline#themes#base16_classic#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette.replace = airline#themes#generate_color_map(s:R1, s:/;"	v
g:airline#themes#base16_classic#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette.visual = airline#themes#generate_color_map(s:V1, s:V/;"	v
g:airline#themes#base16_codeschool#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette = {}$/;"	v
g:airline#themes#base16_codeschool#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette.ctrlp = airline#extensions#ctrlp#generate_color_m/;"	v
g:airline#themes#base16_codeschool#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette.inactive = airline#themes#generate_color_map(s:IA/;"	v
g:airline#themes#base16_codeschool#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette.insert = airline#themes#generate_color_map(s:I1, /;"	v
g:airline#themes#base16_codeschool#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette.normal = airline#themes#generate_color_map(s:N1, /;"	v
g:airline#themes#base16_codeschool#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette.replace = airline#themes#generate_color_map(s:R1,/;"	v
g:airline#themes#base16_codeschool#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette.visual = airline#themes#generate_color_map(s:V1, /;"	v
g:airline#themes#base16_colors#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette = {}$/;"	v
g:airline#themes#base16_colors#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_colors#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette.inactive = airline#themes#generate_color_map(s:IA1, s/;"	v
g:airline#themes#base16_colors#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette.insert = airline#themes#generate_color_map(s:I1, s:I2/;"	v
g:airline#themes#base16_colors#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette.normal = airline#themes#generate_color_map(s:N1, s:N2/;"	v
g:airline#themes#base16_colors#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette.replace = airline#themes#generate_color_map(s:R1, s:R/;"	v
g:airline#themes#base16_colors#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette.visual = airline#themes#generate_color_map(s:V1, s:V2/;"	v
g:airline#themes#base16_default#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette = {}$/;"	v
g:airline#themes#base16_default#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_default#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette.inactive = airline#themes#generate_color_map(s:IA1, /;"	v
g:airline#themes#base16_default#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette.insert = airline#themes#generate_color_map(s:I1, s:I/;"	v
g:airline#themes#base16_default#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette.normal = airline#themes#generate_color_map(s:N1, s:N/;"	v
g:airline#themes#base16_default#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette.replace = airline#themes#generate_color_map(s:R1, s:/;"	v
g:airline#themes#base16_default#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette.visual = airline#themes#generate_color_map(s:V1, s:V/;"	v
g:airline#themes#base16_eighties#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette = {}$/;"	v
g:airline#themes#base16_eighties#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette.ctrlp = airline#extensions#ctrlp#generate_color_map/;"	v
g:airline#themes#base16_eighties#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette.inactive = airline#themes#generate_color_map(s:IA1,/;"	v
g:airline#themes#base16_eighties#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette.insert = airline#themes#generate_color_map(s:I1, s:/;"	v
g:airline#themes#base16_eighties#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette.normal = airline#themes#generate_color_map(s:N1, s:/;"	v
g:airline#themes#base16_eighties#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette.replace = airline#themes#generate_color_map(s:R1, s/;"	v
g:airline#themes#base16_eighties#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette.visual = airline#themes#generate_color_map(s:V1, s:/;"	v
g:airline#themes#base16_embers#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette = {}$/;"	v
g:airline#themes#base16_embers#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_embers#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette.inactive = airline#themes#generate_color_map(s:IA1, s/;"	v
g:airline#themes#base16_embers#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette.insert = airline#themes#generate_color_map(s:I1, s:I2/;"	v
g:airline#themes#base16_embers#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette.normal = airline#themes#generate_color_map(s:N1, s:N2/;"	v
g:airline#themes#base16_embers#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette.replace = airline#themes#generate_color_map(s:R1, s:R/;"	v
g:airline#themes#base16_embers#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette.visual = airline#themes#generate_color_map(s:V1, s:V2/;"	v
g:airline#themes#base16_flat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette = {}$/;"	v
g:airline#themes#base16_flat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_flat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette.inactive = airline#themes#generate_color_map(s:IA1, s:I/;"	v
g:airline#themes#base16_flat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, /;"	v
g:airline#themes#base16_flat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, /;"	v
g:airline#themes#base16_flat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette.replace = airline#themes#generate_color_map(s:R1, s:R2,/;"	v
g:airline#themes#base16_flat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, /;"	v
g:airline#themes#base16_google#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette = {}$/;"	v
g:airline#themes#base16_google#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_google#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette.inactive = airline#themes#generate_color_map(s:IA1, s/;"	v
g:airline#themes#base16_google#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette.insert = airline#themes#generate_color_map(s:I1, s:I2/;"	v
g:airline#themes#base16_google#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette.normal = airline#themes#generate_color_map(s:N1, s:N2/;"	v
g:airline#themes#base16_google#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette.replace = airline#themes#generate_color_map(s:R1, s:R/;"	v
g:airline#themes#base16_google#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette.visual = airline#themes#generate_color_map(s:V1, s:V2/;"	v
g:airline#themes#base16_grayscale#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette = {}$/;"	v
g:airline#themes#base16_grayscale#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette.ctrlp = airline#extensions#ctrlp#generate_color_ma/;"	v
g:airline#themes#base16_grayscale#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette.inactive = airline#themes#generate_color_map(s:IA1/;"	v
g:airline#themes#base16_grayscale#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette.insert = airline#themes#generate_color_map(s:I1, s/;"	v
g:airline#themes#base16_grayscale#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette.normal = airline#themes#generate_color_map(s:N1, s/;"	v
g:airline#themes#base16_grayscale#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette.replace = airline#themes#generate_color_map(s:R1, /;"	v
g:airline#themes#base16_grayscale#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette.visual = airline#themes#generate_color_map(s:V1, s/;"	v
g:airline#themes#base16_greenscreen#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette = {}$/;"	v
g:airline#themes#base16_greenscreen#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette.ctrlp = airline#extensions#ctrlp#generate_color_/;"	v
g:airline#themes#base16_greenscreen#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette.inactive = airline#themes#generate_color_map(s:I/;"	v
g:airline#themes#base16_greenscreen#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette.insert = airline#themes#generate_color_map(s:I1,/;"	v
g:airline#themes#base16_greenscreen#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette.normal = airline#themes#generate_color_map(s:N1,/;"	v
g:airline#themes#base16_greenscreen#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette.replace = airline#themes#generate_color_map(s:R1/;"	v
g:airline#themes#base16_greenscreen#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette.visual = airline#themes#generate_color_map(s:V1,/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette = {}$/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.ctrlp = airline#extensions#ctrlp#generate_/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.inactive = airline#themes#generate_color_m/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.insert = airline#themes#generate_color_map/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.normal = airline#themes#generate_color_map/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.normal.airline_term = s:N3$/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.replace = airline#themes#generate_color_ma/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.terminal = airline#themes#generate_color_m/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.terminal.airline_term = s:N3$/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.visual = airline#themes#generate_color_map/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.visual.airline_term = s:N3$/;"	v
g:airline#themes#base16_harmonic16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette = {}$/;"	v
g:airline#themes#base16_harmonic16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette.ctrlp = airline#extensions#ctrlp#generate_color_m/;"	v
g:airline#themes#base16_harmonic16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette.inactive = airline#themes#generate_color_map(s:IA/;"	v
g:airline#themes#base16_harmonic16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette.insert = airline#themes#generate_color_map(s:I1, /;"	v
g:airline#themes#base16_harmonic16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette.normal = airline#themes#generate_color_map(s:N1, /;"	v
g:airline#themes#base16_harmonic16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette.replace = airline#themes#generate_color_map(s:R1,/;"	v
g:airline#themes#base16_harmonic16#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette.visual = airline#themes#generate_color_map(s:V1, /;"	v
g:airline#themes#base16_hopscotch#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette = {}$/;"	v
g:airline#themes#base16_hopscotch#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette.ctrlp = airline#extensions#ctrlp#generate_color_ma/;"	v
g:airline#themes#base16_hopscotch#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette.inactive = airline#themes#generate_color_map(s:IA1/;"	v
g:airline#themes#base16_hopscotch#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette.insert = airline#themes#generate_color_map(s:I1, s/;"	v
g:airline#themes#base16_hopscotch#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette.normal = airline#themes#generate_color_map(s:N1, s/;"	v
g:airline#themes#base16_hopscotch#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette.replace = airline#themes#generate_color_map(s:R1, /;"	v
g:airline#themes#base16_hopscotch#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette.visual = airline#themes#generate_color_map(s:V1, s/;"	v
g:airline#themes#base16_isotope#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette = {}$/;"	v
g:airline#themes#base16_isotope#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_isotope#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette.inactive = airline#themes#generate_color_map(s:IA1, /;"	v
g:airline#themes#base16_isotope#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette.insert = airline#themes#generate_color_map(s:I1, s:I/;"	v
g:airline#themes#base16_isotope#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette.normal = airline#themes#generate_color_map(s:N1, s:N/;"	v
g:airline#themes#base16_isotope#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette.replace = airline#themes#generate_color_map(s:R1, s:/;"	v
g:airline#themes#base16_isotope#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette.visual = airline#themes#generate_color_map(s:V1, s:V/;"	v
g:airline#themes#base16_londontube#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette = {}$/;"	v
g:airline#themes#base16_londontube#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette.ctrlp = airline#extensions#ctrlp#generate_color_m/;"	v
g:airline#themes#base16_londontube#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette.inactive = airline#themes#generate_color_map(s:IA/;"	v
g:airline#themes#base16_londontube#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette.insert = airline#themes#generate_color_map(s:I1, /;"	v
g:airline#themes#base16_londontube#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette.normal = airline#themes#generate_color_map(s:N1, /;"	v
g:airline#themes#base16_londontube#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette.replace = airline#themes#generate_color_map(s:R1,/;"	v
g:airline#themes#base16_londontube#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette.visual = airline#themes#generate_color_map(s:V1, /;"	v
g:airline#themes#base16_marrakesh#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette = {}$/;"	v
g:airline#themes#base16_marrakesh#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette.ctrlp = airline#extensions#ctrlp#generate_color_ma/;"	v
g:airline#themes#base16_marrakesh#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette.inactive = airline#themes#generate_color_map(s:IA1/;"	v
g:airline#themes#base16_marrakesh#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette.insert = airline#themes#generate_color_map(s:I1, s/;"	v
g:airline#themes#base16_marrakesh#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette.normal = airline#themes#generate_color_map(s:N1, s/;"	v
g:airline#themes#base16_marrakesh#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette.replace = airline#themes#generate_color_map(s:R1, /;"	v
g:airline#themes#base16_marrakesh#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette.visual = airline#themes#generate_color_map(s:V1, s/;"	v
g:airline#themes#base16_mocha#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette = {}$/;"	v
g:airline#themes#base16_mocha#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_mocha#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette.inactive = airline#themes#generate_color_map(s:IA1, s:/;"	v
g:airline#themes#base16_mocha#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette.insert = airline#themes#generate_color_map(s:I1, s:I2,/;"	v
g:airline#themes#base16_mocha#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette.normal = airline#themes#generate_color_map(s:N1, s:N2,/;"	v
g:airline#themes#base16_mocha#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette.replace = airline#themes#generate_color_map(s:R1, s:R2/;"	v
g:airline#themes#base16_mocha#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette.visual = airline#themes#generate_color_map(s:V1, s:V2,/;"	v
g:airline#themes#base16_monokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette = {}$/;"	v
g:airline#themes#base16_monokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_monokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette.inactive = airline#themes#generate_color_map(s:IA1, /;"	v
g:airline#themes#base16_monokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette.insert = airline#themes#generate_color_map(s:I1, s:I/;"	v
g:airline#themes#base16_monokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette.normal = airline#themes#generate_color_map(s:N1, s:N/;"	v
g:airline#themes#base16_monokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette.replace = airline#themes#generate_color_map(s:R1, s:/;"	v
g:airline#themes#base16_monokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette.visual = airline#themes#generate_color_map(s:V1, s:V/;"	v
g:airline#themes#base16_nord#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette = {}$/;"	v
g:airline#themes#base16_nord#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_nord#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette.inactive = airline#themes#generate_color_map(s:IA1, s:I/;"	v
g:airline#themes#base16_nord#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, /;"	v
g:airline#themes#base16_nord#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, /;"	v
g:airline#themes#base16_nord#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette.replace = airline#themes#generate_color_map(s:R1, s:R2,/;"	v
g:airline#themes#base16_nord#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, /;"	v
g:airline#themes#base16_ocean#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette = {}$/;"	v
g:airline#themes#base16_ocean#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_ocean#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette.inactive = airline#themes#generate_color_map(s:IA1, s:/;"	v
g:airline#themes#base16_ocean#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette.insert = airline#themes#generate_color_map(s:I1, s:I2,/;"	v
g:airline#themes#base16_ocean#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette.normal = airline#themes#generate_color_map(s:N1, s:N2,/;"	v
g:airline#themes#base16_ocean#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette.replace = airline#themes#generate_color_map(s:R1, s:R2/;"	v
g:airline#themes#base16_ocean#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette.visual = airline#themes#generate_color_map(s:V1, s:V2,/;"	v
g:airline#themes#base16_oceanicnext#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette = {}$/;"	v
g:airline#themes#base16_oceanicnext#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette.ctrlp = airline#extensions#ctrlp#generate_color_/;"	v
g:airline#themes#base16_oceanicnext#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette.inactive = airline#themes#generate_color_map(s:I/;"	v
g:airline#themes#base16_oceanicnext#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette.insert = airline#themes#generate_color_map(s:I1,/;"	v
g:airline#themes#base16_oceanicnext#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette.normal = airline#themes#generate_color_map(s:N1,/;"	v
g:airline#themes#base16_oceanicnext#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette.replace = airline#themes#generate_color_map(s:R1/;"	v
g:airline#themes#base16_oceanicnext#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette.visual = airline#themes#generate_color_map(s:V1,/;"	v
g:airline#themes#base16_paraiso#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette = {}$/;"	v
g:airline#themes#base16_paraiso#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_paraiso#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette.inactive = airline#themes#generate_color_map(s:IA1, /;"	v
g:airline#themes#base16_paraiso#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette.insert = airline#themes#generate_color_map(s:I1, s:I/;"	v
g:airline#themes#base16_paraiso#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette.normal = airline#themes#generate_color_map(s:N1, s:N/;"	v
g:airline#themes#base16_paraiso#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette.replace = airline#themes#generate_color_map(s:R1, s:/;"	v
g:airline#themes#base16_paraiso#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette.visual = airline#themes#generate_color_map(s:V1, s:V/;"	v
g:airline#themes#base16_pop#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette = {}$/;"	v
g:airline#themes#base16_pop#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_pop#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA/;"	v
g:airline#themes#base16_pop#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s/;"	v
g:airline#themes#base16_pop#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s/;"	v
g:airline#themes#base16_pop#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, /;"	v
g:airline#themes#base16_pop#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s/;"	v
g:airline#themes#base16_railscasts#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette = {}$/;"	v
g:airline#themes#base16_railscasts#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette.ctrlp = airline#extensions#ctrlp#generate_color_m/;"	v
g:airline#themes#base16_railscasts#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette.inactive = airline#themes#generate_color_map(s:IA/;"	v
g:airline#themes#base16_railscasts#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette.insert = airline#themes#generate_color_map(s:I1, /;"	v
g:airline#themes#base16_railscasts#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette.normal = airline#themes#generate_color_map(s:N1, /;"	v
g:airline#themes#base16_railscasts#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette.replace = airline#themes#generate_color_map(s:R1,/;"	v
g:airline#themes#base16_railscasts#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette.visual = airline#themes#generate_color_map(s:V1, /;"	v
g:airline#themes#base16_seti#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette = {}$/;"	v
g:airline#themes#base16_seti#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_seti#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette.inactive = airline#themes#generate_color_map(s:IA1, s:I/;"	v
g:airline#themes#base16_seti#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, /;"	v
g:airline#themes#base16_seti#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, /;"	v
g:airline#themes#base16_seti#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette.replace = airline#themes#generate_color_map(s:R1, s:R2,/;"	v
g:airline#themes#base16_seti#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, /;"	v
g:airline#themes#base16_shapeshifter#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette = {}$/;"	v
g:airline#themes#base16_shapeshifter#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette.ctrlp = airline#extensions#ctrlp#generate_color/;"	v
g:airline#themes#base16_shapeshifter#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette.inactive = airline#themes#generate_color_map(s:/;"	v
g:airline#themes#base16_shapeshifter#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette.insert = airline#themes#generate_color_map(s:I1/;"	v
g:airline#themes#base16_shapeshifter#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette.normal = airline#themes#generate_color_map(s:N1/;"	v
g:airline#themes#base16_shapeshifter#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette.replace = airline#themes#generate_color_map(s:R/;"	v
g:airline#themes#base16_shapeshifter#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette.visual = airline#themes#generate_color_map(s:V1/;"	v
g:airline#themes#base16_shell#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^  let g:airline#themes#base16_shell#palette$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette = {}$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.accents = {$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.inactive = airline#themes#generate_color_map(s:IA, s:/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.inactive_modified = {$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.insert = airline#themes#generate_color_map(s:I1, s:I2/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.insert.airline_error = ER$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.insert.airline_warning = WI$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.insert_modified = {$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.insert_modified.airline_error = ER$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.insert_modified.airline_warning = WI$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.insert_paste = {$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.insert_paste.airline_error = ER$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.insert_paste.airline_warning = WI$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.normal = airline#themes#generate_color_map(s:N1, s:N2/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.normal.airline_error = ER$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.normal.airline_warning = WI$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.normal_modified = {$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.normal_modified.airline_error = ER$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.normal_modified.airline_warning = WI$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.replace = airline#themes#generate_color_map(s:R1, s:R/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.replace.airline_error = ER$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.replace.airline_warning = WI$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.replace_modified = {$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.replace_modified.airline_error = ER$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.replace_modified.airline_warning = WI$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.visual = airline#themes#generate_color_map(s:V1, s:V2/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.visual.airline_error = ER$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.visual.airline_warning = WI$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.visual_modified = {$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.visual_modified.airline_error = ER$/;"	v
g:airline#themes#base16_snazzy#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.visual_modified.airline_warning = WI$/;"	v
g:airline#themes#base16_solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette = {}$/;"	v
g:airline#themes#base16_solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette.ctrlp = airline#extensions#ctrlp#generate_color_ma/;"	v
g:airline#themes#base16_solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette.inactive = airline#themes#generate_color_map(s:IA1/;"	v
g:airline#themes#base16_solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette.insert = airline#themes#generate_color_map(s:I1, s/;"	v
g:airline#themes#base16_solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette.normal = airline#themes#generate_color_map(s:N1, s/;"	v
g:airline#themes#base16_solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette.replace = airline#themes#generate_color_map(s:R1, /;"	v
g:airline#themes#base16_solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette.visual = airline#themes#generate_color_map(s:V1, s/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette = {}$/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.ctrlp = airline#extensions#ctrlp#generate_color_ma/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.inactive = airline#themes#generate_color_map(s:IA1/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.insert = airline#themes#generate_color_map(s:I1, s/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.insert.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.insert.airline_warning =$/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.insert_modified = g:airline#themes#base16_spacemac/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.insert_modified.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.normal = airline#themes#generate_color_map(s:N1, s/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.normal.airline_error = [$/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.normal.airline_warning = [$/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.normal_modified = g:airline#themes#base16_spacemac/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.normal_modified.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.replace = airline#themes#generate_color_map(s:R1, /;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.replace.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.replace.airline_warning =$/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.replace_modified = g:airline#themes#base16_spacema/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.replace_modified.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.visual = airline#themes#generate_color_map(s:V1, s/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.visual.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.visual.airline_warning =$/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.visual_modified = g:airline#themes#base16_spacemac/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.visual_modified.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#base16_summerfruit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette = {}$/;"	v
g:airline#themes#base16_summerfruit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette.ctrlp = airline#extensions#ctrlp#generate_color_/;"	v
g:airline#themes#base16_summerfruit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette.inactive = airline#themes#generate_color_map(s:I/;"	v
g:airline#themes#base16_summerfruit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette.insert = airline#themes#generate_color_map(s:I1,/;"	v
g:airline#themes#base16_summerfruit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette.normal = airline#themes#generate_color_map(s:N1,/;"	v
g:airline#themes#base16_summerfruit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette.replace = airline#themes#generate_color_map(s:R1/;"	v
g:airline#themes#base16_summerfruit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette.visual = airline#themes#generate_color_map(s:V1,/;"	v
g:airline#themes#base16_tomorrow#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette = {}$/;"	v
g:airline#themes#base16_tomorrow#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette.ctrlp = airline#extensions#ctrlp#generate_color_map/;"	v
g:airline#themes#base16_tomorrow#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette.inactive = airline#themes#generate_color_map(s:IA1,/;"	v
g:airline#themes#base16_tomorrow#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette.insert = airline#themes#generate_color_map(s:I1, s:/;"	v
g:airline#themes#base16_tomorrow#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette.normal = airline#themes#generate_color_map(s:N1, s:/;"	v
g:airline#themes#base16_tomorrow#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette.replace = airline#themes#generate_color_map(s:R1, s/;"	v
g:airline#themes#base16_tomorrow#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette.visual = airline#themes#generate_color_map(s:V1, s:/;"	v
g:airline#themes#base16_twilight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette = {}$/;"	v
g:airline#themes#base16_twilight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette.ctrlp = airline#extensions#ctrlp#generate_color_map/;"	v
g:airline#themes#base16_twilight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette.inactive = airline#themes#generate_color_map(s:IA1,/;"	v
g:airline#themes#base16_twilight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette.insert = airline#themes#generate_color_map(s:I1, s:/;"	v
g:airline#themes#base16_twilight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette.normal = airline#themes#generate_color_map(s:N1, s:/;"	v
g:airline#themes#base16_twilight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette.replace = airline#themes#generate_color_map(s:R1, s/;"	v
g:airline#themes#base16_twilight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette.visual = airline#themes#generate_color_map(s:V1, s:/;"	v
g:airline#themes#base16_vim#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_vim.vim	/^    let g:airline#themes#base16_vim#palette.insert$/;"	v
g:airline#themes#base16_vim#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_vim.vim	/^    let g:airline#themes#base16_vim#palette.replace$/;"	v
g:airline#themes#base16_vim#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_vim.vim	/^    let g:airline#themes#base16_vim#palette.visual$/;"	v
g:airline#themes#base16_vim#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_vim.vim	/^  let g:airline#themes#base16_vim#palette.inactive$/;"	v
g:airline#themes#base16_vim#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_vim.vim	/^  let g:airline#themes#base16_vim#palette.inactive_modified = {$/;"	v
g:airline#themes#base16_vim#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_vim.vim	/^  let g:airline#themes#base16_vim#palette.insert$/;"	v
g:airline#themes#base16_vim#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_vim.vim	/^  let g:airline#themes#base16_vim#palette.insert_modified$/;"	v
g:airline#themes#base16_vim#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_vim.vim	/^  let g:airline#themes#base16_vim#palette.normal$/;"	v
g:airline#themes#base16_vim#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_vim.vim	/^  let g:airline#themes#base16_vim#palette.normal_modified = {$/;"	v
g:airline#themes#base16_vim#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_vim.vim	/^  let g:airline#themes#base16_vim#palette.replace$/;"	v
g:airline#themes#base16_vim#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_vim.vim	/^  let g:airline#themes#base16_vim#palette.replace_modified$/;"	v
g:airline#themes#base16_vim#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_vim.vim	/^  let g:airline#themes#base16_vim#palette.visual$/;"	v
g:airline#themes#base16_vim#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_vim.vim	/^let g:airline#themes#base16_vim#palette = {}$/;"	v
g:airline#themes#base16color#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette = {}$/;"	v
g:airline#themes#base16color#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.accents = {$/;"	v
g:airline#themes#base16color#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA/;"	v
g:airline#themes#base16color#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.inactive_modified = {$/;"	v
g:airline#themes#base16color#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, /;"	v
g:airline#themes#base16color#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.insert_modified = {$/;"	v
g:airline#themes#base16color#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.insert_paste = {$/;"	v
g:airline#themes#base16color#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, /;"	v
g:airline#themes#base16color#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.normal_modified = {$/;"	v
g:airline#themes#base16color#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.replace = airline#themes#generate_color_map(s:R1, s:R2,/;"	v
g:airline#themes#base16color#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.replace_modified = {$/;"	v
g:airline#themes#base16color#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, /;"	v
g:airline#themes#base16color#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.visual_modified = {$/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette = {}$/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.accents = {$/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, /;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.inactive_modified = {$/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.insert.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.insert_modified = g:airline#themes#behelit#palette.normal_m/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.insert_modified.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.insert_paste = {$/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.insert_paste.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.normal.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.normal_modified = {$/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.normal_modified.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.replace = copy(g:airline#themes#behelit#palette.insert)$/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.replace.airline_a = [ s:I1[0], '#d70057', s:I1[2], 161, '' /;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.replace.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.replace_modified = g:airline#themes#behelit#palette.insert_/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.replace_modified.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.visual.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.visual_modified = g:airline#themes#behelit#palette.normal_m/;"	v
g:airline#themes#behelit#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.visual_modified.airline_warning = s:WI$/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.accents = {$/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, /;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.inactive.airline_term = s:Term$/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.inactive_modified = g:airline#themes#biogoo#palette.normal_/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.inactive_modified.airline_term = s:Term$/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.insert.airline_term = s:Term$/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.insert_modified = g:airline#themes#biogoo#palette.normal_mo/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.insert_modified.airline_term = s:Term$/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.normal.airline_term = s:Term$/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.normal_modified = {'airline_c': s:Nmod}$/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.normal_modified.airline_term = s:Term$/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.replace.airline_term = s:Term$/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.replace_modified = g:airline#themes#biogoo#palette.normal_m/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.replace_modified.airline_term = s:Term$/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.visual.airline_term = s:Term$/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.visual_modified = g:airline#themes#biogoo#palette.normal_mo/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^	let g:airline#themes#biogoo#palette.visual_modified.airline_term = s:Term$/;"	v
g:airline#themes#biogoo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^let g:airline#themes#biogoo#palette = {}$/;"	v
g:airline#themes#bubblegum#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette = {}$/;"	v
g:airline#themes#bubblegum#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#bubblegum#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, /;"	v
g:airline#themes#bubblegum#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.inactive_modified = {$/;"	v
g:airline#themes#bubblegum#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:/;"	v
g:airline#themes#bubblegum#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert_modified = copy(g:airline#themes#bubblegum#palette/;"	v
g:airline#themes#bubblegum#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert_paste = {$/;"	v
g:airline#themes#bubblegum#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:/;"	v
g:airline#themes#bubblegum#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.normal_modified = {$/;"	v
g:airline#themes#bubblegum#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.replace = {$/;"	v
g:airline#themes#bubblegum#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.replace_modified = copy(g:airline#themes#bubblegum#palett/;"	v
g:airline#themes#bubblegum#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:/;"	v
g:airline#themes#bubblegum#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.visual_modified = copy(g:airline#themes#bubblegum#palette/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette = {}$/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.accents = {$/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.inactive_modified = {$/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.insert.airline_warning =$/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.insert_modified = {$/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.insert_paste = {$/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.normal.airline_warning = [$/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.normal_modified = {$/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.replace.airline_warning =$/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.replace_modified = {$/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.tabline = {$/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.visual.airline_warning =$/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.visual_modified = {$/;"	v
g:airline#themes#cobalt2#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#cool#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette = {}$/;"	v
g:airline#themes#cool#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.accents = {$/;"	v
g:airline#themes#cool#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#cool#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:I/;"	v
g:airline#themes#cool#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#cool#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#cool#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.normal.airline_term = s:N3$/;"	v
g:airline#themes#cool#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#cool#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.terminal = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#cool#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.terminal.airline_term = s:I3$/;"	v
g:airline#themes#cool#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#cool#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.visual.airline_term = s:V3$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^  let g:airline#themes#dark#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette = {}$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.accents = {$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.commandline = airline#themes#generate_color_map(s:airline_a_co/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive = airline#themes#generate_color_map(s:airline_a_inact/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive_modified = {$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert = airline#themes#generate_color_map(s:airline_a_insert,/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_modified = {$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_paste = {$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal = airline#themes#generate_color_map(s:airline_a_normal,/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal_modified = {$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace = copy(g:airline#themes#dark#palette.insert)$/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace.airline_a = [ s:airline_b_insert[0]   , '#af0000' , s:/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace_modified = g:airline#themes#dark#palette.insert_modifi/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.terminal = airline#themes#generate_color_map(s:airline_a_inser/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual = airline#themes#generate_color_map(s:airline_a_visual,/;"	v
g:airline#themes#dark#palette	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual_modified = {$/;"	v
g:airline#themes#dark_minimal#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let g:airline#themes#dark_minimal#palette = {}$/;"	v
g:airline#themes#dark_minimal#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let g:airline#themes#dark_minimal#palette.accents = {$/;"	v
g:airline#themes#dark_minimal#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let g:airline#themes#dark_minimal#palette.normal = airline#themes#generate_color_map(s:N1, s:N2,/;"	v
g:airline#themes#desertink#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette = {}$/;"	v
g:airline#themes#desertink#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2/;"	v
g:airline#themes#desertink#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:/;"	v
g:airline#themes#desertink#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.insert_replace = {$/;"	v
g:airline#themes#desertink#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:/;"	v
g:airline#themes#desertink#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.normal_modified = {$/;"	v
g:airline#themes#desertink#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.replace = copy(airline#themes#desertink#palette.normal)$/;"	v
g:airline#themes#desertink#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[/;"	v
g:airline#themes#desertink#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.replace.airline_z = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[/;"	v
g:airline#themes#desertink#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.tabline = {$/;"	v
g:airline#themes#desertink#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.visual = {$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette = {}$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.accents = {$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:I/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.inactive_modified = {$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.insert.airline_error =$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.insert.airline_warning =$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.insert_modified = g:airline#themes#deus#palette.normal_modifie/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.insert_modified.airline_error =$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.normal.airline_error = [$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.normal.airline_warning = [$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.normal_modified = {$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.normal_modified.airline_error =$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.replace.airline_error =$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.replace.airline_warning =$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.replace_modified = g:airline#themes#deus#palette.normal_modifi/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.replace_modified.airline_error =$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.visual.airline_error =$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.visual.airline_warning =$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.visual_modified = g:airline#themes#deus#palette.normal_modifie/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.visual_modified.airline_error =$/;"	v
g:airline#themes#deus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#distinguished#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette = {}$/;"	v
g:airline#themes#distinguished#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.accents = {$/;"	v
g:airline#themes#distinguished#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.inactive = {$/;"	v
g:airline#themes#distinguished#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.insert = airline#themes#generate_color_map(s:I1, s:mi/;"	v
g:airline#themes#distinguished#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.insert_modified = {}$/;"	v
g:airline#themes#distinguished#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.normal = airline#themes#generate_color_map(s:N1, s:mi/;"	v
g:airline#themes#distinguished#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.normal_modified = {$/;"	v
g:airline#themes#distinguished#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.replace = airline#themes#generate_color_map(s:R1, s:m/;"	v
g:airline#themes#distinguished#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.replace_modified = {}$/;"	v
g:airline#themes#distinguished#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.visual = airline#themes#generate_color_map(s:V1, s:mi/;"	v
g:airline#themes#distinguished#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.visual_modified = {}$/;"	v
g:airline#themes#durant#normal_modified	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#normal_modified = {$/;"	v
g:airline#themes#durant#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^  let g:airline#themes#durant#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#durant#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette = {}$/;"	v
g:airline#themes#durant#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.accents = {$/;"	v
g:airline#themes#durant#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s/;"	v
g:airline#themes#durant#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.inactive_modified = {$/;"	v
g:airline#themes#durant#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#durant#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.insert_modified = {$/;"	v
g:airline#themes#durant#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.insert_paste = {$/;"	v
g:airline#themes#durant#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#durant#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.replace = copy(g:airline#themes#durant#palette.insert)$/;"	v
g:airline#themes#durant#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.replace.airline_a = [ s:I2[0]   , '#af0000' , s:I2[2] , 124 /;"	v
g:airline#themes#durant#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.replace_modified = g:airline#themes#durant#palette.insert_mo/;"	v
g:airline#themes#durant#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#durant#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.visual_modified = {$/;"	v
g:airline#themes#fairyfloss#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette = {}$/;"	v
g:airline#themes#fairyfloss#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(s:CP/;"	v
g:airline#themes#fairyfloss#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN/;"	v
g:airline#themes#fairyfloss#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.inactive_modified = s:modified$/;"	v
g:airline#themes#fairyfloss#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s/;"	v
g:airline#themes#fairyfloss#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.insert_modified = s:modified$/;"	v
g:airline#themes#fairyfloss#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s/;"	v
g:airline#themes#fairyfloss#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.normal_modified = s:modified$/;"	v
g:airline#themes#fairyfloss#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, /;"	v
g:airline#themes#fairyfloss#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.replace_modified = s:modified$/;"	v
g:airline#themes#fairyfloss#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s/;"	v
g:airline#themes#fairyfloss#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.visual_modified = s:modified$/;"	v
g:airline#themes#fruit_punch#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^  let g:airline#themes#fruit_punch#palette[mode]['airline_warning'] = s:warning$/;"	v
g:airline#themes#fruit_punch#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let g:airline#themes#fruit_punch#palette = {}$/;"	v
g:airline#themes#fruit_punch#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let g:airline#themes#fruit_punch#palette.inactive =$/;"	v
g:airline#themes#fruit_punch#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let g:airline#themes#fruit_punch#palette.insert =$/;"	v
g:airline#themes#fruit_punch#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let g:airline#themes#fruit_punch#palette.normal =$/;"	v
g:airline#themes#fruit_punch#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let g:airline#themes#fruit_punch#palette.replace =$/;"	v
g:airline#themes#fruit_punch#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let g:airline#themes#fruit_punch#palette.visual =$/;"	v
g:airline#themes#google_dark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette = {}$/;"	v
g:airline#themes#google_dark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.inactive = airline#themes#generate_color_map(s:IA1, s:I/;"	v
g:airline#themes#google_dark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.inactive_modified = g:airline#themes#google_dark#palett/;"	v
g:airline#themes#google_dark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, /;"	v
g:airline#themes#google_dark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.insert_modified = g:airline#themes#google_dark#palette./;"	v
g:airline#themes#google_dark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, /;"	v
g:airline#themes#google_dark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.normal_modified = {$/;"	v
g:airline#themes#google_dark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.replace = airline#themes#generate_color_map(s:R1, s:R2,/;"	v
g:airline#themes#google_dark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.replace_modified = g:airline#themes#google_dark#palette/;"	v
g:airline#themes#google_dark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, /;"	v
g:airline#themes#google_dark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.visual_modified = g:airline#themes#google_dark#palette./;"	v
g:airline#themes#google_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette = {}$/;"	v
g:airline#themes#google_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.inactive = airline#themes#generate_color_map(s:IA1, s:/;"	v
g:airline#themes#google_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.inactive_modified = g:airline#themes#google_light#pale/;"	v
g:airline#themes#google_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.insert = airline#themes#generate_color_map(s:I1, s:I2,/;"	v
g:airline#themes#google_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.insert_modified = g:airline#themes#google_light#palett/;"	v
g:airline#themes#google_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.normal = airline#themes#generate_color_map(s:N1, s:N2,/;"	v
g:airline#themes#google_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.normal_modified = {$/;"	v
g:airline#themes#google_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.replace = airline#themes#generate_color_map(s:R1, s:R2/;"	v
g:airline#themes#google_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.replace_modified = g:airline#themes#google_light#palet/;"	v
g:airline#themes#google_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.visual = airline#themes#generate_color_map(s:V1, s:V2,/;"	v
g:airline#themes#google_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.visual_modified = g:airline#themes#google_light#palett/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.accents = { 'red': accents_group }$/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, /;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.inactive_modified = { 'airline_c': modified_group }$/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.insert.airline_error = g:airline#themes#gruvbox#palette.n/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.insert.airline_warning = g:airline#themes#gruvbox#palette/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.insert_modified = g:airline#themes#gruvbox#palette.normal/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.insert_modified.airline_error = g:airline#themes#gruvbox#/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.insert_modified.airline_warning = g:airline#themes#gruvbo/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.normal.airline_error = error_group$/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.normal.airline_warning = warning_group$/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.normal_modified = { 'airline_c': modified_group }$/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.normal_modified.airline_error = error_group$/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.normal_modified.airline_warning = warning_group$/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.replace.airline_error = g:airline#themes#gruvbox#palette./;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.replace.airline_warning = g:airline#themes#gruvbox#palett/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.replace_modified = g:airline#themes#gruvbox#palette.norma/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.replace_modified.airline_error = g:airline#themes#gruvbox/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.replace_modified.airline_warning = g:airline#themes#gruvb/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.tabline = {$/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.visual.airline_error = g:airline#themes#gruvbox#palette.n/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.visual.airline_warning = g:airline#themes#gruvbox#palette/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.visual_modified = { 'airline_c': [ s:V3[0], '', s:V3[2], /;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.visual_modified.airline_error = g:airline#themes#gruvbox#/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.visual_modified.airline_warning = g:airline#themes#gruvbo/;"	v
g:airline#themes#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^let g:airline#themes#gruvbox#palette = {}$/;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^    let g:airline#themes#hybrid#palette.accents = {$/;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^    let g:airline#themes#hybrid#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA,/;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^    let g:airline#themes#hybrid#palette.inactive_modified = g:airline#themes#hybrid#palette.norm/;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^    let g:airline#themes#hybrid#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s/;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^    let g:airline#themes#hybrid#palette.insert.airline_warning = g:airline#themes#hybrid#palette/;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^    let g:airline#themes#hybrid#palette.insert_modified = g:airline#themes#hybrid#palette.normal/;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^    let g:airline#themes#hybrid#palette.insert_modified.airline_warning = g:airline#themes#hybri/;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^    let g:airline#themes#hybrid#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s/;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^    let g:airline#themes#hybrid#palette.normal.airline_warning = warning_group$/;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^    let g:airline#themes#hybrid#palette.normal_modified = {}$/;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^    let g:airline#themes#hybrid#palette.normal_modified.airline_warning = warning_group$/;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^    let g:airline#themes#hybrid#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, /;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^    let g:airline#themes#hybrid#palette.replace.airline_warning = g:airline#themes#hybrid#palett/;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^    let g:airline#themes#hybrid#palette.replace_modified = g:airline#themes#hybrid#palette.norma/;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^    let g:airline#themes#hybrid#palette.replace_modified.airline_warning = g:airline#themes#hybr/;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^    let g:airline#themes#hybrid#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s/;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^    let g:airline#themes#hybrid#palette.visual.airline_warning = g:airline#themes#hybrid#palette/;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^    let g:airline#themes#hybrid#palette.visual_modified = g:airline#themes#hybrid#palette.normal/;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^    let g:airline#themes#hybrid#palette.visual_modified.airline_warning = g:airline#themes#hybri/;"	v
g:airline#themes#hybrid#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^let g:airline#themes#hybrid#palette = {}$/;"	v
g:airline#themes#hybridline#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette = {}$/;"	v
g:airline#themes#hybridline#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.accents = {$/;"	v
g:airline#themes#hybridline#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA/;"	v
g:airline#themes#hybridline#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s/;"	v
g:airline#themes#hybridline#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.insert_paste = {$/;"	v
g:airline#themes#hybridline#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s/;"	v
g:airline#themes#hybridline#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.normal.airline_a = ['#005f00', '#b5bd68', 22, 10, '']$/;"	v
g:airline#themes#hybridline#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.replace = airline#themes#generate_color_map(s:N1, s:N2, /;"	v
g:airline#themes#hybridline#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.replace.airline_a = ['#000000', '#CC6666', 16, 9]$/;"	v
g:airline#themes#hybridline#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.visual = airline#themes#generate_color_map(s:N1, s:N2, s/;"	v
g:airline#themes#hybridline#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.visual.airline_a = ['#000000', '#de935f', 16, 3]$/;"	v
g:airline#themes#jellybeans#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette = {}$/;"	v
g:airline#themes#jellybeans#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(s:CP/;"	v
g:airline#themes#jellybeans#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN/;"	v
g:airline#themes#jellybeans#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.inactive_modified = s:modified$/;"	v
g:airline#themes#jellybeans#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s/;"	v
g:airline#themes#jellybeans#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.insert_modified = s:modified$/;"	v
g:airline#themes#jellybeans#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s/;"	v
g:airline#themes#jellybeans#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.normal_modified = s:modified$/;"	v
g:airline#themes#jellybeans#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, /;"	v
g:airline#themes#jellybeans#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.replace_modified = s:modified$/;"	v
g:airline#themes#jellybeans#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s/;"	v
g:airline#themes#jellybeans#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.visual_modified = s:modified$/;"	v
g:airline#themes#jet#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette = {}$/;"	v
g:airline#themes#jet#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(s:CP1, s:CP/;"	v
g:airline#themes#jet#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN2, s:IN/;"	v
g:airline#themes#jet#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#jet#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#jet#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#jet#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#kalisi#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^  let g:airline#themes#kalisi#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s/;"	v
g:airline#themes#kalisi#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^  let g:airline#themes#kalisi#palette.inactive_modified = {$/;"	v
g:airline#themes#kalisi#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^  let g:airline#themes#kalisi#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I/;"	v
g:airline#themes#kalisi#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^  let g:airline#themes#kalisi#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N/;"	v
g:airline#themes#kalisi#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^  let g:airline#themes#kalisi#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:/;"	v
g:airline#themes#kalisi#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^  let g:airline#themes#kalisi#palette.tabline = {$/;"	v
g:airline#themes#kalisi#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^  let g:airline#themes#kalisi#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V/;"	v
g:airline#themes#kalisi#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let g:airline#themes#kalisi#palette = {}$/;"	v
g:airline#themes#kalisi#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let g:airline#themes#kalisi#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#kolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette = {}$/;"	v
g:airline#themes#kolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.accents = {$/;"	v
g:airline#themes#kolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#kolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:/;"	v
g:airline#themes#kolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.inactive_modified = {$/;"	v
g:airline#themes#kolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#kolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.insert_modified = {$/;"	v
g:airline#themes#kolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#kolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.normal_modified = {$/;"	v
g:airline#themes#kolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.replace = copy(g:airline#themes#kolor#palette.insert)$/;"	v
g:airline#themes#kolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.replace.airline_a = [ s:I2[0]   , '#005154' , s:I2[2] , 23   /;"	v
g:airline#themes#kolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.replace_modified = {$/;"	v
g:airline#themes#kolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#kolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.visual_modified = {$/;"	v
g:airline#themes#laederon#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette = {}$/;"	v
g:airline#themes#laederon#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.accents = {$/;"	v
g:airline#themes#laederon#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s/;"	v
g:airline#themes#laederon#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.inactive_modified = {$/;"	v
g:airline#themes#laederon#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I/;"	v
g:airline#themes#laederon#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert_modified = {$/;"	v
g:airline#themes#laederon#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert_paste = {$/;"	v
g:airline#themes#laederon#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N/;"	v
g:airline#themes#laederon#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.normal_modified = {$/;"	v
g:airline#themes#laederon#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:/;"	v
g:airline#themes#laederon#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.replace_modified = {$/;"	v
g:airline#themes#laederon#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V/;"	v
g:airline#themes#laederon#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.visual_modified = {$/;"	v
g:airline#themes#lessnoise#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^  let g:airline#themes#lessnoise#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#lessnoise#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette = {}$/;"	v
g:airline#themes#lessnoise#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.accents = {$/;"	v
g:airline#themes#lessnoise#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.commandline = s:palt_c$/;"	v
g:airline#themes#lessnoise#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.inactive          = s:palt_d$/;"	v
g:airline#themes#lessnoise#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.inactive_modified = s:palt_d_m$/;"	v
g:airline#themes#lessnoise#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.insert          = s:palt_i$/;"	v
g:airline#themes#lessnoise#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.insert_modified = s:palt_i_m$/;"	v
g:airline#themes#lessnoise#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.normal          = s:palt$/;"	v
g:airline#themes#lessnoise#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.normal_modified = s:palt_m$/;"	v
g:airline#themes#lessnoise#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.replace          = s:palt_r$/;"	v
g:airline#themes#lessnoise#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.replace_modified = s:palt_r_m$/;"	v
g:airline#themes#lessnoise#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.tabline = {$/;"	v
g:airline#themes#lessnoise#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.terminal        = s:palt$/;"	v
g:airline#themes#lessnoise#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.visual          = s:palt_v$/;"	v
g:airline#themes#lessnoise#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.visual_modified = s:palt_v_m$/;"	v
g:airline#themes#light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette = {}$/;"	v
g:airline#themes#light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:/;"	v
g:airline#themes#light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.inactive_modified = {$/;"	v
g:airline#themes#light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert_modified = {$/;"	v
g:airline#themes#light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert_paste = {$/;"	v
g:airline#themes#light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.normal_modified = {$/;"	v
g:airline#themes#light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace = copy(g:airline#themes#light#palette.insert)$/;"	v
g:airline#themes#light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace.airline_a = [ s:I2[0]   , '#ff0000' , s:I1[2] , 196  /;"	v
g:airline#themes#light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace_modified = g:airline#themes#light#palette.insert_modi/;"	v
g:airline#themes#light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.visual_modified = {$/;"	v
g:airline#themes#lighthaus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette = {}$/;"	v
g:airline#themes#lighthaus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.accents = {$/;"	v
g:airline#themes#lighthaus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(s:CP1/;"	v
g:airline#themes#lighthaus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN2/;"	v
g:airline#themes#lighthaus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:/;"	v
g:airline#themes#lighthaus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.insert_error = {$/;"	v
g:airline#themes#lighthaus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.insert_modified = {$/;"	v
g:airline#themes#lighthaus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:/;"	v
g:airline#themes#lighthaus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.normal_error = {$/;"	v
g:airline#themes#lighthaus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.normal_modified = {$/;"	v
g:airline#themes#lighthaus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s/;"	v
g:airline#themes#lighthaus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.replace_modified = {$/;"	v
g:airline#themes#lighthaus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:/;"	v
g:airline#themes#lighthaus#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.visual_modified = {$/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.accents = {$/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA,/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.inactive_modified = {$/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.insert.airline_error = g:airline#themes#lucius#palette.n/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.insert.airline_warning = g:airline#themes#lucius#palette/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.insert_modified = g:airline#themes#lucius#palette.normal/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.insert_modified.airline_error = g:airline#themes#lucius#/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.insert_modified.airline_warning = g:airline#themes#luciu/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.normal.airline_error = error_group$/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.normal.airline_warning = warning_group$/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.normal_modified = {$/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.normal_modified.airline_error = error_group$/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.normal_modified.airline_warning = warning_group$/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, /;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.replace.airline_error = g:airline#themes#lucius#palette./;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.replace.airline_warning = g:airline#themes#lucius#palett/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.replace_modified = g:airline#themes#lucius#palette.norma/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.replace_modified.airline_error = g:airline#themes#lucius/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.replace_modified.airline_warning = g:airline#themes#luci/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.tabline = {}$/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.tabline.airline_tabsel = s:TS$/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.tabline.airline_tabsel_right = s:TS$/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.visual.airline_error = g:airline#themes#lucius#palette.n/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.visual.airline_warning = g:airline#themes#lucius#palette/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.visual_modified = g:airline#themes#lucius#palette.normal/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.visual_modified.airline_error = g:airline#themes#lucius#/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^    let g:airline#themes#lucius#palette.visual_modified.airline_warning = g:airline#themes#luciu/;"	v
g:airline#themes#lucius#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^let g:airline#themes#lucius#palette = {}$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette = {}$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.accents = {$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.inactive_modified = {$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert.airline_warning =$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_modified = {$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_paste = {$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal.airline_warning = [$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal_modified = {$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace = copy(g:airline#themes#luna#palette.insert)$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace.airline_a = [ s:I2[0]   , '#920000' , s:I2[2] , 88    /;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace.airline_warning =$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace_modified = g:airline#themes#luna#palette.insert_modifi/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.tabline = {$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual.airline_warning =$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual_modified = {$/;"	v
g:airline#themes#luna#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#molokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette = {}$/;"	v
g:airline#themes#molokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.accents = {$/;"	v
g:airline#themes#molokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#molokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:/;"	v
g:airline#themes#molokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.inactive_modified = {$/;"	v
g:airline#themes#molokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3/;"	v
g:airline#themes#molokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.insert_modified = {$/;"	v
g:airline#themes#molokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3/;"	v
g:airline#themes#molokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.normal_modified = {$/;"	v
g:airline#themes#molokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R/;"	v
g:airline#themes#molokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.replace_modified = {$/;"	v
g:airline#themes#molokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3/;"	v
g:airline#themes#molokai#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.visual_modified = {$/;"	v
g:airline#themes#monochrome#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/monochrome.vim	/^  let g:airline#themes#monochrome#palette.inactive = airline#themes#generate_color_map(s:SLNC, s/;"	v
g:airline#themes#monochrome#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/monochrome.vim	/^  let g:airline#themes#monochrome#palette.insert = g:airline#themes#monochrome#palette.normal$/;"	v
g:airline#themes#monochrome#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/monochrome.vim	/^  let g:airline#themes#monochrome#palette.normal = airline#themes#generate_color_map(s:SL, s:SL,/;"	v
g:airline#themes#monochrome#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/monochrome.vim	/^  let g:airline#themes#monochrome#palette.normal.airline_error   = s:SLNC$/;"	v
g:airline#themes#monochrome#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/monochrome.vim	/^  let g:airline#themes#monochrome#palette.normal.airline_term    = s:SL$/;"	v
g:airline#themes#monochrome#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/monochrome.vim	/^  let g:airline#themes#monochrome#palette.normal.airline_warning = s:SLNC$/;"	v
g:airline#themes#monochrome#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/monochrome.vim	/^  let g:airline#themes#monochrome#palette.replace = g:airline#themes#monochrome#palette.normal$/;"	v
g:airline#themes#monochrome#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/monochrome.vim	/^  let g:airline#themes#monochrome#palette.visual = g:airline#themes#monochrome#palette.normal$/;"	v
g:airline#themes#monochrome#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/monochrome.vim	/^let g:airline#themes#monochrome#palette = {}$/;"	v
g:airline#themes#murmur#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette = {}$/;"	v
g:airline#themes#murmur#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#murmur#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s/;"	v
g:airline#themes#murmur#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.insert = airline#themes#generate_color_map(s:I1, s:BB, s:I2)$/;"	v
g:airline#themes#murmur#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.insert_modified = {'airline_c': [s:gui_alert, s:gui_termbg2,/;"	v
g:airline#themes#murmur#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.normal = airline#themes#generate_color_map(s:N1, s:BB, s:N2)$/;"	v
g:airline#themes#murmur#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.normal_modified = {'airline_c': [s:gui_alert, s:gui_termbg2,/;"	v
g:airline#themes#murmur#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.replace = airline#themes#generate_color_map(s:R1, s:BB, s:R2/;"	v
g:airline#themes#murmur#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.replace_modified = {'airline_c': [s:gui_alert, s:gui_termbg2/;"	v
g:airline#themes#murmur#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.visual = airline#themes#generate_color_map(s:V1, s:BB, s:V2)$/;"	v
g:airline#themes#murmur#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.visual_modified = {'airline_c': [s:gui_alert, s:gui_termbg2,/;"	v
g:airline#themes#night_owl#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let g:airline#themes#night_owl#palette = {}$/;"	v
g:airline#themes#night_owl#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let g:airline#themes#night_owl#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2/;"	v
g:airline#themes#night_owl#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let g:airline#themes#night_owl#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:/;"	v
g:airline#themes#night_owl#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let g:airline#themes#night_owl#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:/;"	v
g:airline#themes#night_owl#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let g:airline#themes#night_owl#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s/;"	v
g:airline#themes#night_owl#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let g:airline#themes#night_owl#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:/;"	v
g:airline#themes#nord_minimal#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let g:airline#themes#nord_minimal#palette = {}$/;"	v
g:airline#themes#nord_minimal#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let g:airline#themes#nord_minimal#palette.inactive = airline#themes#generate_color_map(s:IA1, s:/;"	v
g:airline#themes#nord_minimal#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let g:airline#themes#nord_minimal#palette.insert = airline#themes#generate_color_map(s:I1, s:I2,/;"	v
g:airline#themes#nord_minimal#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let g:airline#themes#nord_minimal#palette.normal = airline#themes#generate_color_map(s:N1, s:N2,/;"	v
g:airline#themes#nord_minimal#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let g:airline#themes#nord_minimal#palette.replace = airline#themes#generate_color_map(s:R1, s:R2/;"	v
g:airline#themes#nord_minimal#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let g:airline#themes#nord_minimal#palette.visual = airline#themes#generate_color_map(s:V1, s:V2,/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette = {}$/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.accents = {$/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.inactive_modified = {$/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.insert.airline_error =$/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.insert.airline_warning =$/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.insert_modified = g:airline#themes#onedark#palette.normal/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.insert_modified.airline_error =$/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.normal.airline_error = [$/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.normal.airline_warning = [$/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.normal_modified = {$/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.normal_modified.airline_error =$/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.replace.airline_error =$/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.replace.airline_warning =$/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.replace_modified = g:airline#themes#onedark#palette.norma/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.replace_modified.airline_error =$/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.visual.airline_error =$/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.visual.airline_warning =$/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.visual_modified = g:airline#themes#onedark#palette.normal/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.visual_modified.airline_error =$/;"	v
g:airline#themes#onedark#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette = {}$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.accents = {$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.inactive =$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.inactive.airline_error =  s:IA2$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.inactive.airline_warning = s:IA2$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.inactive_modified =$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.insert =$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.insert.airline_error = s:E$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.insert.airline_warning = s:W$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.insert_modified =$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.normal =$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.normal.airline_error = s:E$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.normal.airline_warning = s:W$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.normal_modified = {$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.replace =$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.replace.airline_error = s:E$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.replace.airline_warning = s:W$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.replace_modified =$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.visual =$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.visual.airline_error = s:E$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.visual.airline_warning = s:W$/;"	v
g:airline#themes#ouo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.visual_modified =$/;"	v
g:airline#themes#owo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette = {}$/;"	v
g:airline#themes#owo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#owo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#owo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.inactive_modified = copy(g:airline#themes#owo#palette.normal_mo/;"	v
g:airline#themes#owo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:I3)$/;"	v
g:airline#themes#owo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.insert_modified = copy(g:airline#themes#owo#palette.normal_modi/;"	v
g:airline#themes#owo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.insert_paste = {$/;"	v
g:airline#themes#owo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#owo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.normal_modified = {$/;"	v
g:airline#themes#owo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.replace = {$/;"	v
g:airline#themes#owo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.replace_modified = copy(g:airline#themes#owo#palette.insert_mod/;"	v
g:airline#themes#owo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:V3)$/;"	v
g:airline#themes#owo#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.visual_modified = copy(g:airline#themes#owo#palette.insert_modi/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette = {}$/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.accents = {$/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.commandline = airline#themes#generate_color_map(s:airline/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.commandline.airline_error = g:airline#themes#palenight#pa/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.commandline.airline_warning = g:airline#themes#palenight#/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.inactive = airline#themes#generate_color_map(s:airline_in/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.inactive_modified = {$/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.insert = airline#themes#generate_color_map(s:airline_a_in/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.insert.airline_error = g:airline#themes#palenight#palette/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.insert.airline_warning = g:airline#themes#palenight#palet/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.insert_modified = {$/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.insert_modified.airline_error = g:airline#themes#palenigh/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.insert_modified.airline_warning = g:airline#themes#paleni/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.normal = airline#themes#generate_color_map(s:airline_a_no/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.normal.airline_error = s:airline_error$/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.normal.airline_warning = s:airline_warning$/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.normal_modified = {$/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.normal_modified.airline_error = s:airline_error$/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.normal_modified.airline_warning = s:airline_warning$/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.replace = airline#themes#generate_color_map(s:airline_a_r/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.replace.airline_error = g:airline#themes#palenight#palett/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.replace.airline_warning = g:airline#themes#palenight#pale/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.replace_modified = {$/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.replace_modified.airline_error = g:airline#themes#palenig/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.replace_modified.airline_warning = g:airline#themes#palen/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.tabline = {$/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.visual = airline#themes#generate_color_map(s:airline_a_vi/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.visual.airline_error = g:airline#themes#palenight#palette/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.visual.airline_warning = g:airline#themes#palenight#palet/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.visual_modified = {$/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.visual_modified.airline_error = g:airline#themes#palenigh/;"	v
g:airline#themes#palenight#palette	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let g:airline#themes#palenight#palette.visual_modified.airline_warning = g:airline#themes#paleni/;"	v
g:airline#themes#papercolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette = {}$/;"	v
g:airline#themes#papercolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.accents = {$/;"	v
g:airline#themes#papercolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#papercolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA,/;"	v
g:airline#themes#papercolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.inactive.airline_c = s:N2$/;"	v
g:airline#themes#papercolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.inactive_modified = {$/;"	v
g:airline#themes#papercolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s/;"	v
g:airline#themes#papercolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.insert_modified = {$/;"	v
g:airline#themes#papercolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s/;"	v
g:airline#themes#papercolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.normal_modified = {$/;"	v
g:airline#themes#papercolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.replace = copy(g:airline#themes#papercolor#palette.inser/;"	v
g:airline#themes#papercolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.replace.airline_a = [ '#d7005f'   , '#e4e4e4' , 161 , 25/;"	v
g:airline#themes#papercolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.replace_modified = {$/;"	v
g:airline#themes#papercolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s/;"	v
g:airline#themes#papercolor#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.visual_modified = {$/;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^    let g:airline#themes#peaksea#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette = {}$/;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.accents = {$/;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:/;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.insert  = airline#themes#generate_color_map(s:I1, s:I2, s:I/;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.insert.airline_error    = g:airline#themes#peaksea#palette./;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.insert.airline_term  = g:airline#themes#peaksea#palette.nor/;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.insert.airline_warning  = g:airline#themes#peaksea#palette./;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.normal  = airline#themes#generate_color_map(s:N1, s:N2, s:N/;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.normal.airline_error = [$/;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.normal.airline_term = [$/;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.normal.airline_warning = [$/;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R/;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.replace.airline_error   = g:airline#themes#peaksea#palette./;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.replace.airline_term = g:airline#themes#peaksea#palette.nor/;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.replace.airline_warning = g:airline#themes#peaksea#palette./;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.visual  = airline#themes#generate_color_map(s:V1, s:V2, s:V/;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.visual.airline_error    = g:airline#themes#peaksea#palette./;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.visual.airline_term  = g:airline#themes#peaksea#palette.nor/;"	v
g:airline#themes#peaksea#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.visual.airline_warning  = g:airline#themes#peaksea#palette./;"	v
g:airline#themes#powerlineish#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette = {}$/;"	v
g:airline#themes#powerlineish#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.inactive = airline#themes#generate_color_map(s:IA, s:I/;"	v
g:airline#themes#powerlineish#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.insert = airline#themes#generate_color_map(s:I1, s:I2,/;"	v
g:airline#themes#powerlineish#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.insert_replace = {$/;"	v
g:airline#themes#powerlineish#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.normal = airline#themes#generate_color_map(s:N1, s:N2,/;"	v
g:airline#themes#powerlineish#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.replace = copy(airline#themes#powerlineish#palette.nor/;"	v
g:airline#themes#powerlineish#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:/;"	v
g:airline#themes#powerlineish#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.replace.airline_z = g:airline#themes#powerlineish#pale/;"	v
g:airline#themes#powerlineish#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.visual = {$/;"	v
g:airline#themes#qwq#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette = {}$/;"	v
g:airline#themes#qwq#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.accents = { 'red': [ '#ffffff', '', 160, '' ] }$/;"	v
g:airline#themes#qwq#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(s:C1, s:C2,/;"	v
g:airline#themes#qwq#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA/;"	v
g:airline#themes#qwq#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.inactive_modified = { 'airline_c': [ '#ffffff', '', 97, '', '' /;"	v
g:airline#themes#qwq#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#qwq#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.insert_modified = { 'airline_c': [ s:I4[0], s:I4[1], s:I4[2], s/;"	v
g:airline#themes#qwq#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.insert_paste = { 'airline_a': [ s:I5[0], s:I5[2], s:I5[2], s:I5/;"	v
g:airline#themes#qwq#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#qwq#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.normal_modified = { 'airline_c': [ s:N4[0], s:N4[1], s:N4[2], s/;"	v
g:airline#themes#qwq#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#qwq#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.replace.airline_a = [ s:R1[0], s:R1[1], s:R2[2], 124, '']$/;"	v
g:airline#themes#qwq#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.replace_modified = { 'airline_c': [ s:R4[0], s:R4[1], s:R4[2], /;"	v
g:airline#themes#qwq#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#qwq#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.visual_modified = { 'airline_c': [ s:V4[0], s:V4[1], s:V4[2], s/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette = {}$/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.accents = {$/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.inactive_modified = {$/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert.airline_warning =$/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert_modified = {$/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert_paste = {$/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal.airline_warning = [$/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal_modified = {$/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace = copy(g:airline#themes#raven#palette.insert)$/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace.airline_a = [ '#e60000' , s:I1[1] , 160 , s:I1[3] , '/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace.airline_warning =$/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace.airline_z = [ '#e60000' , s:I1[1] , 160 , s:I1[3] , '/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace_modified = g:airline#themes#raven#palette.insert_modi/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.tabline = {$/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual.airline_warning =$/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual_modified = {$/;"	v
g:airline#themes#raven#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#ravenpower#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette = {}$/;"	v
g:airline#themes#ravenpower#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA,/;"	v
g:airline#themes#ravenpower#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s/;"	v
g:airline#themes#ravenpower#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.insert_replace = {$/;"	v
g:airline#themes#ravenpower#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s/;"	v
g:airline#themes#ravenpower#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.replace = copy(airline#themes#ravenpower#palette.normal)$/;"	v
g:airline#themes#ravenpower#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE/;"	v
g:airline#themes#ravenpower#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.visual = {$/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.accents = {$/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.inactive = airline#themes#generate_color_map($/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.inactive_modified = {$/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.insert = airline#themes#generate_color_map($/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.insert.airline_warning =$/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.insert_modified = {$/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.normal = airline#themes#generate_color_map($/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.normal.airline_error = [$/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.normal.airline_warning = [$/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.normal_modified = {$/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.replace = airline#themes#generate_color_map($/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.replace.airline_warning =$/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.replace_modified = {$/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.tabline = {}$/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.tabline.airline_tab = [$/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.tabline.airline_tabtype = [$/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.visual = airline#themes#generate_color_map($/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.visual.airline_warning =$/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.visual_modified = {$/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^  let g:airline#themes#seagull#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#seagull#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^let g:airline#themes#seagull#palette = {}$/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.accents = { 'red': accents_group }$/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA,/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.inactive_modified = { 'airline_c': modified_group }$/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.insert.airline_warning = g:airline#themes#seoul256#palet/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.insert_modified = g:airline#themes#seoul256#palette.norm/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.insert_modified.airline_warning = g:airline#themes#seoul/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.normal.airline_warning = warning_group$/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.normal_modified = { 'airline_c': modified_group }$/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.normal_modified.airline_warning = warning_group$/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, /;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.replace.airline_warning = g:airline#themes#seoul256#pale/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.replace_modified = g:airline#themes#seoul256#palette.nor/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.replace_modified.airline_warning = g:airline#themes#seou/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.tabline = {$/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.visual.airline_warning = g:airline#themes#seoul256#palet/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.visual_modified = { 'airline_c': [ s:V3[0], '', s:V3[2],/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^  let g:airline#themes#seoul256#palette.visual_modified.airline_warning = g:airline#themes#seoul/;"	v
g:airline#themes#seoul256#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^let g:airline#themes#seoul256#palette = {}$/;"	v
g:airline#themes#serene#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette = {}$/;"	v
g:airline#themes#serene#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA2, s:/;"	v
g:airline#themes#serene#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.inactive_modified = copy(g:airline#themes#serene#palette.nor/;"	v
g:airline#themes#serene#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#serene#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert_modified = copy(g:airline#themes#serene#palette.norma/;"	v
g:airline#themes#serene#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert_paste = {$/;"	v
g:airline#themes#serene#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#serene#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.normal_modified = {$/;"	v
g:airline#themes#serene#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.replace = {$/;"	v
g:airline#themes#serene#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.replace_modified = copy(g:airline#themes#serene#palette.norm/;"	v
g:airline#themes#serene#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#serene#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.visual_modified = copy(g:airline#themes#serene#palette.norma/;"	v
g:airline#themes#sierra#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette = {}$/;"	v
g:airline#themes#sierra#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN2, s/;"	v
g:airline#themes#sierra#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.inactive_modified = s:modified$/;"	v
g:airline#themes#sierra#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#sierra#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.insert_modified = s:modified$/;"	v
g:airline#themes#sierra#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#sierra#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.normal_modified = s:modified$/;"	v
g:airline#themes#sierra#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3/;"	v
g:airline#themes#sierra#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.replace_modified = s:modified$/;"	v
g:airline#themes#sierra#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#sierra#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.visual_modified = s:modified$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette = {}$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.accents = {$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:I/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.inactive_modified = {$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert.airline_warning =$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert_modified = {$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert_paste = {$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal.airline_warning = [$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal_modified = {$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace = copy(g:airline#themes#silver#palette.insert)$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace.airline_a = [ '#b30000' , s:I1[1] , 124 , s:I1[3] , /;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace.airline_warning =$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace.airline_z = [ '#b30000' , s:I1[1] , 124 , s:I1[3] , /;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace_modified = g:airline#themes#silver#palette.insert_mo/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.tabline = {$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual.airline_warning =$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual_modified = {$/;"	v
g:airline#themes#silver#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#simple#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette = {}$/;"	v
g:airline#themes#simple#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA2, s:/;"	v
g:airline#themes#simple#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.inactive_modified = {$/;"	v
g:airline#themes#simple#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#simple#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert_modified = copy(g:airline#themes#simple#palette.norma/;"	v
g:airline#themes#simple#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert_paste = {$/;"	v
g:airline#themes#simple#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#simple#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.normal_modified = {$/;"	v
g:airline#themes#simple#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.replace = {$/;"	v
g:airline#themes#simple#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.replace_modified = copy(g:airline#themes#simple#palette.norm/;"	v
g:airline#themes#simple#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#simple#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.visual_modified = copy(g:airline#themes#simple#palette.norma/;"	v
g:airline#themes#soda#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette = {}$/;"	v
g:airline#themes#soda#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.inactive = airline#themes#generate_color_map($/;"	v
g:airline#themes#soda#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.inactive_modified = {'airline_c': ['#ffffff', '#df0000', 255, /;"	v
g:airline#themes#soda#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.insert = airline#themes#generate_color_map($/;"	v
g:airline#themes#soda#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.normal = airline#themes#generate_color_map($/;"	v
g:airline#themes#soda#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.replace = {'airline_a': ['#767676', '#ffff5f', 243, 227]}$/;"	v
g:airline#themes#soda#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.tabline = {$/;"	v
g:airline#themes#soda#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.visual = airline#themes#generate_color_map($/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette = {}$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.accents = {$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.inactive_modified = {$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert.airline_warning =$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_modified = {$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_paste = {$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal.airline_warning = [$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal_modified = {$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace = copy(g:airline#themes#sol#palette.insert)$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_a = [ s:I1[0] , '#ff2121' , s:I1[2] , 196 , '' /;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_warning =$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_z = [ s:I1[0] , '#ff2121' , s:I1[2] , 196 , '' /;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace_modified = g:airline#themes#sol#palette.insert_modified$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.tabline = {$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual.airline_warning =$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual_modified = {$/;"	v
g:airline#themes#sol#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^    let g:airline#themes#solarized#palette.commandline = airline#themes#generate_color_map($/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^    let g:airline#themes#solarized#palette.commandline.airline_warning =$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^    let g:airline#themes#solarized#palette.commandline_modified = {$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.accents = {$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.inactive = airline#themes#generate_color_map($/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.inactive_modified = {$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.insert = airline#themes#generate_color_map($/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.insert.airline_warning =$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.insert_modified = {$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.normal = airline#themes#generate_color_map($/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.normal.airline_error = [$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.normal.airline_warning = [$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.normal_modified = {$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.replace = airline#themes#generate_color_map($/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.replace.airline_warning =$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.replace_modified = {$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.tabline = {}$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.tabline.airline_tab = [$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.tabline.airline_tabtype = [$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.visual = airline#themes#generate_color_map($/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.visual.airline_warning =$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.visual_modified = {$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^  let g:airline#themes#solarized#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#solarized#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^let g:airline#themes#solarized#palette = {}$/;"	v
g:airline#themes#solarized_flood#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^  let g:airline#themes#solarized_flood#palette.ctrlp = airline#extensions#ctrlp#generate_color_m/;"	v
g:airline#themes#solarized_flood#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette = {}$/;"	v
g:airline#themes#solarized_flood#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.accents = {$/;"	v
g:airline#themes#solarized_flood#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.inactive =$/;"	v
g:airline#themes#solarized_flood#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.inactive_modified = {$/;"	v
g:airline#themes#solarized_flood#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.insert =$/;"	v
g:airline#themes#solarized_flood#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.insert['airline_z'] =$/;"	v
g:airline#themes#solarized_flood#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.insert_modified = {$/;"	v
g:airline#themes#solarized_flood#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.insert_paste = {$/;"	v
g:airline#themes#solarized_flood#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.normal =$/;"	v
g:airline#themes#solarized_flood#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.normal['airline_z'] =$/;"	v
g:airline#themes#solarized_flood#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.normal_modified = {$/;"	v
g:airline#themes#solarized_flood#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.replace =$/;"	v
g:airline#themes#solarized_flood#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.replace.airline_a =$/;"	v
g:airline#themes#solarized_flood#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.replace_modified =$/;"	v
g:airline#themes#solarized_flood#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.visual =$/;"	v
g:airline#themes#solarized_flood#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.visual['airline_z'] =$/;"	v
g:airline#themes#solarized_flood#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.visual_modified = {$/;"	v
g:airline#themes#term#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette = {}$/;"	v
g:airline#themes#term#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.accents = {$/;"	v
g:airline#themes#term#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#term#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#term#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.inactive_modified = {$/;"	v
g:airline#themes#term#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#term#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.insert_modified = {$/;"	v
g:airline#themes#term#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.insert_paste = {$/;"	v
g:airline#themes#term#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#term#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.normal_modified = {$/;"	v
g:airline#themes#term#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#term#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.replace_modified = {$/;"	v
g:airline#themes#term#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#term#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.visual_modified = {$/;"	v
g:airline#themes#term_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette = {}$/;"	v
g:airline#themes#term_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.accents = {$/;"	v
g:airline#themes#term_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#term_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA,/;"	v
g:airline#themes#term_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.inactive_modified = {$/;"	v
g:airline#themes#term_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s/;"	v
g:airline#themes#term_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.insert_modified = {$/;"	v
g:airline#themes#term_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.insert_paste = {$/;"	v
g:airline#themes#term_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s/;"	v
g:airline#themes#term_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.normal_modified = {$/;"	v
g:airline#themes#term_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, /;"	v
g:airline#themes#term_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.replace_modified = {$/;"	v
g:airline#themes#term_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s/;"	v
g:airline#themes#term_light#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.visual_modified = {$/;"	v
g:airline#themes#tomorrow#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/tomorrow.vim	/^  let g:airline#themes#tomorrow#palette.accents = {$/;"	v
g:airline#themes#tomorrow#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/tomorrow.vim	/^  let g:airline#themes#tomorrow#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA,/;"	v
g:airline#themes#tomorrow#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/tomorrow.vim	/^  let g:airline#themes#tomorrow#palette.inactive_modified = {$/;"	v
g:airline#themes#tomorrow#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/tomorrow.vim	/^  let g:airline#themes#tomorrow#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s/;"	v
g:airline#themes#tomorrow#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/tomorrow.vim	/^  let g:airline#themes#tomorrow#palette.insert_modified = g:airline#themes#tomorrow#palette.norm/;"	v
g:airline#themes#tomorrow#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/tomorrow.vim	/^  let g:airline#themes#tomorrow#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s/;"	v
g:airline#themes#tomorrow#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/tomorrow.vim	/^  let g:airline#themes#tomorrow#palette.normal_modified = {$/;"	v
g:airline#themes#tomorrow#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/tomorrow.vim	/^  let g:airline#themes#tomorrow#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, /;"	v
g:airline#themes#tomorrow#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/tomorrow.vim	/^  let g:airline#themes#tomorrow#palette.replace_modified = g:airline#themes#tomorrow#palette.nor/;"	v
g:airline#themes#tomorrow#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/tomorrow.vim	/^  let g:airline#themes#tomorrow#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s/;"	v
g:airline#themes#tomorrow#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/tomorrow.vim	/^  let g:airline#themes#tomorrow#palette.visual_modified = g:airline#themes#tomorrow#palette.norm/;"	v
g:airline#themes#tomorrow#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/tomorrow.vim	/^let g:airline#themes#tomorrow#palette = {}$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette = {}$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.accents = {$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.inactive = {$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.inactive_modified = {$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.insert = {$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.insert.airline_error =$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.insert.airline_warning =$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.insert_modified = {}$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.insert_modified.airline_error =$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.normal = {$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.normal.airline_error = s:V1$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.normal.airline_warning = s:NM1$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.normal_modified = {$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.normal_modified.airline_error =$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.replace = {$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.replace.airline_error =$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.replace.airline_warning =$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.replace_modified = {}$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.replace_modified.airline_error =$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.visual = {$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.visual.airline_error =$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.visual.airline_warning =$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.visual_modified = {}$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.visual_modified.airline_error =$/;"	v
g:airline#themes#transparent#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#ubaryd#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette = {}$/;"	v
g:airline#themes#ubaryd#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.accents = {$/;"	v
g:airline#themes#ubaryd#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:I/;"	v
g:airline#themes#ubaryd#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.inactive_modified = {$/;"	v
g:airline#themes#ubaryd#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#ubaryd#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert_modified = {$/;"	v
g:airline#themes#ubaryd#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert_paste = {$/;"	v
g:airline#themes#ubaryd#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#ubaryd#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.normal_modified = {$/;"	v
g:airline#themes#ubaryd#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3/;"	v
g:airline#themes#ubaryd#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.replace_modified = {$/;"	v
g:airline#themes#ubaryd#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#ubaryd#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.visual_modified = {$/;"	v
g:airline#themes#understated#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette = {}$/;"	v
g:airline#themes#understated#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.accents = {'red': ['#FF0000', '', 88, '']}$/;"	v
g:airline#themes#understated#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#understated#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.inactive = airline#themes#generate_color_map(s:IA1, s:I/;"	v
g:airline#themes#understated#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.inactive_modified = {'airline_c': ['#4E4E4E', '', 239, /;"	v
g:airline#themes#understated#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, /;"	v
g:airline#themes#understated#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert_modified = {'airline_c': ['#AFAF87', '#5F5F5F', /;"	v
g:airline#themes#understated#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert_paste = {'airline_c': ['#AFAF87', '#5F5F5F', 144/;"	v
g:airline#themes#understated#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, /;"	v
g:airline#themes#understated#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.normal_modified = {'airline_c': ['#ffffff', '#5f005f', /;"	v
g:airline#themes#understated#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace = airline#themes#generate_color_map(s:I1, s:I2,/;"	v
g:airline#themes#understated#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace.airline_a = ['#FFFFFF', '#870000', 15, 88, '']$/;"	v
g:airline#themes#understated#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace_modified = {'airline_c': ['#AFAF87', '#5F5F5F',/;"	v
g:airline#themes#understated#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, /;"	v
g:airline#themes#understated#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.visual_modified = {'airline_c': [ '#AFAF87', '#5f005f',/;"	v
g:airline#themes#violet#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette = {}$/;"	v
g:airline#themes#violet#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:I/;"	v
g:airline#themes#violet#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#violet#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.insert_replace = {$/;"	v
g:airline#themes#violet#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#violet#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.replace = copy(g:airline#themes#violet#palette.normal)$/;"	v
g:airline#themes#violet#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[3] /;"	v
g:airline#themes#violet#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.visual = {$/;"	v
g:airline#themes#wombat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette = {}$/;"	v
g:airline#themes#wombat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.accents = {$/;"	v
g:airline#themes#wombat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#wombat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:I/;"	v
g:airline#themes#wombat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.inactive_modified = {$/;"	v
g:airline#themes#wombat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#wombat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert_modified = {$/;"	v
g:airline#themes#wombat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert_paste = {$/;"	v
g:airline#themes#wombat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#wombat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.normal_modified = {$/;"	v
g:airline#themes#wombat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3/;"	v
g:airline#themes#wombat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.replace_modified = {$/;"	v
g:airline#themes#wombat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#wombat#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.visual_modified = {$/;"	v
g:airline#themes#xtermlight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette = {}$/;"	v
g:airline#themes#xtermlight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA/;"	v
g:airline#themes#xtermlight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.inactive_modified = {$/;"	v
g:airline#themes#xtermlight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s/;"	v
g:airline#themes#xtermlight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.insert_modified = {$/;"	v
g:airline#themes#xtermlight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.insert_paste = {$/;"	v
g:airline#themes#xtermlight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s/;"	v
g:airline#themes#xtermlight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.normal_modified = {$/;"	v
g:airline#themes#xtermlight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.replace = copy(g:airline#themes#xtermlight#palette.inser/;"	v
g:airline#themes#xtermlight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.replace.airline_a = [ s:I2[0]   , '#ff0000' , s:I1[2] , /;"	v
g:airline#themes#xtermlight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.replace_modified = g:airline#themes#xtermlight#palette.i/;"	v
g:airline#themes#xtermlight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s/;"	v
g:airline#themes#xtermlight#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.visual_modified = {$/;"	v
g:airline#themes#zenburn#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/zenburn.vim	/^  let g:airline#themes#zenburn#palette.accents = {$/;"	v
g:airline#themes#zenburn#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/zenburn.vim	/^  let g:airline#themes#zenburn#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, /;"	v
g:airline#themes#zenburn#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/zenburn.vim	/^  let g:airline#themes#zenburn#palette.inactive_modified = {$/;"	v
g:airline#themes#zenburn#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/zenburn.vim	/^  let g:airline#themes#zenburn#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:/;"	v
g:airline#themes#zenburn#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/zenburn.vim	/^  let g:airline#themes#zenburn#palette.insert.airline_c = s:Nmod$/;"	v
g:airline#themes#zenburn#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/zenburn.vim	/^  let g:airline#themes#zenburn#palette.insert_modified = g:airline#themes#zenburn#palette.normal/;"	v
g:airline#themes#zenburn#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/zenburn.vim	/^  let g:airline#themes#zenburn#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:/;"	v
g:airline#themes#zenburn#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/zenburn.vim	/^  let g:airline#themes#zenburn#palette.normal.airline_c = s:Nmod$/;"	v
g:airline#themes#zenburn#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/zenburn.vim	/^  let g:airline#themes#zenburn#palette.normal_modified = {$/;"	v
g:airline#themes#zenburn#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/zenburn.vim	/^  let g:airline#themes#zenburn#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s/;"	v
g:airline#themes#zenburn#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/zenburn.vim	/^  let g:airline#themes#zenburn#palette.replace_modified = g:airline#themes#zenburn#palette.norma/;"	v
g:airline#themes#zenburn#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/zenburn.vim	/^  let g:airline#themes#zenburn#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:/;"	v
g:airline#themes#zenburn#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/zenburn.vim	/^  let g:airline#themes#zenburn#palette.visual_modified = g:airline#themes#zenburn#palette.normal/;"	v
g:airline#themes#zenburn#palette	autoload/plugged/vim-airline-themes/autoload/airline/themes/zenburn.vim	/^let g:airline#themes#zenburn#palette = {}$/;"	v
g:airline#visual_active	autoload/plugged/vim-airline/autoload/airline.vim	/^  let g:airline#visual_active = (mode() =~? '[vs]')$/;"	v
g:airline_inactive_collapse	autoload/plugged/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 0$/;"	v
g:airline_inactive_collapse	autoload/plugged/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 1$/;"	v
g:airline_last_window_changed	autoload/plugged/vim-airline/plugin/airline.vim	/^  let g:airline_last_window_changed = l:key$/;"	v
g:airline_left_sep	themes/airline.vim	/^let g:airline_left_sep = ''$/;"	v
g:airline_mode_map	autoload/plugged/vim-airline-themes/autoload/airline/themes/atomic.vim	/^	let g:airline_mode_map = {$/;"	v
g:airline_powerline_fonts	themes/airline.vim	/^let g:airline_powerline_fonts = 1$/;"	v
g:airline_right_sep	themes/airline.vim	/^let g:airline_right_sep = ''$/;"	v
g:airline_section_	autoload/plugged/vim-airline/t/init.vim	/^      let g:airline_section_{s} = s$/;"	v
g:airline_section_a	autoload/plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_a = airline#section#create_left(['mode', 'crypt', 'paste', 'keymap', '/;"	v
g:airline_section_a	autoload/plugged/vim-airline/t/airline.vim	/^    let g:airline_section_a = airline#section#create(['mode', 'mode'])$/;"	v
g:airline_section_b	autoload/plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_b = airline#section#create(['hunks', 'branch', 'battery'])$/;"	v
g:airline_section_b	autoload/plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_b = airline#section#create(['hunks', 'branch'])$/;"	v
g:airline_section_c	autoload/plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_c = airline#section#create(['%<', 'file', spc, 'readonly', 'coc_stat/;"	v
g:airline_section_c	autoload/plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_c = airline#section#create(['%<', 'path', spc, 'readonly', 'coc_stat/;"	v
g:airline_section_error	autoload/plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_error = airline#section#create(['ycm_error_count', 'syntastic-err', 'e/;"	v
g:airline_section_gutter	autoload/plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_gutter = airline#section#create(['%='])$/;"	v
g:airline_section_warning	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^      let g:airline_section_warning .= airline#section#create(['whitespace'])$/;"	v
g:airline_section_warning	autoload/plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_warning = airline#section#create(['ycm_warning_count',  'syntastic-war/;"	v
g:airline_section_x	autoload/plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_x = airline#section#create_right(['coc_current_function', 'bookmark', /;"	v
g:airline_section_y	autoload/plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_y = airline#section#create_right(['ffenc'])$/;"	v
g:airline_section_z	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline_section_z = airline#section#create(['%1p%% — ',$/;"	v
g:airline_section_z	autoload/plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_z = airline#section#create(['%p%%'.spc, 'linenr', 'colnr'])$/;"	v
g:airline_section_z	autoload/plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_z = airline#section#create(['windowswap', 'obsession', '%p%%'.spc, '/;"	v
g:airline_statusline_funcrefs	autoload/plugged/vim-airline/autoload/airline.vim	/^let g:airline_statusline_funcrefs = get(g:, 'airline_statusline_funcrefs', [])$/;"	v
g:airline_statusline_funcrefs	autoload/plugged/vim-airline/t/airline.vim	/^    let g:airline_statusline_funcrefs = []$/;"	v
g:airline_symbols	autoload/plugged/vim-airline-themes/autoload/airline/themes/atomic.vim	/^	let g:airline_symbols.paste = 'Ξ'$/;"	v
g:airline_symbols	autoload/plugged/vim-airline-themes/autoload/airline/themes/atomic.vim	/^	let g:airline_symbols.spell = 'S'$/;"	v
g:airline_symbols	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline_symbols.paste = 'P'$/;"	v
g:airline_symbols	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline_symbols.spell = 'S'$/;"	v
g:airline_theme	autoload/plugged/vim-airline/autoload/airline.vim	/^      let g:airline_theme = 'dark'$/;"	v
g:airline_theme	autoload/plugged/vim-airline/autoload/airline.vim	/^      let g:airline_theme = a:name$/;"	v
g:airline_theme	autoload/plugged/vim-airline/autoload/airline.vim	/^  let g:airline_theme = get(g:, 'airline_theme', 'dark')$/;"	v
g:airline_theme	autoload/plugged/vim-airline/plugin/airline.vim	/^        let g:airline_theme=s:random_theme()$/;"	v
g:airline_theme	autoload/plugged/vim-airline/plugin/airline.vim	/^      let g:airline_theme = 'dark'$/;"	v
g:airline_theme	autoload/plugged/vim-airline/plugin/airline.vim	/^    let g:airline_theme = 'dark'$/;"	v
g:airline_theme	autoload/plugged/vim-airline/t/airline.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	autoload/plugged/vim-airline/t/builder.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	autoload/plugged/vim-airline/t/highlighter.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	themes/airline.vim	/^let g:airline_theme = 'palenight'$/;"	v
g:aria_attributes_complete	autoload/plugged/vim-polyglot/autoload/htmlcomplete.vim	/^        let g:aria_attributes_complete = 0$/;"	v
g:aria_attributes_complete	autoload/plugged/vim-polyglot/autoload/htmlcomplete.vim	/^  let g:aria_attributes_complete = 1$/;"	v
g:autoloaded_fugitive	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let g:autoloaded_fugitive = 1$/;"	v
g:autoloaded_rhubarb	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^let g:autoloaded_rhubarb = 1$/;"	v
g:battery#update_statusline	autoload/plugged/vim-airline/autoload/airline/extensions/battery.vim	/^    let g:battery#update_statusline = 1$/;"	v
g:beginword	autoload/plugged/vim-polyglot/indent/cobol.vim	/^            let g:beginword = beginword$/;"	v
g:bmenu_max_pathlen	autoload/plugged/vim-polyglot/extras/menu.vim	/^  let g:bmenu_max_pathlen = 35$/;"	v
g:bmenu_priority	autoload/plugged/vim-polyglot/extras/menu.vim	/^    let g:bmenu_priority = a:1$/;"	v
g:bufferline_active_buffer_left	autoload/plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_active_buffer_left = ''$/;"	v
g:bufferline_active_buffer_right	autoload/plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_active_buffer_right = ''$/;"	v
g:bufferline_active_highlight	autoload/plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_active_highlight = 'bufferline_selected'$/;"	v
g:bufferline_inactive_highlight	autoload/plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_inactive_highlight = 'airline_c'$/;"	v
g:bufferline_separator	autoload/plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_separator = g:airline_symbols.space$/;"	v
g:c_syntax_for_h	autoload/plugged/vim-polyglot/tests/extensions.vim	/^let g:c_syntax_for_h = 1$/;"	v
g:cabal_indent_section	autoload/plugged/vim-polyglot/indent/cabal.vim	/^  let g:cabal_indent_section = 2$/;"	v
g:cabal_indent_section	autoload/plugged/vim-polyglot/indent/cabal.vim	/^  let g:cabal_indent_section = 4$/;"	v
g:ch_syntax_for_h	autoload/plugged/vim-polyglot/tests/extensions.vim	/^let g:ch_syntax_for_h = 1$/;"	v
g:clojure_align_multiline_strings	autoload/plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_align_multiline_strings = 0$/;"	v
g:clojure_align_subforms	autoload/plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_align_subforms = 0$/;"	v
g:clojure_fuzzy_indent	autoload/plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent = 1$/;"	v
g:clojure_fuzzy_indent_blacklist	autoload/plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent_blacklist = ['-fn$', '\\v^with-%(meta|out-str|loading-context)$']$/;"	v
g:clojure_fuzzy_indent_patterns	autoload/plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent_patterns = ['^with', '^def', '^let']$/;"	v
g:clojure_maxlines	autoload/plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_maxlines = 300$/;"	v
g:clojure_special_indent_words	autoload/plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_special_indent_words = 'deftype,defrecord,reify,proxy,extend-type,extend-protoco/;"	v
g:cobol_inline_comment	autoload/plugged/vim-polyglot/syntax/cobol.vim	/^   let g:cobol_inline_comment=0$/;"	v
g:coc#_context	autoload/plugged/coc.nvim/autoload/coc.vim	/^    let g:coc#_context = {'start': 0, 'preselect': -1,'candidates': []}$/;"	v
g:coc#_context	autoload/plugged/coc.nvim/autoload/coc.vim	/^  let g:coc#_context = {$/;"	v
g:coc#_context	autoload/plugged/coc.nvim/autoload/coc.vim	/^let g:coc#_context = {'start': 0, 'preselect': -1,'candidates': []}$/;"	v
g:coc_enabled	autoload/plugged/coc.nvim/plugin/coc.vim	/^  let g:coc_enabled = 0$/;"	v
g:coc_enabled	autoload/plugged/coc.nvim/plugin/coc.vim	/^  let g:coc_enabled = 1$/;"	v
g:coc_global_extensions	autoload/plugged/coc.nvim/autoload/coc.vim	/^let g:coc_global_extensions = get(g:, 'coc_global_extensions', [])$/;"	v
g:coc_last_float_win	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^  let g:coc_last_float_win = winid$/;"	v
g:coc_last_hover_message	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^  let g:coc_last_hover_message = a:msg$/;"	v
g:coc_selected_text	autoload/plugged/coc.nvim/autoload/coc.vim	/^let g:coc_selected_text = ''$/;"	v
g:coc_service_initialized	autoload/plugged/coc.nvim/plugin/coc.vim	/^let g:coc_service_initialized = 0$/;"	v
g:coc_stl_format	autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^    let g:coc_stl_format = _backup$/;"	v
g:coc_stl_format	autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^    let g:coc_stl_format = get(g:, 'airline#extensions#coc#stl_format_err', '%E{[%e(#%fe)]}')$/;"	v
g:coc_stl_format	autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^    let g:coc_stl_format = get(g:, 'airline#extensions#coc#stl_format_warn', '%W{[%w(#%fw)]}')$/;"	v
g:coc_user_config	autoload/plugged/coc.nvim/autoload/coc.vim	/^  let g:coc_user_config[a:section] = a:value$/;"	v
g:coc_user_config	autoload/plugged/coc.nvim/autoload/coc.vim	/^let g:coc_user_config = get(g:, 'coc_user_config', {})$/;"	v
g:coc_vim_commands	autoload/plugged/coc.nvim/autoload/coc.vim	/^let g:coc_vim_commands = []$/;"	v
g:coc_workspace_initialized	autoload/plugged/coc.nvim/plugin/coc.vim	/^let g:coc_workspace_initialized = 0$/;"	v
g:coffee_cake	autoload/plugged/vim-polyglot/autoload/coffee.vim	/^    let g:coffee_cake = 'cake'$/;"	v
g:coffee_cake_options	autoload/plugged/vim-polyglot/autoload/coffee.vim	/^    let g:coffee_cake_options = ''$/;"	v
g:coffee_compiler	autoload/plugged/vim-polyglot/autoload/coffee.vim	/^    let g:coffee_compiler = 'coffee'$/;"	v
g:coffee_lint_options	autoload/plugged/vim-polyglot/autoload/coffee.vim	/^    let g:coffee_lint_options = ''$/;"	v
g:coffee_linter	autoload/plugged/vim-polyglot/autoload/coffee.vim	/^    let g:coffee_linter = 'coffeelint'$/;"	v
g:coffee_make_options	autoload/plugged/vim-polyglot/autoload/coffee.vim	/^    let g:coffee_make_options = ''$/;"	v
g:colors_name	autoload/plugged/palenight.vim/colors/palenight.vim	/^let g:colors_name="palenight"$/;"	v
g:colors_name	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let g:colors_name='gruvbox'$/;"	v
g:count	autoload/plugged/vim-airline/t/util.vim	/^    let g:count = 0$/;"	v
g:count	autoload/plugged/vim-airline/t/util.vim	/^  let g:count += 1$/;"	v
g:count	autoload/plugged/vim-airline/t/util.vim	/^  let g:count += 2$/;"	v
g:count	autoload/plugged/vim-airline/t/util.vim	/^  let g:count = a:0$/;"	v
g:crystal#indent#block_continuation_regex	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#block_continuation_regex =$/;"	v
g:crystal#indent#block_regex	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#block_regex =$/;"	v
g:crystal#indent#bracket_continuation_regex	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#bracket_continuation_regex =$/;"	v
g:crystal#indent#bracket_switch_continuation_regex	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#bracket_switch_continuation_regex =$/;"	v
g:crystal#indent#continuation_regex	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#continuation_regex =$/;"	v
g:crystal#indent#crystal_deindent_keywords	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#crystal_deindent_keywords =$/;"	v
g:crystal#indent#crystal_indent_keywords	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#crystal_indent_keywords =$/;"	v
g:crystal#indent#crystal_macro_deindent_keywords	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#crystal_macro_deindent_keywords =$/;"	v
g:crystal#indent#crystal_macro_indent_keywords	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#crystal_macro_indent_keywords =$/;"	v
g:crystal#indent#curr_line_callbacks	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#curr_line_callbacks = [$/;"	v
g:crystal#indent#dot_continuation_regex	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#dot_continuation_regex = '\\.'.g:crystal#indent#eol$/;"	v
g:crystal#indent#end_end_regex	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#end_end_regex =$/;"	v
g:crystal#indent#end_middle_regex	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#end_middle_regex =$/;"	v
g:crystal#indent#end_start_regex	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#end_start_regex =$/;"	v
g:crystal#indent#eol	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#eol = '\\ze\\s*\\%(#.*\\)\\=\\%(\\_$\\|;\\)'$/;"	v
g:crystal#indent#hanging_assignment_regex	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#hanging_assignment_regex =$/;"	v
g:crystal#indent#leading_operator_regex	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#leading_operator_regex = g:crystal#indent#sol.'\\.'$/;"	v
g:crystal#indent#link_attribute_regex	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#link_attribute_regex =$/;"	v
g:crystal#indent#macro_end_end_regex	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#macro_end_end_regex =$/;"	v
g:crystal#indent#macro_end_middle_regex	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#macro_end_middle_regex =$/;"	v
g:crystal#indent#macro_end_start_regex	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#macro_end_start_regex =$/;"	v
g:crystal#indent#macro_hanging_assignment_regex	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#macro_hanging_assignment_regex =$/;"	v
g:crystal#indent#msl_callbacks	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#msl_callbacks = [$/;"	v
g:crystal#indent#non_bracket_continuation_regex	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#non_bracket_continuation_regex =$/;"	v
g:crystal#indent#operator_regex	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#operator_regex =$/;"	v
g:crystal#indent#prev_line_callbacks	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#prev_line_callbacks = [$/;"	v
g:crystal#indent#skip_expr	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#skip_expr =$/;"	v
g:crystal#indent#sol	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#sol = '\\%(\\_^\\|;\\)\\s*\\zs'$/;"	v
g:crystal#indent#syng_delim	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#syng_delim =$/;"	v
g:crystal#indent#syng_strcom	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#syng_strcom =$/;"	v
g:crystal#indent#syng_strcomdelim	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#syng_strcomdelim =$/;"	v
g:crystal#indent#syng_string	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#syng_string =$/;"	v
g:crystal#indent#type_declaration_regex	autoload/plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#type_declaration_regex =$/;"	v
g:crystal_auto_format	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^let g:crystal_auto_format = get(g:, 'crystal_auto_format', 0)$/;"	v
g:crystal_compiler_command	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^let g:crystal_compiler_command = get(g:, 'crystal_compiler_command', 'crystal')$/;"	v
g:crystal_indent_assignment_style	autoload/plugged/vim-polyglot/indent/crystal.vim	/^  let g:crystal_indent_assignment_style = 'hanging'$/;"	v
g:crystal_indent_block_style	autoload/plugged/vim-polyglot/indent/crystal.vim	/^  let g:crystal_indent_block_style = 'expression'$/;"	v
g:crystal_minlines	autoload/plugged/vim-polyglot/syntax/crystal.vim	/^    let g:crystal_minlines = 500$/;"	v
g:csv_convert	autoload/plugged/vim-polyglot/autoload/csv.vim	/^    let g:csv_convert=input("Converted text, use %s for column input:\\n", convert)$/;"	v
g:csv_delim	autoload/plugged/vim-polyglot/autoload/csv.vim	/^        let g:csv_delim = _delim$/;"	v
g:csv_delim	autoload/plugged/vim-polyglot/autoload/csv.vim	/^    let g:csv_delim = delimiter$/;"	v
g:csv_highlight_column	autoload/plugged/vim-polyglot/autoload/csv.vim	/^      let g:csv_highlight_column = csv_highlight_column$/;"	v
g:csv_no_conceal	autoload/plugged/vim-polyglot/autoload/csv.vim	/^            let g:csv_no_conceal=1$/;"	v
g:csv_no_conceal	autoload/plugged/vim-polyglot/autoload/csv.vim	/^        let g:csv_no_conceal=1$/;"	v
g:csv_post_convert	autoload/plugged/vim-polyglot/autoload/csv.vim	/^    let g:csv_post_convert=input('Post convert text: ', post)$/;"	v
g:csv_pre_convert	autoload/plugged/vim-polyglot/autoload/csv.vim	/^    let g:csv_pre_convert=input('Pre convert text: ', pre)$/;"	v
g:ctags_command	autoload/plugged/vim-polyglot/extras/menu.vim	/^    let g:ctags_command = "ctags -R ."$/;"	v
g:ctags_command	autoload/plugged/vim-polyglot/extras/menu.vim	/^    let g:ctags_command = "mc vim:ctags *.*"$/;"	v
g:ctrlp_status_func	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^  let g:ctrlp_status_func = {$/;"	v
g:cucumber_languages	autoload/plugged/vim-polyglot/syntax/cucumber.vim	/^let g:cucumber_languages = {$/;"	v
g:current_compiler	autoload/plugged/vim-polyglot/compiler/go.vim	/^let g:current_compiler = "go"$/;"	v
g:cursormode_exit_mode	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^  let g:cursormode_exit_mode='n'$/;"	v
g:dart_format_on_save	autoload/plugged/vim-polyglot/autoload/dart.vim	/^    let g:dart_format_on_save = 0$/;"	v
g:dart_format_on_save	autoload/plugged/vim-polyglot/autoload/dart.vim	/^  let g:dart_format_on_save = 1$/;"	v
g:debchangelog_complete_mode	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^          let g:debchangelog_complete_mode = 'lp'$/;"	v
g:debchangelog_complete_mode	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^    let g:debchangelog_complete_mode = 'debbugs'$/;"	v
g:debchangelog_listbugs_severities	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^  let g:debchangelog_listbugs_severities = 'critical,grave,serious,important,normal,minor,wishli/;"	v
g:did_changelog_ftplugin	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^let g:did_changelog_ftplugin = 1$/;"	v
g:did_cobol_ftplugin_functions	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^let g:did_cobol_ftplugin_functions = 1$/;"	v
g:did_coc_loaded	autoload/plugged/coc.nvim/plugin/coc.vim	/^let g:did_coc_loaded = 1$/;"	v
g:did_ocaml_switch	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let g:did_ocaml_switch = 1$/;"	v
g:did_ruby_ftplugin_functions	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:dispatch_compilers	autoload/plugged/vim-rhubarb/plugin/rhubarb.vim	/^  let g:dispatch_compilers = {}$/;"	v
g:dispatch_compilers	autoload/plugged/vim-rhubarb/plugin/rhubarb.vim	/^let g:dispatch_compilers['hub'] = 'git'$/;"	v
g:eelixir_default_subtype	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let g:eelixir_default_subtype = "html"$/;"	v
g:eelixir_default_subtype	autoload/plugged/vim-polyglot/syntax/eelixir.vim	/^  let g:eelixir_default_subtype = "html"$/;"	v
g:elixir_indent_max_lookbehind	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^  let g:elixir_indent_max_lookbehind = 30$/;"	v
g:elixir_use_markdown_for_docs	autoload/plugged/vim-polyglot/syntax/elixir.vim	/^  let g:elixir_use_markdown_for_docs = 0$/;"	v
g:eregex_backward_delim	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^  let g:eregex_backward_delim = '?'$/;"	v
g:eregex_evaluater_cmd	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^    let g:eregex_evaluater_cmd = cmd$/;"	v
g:eregex_evaluater_cmd	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^    let g:eregex_evaluater_cmd = globalcmd$/;"	v
g:eregex_evaluater_how_exe	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^        let g:eregex_evaluater_how_exe=1$/;"	v
g:eregex_evaluater_how_exe	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^    let g:eregex_evaluater_how_exe = s:eglobal_working$/;"	v
g:eregex_evaluater_how_exe	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^    let g:eregex_evaluater_how_exe=2$/;"	v
g:eregex_force_case	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^  let g:eregex_force_case = 0$/;"	v
g:eregex_forward_delim	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^  let g:eregex_forward_delim = '\/'$/;"	v
g:erlang_indent_searchpair_timeout	autoload/plugged/vim-polyglot/indent/erlang.vim	/^let g:erlang_indent_searchpair_timeout = 2000$/;"	v
g:erlang_unexpected_token_indent	autoload/plugged/vim-polyglot/indent/erlang.vim	/^  let g:erlang_unexpected_token_indent = -1$/;"	v
g:eruby_default_subtype	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	autoload/plugged/vim-polyglot/syntax/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:fennel_align_multiline_strings	autoload/plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_align_multiline_strings = 0$/;"	v
g:fennel_align_subforms	autoload/plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_align_subforms = 0$/;"	v
g:fennel_fuzzy_indent	autoload/plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_fuzzy_indent = 1$/;"	v
g:fennel_fuzzy_indent_blacklist	autoload/plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_fuzzy_indent_blacklist = []$/;"	v
g:fennel_fuzzy_indent_patterns	autoload/plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_fuzzy_indent_patterns = ['^def', '^let', '^while', '^if', '^fn$', '^var$', '^case/;"	v
g:fennel_maxlines	autoload/plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_maxlines = 100$/;"	v
g:fennel_special_indent_words	autoload/plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_special_indent_words = ''$/;"	v
g:fern_force_overwrite_statusline	autoload/plugged/vim-airline/autoload/airline/extensions/fern.vim	/^  let g:fern_force_overwrite_statusline = 0$/;"	v
g:filetype_asa	autoload/plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_asa = "fizfuz"$/;"	v
g:filetype_asp	autoload/plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_asp = "fizfuz"$/;"	v
g:filetype_fs	autoload/plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_fs = "fizfuz"$/;"	v
g:filetype_idr	autoload/plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_idr = "fizfuz"$/;"	v
g:filetype_m	autoload/plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_m = "fizfuz"$/;"	v
g:filetype_pl	autoload/plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_pl = "fizfuz"$/;"	v
g:filetype_pm	autoload/plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_pm = "fizfuz"$/;"	v
g:filetype_t	autoload/plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_t = "fizfuz"$/;"	v
g:foo	autoload/plugged/vim-polyglot/indent/cobol.vim	/^        let g:foo = s:stripped(lastclause)$/;"	v
g:fsharp#	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^            let g:fsharp#{key.snake} = key.default$/;"	v
g:fsharp#languageserver_command	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^let g:fsharp#languageserver_command =$/;"	v
g:ft_ignore_pat	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^  let g:ft_ignore_pat = '\\.\\(Z\\|gz\\|bz2\\|zip\\|tgz\\)$'$/;"	v
g:ft_ignore_pat	autoload/plugged/vim-polyglot/extras/filetype.vim	/^  let g:ft_ignore_pat = '\\.\\(Z\\|gz\\|bz2\\|zip\\|tgz\\)$'$/;"	v
g:ftplugin_sql_objects	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_objects = 'function,procedure,event,' .$/;"	v
g:ftplugin_sql_omni_key	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_omni_key = '<C-C>'$/;"	v
g:ftplugin_sql_omni_key_left	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_omni_key_left = '<Left>'$/;"	v
g:ftplugin_sql_omni_key_right	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_omni_key_right = '<Right>'$/;"	v
g:ftplugin_sql_statements	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_statements = 'create'$/;"	v
g:fugitive_browse_handlers	autoload/plugged/vim-rhubarb/plugin/rhubarb.vim	/^  let g:fugitive_browse_handlers = []$/;"	v
g:fugitive_event	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^    let g:fugitive_event = dir$/;"	v
g:fugitive_git_executable	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_git_executable = 'env ' . g:fugitive_git_executable$/;"	v
g:fugitive_git_executable	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_result	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^      let g:fugitive_result = a:dir$/;"	v
g:fugitive_summary_format	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:fullDefMatcher	autoload/plugged/vim-polyglot/indent/scala.vim	/^let g:fullDefMatcher = '^\\s*' . s:defMatcher . '\\s\\+' . s:funcNameMatcher . '\\s*' . s:typeSp/;"	v
g:fzf#vim#buffers	autoload/plugged/fzf.vim/plugin/fzf.vim	/^  let g:fzf#vim#buffers = {}$/;"	v
g:fzf_action	plug-config/fzf.vim	/^let g:fzf_action = {$/;"	v
g:fzf_colors	plug-config/fzf.vim	/^let g:fzf_colors =$/;"	v
g:fzf_history_dir	plug-config/fzf.vim	/^let g:fzf_history_dir = '~\/.local\/share\/fzf-history'$/;"	v
g:fzf_layout	plug-config/fzf.vim	/^let g:fzf_layout = {'up':'~90%', 'window': { 'width': 0.8, 'height': 0.8,'yoffset':0.5,'xoffset'/;"	v
g:fzf_tags_command	plug-config/fzf.vim	/^let g:fzf_tags_command = 'ctags -R'$/;"	v
g:gina#component#repo#commit_length	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^    let g:gina#component#repo#commit_length = s:sha1size$/;"	v
g:gina_force_overwrite_statusline	autoload/plugged/vim-airline/autoload/airline/extensions/gina.vim	/^  let g:gina_force_overwrite_statusline = 0$/;"	v
g:gitgutter_override_sign_column_highlight	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gitgutter_override_sign_column_highlight = 0$/;"	v
g:github_password	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^      let g:github_password = FugitiveConfigGet('github.password', '')$/;"	v
g:github_password	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^    let g:github_password = $GITHUB_PASSWORD$/;"	v
g:github_user	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^      let g:github_user = $LOGNAME$/;"	v
g:github_user	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^      let g:github_user = FugitiveConfigGet('github.user', '')$/;"	v
g:github_user	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^    let g:github_user = $GITHUB_USER$/;"	v
g:go_asmfmt_autosave	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_asmfmt_autosave = a:value$/;"	v
g:go_auto_sameids	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_auto_sameids = a:value$/;"	v
g:go_auto_type_info	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_auto_type_info = a:value$/;"	v
g:go_build_tags	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_build_tags = a:value$/;"	v
g:go_debug_commands	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_debug_commands = get(g:, 'go_debug_commands', [])$/;"	v
g:go_debug_diag	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_debug_diag = a:value$/;"	v
g:go_fmt_autosave	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_fmt_autosave = a:value$/;"	v
g:go_guru_scope	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^    let g:go_guru_scope = a:scope$/;"	v
g:go_lsp_log	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_lsp_log = get(g:, 'go_lsp_log', [])$/;"	v
g:go_metalinter_autosave	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_metalinter_autosave = a:value$/;"	v
g:go_mod_fmt_autosave	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_mod_fmt_autosave = a:value$/;"	v
g:go_template_autocreate	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_template_autocreate = a:value$/;"	v
g:go_term_close_on_exit	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_term_close_on_exit = a:value$/;"	v
g:go_term_enabled	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_term_enabled = a:value$/;"	v
g:got_char	autoload/plugged/vim-polyglot/ftplugin/zimbu.vim	/^    let g:got_char = 1111$/;"	v
g:got_char	autoload/plugged/vim-polyglot/ftplugin/zimbu.vim	/^    let g:got_char = 777$/;"	v
g:got_char	autoload/plugged/vim-polyglot/ftplugin/zimbu.vim	/^    let g:got_char = 999$/;"	v
g:got_char	autoload/plugged/vim-polyglot/ftplugin/zimbu.vim	/^    let g:got_char = v:char$/;"	v
g:gruvbox_bold	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_bold=1$/;"	v
g:gruvbox_contrast_dark	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_contrast_dark='medium'$/;"	v
g:gruvbox_contrast_light	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_contrast_light='medium'$/;"	v
g:gruvbox_guisp_fallback	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_guisp_fallback='NONE'$/;"	v
g:gruvbox_improved_strings	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_improved_strings=0$/;"	v
g:gruvbox_improved_warnings	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_improved_warnings=0$/;"	v
g:gruvbox_inverse	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_inverse=1$/;"	v
g:gruvbox_invert_indent_guides	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_invert_indent_guides=0$/;"	v
g:gruvbox_invert_signs	~./config/nvim/plugged/gruvbox/autoload/gruvbox.vim	/^    let g:gruvbox_invert_signs=0$/;"	v
g:gruvbox_invert_signs	~./config/nvim/plugged/gruvbox/autoload/gruvbox.vim	/^    let g:gruvbox_invert_signs=1$/;"	v
g:gruvbox_italic	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^    let g:gruvbox_italic=0$/;"	v
g:gruvbox_italic	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^    let g:gruvbox_italic=1$/;"	v
g:gruvbox_termcolors	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_termcolors=256$/;"	v
g:gruvbox_undercurl	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_undercurl=1$/;"	v
g:gruvbox_underline	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_underline=1$/;"	v
g:haml_self_closing_tags	autoload/plugged/vim-polyglot/indent/haml.vim	/^  let g:haml_self_closing_tags = 'base|link|meta|br|hr|img|input'$/;"	v
g:haml_self_closing_tags	autoload/plugged/vim-polyglot/indent/slim.vim	/^  let g:haml_self_closing_tags = 'meta|link|img|hr|br'$/;"	v
g:haml_self_closing_tags	autoload/plugged/vim-polyglot/indent/slime.vim	/^  let g:haml_self_closing_tags = 'meta|link|img|hr|br'$/;"	v
g:haskell_indent_case	autoload/plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_case = 2$/;"	v
g:haskell_indent_do	autoload/plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_do = 3$/;"	v
g:haskell_indent_guard	autoload/plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_guard = 2$/;"	v
g:haskell_indent_if	autoload/plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_if = 3$/;"	v
g:haskell_indent_in	autoload/plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_in = 1$/;"	v
g:haskell_indent_let	autoload/plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_let = 4$/;"	v
g:haskell_indent_where	autoload/plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_where = 6$/;"	v
g:html5_aria_attributes_complete	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_aria_attributes_complete = 1$/;"	v
g:html5_event_handler_attributes_complete	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_event_handler_attributes_complete = 1$/;"	v
g:html5_microdata_attributes_complete	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_microdata_attributes_complete = 1$/;"	v
g:html5_rdfa_attributes_complete	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_rdfa_attributes_complete = 1$/;"	v
g:html_indent_tags	autoload/plugged/vim-polyglot/indent/mako.vim	/^        let g:html_indent_tags = a:tag$/;"	v
g:html_indent_tags	autoload/plugged/vim-polyglot/indent/mako.vim	/^        let g:html_indent_tags = g:html_indent_tags.'\\|'.a:tag$/;"	v
g:i	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^  let g:i = srcId$/;"	v
g:idris_indent_case	autoload/plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_case = 5$/;"	v
g:idris_indent_case	autoload/plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_case = 5$/;"	v
g:idris_indent_do	autoload/plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_do = 3$/;"	v
g:idris_indent_do	autoload/plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_do = 3$/;"	v
g:idris_indent_if	autoload/plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_if = 3$/;"	v
g:idris_indent_if	autoload/plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_if = 3$/;"	v
g:idris_indent_let	autoload/plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_let = 4$/;"	v
g:idris_indent_let	autoload/plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_let = 4$/;"	v
g:idris_indent_rewrite	autoload/plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_rewrite = 8$/;"	v
g:idris_indent_rewrite	autoload/plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_rewrite = 8$/;"	v
g:idris_indent_where	autoload/plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_where = 6$/;"	v
g:idris_indent_where	autoload/plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_where = 6$/;"	v
g:idris_respwin	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^    let g:idris_respwin = "active"$/;"	v
g:idris_respwin	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^  let g:idris_respwin = "active"$/;"	v
g:idris_respwin	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^  let g:idris_respwin = "hidden"$/;"	v
g:idris_respwin	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^    let g:idris_respwin = "active"$/;"	v
g:idris_respwin	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^  let g:idris_respwin = "active"$/;"	v
g:idris_respwin	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^  let g:idris_respwin = "hidden"$/;"	v
g:indentLine_color_gui	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:indentLine_color_gui = s:bg2[0]$/;"	v
g:indentLine_color_term	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:indentLine_color_term = s:bg2[1]$/;"	v
g:indent_guides_auto_colors	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:io_fugitive	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^let g:io_fugitive = {$/;"	v
g:j_indent_definitions	autoload/plugged/vim-polyglot/indent/j.vim	/^  let g:j_indent_definitions = 0$/;"	v
g:jsonnet_command	autoload/plugged/vim-polyglot/autoload/jsonnet.vim	/^  let g:jsonnet_command = "jsonnet"$/;"	v
g:jsonnet_fmt_command	autoload/plugged/vim-polyglot/autoload/jsonnet.vim	/^  let g:jsonnet_fmt_command = "jsonnetfmt"$/;"	v
g:jsonnet_fmt_fail_silently	autoload/plugged/vim-polyglot/autoload/jsonnet.vim	/^  let g:jsonnet_fmt_fail_silently = 1$/;"	v
g:jsonnet_fmt_options	autoload/plugged/vim-polyglot/autoload/jsonnet.vim	/^  let g:jsonnet_fmt_options = ''$/;"	v
g:jst_default_subtype	autoload/plugged/vim-polyglot/syntax/jst.vim	/^  let g:jst_default_subtype = "html"$/;"	v
g:julia#doc#juliapath	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^    let g:julia#doc#juliapath = 'julia'$/;"	v
g:julia#doc#juliapath	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^    let g:julia#doc#juliapath = get(pathlist, -1, 'julia')$/;"	v
g:julia#doc#juliapath	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^  let g:julia#doc#juliapath = get(g:, 'julia#doc#juliapath', 'julia')$/;"	v
g:l2u_did_global_setup	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  let g:l2u_did_global_setup = 1$/;"	v
g:l2u_symbols_dict	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  let g:l2u_symbols_dict = julia_latex_symbols#get_dict()$/;"	v
g:latex_to_unicode_auto	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^      let g:latex_to_unicode_auto = 0$/;"	v
g:latex_to_unicode_suggestions	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^    let g:latex_to_unicode_suggestions = 0$/;"	v
g:latex_to_unicode_tab	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^      let g:latex_to_unicode_tab = "off"$/;"	v
g:latex_to_unicode_tab	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^      let g:latex_to_unicode_tab = "on"$/;"	v
g:ledger_main	autoload/plugged/vim-polyglot/compiler/ledger.vim	/^  let g:ledger_main = '%'$/;"	v
g:ledger_target_amount	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^    let g:ledger_target_amount = a:target_amount$/;"	v
g:lightline#colorscheme#gruvbox#palette	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let g:lightline#colorscheme#gruvbox#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#palenight#palette	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let g:lightline#colorscheme#palenight#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:liquid_default_subtype	autoload/plugged/vim-polyglot/ftplugin/liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_default_subtype	autoload/plugged/vim-polyglot/syntax/liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_highlight_types	autoload/plugged/vim-polyglot/syntax/liquid.vim	/^  let g:liquid_highlight_types = []$/;"	v
g:llvm_ext_lli_executable	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let g:llvm_ext_lli_executable = get(g:, 'llvm_ext_lli_executable', 'lli')$/;"	v
g:llvm_ext_no_mapping	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let g:llvm_ext_no_mapping = get(g:, 'llvm_ext_no_mapping', 0)$/;"	v
g:loaded_airline	autoload/plugged/vim-airline/plugin/airline.vim	/^let g:loaded_airline = 1$/;"	v
g:loaded_airline_themes	autoload/plugged/vim-airline-themes/plugin/airline-themes.vim	/^let g:loaded_airline_themes = 1$/;"	v
g:loaded_autoload_fsharp	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^let g:loaded_autoload_fsharp = 1$/;"	v
g:loaded_cursormode	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let g:loaded_cursormode = 1$/;"	v
g:loaded_fugitive	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_fzf	autoload/plugged/fzf/plugin/fzf.vim	/^let g:loaded_fzf = 1$/;"	v
g:loaded_fzf_vim	autoload/plugged/fzf.vim/plugin/fzf.vim	/^let g:loaded_fzf_vim = 1$/;"	v
g:loaded_nerdtree_autoload	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	autoload/plugged/NERDTree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_plug	autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:loaded_rhubarb	autoload/plugged/vim-rhubarb/plugin/rhubarb.vim	/^let g:loaded_rhubarb = 1$/;"	v
g:loaded_rooter	autoload/plugged/vim-rooter/plugin/rooter.vim	/^let g:loaded_rooter = 1$/;"	v
g:loaded_signify	autoload/plugged/vim-signify/plugin/signify.vim	/^let g:loaded_signify = 1$/;"	v
g:loaded_sleuth	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^  let g:loaded_sleuth = 1$/;"	v
g:loaded_vim_airline_zoomwintab	autoload/plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^let g:loaded_vim_airline_zoomwintab = 1$/;"	v
g:loaded_xtabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    let g:loaded_xtabline = 1$/;"	v
g:main_syntax	autoload/plugged/vim-polyglot/syntax/dart.vim	/^  let g:main_syntax = 'dart'$/;"	v
g:main_syntax	autoload/plugged/vim-polyglot/syntax/gohtmltmpl.vim	/^  let g:main_syntax = 'html'$/;"	v
g:mako_indent_tags	autoload/plugged/vim-polyglot/indent/mako.vim	/^        let g:mako_indent_tags = a:tag$/;"	v
g:mako_indent_tags	autoload/plugged/vim-polyglot/indent/mako.vim	/^        let g:mako_indent_tags = g:mako_indent_tags.'\\|'.a:tag$/;"	v
g:mapleader	general/settings.vim	/^let g:mapleader = "\\<Space>"$/;"	v
g:mapleader	keys/mapping.vim	/^let g:mapleader = "\\<Space>"$/;"	v
g:markdown_fenced_languages	autoload/plugged/vim-polyglot/syntax/rmd.vim	/^    let g:markdown_fenced_languages = []$/;"	v
g:menutrans_fileformat_choices	autoload/plugged/vim-polyglot/extras/menu.vim	/^    let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Cancel"$/;"	v
g:menutrans_fileformat_dialog	autoload/plugged/vim-polyglot/extras/menu.vim	/^    let g:menutrans_fileformat_dialog = "Select format for writing the file"$/;"	v
g:menutrans_help_dialog	autoload/plugged/vim-polyglot/extras/menu.vim	/^    let g:menutrans_help_dialog = "Enter a command or word to find help on:\\n\\nPrepend i_ for /;"	v
g:menutrans_no_file	autoload/plugged/vim-polyglot/extras/menu.vim	/^      let g:menutrans_no_file = "[No Name]"$/;"	v
g:menutrans_path_dialog	autoload/plugged/vim-polyglot/extras/menu.vim	/^    let g:menutrans_path_dialog = "Enter search path for files.\\nSeparate directory names with /;"	v
g:menutrans_set_lang_to	autoload/plugged/vim-polyglot/extras/menu.vim	/^      let g:menutrans_set_lang_to = 'Set Language to'$/;"	v
g:menutrans_spell_add_ARG_to_word_list	autoload/plugged/vim-polyglot/extras/menu.vim	/^	  let g:menutrans_spell_add_ARG_to_word_list = 'Add\\ "%s"\\ to\\ Word\\ List'$/;"	v
g:menutrans_spell_change_ARG_to	autoload/plugged/vim-polyglot/extras/menu.vim	/^	  let g:menutrans_spell_change_ARG_to = 'Change\\ "%s"\\ to'$/;"	v
g:menutrans_spell_ignore_ARG	autoload/plugged/vim-polyglot/extras/menu.vim	/^	  let g:menutrans_spell_ignore_ARG = 'Ignore\\ "%s"'$/;"	v
g:menutrans_tags_dialog	autoload/plugged/vim-polyglot/extras/menu.vim	/^    let g:menutrans_tags_dialog = "Enter names of tag files.\\nSeparate the names with a comma."$/;"	v
g:menutrans_textwidth_dialog	autoload/plugged/vim-polyglot/extras/menu.vim	/^    let g:menutrans_textwidth_dialog = "Enter new text width (0 to disable formatting): "$/;"	v
g:message	autoload/plugged/vim-polyglot/tests/extensions.vim	/^    let g:message = ""$/;"	v
g:mp_close_tag	autoload/plugged/vim-polyglot/indent/mp.vim	/^let g:mp_close_tag = ''$/;"	v
g:mp_open_tag	autoload/plugged/vim-polyglot/indent/mp.vim	/^let g:mp_open_tag = ''$/;"	v
g:mp_statement	autoload/plugged/vim-polyglot/indent/mp.vim	/^let g:mp_statement = ''$/;"	v
g:mustache_operators	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^  let g:mustache_operators = 1$/;"	v
g:neocomplcache_omni_patterns	autoload/plugged/vim-polyglot/autoload/nim.vim	/^  let g:neocomplcache_omni_patterns = {}$/;"	v
g:neocomplcache_omni_patterns	autoload/plugged/vim-polyglot/autoload/nim.vim	/^let g:neocomplcache_omni_patterns['nim'] = '[^. *\\t]\\.\\w*'$/;"	v
g:neocomplete#sources#omni#input_patterns	autoload/plugged/vim-polyglot/autoload/nim.vim	/^  let g:neocomplete#sources#omni#input_patterns = {}$/;"	v
g:neocomplete#sources#omni#input_patterns	autoload/plugged/vim-polyglot/autoload/nim.vim	/^let g:neocomplete#sources#omni#input_patterns['nim'] = '[^. *\\t]\\.\\w*'$/;"	v
g:netrw_force_overwrite_statusline	autoload/plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^  let g:netrw_force_overwrite_statusline = 0$/;"	v
g:niji_dark_colours	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let g:niji_dark_colours = g:rbpt_colorpairs$/;"	v
g:niji_light_colours	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let g:niji_light_colours = g:rbpt_colorpairs$/;"	v
g:nim_caas_enabled	autoload/plugged/vim-polyglot/autoload/nim.vim	/^  let g:nim_caas_enabled = 0$/;"	v
g:nim_completion_callbacks	autoload/plugged/vim-polyglot/autoload/nim.vim	/^let g:nim_completion_callbacks = {}$/;"	v
g:nim_log	autoload/plugged/vim-polyglot/autoload/nim.vim	/^  let g:nim_log = []$/;"	v
g:nim_log	autoload/plugged/vim-polyglot/autoload/nim.vim	/^let g:nim_log = []$/;"	v
g:nim_symbol_types	autoload/plugged/vim-polyglot/autoload/nim.vim	/^let g:nim_symbol_types = {$/;"	v
g:obsession_append	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:obsession_append = [string]$/;"	v
g:omni_syntax_group_exclude_lifelines	autoload/plugged/vim-polyglot/syntax/lifelines.vim	/^		let g:omni_syntax_group_exclude_lifelines = 'lifelinesError'$/;"	v
g:omni_syntax_group_exclude_mf	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^let g:omni_syntax_group_exclude_mf = 'mfTodoComment'$/;"	v
g:omni_syntax_group_exclude_mp	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^let g:omni_syntax_group_exclude_mp = 'mfTodoComment'$/;"	v
g:omni_syntax_group_include_mf	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^let g:omni_syntax_group_include_mf = 'mf\\w\\+'$/;"	v
g:omni_syntax_group_include_mp	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^let g:omni_syntax_group_include_mp = 'mf\\w\\+,mp\\w\\+'$/;"	v
g:other_mf_macros	autoload/plugged/vim-polyglot/syntax/mp.vim	/^  let g:other_mf_macros = s:other_mf_macros$/;"	v
g:other_mf_macros	autoload/plugged/vim-polyglot/syntax/mp.vim	/^let g:other_mf_macros = 0 " cmbase.mf, logo.mf, ... neither$/;"	v
g:palenight_termcolors	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:palenight_termcolors = 256$/;"	v
g:palenight_terminal_italics	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:palenight_terminal_italics = 0$/;"	v
g:pandoc#syntax#codeblocks#embeds#langs	autoload/plugged/vim-polyglot/syntax/rmd.vim	/^let g:pandoc#syntax#codeblocks#embeds#langs = get(g:, 'pandoc#syntax#codeblocks#embeds#langs', [/;"	v
g:php_syntax_extensions_disabled	autoload/plugged/vim-polyglot/syntax/php.vim	/^    let g:php_syntax_extensions_disabled = []$/;"	v
g:php_syntax_extensions_enabled	autoload/plugged/vim-polyglot/syntax/php.vim	/^    let g:php_syntax_extensions_enabled = ["bcmath", "bz2", "core", "curl", "date", "dom", "ereg/;"	v
g:php_version_id	autoload/plugged/vim-polyglot/syntax/php.vim	/^  let g:php_version_id = 70300$/;"	v
g:plain_mf_macros	autoload/plugged/vim-polyglot/syntax/mp.vim	/^  let g:plain_mf_macros = s:plain_mf_macros$/;"	v
g:plain_mf_macros	autoload/plugged/vim-polyglot/syntax/mp.vim	/^let g:plain_mf_macros = 0 " plain.mf has no special meaning for MetaPost$/;"	v
g:plain_mf_modes	autoload/plugged/vim-polyglot/syntax/mp.vim	/^  let g:plain_mf_modes = s:plain_mf_modes$/;"	v
g:plain_mf_modes	autoload/plugged/vim-polyglot/syntax/mp.vim	/^let g:plain_mf_modes  = 0 " No METAFONT modes$/;"	v
g:plantuml_executable_script	autoload/plugged/vim-polyglot/ftplugin/plantuml.vim	/^  let g:plantuml_executable_script='plantuml'$/;"	v
g:plug_home	autoload/plug.vim	/^  let g:plug_home = home$/;"	v
g:plugs	autoload/plug.vim	/^    let g:plugs[name] = spec$/;"	v
g:plugs	autoload/plug.vim	/^  let g:plugs = {}$/;"	v
g:plugs_order	autoload/plug.vim	/^  let g:plugs_order = []$/;"	v
g:plugs_order	autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
g:polyglot_disabled_not_set	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^  let g:polyglot_disabled_not_set = 1$/;"	v
g:polyglot_initialized	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^      let g:polyglot_initialized = 1$/;"	v
g:polyglot_initialized	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^let g:polyglot_initialized = 0$/;"	v
g:polyglot_is_disabled	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^      let g:polyglot_is_disabled[pkg] = 1$/;"	v
g:polyglot_is_disabled	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^let g:polyglot_is_disabled = {}$/;"	v
g:promptline_symbols	autoload/plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^    let g:promptline_symbols = {$/;"	v
g:ps1_efm_show_error_categories	autoload/plugged/vim-polyglot/compiler/powershell.vim	/^let g:ps1_efm_show_error_categories = get(g:, 'ps1_efm_show_error_categories', 0)$/;"	v
g:ps1_makeprg_cmd	autoload/plugged/vim-polyglot/compiler/powershell.vim	/^    let g:ps1_makeprg_cmd = ''$/;"	v
g:ps1_makeprg_cmd	autoload/plugged/vim-polyglot/compiler/powershell.vim	/^    let g:ps1_makeprg_cmd = 'powershell.exe'$/;"	v
g:ps1_makeprg_cmd	autoload/plugged/vim-polyglot/compiler/powershell.vim	/^    let g:ps1_makeprg_cmd = 'pwsh'$/;"	v
g:ps1_makeprg_cmd	autoload/plugged/vim-polyglot/compiler/powershell.vim	/^    let g:ps1_makeprg_cmd = 'pwsh.exe'$/;"	v
g:pug_self_closing_tags	autoload/plugged/vim-polyglot/indent/pug.vim	/^  let g:pug_self_closing_tags = 'meta|link|img|hr|br|input'$/;"	v
g:puppet_align_hashes	autoload/plugged/vim-polyglot/after/ftplugin/puppet.vim	/^    let g:puppet_align_hashes = 1$/;"	v
g:purescript_indent_case	autoload/plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_case = 5$/;"	v
g:purescript_indent_do	autoload/plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_do = 3$/;"	v
g:purescript_indent_dot	autoload/plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_dot = 1$/;"	v
g:purescript_indent_if	autoload/plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_if = 3$/;"	v
g:purescript_indent_in	autoload/plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_in = 1$/;"	v
g:purescript_indent_let	autoload/plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_let = 4$/;"	v
g:purescript_indent_where	autoload/plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_where = 6$/;"	v
g:pyindent_nested_paren	autoload/plugged/vim-polyglot/indent/bzl.vim	/^      let g:pyindent_nested_paren = l:pyindent_nested_paren$/;"	v
g:pyindent_nested_paren	autoload/plugged/vim-polyglot/indent/bzl.vim	/^    let g:pyindent_nested_paren = 'shiftwidth() * 2'$/;"	v
g:pyindent_open_paren	autoload/plugged/vim-polyglot/indent/bzl.vim	/^      let g:pyindent_open_paren = l:pyindent_open_paren$/;"	v
g:pyindent_open_paren	autoload/plugged/vim-polyglot/indent/bzl.vim	/^    let g:pyindent_open_paren = 'shiftwidth() * 2'$/;"	v
g:python_pep8_indent_hang_closing	autoload/plugged/vim-polyglot/indent/cython.vim	/^    let g:python_pep8_indent_hang_closing = 0$/;"	v
g:python_pep8_indent_hang_closing	autoload/plugged/vim-polyglot/indent/python.vim	/^    let g:python_pep8_indent_hang_closing = 0$/;"	v
g:python_pep8_indent_multiline_string	autoload/plugged/vim-polyglot/indent/cython.vim	/^    let g:python_pep8_indent_multiline_string = 0$/;"	v
g:python_pep8_indent_multiline_string	autoload/plugged/vim-polyglot/indent/python.vim	/^    let g:python_pep8_indent_multiline_string = 0$/;"	v
g:python_pep8_indent_searchpair_timeout	autoload/plugged/vim-polyglot/indent/cython.vim	/^        let g:python_pep8_indent_searchpair_timeout = 0$/;"	v
g:python_pep8_indent_searchpair_timeout	autoload/plugged/vim-polyglot/indent/cython.vim	/^        let g:python_pep8_indent_searchpair_timeout = 150$/;"	v
g:python_pep8_indent_searchpair_timeout	autoload/plugged/vim-polyglot/indent/python.vim	/^        let g:python_pep8_indent_searchpair_timeout = 0$/;"	v
g:python_pep8_indent_searchpair_timeout	autoload/plugged/vim-polyglot/indent/python.vim	/^        let g:python_pep8_indent_searchpair_timeout = 150$/;"	v
g:ragel_default_subtype	autoload/plugged/vim-polyglot/syntax/ragel.vim	/^  let g:ragel_default_subtype = 'c'$/;"	v
g:rainbow_conf	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^   let g:rainbow_conf = {}$/;"	v
g:rainbow_conf	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^   let g:rainbow_conf['ctermfgs'] = g:rainbow_ctermfgs$/;"	v
g:rainbow_conf	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^   let g:rainbow_conf['guifgs'] = g:rainbow_guifgs$/;"	v
g:rainbow_ctermfgs	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let g:rainbow_ctermfgs = [ '166', 'red', 'magenta', 'blue' ]$/;"	v
g:rainbow_guifgs	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let g:rainbow_guifgs = [ '#d65d0e', '#cc241d', '#b16286', '#458588' ]$/;"	v
g:rbpt_colorpairs	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:rbpt_colorpairs =$/;"	v
g:rmd_fenced_languages	autoload/plugged/vim-polyglot/syntax/rmd.vim	/^    let g:rmd_fenced_languages = deepcopy(g:markdown_fenced_languages)$/;"	v
g:rmd_fenced_languages	autoload/plugged/vim-polyglot/syntax/rmd.vim	/^  let g:rmd_fenced_languages = ['r']$/;"	v
g:rmd_syn_hl_chunk	autoload/plugged/vim-polyglot/syntax/rmd.vim	/^let g:rmd_syn_hl_chunk = get(g:, 'g:rmd_syn_hl_chunk', 0)$/;"	v
g:rmd_syn_hl_citations	autoload/plugged/vim-polyglot/syntax/rmd.vim	/^let g:rmd_syn_hl_citations = get(g:, 'rmd_syn_hl_citations', 1)$/;"	v
g:rmd_syn_hl_yaml	autoload/plugged/vim-polyglot/syntax/rmd.vim	/^let g:rmd_syn_hl_yaml = get(g:, 'rmd_syn_hl_yaml', 1)$/;"	v
g:rooter_cd_cmd	autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_cd_cmd = 'cd'$/;"	v
g:rooter_cd_cmd	autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_cd_cmd = 'lcd'$/;"	v
g:rooter_change_directory_for_non_project_files	autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_change_directory_for_non_project_files = ''$/;"	v
g:rooter_change_directory_for_non_project_files	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_change_directory_for_non_project_files = ''$/;"	v
g:rooter_change_directory_for_non_project_files	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_change_directory_for_non_project_files = 'current'$/;"	v
g:rooter_change_directory_for_non_project_files	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_change_directory_for_non_project_files = 'home'$/;"	v
g:rooter_manual_only	autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_manual_only = !g:rooter_manual_only$/;"	v
g:rooter_manual_only	autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_manual_only = 0$/;"	v
g:rooter_patterns	autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_patterns = ['.git', '_darcs', '.hg', '.bzr', '.svn', 'Makefile']$/;"	v
g:rooter_patterns	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['!^project', '*.txt']$/;"	v
g:rooter_patterns	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['!_git']$/;"	v
g:rooter_patterns	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['**\/bar.txt']$/;"	v
g:rooter_patterns	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['*.z']$/;"	v
g:rooter_patterns	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['=foo foo\/']$/;"	v
g:rooter_patterns	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['>a']$/;"	v
g:rooter_patterns	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['_git\/']$/;"	v
g:rooter_patterns	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['bar']$/;"	v
g:rooter_patterns	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['foo\\ foo\/bar.txt']$/;"	v
g:rooter_patterns	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['x?z']$/;"	v
g:rooter_resolve_links	autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_resolve_links = 0$/;"	v
g:rooter_resolve_links	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_resolve_links = 0$/;"	v
g:rooter_resolve_links	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_resolve_links = 1$/;"	v
g:rooter_silent_chdir	autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_silent_chdir = 0$/;"	v
g:rooter_silent_chdir	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_silent_chdir = 0$/;"	v
g:rooter_targets	autoload/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_targets = '\/,*'$/;"	v
g:rooter_targets	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_targets = '*.txt'$/;"	v
g:rooter_targets	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_targets = '\/'$/;"	v
g:rooter_targets	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_targets = '\/,*.txt,*.z'$/;"	v
g:rooter_use_lcd	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_use_lcd = 0$/;"	v
g:rst_fold_enabled	autoload/plugged/vim-polyglot/ftplugin/rst.vim	/^  let g:rst_fold_enabled = 0$/;"	v
g:rst_syntax_code_list	autoload/plugged/vim-polyglot/syntax/rst.vim	/^        let g:rst_syntax_code_list[s:elem] = [s:elem]$/;"	v
g:rst_syntax_code_list	autoload/plugged/vim-polyglot/syntax/rst.vim	/^    let g:rst_syntax_code_list = {$/;"	v
g:rst_syntax_code_list	autoload/plugged/vim-polyglot/syntax/rst.vim	/^    let g:rst_syntax_code_list = {}$/;"	v
g:ruby_default_path	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_default_path = map(split($RUBYLIB,':'), 'v:val ==# "." ? "" : v:val')$/;"	v
g:ruby_default_path	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_default_path = s:query_path($HOME)$/;"	v
g:ruby_indent_access_modifier_style	autoload/plugged/vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_access_modifier_style = 'normal'$/;"	v
g:ruby_indent_assignment_style	autoload/plugged/vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_assignment_style = 'hanging'$/;"	v
g:ruby_indent_block_style	autoload/plugged/vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_block_style = 'do'$/;"	v
g:ruby_indent_hanging_elements	autoload/plugged/vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_hanging_elements = 1$/;"	v
g:ruby_version_paths	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_version_paths[b:ruby_version] = s:query_path(fnamemodify(s:version_file, ':p:h'/;"	v
g:ruby_version_paths	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  let g:ruby_version_paths = {}$/;"	v
g:rubycomplete_buffer_loading	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_classes_in_global	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_completions	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^        let g:rubycomplete_completions = []$/;"	v
g:rubycomplete_include_object	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_rails	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:rustfmt_autosave	autoload/plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_autosave = 0$/;"	v
g:rustfmt_command	autoload/plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_command = "rustfmt"$/;"	v
g:rustfmt_emit_files	autoload/plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_emit_files = s:rustfmt_version >= "0.8.2"$/;"	v
g:rustfmt_fail_silently	autoload/plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_fail_silently = 0$/;"	v
g:rustfmt_file_lines	autoload/plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_file_lines = s:rustfmt_help =~# "--file-lines JSON"$/;"	v
g:rustfmt_options	autoload/plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_options = ""$/;"	v
g:signify_disable_by_default	autoload/plugged/vim-signify/autoload/sy.vim	/^  let g:signify_disable_by_default = 0$/;"	v
g:signify_disable_by_default	autoload/plugged/vim-signify/autoload/sy.vim	/^  let g:signify_disable_by_default = 1$/;"	v
g:signify_line_highlight	autoload/plugged/vim-signify/autoload/sy/highlight.vim	/^  let g:signify_line_highlight = 0$/;"	v
g:signify_line_highlight	autoload/plugged/vim-signify/autoload/sy/highlight.vim	/^  let g:signify_line_highlight = 1$/;"	v
g:signify_locked	autoload/plugged/vim-signify/plugin/signify.vim	/^let g:signify_locked = 0$/;"	v
g:signify_sign_add	plug-config/signify.vim	/^let g:signify_sign_add               = '+'$/;"	v
g:signify_sign_change	plug-config/signify.vim	/^let g:signify_sign_change            = '~'$/;"	v
g:signify_sign_delete	plug-config/signify.vim	/^let g:signify_sign_delete            = '_'$/;"	v
g:signify_sign_delete_first_line	plug-config/signify.vim	/^let g:signify_sign_delete_first_line = '‾'$/;"	v
g:signify_sign_show_count	plug-config/signify.vim	/^let g:signify_sign_show_count = 0$/;"	v
g:signify_sign_show_text	plug-config/signify.vim	/^let g:signify_sign_show_text = 1$/;"	v
g:signify_vcs_cmds	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^  let g:signify_vcs_cmds = s:default_vcs_cmds$/;"	v
g:signify_vcs_cmds_diffmode	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^  let g:signify_vcs_cmds_diffmode = s:default_vcs_cmds_diffmode$/;"	v
g:smt2_solver_command	autoload/plugged/vim-polyglot/ftplugin/smt2.vim	/^        let g:smt2_solver_command = "boolector"$/;"	v
g:smt2_solver_command	autoload/plugged/vim-polyglot/ftplugin/smt2.vim	/^        let g:smt2_solver_command = "z3"$/;"	v
g:smt2_solver_version_switch	autoload/plugged/vim-polyglot/ftplugin/smt2.vim	/^    let g:smt2_solver_version_switch = "--version"$/;"	v
g:spec_chglog_format	autoload/plugged/vim-polyglot/ftplugin/spec.vim	/^				let g:spec_chglog_format = "%a %b %d %Y " . l:email$/;"	v
g:spec_chglog_format	autoload/plugged/vim-polyglot/ftplugin/spec.vim	/^				let g:spec_chglog_format = a:format$/;"	v
g:syntastic_nim_checkers	autoload/plugged/vim-polyglot/compiler/nim.vim	/^let g:syntastic_nim_checkers = ['nim']$/;"	v
g:syntastic_stl_format	autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^    let g:syntastic_stl_format = _backup$/;"	v
g:syntastic_stl_format	autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^    let g:syntastic_stl_format = get(g:, 'airline#extensions#syntastic#stl_format_err', '%E{[%fe/;"	v
g:syntastic_stl_format	autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^    let g:syntastic_stl_format = get(g:, 'airline#extensions#syntastic#stl_format_warn', '%W{[%f/;"	v
g:taboo_tabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  let g:taboo_tabline = 0$/;"	v
g:tagbar_status_func	autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^  let g:tagbar_status_func = 'airline#extensions#tagbar#get_status'$/;"	v
g:tagbar_type_puppet	autoload/plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^    let g:tagbar_type_puppet.kind2scope = {$/;"	v
g:tagbar_type_puppet	autoload/plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^    let g:tagbar_type_puppet.scope2kind = {$/;"	v
g:tagbar_type_puppet	autoload/plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^    let g:tagbar_type_puppet.sro = '__'$/;"	v
g:tagbar_type_puppet	autoload/plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^let g:tagbar_type_puppet = {$/;"	v
g:tagbar_type_puppet	autoload/plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^let g:tagbar_type_puppet.deffile = puppet#ctags#OptionFile()$/;"	v
g:tagbar_type_rust	autoload/plugged/vim-polyglot/ftplugin/rust/tagbar.vim	/^    let g:tagbar_type_rust = {$/;"	v
g:tagbar_type_rust	autoload/plugged/vim-polyglot/ftplugin/rust/tagbar.vim	/^    let g:tagbar_type_rust.deffile = expand('<sfile>:p:h:h:h') . '\/ctags\/rust.ctags'$/;"	v
g:tagbar_type_scala	autoload/plugged/vim-polyglot/ftplugin/scala/tagbar.vim	/^  let g:tagbar_type_scala.deffile = expand('<sfile>:p:h:h:h') . '\/ctags\/scala.ctags'$/;"	v
g:tagbar_type_scala	autoload/plugged/vim-polyglot/ftplugin/scala/tagbar.vim	/^let g:tagbar_type_scala = {$/;"	v
g:tagbar_type_typescript	autoload/plugged/vim-polyglot/ftplugin/typescript.vim	/^  let g:tagbar_type_typescript.deffile = expand('<sfile>:p:h:h') . '\/ctags\/typescript.ctags'$/;"	v
g:tagbar_type_typescript	autoload/plugged/vim-polyglot/ftplugin/typescript.vim	/^let g:tagbar_type_typescript = {$/;"	v
g:terminal_ansi_colors	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_ansi_colors = [$/;"	v
g:terminal_color_0	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_0 =  s:black.gui$/;"	v
g:terminal_color_0	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_0 = s:bg0[0]$/;"	v
g:terminal_color_1	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_1 =  s:red.gui$/;"	v
g:terminal_color_1	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_1 = s:gb.neutral_red[0]$/;"	v
g:terminal_color_10	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_10 = s:green.gui " No dark version$/;"	v
g:terminal_color_10	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_10 = s:green[0]$/;"	v
g:terminal_color_11	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_11 = s:dark_yellow.gui$/;"	v
g:terminal_color_11	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_11 = s:yellow[0]$/;"	v
g:terminal_color_12	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_12 = s:blue.gui " No dark version$/;"	v
g:terminal_color_12	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_12 = s:blue[0]$/;"	v
g:terminal_color_13	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_13 = s:purple.gui " No dark version$/;"	v
g:terminal_color_13	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_13 = s:purple[0]$/;"	v
g:terminal_color_14	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_14 = s:cyan.gui " No dark version$/;"	v
g:terminal_color_14	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_14 = s:aqua[0]$/;"	v
g:terminal_color_15	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_15 = s:comment_grey.gui$/;"	v
g:terminal_color_15	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_15 = s:fg1[0]$/;"	v
g:terminal_color_2	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_2 =  s:green.gui$/;"	v
g:terminal_color_2	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_2 = s:gb.neutral_green[0]$/;"	v
g:terminal_color_3	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_3 =  s:yellow.gui$/;"	v
g:terminal_color_3	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_3 = s:gb.neutral_yellow[0]$/;"	v
g:terminal_color_4	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_4 =  s:blue.gui$/;"	v
g:terminal_color_4	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_4 = s:gb.neutral_blue[0]$/;"	v
g:terminal_color_5	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_5 =  s:purple.gui$/;"	v
g:terminal_color_5	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_5 = s:gb.neutral_purple[0]$/;"	v
g:terminal_color_6	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_6 =  s:cyan.gui$/;"	v
g:terminal_color_6	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_6 = s:gb.neutral_aqua[0]$/;"	v
g:terminal_color_7	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_7 =  s:white.gui$/;"	v
g:terminal_color_7	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_7 = s:fg4[0]$/;"	v
g:terminal_color_8	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_8 =  s:visual_grey.gui$/;"	v
g:terminal_color_8	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_8 = s:gray[0]$/;"	v
g:terminal_color_9	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_9 =  s:dark_red.gui$/;"	v
g:terminal_color_9	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_9 = s:red[0]$/;"	v
g:terminal_color_background	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_background = g:terminal_color_0$/;"	v
g:terminal_color_foreground	autoload/plugged/palenight.vim/colors/palenight.vim	/^  let g:terminal_color_foreground = g:terminal_color_7$/;"	v
g:terraform_binary_path	autoload/plugged/vim-polyglot/ftplugin/terraform.vim	/^  let g:terraform_binary_path='terraform'$/;"	v
g:test_user_autocmd	autoload/plugged/vim-rooter/test/test_rooter.vim	/^  let g:test_user_autocmd = 0$/;"	v
g:testname	autoload/plugged/vim-rooter/test/runner.vim	/^let g:testname = expand('%')$/;"	v
g:tex_indent_brace	autoload/plugged/vim-polyglot/after/indent/tex.vim	/^    let g:tex_indent_brace = 1$/;"	v
g:tex_indent_items	autoload/plugged/vim-polyglot/after/indent/tex.vim	/^    let g:tex_indent_items = 1$/;"	v
g:tex_itemize_env	autoload/plugged/vim-polyglot/after/indent/tex.vim	/^        let g:tex_itemize_env = 'itemize\\|description\\|enumerate\\|thebibliography'$/;"	v
g:tex_items	autoload/plugged/vim-polyglot/after/indent/tex.vim	/^        let g:tex_items = '\\\\bibitem\\|\\\\item'$/;"	v
g:tex_items	autoload/plugged/vim-polyglot/after/indent/tex.vim	/^    let g:tex_items = ''$/;"	v
g:tex_items	autoload/plugged/vim-polyglot/after/indent/tex.vim	/^let g:tex_items = '^\\s*' . substitute(g:tex_items, '^\\(\\^\\\\s\\*\\)*', '', '')$/;"	v
g:tex_max_scan_line	autoload/plugged/vim-polyglot/after/indent/tex.vim	/^    let g:tex_max_scan_line = 60$/;"	v
g:tex_noindent_env	autoload/plugged/vim-polyglot/after/indent/tex.vim	/^    let g:tex_noindent_env = 'document\\|verbatim\\|lstlisting'$/;"	v
g:typescript_compiler_binary	autoload/plugged/vim-polyglot/compiler/typescript.vim	/^  let g:typescript_compiler_binary = 'tsc'$/;"	v
g:typescript_compiler_options	autoload/plugged/vim-polyglot/compiler/typescript.vim	/^    let g:typescript_compiler_options = ''$/;"	v
g:typescript_compiler_options	autoload/plugged/vim-polyglot/compiler/typescript.vim	/^    let g:typescript_compiler_options = g:syntastic_typescript_tsc_args$/;"	v
g:unite_force_overwrite_statusline	autoload/plugged/vim-airline/autoload/airline/extensions/unite.vim	/^  let g:unite_force_overwrite_statusline = 0$/;"	v
g:v_highlight_array_whitespace_error	autoload/plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_array_whitespace_error = 1$/;"	v
g:v_highlight_chan_whitespace_error	autoload/plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_chan_whitespace_error = 1$/;"	v
g:v_highlight_fields	autoload/plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_fields = 1$/;"	v
g:v_highlight_function_calls	autoload/plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_function_calls = 1$/;"	v
g:v_highlight_space_tab_error	autoload/plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_space_tab_error = 1$/;"	v
g:v_highlight_trailing_whitespace_error	autoload/plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_trailing_whitespace_error = 1$/;"	v
g:vhdl_indent_genportmap	autoload/plugged/vim-polyglot/indent/vhdl.vim	/^  let g:vhdl_indent_genportmap = 1$/;"	v
g:vhdl_indent_rhsassign	autoload/plugged/vim-polyglot/indent/vhdl.vim	/^  let g:vhdl_indent_rhsassign = 1$/;"	v
g:vim_json_syntax_conceal	autoload/plugged/vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_syntax_conceal = 1$/;"	v
g:vim_json_syntax_concealcursor	autoload/plugged/vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_syntax_concealcursor = ""$/;"	v
g:vim_json_warnings	autoload/plugged/vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_warnings = 1$/;"	v
g:vimfiler_force_overwrite_statusline	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^    let g:vimfiler_force_overwrite_statusline = 0$/;"	v
g:vimsence_client_id	plug-config/discordpresence.vim	/^let g:vimsence_client_id = '439476230543245312'$/;"	v
g:vimsence_custom_icons	plug-config/discordpresence.vim	/^let g:vimsence_custom_icons = {'filetype': 'iconname'}$/;"	v
g:vimsence_editing_details	plug-config/discordpresence.vim	/^let g:vimsence_editing_details = 'Editing: {}'$/;"	v
g:vimsence_editing_state	plug-config/discordpresence.vim	/^let g:vimsence_editing_state = 'Working on: {}'$/;"	v
g:vimsence_file_explorer_details	plug-config/discordpresence.vim	/^let g:vimsence_file_explorer_details = 'Looking for files'$/;"	v
g:vimsence_file_explorer_text	plug-config/discordpresence.vim	/^let g:vimsence_file_explorer_text = 'In NERDTree'$/;"	v
g:vimsence_small_image	plug-config/discordpresence.vim	/^let g:vimsence_small_image = 'neovim'$/;"	v
g:vimsence_small_text	plug-config/discordpresence.vim	/^let g:vimsence_small_text = 'NeoVim'$/;"	v
g:vimshell_escape_colors	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let g:vimshell_escape_colors = [$/;"	v
g:virtual_scriptnames	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^    let g:virtual_scriptnames = {}$/;"	v
g:virtual_scriptnames	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:virtual_scriptnames[temp] = amatch$/;"	v
g:vue_pre_processors	autoload/plugged/vim-polyglot/syntax/vue.vim	/^  let g:vue_pre_processors = []$/;"	v
g:xmldata_aria	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let g:xmldata_aria = {$/;"	v
g:xmldata_html5	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let g:xmldata_html5 = {$/;"	v
g:xmldata_xsd	autoload/plugged/vim-polyglot/autoload/xml/xsd.vim	/^let g:xmldata_xsd = {$/;"	v
g:xtab_cwds	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:xtab_cwds[tabpagenr()-1] = t:cwd$/;"	v
g:xtabline_alt_action	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    let g:xtabline_alt_action = get(g:, 'xtabline_alt_action', "buffer #")$/;"	v
g:xtabline_changing_buffer	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:xtabline_changing_buffer = 1$/;"	v
g:xtabline_include_previews	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    let g:xtabline_include_previews = get(g:, 'xtabline_include_previews', 1)$/;"	v
g:xxdprogram	autoload/plugged/vim-polyglot/extras/menu.vim	/^	let g:xxdprogram = '"' .. g:xxdprogram .. '"'$/;"	v
g:xxdprogram	autoload/plugged/vim-polyglot/extras/menu.vim	/^      let g:xxdprogram = "xxd"$/;"	v
g:xxdprogram	autoload/plugged/vim-polyglot/extras/menu.vim	/^      let g:xxdprogram = $VIMRUNTIME . (&shellslash ? '\/' : '\\') . "xxd.exe"$/;"	v
g<C-]>	autoload/plugged/vim-polyglot/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> g<C-]>   :call ada#Jump_Tag ('','stjump')<cr>$/;"	m
g<C-]>	autoload/plugged/vim-polyglot/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> g<C-]>   :call ada#List_Tag ()<cr>$/;"	m
gA	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	v
gB	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	v
gF	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
gI	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
gN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
gO	autoload/plugged/vim-polyglot/ftplugin/help.vim	/^  nnoremap <silent><buffer> gO :call <sid>show_toc()<cr>$/;"	m
gQ	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
gR	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
gT	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
gU	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
gX	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
gZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
gb	autoload/plugged/gv.vim/plugin/gv.vim	/^    nnoremap <silent> <buffer> gb :Gbrowse<cr>$/;"	m
gb	autoload/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> gb   :call <sid>gbrowse()<cr>$/;"	m
gc	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gc  <Plug>(crystal-show-context)$/;"	m
gd	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gd  <Plug>(crystal-jump-to-definition)$/;"	m
gd	plug-config/coc.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
gdb_minlines	autoload/plugged/vim-polyglot/syntax/gdb.vim	/^  let gdb_minlines = 10$/;"	v
gde	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
generate_fallback	autoload/plugged/vim-polyglot/scripts/build	/^def generate_fallback$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
generate_ftdetect	autoload/plugged/vim-polyglot/scripts/build	/^def generate_ftdetect(packages, heuristics)$/;"	f	method:copy_file.rules_to_code.rule_to_code
generate_packages_entries	autoload/plugged/vim-polyglot/scripts/import_vim	/^def generate_packages_entries(filetypes, comments)$/;"	f
generate_plugins	autoload/plugged/vim-polyglot/scripts/build	/^def generate_plugins(packages)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
generate_tests	autoload/plugged/vim-polyglot/scripts/build	/^def generate_tests(packages)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
generate_tests	autoload/plugged/vim-polyglot/scripts/import_vim	/^def generate_tests(autocommands)$/;"	f
getBytes	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) getBytes() []byte {$/;"	f	struct:tui.LightRenderer	typeref:typename:[]byte
getBytesInternal	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) getBytesInternal(buffer []byte, nonblock bool) []byte {$/;"	f	struct:tui.LightRenderer	typeref:typename:[]byte
getConsolidateConfiguration	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:Ym
getCursorPosition	autoload/plugged/coc.nvim/build/index.js	/^`)],!0)}async runTerminalCommand(e,t,i=!1){return t=t||b.cwd,await this.nvim.callAsync("coc#util/;"	m	class:Vj
getCursorScreenPosition	autoload/plugged/coc.nvim/build/index.js	/^`)],!0)}async runTerminalCommand(e,t,i=!1){return t=t||b.cwd,await this.nvim.callAsync("coc#util/;"	m	class:Vj
getDocumentContent	autoload/plugged/coc.nvim/build/index.js	/^`),s=ij(this.lines,o),a=await this.mutex.acquire();try{let l=await this.nvim.call("coc#util#set_/;"	m	class:o0
getEndOffset	autoload/plugged/coc.nvim/build/index.js	/^`:e}getVar(e,t){let i=this.variables[`coc_${e}`];return i===void 0?t:i}getPosition(e,t){let i=th/;"	m	class:o0
getEnv	autoload/plugged/fzf/src/tui/light.go	/^func getEnv(name string, defaultValue int) int {$/;"	f	package:tui	typeref:typename:int
getItem	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:d0
getLineOffsets	autoload/plugged/coc.nvim/build/index.js	/^`,"\\r"],Dx;(function(r){function e(o,s,a,l){return new Lse(o,s,a,l)}r.create=e;function t(o){va/;"	m	class:r
getLineOffsets	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:r
getLineOffsets	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get lineCount(){return this.lines.length+(this.eol?1:0)}getText(e){if(e){let t=this.offset/;"	m	class:i0
getLines	autoload/plugged/coc.nvim/build/index.js	/^`),s=ij(this.lines,o),a=await this.mutex.acquire();try{let l=await this.nvim.call("coc#util#set_/;"	m	class:o0
getLinks	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	m	class:FB
getLocalifyBonus	autoload/plugged/coc.nvim/build/index.js	/^`))}get attached(){return this._attached}detach(){this._attached=!1,z(this.disposables),this.dis/;"	m	class:o0
getMoreWords	autoload/plugged/coc.nvim/build/index.js	/^`),s=ij(this.lines,o),a=await this.mutex.acquire();try{let l=await this.nvim.call("coc#util#set_/;"	m	class:o0
getOffset	autoload/plugged/coc.nvim/build/index.js	/^`),s=ij(this.lines,o),a=await this.mutex.acquire();try{let l=await this.nvim.call("coc#util#set_/;"	m	class:o0
getOffset	autoload/plugged/coc.nvim/build/index.js	/^`)],!0)}async runTerminalCommand(e,t,i=!1){return t=t||b.cwd,await this.nvim.callAsync("coc#util/;"	m	class:Vj
getPosition	autoload/plugged/coc.nvim/build/index.js	/^`:e}getVar(e,t){let i=this.variables[`coc_${e}`];return i===void 0?t:i}getPosition(e,t){let i=th/;"	m	class:o0
getProvider	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:zB
getRegex	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	p	class:pfe.t
getSymbolRanges	autoload/plugged/coc.nvim/build/index.js	/^`),s=ij(this.lines,o),a=await this.mutex.acquire();try{let l=await this.nvim.call("coc#util#set_/;"	m	class:o0
getText	autoload/plugged/coc.nvim/build/index.js	/^`,"\\r"],Dx;(function(r){function e(o,s,a,l){return new Lse(o,s,a,l)}r.create=e;function t(o){va/;"	m	class:r
getText	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:ID
getText	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:r
getText	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get lineCount(){return this.lines.length+(this.eol?1:0)}getText(e){if(e){let t=this.offset/;"	m	class:i0
getTextEditChange	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	m	class:r
getValue	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:Fr
getValue	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:Ym
getVar	autoload/plugged/coc.nvim/build/index.js	/^`:e}getVar(e,t){let i=this.variables[`coc_${e}`];return i===void 0?t:i}getPosition(e,t){let i=th/;"	m	class:o0
getWordRangeAtPosition	autoload/plugged/coc.nvim/build/index.js	/^`),s=ij(this.lines,o),a=await this.mutex.acquire();try{let l=await this.nvim.call("coc#util#set_/;"	m	class:o0
get_comments	autoload/plugged/vim-polyglot/scripts/import_vim	/^def get_comments$/;"	f
getch	autoload/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) getch(nonblock bool) (int, bool) {$/;"	f	unknown:tui.LightRenderer	typeref:typename:(int, bool)
getch	autoload/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) getch(nonblock bool) (int, bool) {$/;"	f	unknown:tui.LightRenderer	typeref:typename:(int, bool)
getline	autoload/plugged/coc.nvim/build/index.js	/^`),s=ij(this.lines,o),a=await this.mutex.acquire();try{let l=await this.nvim.call("coc#util#set_/;"	m	class:o0
ghe	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
gi	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
gi	plug-config/coc.vim	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
gk	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
gleam	autoload/plugged/vim-polyglot/ftplugin/gleam.vim	/^augroup gleam.vim$/;"	a
globalSetup	autoload/plugged/coc.nvim/package.json	/^    "globalSetup": ".\/jest.js",$/;"	s	object:jest
global_attributes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, event_handler_attributes)$/;"	v
global_attributes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, microdata_attributes)$/;"	v
global_attributes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, rdfa_attributes)$/;"	v
global_attributes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, {'role': role})$/;"	v
global_attributes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let global_attributes = extend(core_attributes, xml_attributes)$/;"	v
global_states_and_properties	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let global_states_and_properties = {$/;"	v
globals	autoload/plugged/coc.nvim/package.json	/^    "globals": {$/;"	o	object:jest
gn	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
go	autoload/plugged/fzf/test/test_go.rb	/^  def go(args)$/;"	f	class:Tmux
go#config#AddtagsSkipUnexported	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AddtagsSkipUnexported() abort$/;"	f
go#config#AddtagsTransform	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AddtagsTransform() abort$/;"	f
go#config#AlternateMode	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AlternateMode() abort$/;"	f
go#config#AsmfmtAutosave	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AsmfmtAutosave() abort$/;"	f
go#config#AutoSameids	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AutoSameids() abort$/;"	f
go#config#AutoTypeInfo	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AutoTypeInfo() abort$/;"	f
go#config#BinPath	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#BinPath() abort$/;"	f
go#config#BuildTags	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#BuildTags() abort$/;"	f
go#config#CodeCompletionEnabled	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#CodeCompletionEnabled() abort$/;"	f
go#config#CodeCompletionIcase	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#CodeCompletionIcase() abort$/;"	f
go#config#Debug	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#Debug() abort$/;"	f
go#config#DebugAddress	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugAddress() abort$/;"	f
go#config#DebugBreakpointSignText	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugBreakpointSignText() abort$/;"	f
go#config#DebugCommands	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugCommands() abort$/;"	f
go#config#DebugLogOutput	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugLogOutput() abort$/;"	f
go#config#DebugMappings	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugMappings() abort$/;"	f
go#config#DebugPreserveLayout	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugPreserveLayout() abort$/;"	f
go#config#DebugWindows	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugWindows() abort$/;"	f
go#config#DeclsIncludes	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DeclsIncludes() abort$/;"	f
go#config#DeclsMode	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DeclsMode() abort$/;"	f
go#config#DefMode	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DefMode() abort$/;"	f
go#config#DefReuseBuffer	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DefReuseBuffer() abort$/;"	f
go#config#DiagnosticsEnabled	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DiagnosticsEnabled() abort$/;"	f
go#config#DiagnosticsLevel	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DiagnosticsLevel() abort$/;"	f
go#config#DocMaxHeight	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DocMaxHeight() abort$/;"	f
go#config#DocPopupWindow	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DocPopupWindow() abort$/;"	f
go#config#DocUrl	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DocUrl() abort$/;"	f
go#config#EchoCommandInfo	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#EchoCommandInfo() abort$/;"	f
go#config#EchoGoInfo	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#EchoGoInfo() abort$/;"	f
go#config#ErrcheckBin	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ErrcheckBin() abort$/;"	f
go#config#FillStructMode	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FillStructMode() abort$/;"	f
go#config#FmtAutosave	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtAutosave() abort$/;"	f
go#config#FmtCommand	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtCommand() abort$/;"	f
go#config#FmtExperimental	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtExperimental() abort$/;"	f
go#config#FmtFailSilently	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtFailSilently() abort$/;"	f
go#config#FmtOptions	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtOptions() abort$/;"	f
go#config#FoldEnable	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FoldEnable(...) abort$/;"	f
go#config#GolintBin	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GolintBin() abort$/;"	f
go#config#GoplsAnalyses	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsAnalyses() abort$/;"	f
go#config#GoplsCompleteUnimported	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsCompleteUnimported() abort$/;"	f
go#config#GoplsDeepCompletion	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsDeepCompletion() abort$/;"	f
go#config#GoplsEnabled	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsEnabled() abort$/;"	f
go#config#GoplsGofumpt	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsGofumpt() abort$/;"	f
go#config#GoplsLocal	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsLocal() abort$/;"	f
go#config#GoplsMatcher	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsMatcher() abort$/;"	f
go#config#GoplsOptions	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsOptions() abort$/;"	f
go#config#GoplsSettings	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsSettings() abort$/;"	f
go#config#GoplsStaticCheck	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsStaticCheck() abort$/;"	f
go#config#GoplsTempModfile	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsTempModfile() abort$/;"	f
go#config#GoplsUsePlaceholders	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsUsePlaceholders() abort$/;"	f
go#config#GorenameBin	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GorenameBin() abort$/;"	f
go#config#GorenamePrefill	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GorenamePrefill() abort$/;"	f
go#config#GuruScope	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GuruScope() abort$/;"	f
go#config#HighlightArrayWhitespaceError	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightArrayWhitespaceError() abort$/;"	f
go#config#HighlightBuildConstraints	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightBuildConstraints() abort$/;"	f
go#config#HighlightChanWhitespaceError	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightChanWhitespaceError() abort$/;"	f
go#config#HighlightDebug	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightDebug() abort$/;"	f
go#config#HighlightDiagnosticErrors	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightDiagnosticErrors() abort$/;"	f
go#config#HighlightDiagnosticWarnings	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightDiagnosticWarnings() abort$/;"	f
go#config#HighlightExtraTypes	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightExtraTypes() abort$/;"	f
go#config#HighlightFields	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFields() abort$/;"	f
go#config#HighlightFormatStrings	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFormatStrings() abort$/;"	f
go#config#HighlightFunctionCalls	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFunctionCalls() abort$/;"	f
go#config#HighlightFunctionParameters	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFunctionParameters() abort$/;"	f
go#config#HighlightFunctions	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFunctions() abort$/;"	f
go#config#HighlightGenerateTags	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightGenerateTags() abort$/;"	f
go#config#HighlightOperators	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightOperators() abort$/;"	f
go#config#HighlightSpaceTabError	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightSpaceTabError() abort$/;"	f
go#config#HighlightStringSpellcheck	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightStringSpellcheck() abort$/;"	f
go#config#HighlightTrailingWhitespaceError	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightTrailingWhitespaceError() abort$/;"	f
go#config#HighlightTypes	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightTypes() abort$/;"	f
go#config#HighlightVariableAssignments	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightVariableAssignments() abort$/;"	f
go#config#HighlightVariableDeclarations	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightVariableDeclarations() abort$/;"	f
go#config#ImplementsMode	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ImplementsMode() abort$/;"	f
go#config#ImportsAutosave	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ImportsAutosave() abort$/;"	f
go#config#ImportsMode	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ImportsMode() abort$/;"	f
go#config#InfoMode	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#InfoMode() abort$/;"	f
go#config#ListAutoclose	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListAutoclose() abort$/;"	f
go#config#ListHeight	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListHeight() abort$/;"	f
go#config#ListType	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListType() abort$/;"	f
go#config#ListTypeCommands	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListTypeCommands() abort$/;"	f
go#config#LspLog	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#LspLog() abort$/;"	f
go#config#MetalinterAutosave	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterAutosave() abort$/;"	f
go#config#MetalinterAutosaveEnabled	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterAutosaveEnabled() abort$/;"	f
go#config#MetalinterCommand	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterCommand() abort$/;"	f
go#config#MetalinterDeadline	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterDeadline() abort$/;"	f
go#config#MetalinterEnabled	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterEnabled() abort$/;"	f
go#config#ModFmtAutosave	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ModFmtAutosave() abort$/;"	f
go#config#PlayBrowserCommand	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#PlayBrowserCommand() abort$/;"	f
go#config#PlayOpenBrowser	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#PlayOpenBrowser() abort$/;"	f
go#config#ReferrersMode	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ReferrersMode() abort$/;"	f
go#config#RenameCommand	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#RenameCommand() abort$/;"	f
go#config#SearchBinPathFirst	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SearchBinPathFirst() abort$/;"	f
go#config#SetAsmfmtAutosave	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetAsmfmtAutosave(value) abort$/;"	f
go#config#SetAutoSameids	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetAutoSameids(value) abort$/;"	f
go#config#SetAutoTypeInfo	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetAutoTypeInfo(value) abort$/;"	f
go#config#SetBuildTags	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetBuildTags(value) abort$/;"	f
go#config#SetDebugDiag	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetDebugDiag(value) abort$/;"	f
go#config#SetFmtAutosave	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetFmtAutosave(value) abort$/;"	f
go#config#SetGuruScope	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetGuruScope(scope) abort$/;"	f
go#config#SetMetalinterAutosave	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetMetalinterAutosave(value) abort$/;"	f
go#config#SetModFmtAutosave	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetModFmtAutosave(value) abort$/;"	f
go#config#SetTemplateAutocreate	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetTemplateAutocreate(value) abort$/;"	f
go#config#SetTermCloseOnExit	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetTermCloseOnExit(value) abort$/;"	f
go#config#SetTermEnabled	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetTermEnabled(value) abort$/;"	f
go#config#SnippetEngine	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SnippetEngine() abort$/;"	f
go#config#StatuslineDuration	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#StatuslineDuration() abort$/;"	f
go#config#TemplateAutocreate	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateAutocreate() abort$/;"	f
go#config#TemplateFile	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateFile() abort$/;"	f
go#config#TemplateTestFile	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateTestFile() abort$/;"	f
go#config#TemplateUsePkg	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateUsePkg() abort$/;"	f
go#config#TermCloseOnExit	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermCloseOnExit() abort$/;"	f
go#config#TermEnabled	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermEnabled() abort$/;"	f
go#config#TermHeight	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermHeight() abort$/;"	f
go#config#TermMode	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermMode() abort$/;"	f
go#config#TermReuse	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermReuse() abort$/;"	f
go#config#TermWidth	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermWidth() abort$/;"	f
go#config#TestShowName	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TestShowName() abort$/;"	f
go#config#TestTimeout	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TestTimeout() abort$/;"	f
go#config#TextobjIncludeFunctionDoc	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TextobjIncludeFunctionDoc() abort$/;"	f
go#config#TextobjIncludeVariable	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TextobjIncludeVariable() abort$/;"	f
go#config#Updatetime	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#Updatetime() abort$/;"	f
go#config#VersionWarning	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#VersionWarning() abort$/;"	f
goe	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
gq	autoload/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <buffer> gq :tabclose<cr>$/;"	m
gq	autoload/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> <nowait> gq :$wincmd w <bar> close<cr>$/;"	m
gr	plug-config/coc.vim	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
graphic_role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let graphic_role = [$/;"	v
graphql#has_syntax_group	autoload/plugged/vim-polyglot/autoload/graphql.vim	/^function! graphql#has_syntax_group(group) abort$/;"	f
graphql#javascript_tags	autoload/plugged/vim-polyglot/autoload/graphql.vim	/^function! graphql#javascript_tags() abort$/;"	f
gray	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.color
greatThanOrEqual	autoload/plugged/coc.nvim/bin/check.js	/^function greatThanOrEqual(nums, major, minor) {$/;"	f
green	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.color
green	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.color
greenBright	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.color
greenBright	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.color
groovy_minlines	autoload/plugged/vim-polyglot/syntax/groovy.vim	/^  let groovy_minlines = 10$/;"	v
group	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let group = airline#themes#get_highlight('vimCommand')$/;"	v
gruvbox#hls_hide	~./config/nvim/plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#hls_hide()$/;"	f
gruvbox#hls_show	~./config/nvim/plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#hls_show()$/;"	f
gruvbox#hls_toggle	~./config/nvim/plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#hls_toggle()$/;"	f
gruvbox#invert_signs_toggle	~./config/nvim/plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#invert_signs_toggle()$/;"	f
gsa	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gsa <Plug>(crystal-spec-run-all)$/;"	m
gsc	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gsc <Plug>(crystal-spec-run-current)$/;"	m
gss	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gss <Plug>(crystal-spec-switch)$/;"	m
gte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
gv#sha	autoload/plugged/gv.vim/plugin/gv.vim	/^function! gv#sha(...)$/;"	f
gv#shellwords	autoload/plugged/gv.vim/plugin/gv.vim	/^function! gv#shellwords(arg)$/;"	f
gv.vim	autoload/plugged/gv.vim/README.md	/^gv.vim$/;"	c
gw	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
gy	plug-config/coc.vim	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
h	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	v
h	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
h	autoload/plugged/coc.nvim/build/index.js	/^`),a++,u=i,s=14;switch(x){case 123:return i++,s=1;case 125:return i++,s=2;case 91:return i++,s=3/;"	v
h	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f	function:Tde
h	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
h	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:yR.k
h	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:a
h	autoload/plugged/coc.nvim/build/index.js	/^`+h(e.style.border,n.left)),I+=O.join(h(e.style.border,n.middle))+h(e.style.border,n.right)}),h(/;"	f	function:AnonymousFunctionb66688921aa00
h	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:zf
h	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
h	autoload/plugged/coc.nvim/build/index.js	/^`}get document(){return new Promise((e,t)=>{this.nvim.buffer.then(i=>{let n=i.id;if(this.bufnr=n/;"	v
h3	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
h5	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
hD	autoload/plugged/coc.nvim/build/index.js	/^`+e+"$2$3")}var TB=function(r,e){return r.match("^(?:"+e+")*"+PB)};function RB(r){return" ".repe/;"	v
hE	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
hF	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
hI	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
hO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
hPe	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
hR	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
hT	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
hU	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
hX	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
hZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
h_	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	v
has	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:o
hasPreviewAction	autoload/plugged/fzf/src/terminal.go	/^func hasPreviewAction(opts *Options) bool {$/;"	f	package:fzf	typeref:typename:bool
hasPreviewFlags	autoload/plugged/fzf/src/terminal.go	/^func hasPreviewFlags(template string) (slot bool, plus bool, query bool) {$/;"	f	package:fzf	typeref:typename:(slot bool, plus bool, query bool)
hasPreviewWindow	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) hasPreviewWindow() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
hasPreviewer	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) hasPreviewer() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
hash	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	p	class:jU.e
haxe_minlines	autoload/plugged/vim-polyglot/syntax/haxe.vim	/^  let haxe_minlines = 5000$/;"	v
hc	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	v
hde	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
header	autoload/plugged/fzf/src/terminal.go	/^	header       []string$/;"	m	struct:fzf.Terminal	typeref:typename:[]string
header0	autoload/plugged/fzf/src/terminal.go	/^	header0      []string$/;"	m	struct:fzf.Terminal	typeref:typename:[]string
headerLines	autoload/plugged/fzf/src/options.go	/^	headerLines int$/;"	m	struct:fzf.previewOpts	typeref:typename:int
headers	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	p	class:AnonymousFunctionb666889223f00.s
heading	autoload/plugged/coc.nvim/build/index.js	/^`+e+"\\n```\\n"}blockquote(e){return qf(this.o.blockquote(kpe(this.tab,e.trim())))}html(e){retur/;"	m	class:FB
heading	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
health#coc#check	autoload/plugged/coc.nvim/autoload/health/coc.vim	/^function! health#coc#check() abort$/;"	f
hee	autoload/plugged/coc.nvim/build/index.js	/^`;function AI(r,e){if(On.existsSync(r))return;let t=On.openSync(r,e.flags,e.mode);On.closeSync(t/;"	f
height	autoload/plugged/fzf/src/tui/light.go	/^	height        int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
height	autoload/plugged/fzf/src/tui/light.go	/^	height   int$/;"	m	struct:tui.LightWindow	typeref:typename:int
height	autoload/plugged/fzf/src/tui/tcell.go	/^	height      int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
help	autoload/plugged/fzf/bin/fzf-tmux	/^help() {$/;"	f
help	autoload/plugged/fzf/install	/^help() {$/;"	f
help	autoload/plugged/fzf/src/options.go	/^func help(code int) {$/;"	f	package:fzf
help	autoload/plugged/fzf/uninstall	/^help() {$/;"	f
hg	autoload/plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[s-1]}async withProgress(e,t){return this.checkDialog()?await new e3(this.nvim/;"	f
hidden	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.modifier
hidden	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.modifier
hidden	autoload/plugged/fzf/src/options.go	/^	hidden      bool$/;"	m	struct:fzf.previewOpts	typeref:typename:bool
hide	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:p0
hide	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:wD
hide	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	p	class:ID.createStatusBarItem.n
highlight_types	autoload/plugged/vim-polyglot/syntax/spup.vim	/^    let highlight_types = 1$/;"	v
highlights	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	p	class:yD.createPopup.l
hint	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	p	class:i
history	autoload/plugged/fzf/src/terminal.go	/^	history      *History$/;"	m	struct:fzf.Terminal	typeref:typename:*History
hl	autoload/plugged/vim-airline/t/highlighter.vim	/^      let hl = airline#highlighter#get_highlight('Foo1_to_Foo2')$/;"	v
hl	autoload/plugged/vim-airline/t/highlighter.vim	/^    let hl = airline#highlighter#get_highlight('Foo1_to_Foo2')$/;"	v
hl	autoload/plugged/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight('Foo', 'bold', 'italic')$/;"	v
hl	autoload/plugged/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight2(['Foo','bg'], ['Foo','fg'], 'italic', 'bold')$/;"	v
hm	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	f
hn	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
hne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
hog_minlines	autoload/plugged/vim-polyglot/syntax/hog.vim	/^    let hog_minlines = 100$/;"	v
homepage	autoload/plugged/coc.nvim/package.json	/^  "homepage": "https:\/\/github.com\/neoclide\/coc.nvim#readme",$/;"	s
horizontal	autoload/plugged/fzf/src/tui/tui.go	/^	horizontal  rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
host	autoload/plugged/coc.nvim/data/schema.json	/^        "host": {$/;"	o	object:definitions.languageServerSocket.properties
hostname	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	p	class:jU.e
hover.autoHide	autoload/plugged/coc.nvim/data/schema.json	/^    "hover.autoHide": {$/;"	o	object:properties
hover.floatMaxHeight	autoload/plugged/coc.nvim/data/schema.json	/^    "hover.floatMaxHeight": {$/;"	o	object:properties
hover.floatMaxWidth	autoload/plugged/coc.nvim/data/schema.json	/^    "hover.floatMaxWidth": {$/;"	o	object:properties
hover.target	autoload/plugged/coc.nvim/data/schema.json	/^    "hover.target": {$/;"	o	object:properties
hq	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	v
hr	autoload/plugged/coc.nvim/build/index.js	/^`+e+"\\n```\\n"}blockquote(e){return qf(this.o.blockquote(kpe(this.tab,e.trim())))}html(e){retur/;"	m	class:FB
hr	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
hre	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
href	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	p	class:jU.e
href	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
hscroll	autoload/plugged/fzf/src/terminal.go	/^	hscroll      bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
hscrollOff	autoload/plugged/fzf/src/terminal.go	/^	hscrollOff   int$/;"	m	struct:fzf.Terminal	typeref:typename:int
ht	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	v
hte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
html	autoload/plugged/coc.nvim/build/index.js	/^`+e+"\\n```\\n"}blockquote(e){return qf(this.o.blockquote(kpe(this.tab,e.trim())))}html(e){retur/;"	m	class:FB
html	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
html_no_rendering	autoload/plugged/vim-polyglot/syntax/spyce.vim	/^let html_no_rendering = 1    " do not render <b>,<i>, etc...$/;"	v
htmlcomplete#CheckDoctype	autoload/plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#CheckDoctype() " {{{$/;"	f
htmlcomplete#CompleteTags	autoload/plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#CompleteTags(findstart, base)$/;"	f
htmlcomplete#DetectOmniFlavor	autoload/plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#DetectOmniFlavor()$/;"	f
htmlcomplete#LoadAria	autoload/plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadAria() " {{{$/;"	f
htmlcomplete#LoadData	autoload/plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadData() " {{{$/;"	f
http.proxy	autoload/plugged/coc.nvim/data/schema.json	/^    "http.proxy": {$/;"	o	object:properties
http.proxyAuthorization	autoload/plugged/coc.nvim/data/schema.json	/^    "http.proxyAuthorization": {$/;"	o	object:properties
http.proxyCA	autoload/plugged/coc.nvim/data/schema.json	/^    "http.proxyCA": {$/;"	o	object:properties
http.proxyStrictSSL	autoload/plugged/coc.nvim/data/schema.json	/^    "http.proxyStrictSSL": {$/;"	o	object:properties
hunks ([vim-gitgutter][29] & [vim-signify][30] & [coc-git][59])	autoload/plugged/vim-airline/README.md	/^#### hunks ([vim-gitgutter][29] & [vim-signify][30] & [coc-git][59])$/;"	t	section:Features""Seamless integration
hw_subversion	autoload/plugged/vim-polyglot/syntax/hollywood.vim	/^  let hw_subversion = 0$/;"	v
hw_version	autoload/plugged/vim-polyglot/syntax/hollywood.vim	/^  let hw_version = 8$/;"	v
i	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f	function:Xte
i	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f	function:jZ
i	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	c
i	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	c	class:Ale.AnonymousFunctionb666889236700
i	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f	function:AnonymousFunctionb666889234e00
i	autoload/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[c],!0),await e./;"	v
i	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionb666889210e00
i	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892df00
i	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
i	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	c
i	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	v
i	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:AnonymousFunctionb66688923400
i	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:GY
i	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:VY
i	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
i	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	c	class:AnonymousFunctionb666889232000
i	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	c	class:AnonymousFunctionb666889232200
i	autoload/plugged/coc.nvim/build/index.js	/^`,"\\r"],Dx;(function(r){function e(o,s,a,l){return new Lse(o,s,a,l)}r.create=e;function t(o){va/;"	f	function:AnonymousFunctionb666889210700
i	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:AnonymousFunctionb66688929c00
i	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:ine
i	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	c	class:BD
i	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f	function:Jm
i	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f	function:cde
i	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
i	autoload/plugged/coc.nvim/build/index.js	/^`;function AI(r,e){if(On.existsSync(r))return;let t=On.openSync(r,e.flags,e.mode);On.closeSync(t/;"	c	class:hee
i	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	c	class:AnonymousFunctionb66688921a100
i	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	f	function:Lm
i	autoload/plugged/coc.nvim/build/index.js	/^`}get document(){return new Promise((e,t)=>{this.nvim.buffer.then(i=>{let n=i.id;if(this.bufnr=n/;"	v
i	autoload/plugged/coc.nvim/build/index.js	/^augroup end`;try{let o=Fe.default.join(process.env.TMPDIR,`coc.nvim-${process.pid}`);St.default./;"	v
i	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:TY
i	autoload/plugged/vim-polyglot/syntax/plantuml.vim	/^  let i = i + 1$/;"	v
i	autoload/plugged/vim-polyglot/syntax/plantuml.vim	/^let i = 1$/;"	v
i	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^   let i = i + 1$/;"	v
i	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^let i      = 1$/;"	v
i	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^    let i = i + 1$/;"	v
i	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^  let i      = 1$/;"	v
i$	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
i0	autoload/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:s}}function oj(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	c
i2	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
i3	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
i5	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
i7	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
iD	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
iM	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
iM	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^    xnoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
iP	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
iQ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
iV	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
iW	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
iX	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
iZ	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
ib	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	v
ic	plug-config/coc.vim	/^omap ic <Plug>(coc-classobj-i)$/;"	m
ic	plug-config/coc.vim	/^xmap ic <Plug>(coc-classobj-i)$/;"	m
icon_minlines	autoload/plugged/vim-polyglot/syntax/icon.vim	/^  let icon_minlines = 15$/;"	v
id	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	p	class:Ed.V.Zt
id	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	p	class:Ed.j.Zt
id	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	p	class:Ed.te.Zt
ide	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
idris_response	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^let idris_response = 0$/;"	v
idris_response	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^let idris_response = 0$/;"	v
ie	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^  onoremap <silent> <buffer> ie :<C-U>call <SID>wrap_inside()<CR>$/;"	m
ie	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^  xnoremap <silent> <buffer> ie :<C-U>call <SID>wrap_inside()<CR>$/;"	m
if	plug-config/coc.vim	/^omap if <Plug>(coc-funcobj-i)$/;"	m
if	plug-config/coc.vim	/^xmap if <Plug>(coc-funcobj-i)$/;"	m
ife	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
ig	autoload/plugged/coc.nvim/build/index.js	/^`);e=Zi.Position.create(e.line-o,e.character),t=Zi.Position.create(t.line-o,t.character);let l=k/;"	f
ignore	autoload/plugged/fzf/src/util/eventbox.go	/^	ignore map[EventType]bool$/;"	m	struct:util.EventBox	typeref:typename:map[EventType]bool
ignoredRootPaths	autoload/plugged/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {$/;"	o	object:definitions.languageServerBase.properties
ignoredRootPaths	autoload/plugged/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {},$/;"	o	object:definitions.languageServerCommand.properties
ignoredRootPaths	autoload/plugged/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {},$/;"	o	object:definitions.languageServerModule.properties
ignoredRootPaths	autoload/plugged/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {},$/;"	o	object:definitions.languageServerSocket.properties
ihe	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
iie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ij	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
ik	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
il	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
im	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
im	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^    xnoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
image	autoload/plugged/coc.nvim/build/index.js	/^`}del(e){return this.o.del(e)}link(e,t,i){let n;if(this.options.sanitize){try{n=decodeURICompone/;"	m	class:FB
impls,trait implementations	autoload/plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?impl([ \\t\\n]*<[^>]*>)?[ \\t]+(([a-zA-Z0-9_:]+)[ \\t]*(<[^>/;"	k	langdef:Rust
import_autocommands	autoload/plugged/vim-polyglot/scripts/import_vim	/^def import_autocommands$/;"	f
inBytes	autoload/plugged/fzf/src/util/chars.go	/^	inBytes         bool$/;"	m	struct:util.Chars	typeref:typename:bool
inHandle	autoload/plugged/fzf/src/tui/light.go	/^	inHandle        uintptr$/;"	m	struct:tui.LightRenderer	typeref:typename:uintptr
include	autoload/plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*(include|require)[[:space:]]*:{0,2}([a-zA-Z0-9_:]+)\/\\1 ::\\2\/i,/;"	k	langdef:puppet
indent	autoload/plugged/vim-polyglot/scripts/build	/^def indent(str, amount)$/;"	f	method:copy_file
index	autoload/plugged/fzf/src/matcher.go	/^	index   int$/;"	m	struct:fzf.partialResult	typeref:typename:int
indexAt	autoload/plugged/fzf/src/algo/algo.go	/^func indexAt(index int, max int, forward bool) int {$/;"	f	package:algo	typeref:typename:int
ine	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
infoDefault	autoload/plugged/fzf/src/options.go	/^	infoDefault infoStyle = iota$/;"	c	package:fzf	typeref:type:infoStyle
infoHidden	autoload/plugged/fzf/src/options.go	/^	infoHidden$/;"	c	package:fzf
infoInline	autoload/plugged/fzf/src/options.go	/^	infoInline$/;"	c	package:fzf
infoStyle	autoload/plugged/fzf/src/options.go	/^type infoStyle int$/;"	t	package:fzf	typeref:typename:int
infoStyle	autoload/plugged/fzf/src/terminal.go	/^	infoStyle    infoStyle$/;"	m	struct:fzf.Terminal	typeref:typename:infoStyle
information	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	p	class:i
init	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:Hj
init	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	m	class:o0
init	autoload/plugged/fzf/src/constants.go	/^func init() {$/;"	f	package:fzf
init	autoload/plugged/fzf/src/options.go	/^func init() {$/;"	f	package:fzf
init	autoload/plugged/fzf/src/pattern.go	/^func init() {$/;"	f	package:fzf
init	autoload/plugged/fzf/src/pattern_test.go	/^func init() {$/;"	f	package:fzf
init	autoload/plugged/fzf/src/terminal.go	/^func init() {$/;"	f	package:fzf
init	autoload/plugged/fzf/src/tui/tui.go	/^func init() {$/;"	f	package:tui
initDelay	autoload/plugged/fzf/src/terminal.go	/^	initDelay    time.Duration$/;"	m	struct:fzf.Terminal	typeref:typename:time.Duration
initFunc	autoload/plugged/fzf/src/terminal.go	/^	initFunc     func()$/;"	m	struct:fzf.Terminal	typeref:typename:func()
initPalette	autoload/plugged/fzf/src/tui/tui.go	/^func initPalette(theme *ColorTheme) {$/;"	f	package:tui
initPlatform	autoload/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) initPlatform() error {$/;"	f	unknown:tui.LightRenderer	typeref:typename:error
initPlatform	autoload/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) initPlatform() error {$/;"	f	unknown:tui.LightRenderer	typeref:typename:error
initScreen	autoload/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) initScreen() {$/;"	f	unknown:tui.FullscreenRenderer
initTheme	autoload/plugged/fzf/src/tui/tui.go	/^func initTheme(theme *ColorTheme, baseTheme *ColorTheme, forceBlack bool) {$/;"	f	package:tui
initialDelay	autoload/plugged/fzf/src/constants.go	/^	initialDelay      = 20 * time.Millisecond$/;"	c	package:fzf
initialDelayTac	autoload/plugged/fzf/src/constants.go	/^	initialDelayTac   = 100 * time.Millisecond$/;"	c	package:fzf
initializationOptions	autoload/plugged/coc.nvim/data/schema.json	/^        "initializationOptions": {$/;"	o	object:definitions.languageServerBase.properties
initializationOptions	autoload/plugged/coc.nvim/data/schema.json	/^        "initializationOptions": {},$/;"	o	object:definitions.languageServerCommand.properties
initializationOptions	autoload/plugged/coc.nvim/data/schema.json	/^        "initializationOptions": {},$/;"	o	object:definitions.languageServerModule.properties
initializationOptions	autoload/plugged/coc.nvim/data/schema.json	/^        "initializationOptions": {},$/;"	o	object:definitions.languageServerSocket.properties
initialize	autoload/plugged/fzf/test/test_go.rb	/^  def initialize(shell = :bash)$/;"	f	class:Tmux
inject_code	autoload/plugged/vim-polyglot/scripts/build	/^def inject_code(path, code)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
input	autoload/plugged/fzf/src/terminal.go	/^	input        []rune$/;"	m	struct:fzf.Terminal	typeref:typename:[]rune
insert	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	p	class:mq.fire.n
insert	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	m	class:r
insertSpaces	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:e0.modifyConfiguration.a
inspect	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:Ym
install	autoload/plugged/fzf/Makefile	/^install: bin\/fzf$/;"	t
int16	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:mne.n
int32	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:mne.n
int64	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:mne.n
int8	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:mne.n
interface	autoload/plugged/coc.nvim/data/schema.json	/^        "interface": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
interfaces	autoload/plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*interface[ \\t]+([a-zA-Z0-9_]+)\/\\2\/i,interfaces\/$/;"	k	langdef:typescript
interpretCode	autoload/plugged/fzf/src/ansi.go	/^func interpretCode(ansiCode string, prevState *ansiState) ansiState {$/;"	f	package:fzf	typeref:typename:ansiState
into	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:d
inv	autoload/plugged/fzf/src/pattern.go	/^	inv           bool$/;"	m	struct:fzf.term	typeref:typename:bool
inverse	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.modifier
inverse	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.modifier
ire	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
is24	autoload/plugged/fzf/src/tui/tui.go	/^func (c Color) is24() bool {$/;"	f	type:tui.Color	typeref:typename:bool
isAlphabet	autoload/plugged/fzf/src/options.go	/^func isAlphabet(char uint8) bool {$/;"	f	package:fzf	typeref:typename:bool
isAscii	autoload/plugged/fzf/src/algo/algo.go	/^func isAscii(runes []rune) bool {$/;"	f	package:algo	typeref:typename:bool
isCommandLine	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	G	class:o0
isCtrlSeqStart	autoload/plugged/fzf/src/ansi.go	/^func isCtrlSeqStart(c uint8) bool {$/;"	f	package:fzf	typeref:typename:bool
isExecuteAction	autoload/plugged/fzf/src/options.go	/^func isExecuteAction(str string) actionType {$/;"	f	package:fzf	typeref:typename:actionType
isFull	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:r
isIncremental	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:r
isKeyword	autoload/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:s}}function oj(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	m	class:Qf
isKeywordChar	autoload/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:s}}function oj(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	m	class:Qf
isKeywordCode	autoload/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:s}}function oj(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	m	class:Qf
isLSPMessage	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:Xt.V
isNumeric	autoload/plugged/fzf/src/options.go	/^func isNumeric(char uint8) bool {$/;"	f	package:fzf	typeref:typename:bool
isPreviewEnabled	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) isPreviewEnabled() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
isPrint	autoload/plugged/fzf/src/ansi.go	/^func isPrint(c uint8) bool {$/;"	f	package:fzf	typeref:typename:bool
isProgress	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	p	class:ID.createStatusBarItem.n
isRoot	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:OW.s.c
isUri	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f	function:r
isWord	autoload/plugged/coc.nvim/build/index.js	/^`),s=ij(this.lines,o),a=await this.mutex.acquire();try{let l=await this.nvim.call("coc#util#set_/;"	m	class:o0
is_bash	autoload/plugged/vim-polyglot/syntax/initng.vim	/^let is_bash = 1$/;"	v
is_bash	autoload/plugged/vim-polyglot/syntax/upstart.vim	/^let is_bash = 1$/;"	v
italic	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.modifier
italic	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.modifier
item	autoload/plugged/fzf/src/result.go	/^	item   *Item$/;"	m	struct:fzf.Result	typeref:typename:*Item
item	autoload/plugged/fzf/src/terminal.go	/^	item *Item$/;"	m	struct:fzf.selectedItem	typeref:typename:*Item
itemLine	autoload/plugged/fzf/src/terminal.go	/^type itemLine struct {$/;"	s	package:fzf
item_count	autoload/plugged/fzf/test/test_go.rb	/^          def item_count$/;"	f	method:Tmux.until
items	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	G	class:d0
items	autoload/plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.additionalSchemes
items	autoload/plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.filetypes
items	autoload/plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.ignoredRootPaths
items	autoload/plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.rootPatterns
items	autoload/plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerCommand.properties.args
items	autoload/plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerModule.properties.args
items	autoload/plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerModule.properties.execArgv
items	autoload/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.preferences.formatOnSaveFiletypes
items	autoload/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.preferences.formatOnTypeFiletypes
items	autoload/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.preferences.rootPatterns
items	autoload/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.around.disableSyntaxes
items	autoload/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.buffer.disableSyntaxes
items	autoload/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.disableSyntaxes
items	autoload/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.ignorePatterns
items	autoload/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.triggerCharacters
items	autoload/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.trimSameExts
items	autoload/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.list.source.outline.ctagsFilestypes
items	autoload/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.list.source.symbols.excludes
items	autoload/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.list.statusLineSegments
items	autoload/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.suggest.invalidInsertCharacters
items	autoload/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.workspace.bottomUpFiletypes
items	autoload/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.workspace.ignoredFiletypes
items	autoload/plugged/fzf/src/chunklist.go	/^	items [chunkSize]Item$/;"	m	struct:fzf.Chunk	typeref:typename:[chunkSize]Item
iter	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) iter(pfun algo.Algo, tokens []Token, caseSensitive bool, normalize bool, forwa/;"	f	struct:fzf.Pattern	typeref:typename:(Offset, int, *[]int)
iue	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
ive	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
iwe	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
j	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f	function:Ed
j$	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
j0	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
j3	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
jA	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
jB	autoload/plugged/coc.nvim/build/index.js	/^`),o=n.length-(t.end.line-t.start.line)-1,s=0;if(t.end.line==r.line){let a=Wpe(t)&&o==0,l=a?t.en/;"	f
jD	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
jK	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
jN	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
jP	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
jT	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
jU	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
jV	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
jY	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
jZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
j_	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
java_highlight_all	autoload/plugged/vim-polyglot/syntax/java.vim	/^  let java_highlight_all=1$/;"	v
java_minlines	autoload/plugged/vim-polyglot/syntax/java.vim	/^  let java_minlines = 10$/;"	v
jc	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
je	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
jest	autoload/plugged/coc.nvim/package.json	/^  "jest": {$/;"	o
jg	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
jhe	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
jie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
jj	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
jk	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
jk	keys/mapping.vim	/^inoremap jk <Esc>$/;"	m
jke	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
jl	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	v
jle	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
jn	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	v
jo	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
joinTokens	autoload/plugged/fzf/src/tokenizer.go	/^func joinTokens(tokens []Token) string {$/;"	f	package:fzf	typeref:typename:string
jpe	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	f
jproperties_lines	autoload/plugged/vim-polyglot/syntax/jproperties.vim	/^	let jproperties_lines = 256$/;"	v
jproperties_show_messages	autoload/plugged/vim-polyglot/syntax/jproperties.vim	/^	let jproperties_show_messages = 0$/;"	v
jproperties_strict_syntax	autoload/plugged/vim-polyglot/syntax/jproperties.vim	/^	let jproperties_strict_syntax = 0$/;"	v
jq	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
jse	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
jsonnet#CheckBinPath	autoload/plugged/vim-polyglot/autoload/jsonnet.vim	/^function! jsonnet#CheckBinPath(binName)$/;"	f
jsonnet#Format	autoload/plugged/vim-polyglot/autoload/jsonnet.vim	/^function! jsonnet#Format()$/;"	f
jsonnet#System	autoload/plugged/vim-polyglot/autoload/jsonnet.vim	/^function! jsonnet#System(str, ...)$/;"	f
jsonrpc	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	p	class:Ed.V.Zt
jsonrpc	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	p	class:Ed.j.Zt
jsonrpc	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	p	class:Ed.te.Zt
jsx_comment	autoload/plugged/vim-polyglot/after/ftplugin/jsx.vim	/^augroup jsx_comment$/;"	a
jsx_comment	autoload/plugged/vim-polyglot/after/ftplugin/tsx.vim	/^augroup jsx_comment$/;"	a
jsx_pretty#comment#update_commentstring	autoload/plugged/vim-polyglot/autoload/jsx_pretty/comment.vim	/^function! jsx_pretty#comment#update_commentstring(original)$/;"	f
jsx_pretty#indent#get	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function! jsx_pretty#indent#get(js_indent)$/;"	f
jte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
julia#doc#complete	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#complete(ArgLead, CmdLine, CursorPos) abort$/;"	f
julia#doc#keywordprg	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#keywordprg(word) abort$/;"	f
julia#doc#lookup	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#lookup(keyword, ...) abort$/;"	f
julia#doc#open	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#open(keyword) abort$/;"	f
julia#doc#prompt	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#prompt() abort$/;"	f
julia#function_assign2block	autoload/plugged/vim-polyglot/autoload/julia.vim	/^function! julia#function_assign2block()$/;"	f
julia#function_block2assign	autoload/plugged/vim-polyglot/autoload/julia.vim	/^function! julia#function_block2assign()$/;"	f
julia#gotodefinition	autoload/plugged/vim-polyglot/autoload/julia.vim	/^function! julia#gotodefinition()$/;"	f
julia#idundercursor	autoload/plugged/vim-polyglot/autoload/julia.vim	/^function! julia#idundercursor()$/;"	f
julia#set_syntax_version	autoload/plugged/vim-polyglot/autoload/julia.vim	/^function! julia#set_syntax_version(jvers)$/;"	f
julia#toggle_deprecated_syntax	autoload/plugged/vim-polyglot/autoload/julia.vim	/^function! julia#toggle_deprecated_syntax()$/;"	f
julia#toggle_function_blockassign	autoload/plugged/vim-polyglot/autoload/julia.vim	/^function! julia#toggle_function_blockassign()$/;"	f
julia_blocks#init_mappings	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#init_mappings()$/;"	f
julia_blocks#move_N	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_N()$/;"	f
julia_blocks#move_P	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_P()$/;"	f
julia_blocks#move_n	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_n()$/;"	f
julia_blocks#move_p	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_p()$/;"	f
julia_blocks#moveblock_N	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_N()$/;"	f
julia_blocks#moveblock_P	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_P()$/;"	f
julia_blocks#moveblock_n	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_n()$/;"	f
julia_blocks#moveblock_p	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_p()$/;"	f
julia_blocks#owrapper_move	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#owrapper_move(oper, function, toend, backwards)$/;"	f
julia_blocks#owrapper_select	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#owrapper_select(oper, function) ", toend, backwards)$/;"	f
julia_blocks#remove_mappings	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#remove_mappings()$/;"	f
julia_blocks#select_a	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#select_a(...)$/;"	f
julia_blocks#select_i	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#select_i()$/;"	f
julia_blocks#select_reset	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function julia_blocks#select_reset()$/;"	f
julia_blocks#vwrapper_move	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#vwrapper_move(function)$/;"	f
julia_blocks#vwrapper_select	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#vwrapper_select(function)$/;"	f
julia_blocks#whereami	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#whereami()$/;"	f
julia_latex_symbols#get_dict	autoload/plugged/vim-polyglot/autoload/julia_latex_symbols.vim	/^function! julia_latex_symbols#get_dict()$/;"	f
jumpAcceptEnabled	autoload/plugged/fzf/src/terminal.go	/^	jumpAcceptEnabled$/;"	c	package:fzf
jumpDisabled	autoload/plugged/fzf/src/terminal.go	/^	jumpDisabled jumpMode = iota$/;"	c	package:fzf	typeref:type:jumpMode
jumpEnabled	autoload/plugged/fzf/src/terminal.go	/^	jumpEnabled$/;"	c	package:fzf
jumpLabels	autoload/plugged/fzf/src/terminal.go	/^	jumpLabels   string$/;"	m	struct:fzf.Terminal	typeref:typename:string
jumpMode	autoload/plugged/fzf/src/terminal.go	/^type jumpMode int$/;"	t	package:fzf	typeref:typename:int
jumping	autoload/plugged/fzf/src/terminal.go	/^	jumping      jumpMode$/;"	m	struct:fzf.Terminal	typeref:typename:jumpMode
k	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
k	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	c	class:yR
k	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f	function:$D
k5	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	v
k8	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
kB	autoload/plugged/coc.nvim/build/index.js	/^`)}var kB=function(r){return r+". "};function Mpe(r,e,t){return TB(e,r)?{num:t+1,line:e.replace(/;"	f
kD	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
kL	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
kN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
kQ	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
kX	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
kY	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
kZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
k_	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
ka	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	v
kb	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
kd	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f
kde	autoload/plugged/coc.nvim/build/index.js	/^   %s`,P,P,w,i);var k=w.type==="*"?GD:w.type==="?"?zD:"\\\\"+w.type;n=!0,i=i.slice(0,w.reStart)+/;"	f
keepRight	autoload/plugged/fzf/src/terminal.go	/^	keepRight    bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
key	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:OW.s.c
key	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^        let key = matchstr(s:filetype, "[^=]*")$/;"	v
keyMatch	autoload/plugged/fzf/src/terminal.go	/^func keyMatch(key tui.Event, event tui.Event) bool {$/;"	f	package:fzf	typeref:typename:bool
keymap	autoload/plugged/fzf/src/terminal.go	/^	keymap       map[tui.Event][]action$/;"	m	struct:fzf.Terminal	typeref:typename:map[tui.Event][]action
keyword	autoload/plugged/coc.nvim/data/schema.json	/^        "keyword": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
keywords	autoload/plugged/coc.nvim/package.json	/^  "keywords": [$/;"	a
kf	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
khe	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
kie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
kill	autoload/plugged/fzf/test/test_go.rb	/^  def kill$/;"	f	class:Tmux
killChan	autoload/plugged/fzf/src/terminal.go	/^	killChan     chan int$/;"	m	struct:fzf.Terminal	typeref:typename:chan int
killPreview	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) killPreview(code int) {$/;"	f	struct:fzf.Terminal
killed	autoload/plugged/fzf/src/reader.go	/^	killed   bool$/;"	m	struct:fzf.Reader	typeref:typename:bool
kind	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892e100.e.o
kind	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892e200.e.s
kind	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892e300.e.o
kind	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892fe00.e.a
kind	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892ff00.e.u
kj	keys/mapping.vim	/^inoremap kj <Esc>$/;"	m
kk	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
kn	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
kne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
kpe	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	f
kse	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
kte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
kx	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
ky	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f
l	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionb666889210e00
l	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:_x
l	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	c	class:AnonymousFunctionb6668892d900.e
l	autoload/plugged/coc.nvim/build/index.js	/^`)),m=+h.split(" ")[1];$p("got proxy server response: %o",h),e({statusCode:m,buffered:p})}r.on("/;"	f	function:AnonymousFunctionb66688922dc00
l	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	c	class:yD.createPopup
l	autoload/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),ss("Output buffer: %o",e.outputData[0].data))/;"	f	function:$ve
l	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
l	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb66688922d100.e
l	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	f	function:AnonymousFunctionb66688922d500
l	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f	function:AnonymousFunctionb666889221c00
l	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	c	class:xD.show
l	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
l	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:yR.k
l	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
l	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c	class:jie
l	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	c
l	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v	class:o
l	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	v
l	autoload/plugged/coc.nvim/build/index.js	/^augroup end`;try{let o=Fe.default.join(process.env.TMPDIR,`coc.nvim-${process.pid}`);St.default./;"	v
l	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:TY
l0	autoload/plugged/coc.nvim/build/index.js	/^`);e=Zi.Position.create(e.line-o,e.character),t=Zi.Position.create(t.line-o,t.character);let l=k/;"	c
l7	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
l9	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	v
lB	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	v
lK	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
lO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
lZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
label	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892f900.e.s
label	autoload/plugged/fzf/src/terminal.go	/^	label    string$/;"	m	struct:fzf.itemLine	typeref:typename:string
labels: "feature request"	autoload/plugged/NERDTree/.github/ISSUE_TEMPLATE/feature_request.md	/^labels: "feature request"$/;"	s
labels: "general question"	autoload/plugged/NERDTree/.github/ISSUE_TEMPLATE/question.md	/^labels: "general question"$/;"	s
labels: bug	autoload/plugged/NERDTree/.github/ISSUE_TEMPLATE/bug.md	/^labels: bug$/;"	s
landmark_role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let landmark_role = [$/;"	v
landmark_role	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let landmark_role = ['application', 'banner', 'complementary', 'contentinfo', 'form', 'main'/;"	v
lang_tag	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let lang_tag = [$/;"	v
langonly	autoload/plugged/vim-polyglot/extras/menu.vim	/^	let langonly = substitute(s:lang, '_.*', "", "")$/;"	v
languageServerBase	autoload/plugged/coc.nvim/data/schema.json	/^    "languageServerBase": {$/;"	o	object:definitions
languageServerCommand	autoload/plugged/coc.nvim/data/schema.json	/^    "languageServerCommand": {$/;"	o	object:definitions
languageServerModule	autoload/plugged/coc.nvim/data/schema.json	/^    "languageServerModule": {$/;"	o	object:definitions
languageServerSocket	autoload/plugged/coc.nvim/data/schema.json	/^    "languageServerSocket": {$/;"	o	object:definitions
languageserver	autoload/plugged/coc.nvim/data/schema.json	/^    "languageserver": {$/;"	o	object:properties
lastChunk	autoload/plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) lastChunk() *Chunk {$/;"	f	struct:fzf.ChunkList	typeref:typename:*Chunk
lastX	autoload/plugged/fzf/src/tui/tcell.go	/^	lastX       int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
lastY	autoload/plugged/fzf/src/tui/tcell.go	/^	lastY       int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
layout	autoload/plugged/fzf/src/terminal.go	/^	layout       layoutType$/;"	m	struct:fzf.Terminal	typeref:typename:layoutType
layoutDefault	autoload/plugged/fzf/src/options.go	/^	layoutDefault layoutType = iota$/;"	c	package:fzf	typeref:type:layoutType
layoutReverse	autoload/plugged/fzf/src/options.go	/^	layoutReverse$/;"	c	package:fzf
layoutReverseList	autoload/plugged/fzf/src/options.go	/^	layoutReverseList$/;"	c	package:fzf
layoutType	autoload/plugged/fzf/src/options.go	/^type layoutType int$/;"	t	package:fzf	typeref:typename:int
lbg	autoload/plugged/fzf/src/ansi.go	/^	lbg  tui.Color$/;"	m	struct:fzf.ansiState	typeref:typename:tui.Color
lchmod	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:c
lchmodSync	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:c
lde	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
le	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
ledger#align_amount_at_cursor	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#align_amount_at_cursor() abort$/;"	f
ledger#align_commodity	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#align_commodity() abort$/;"	f
ledger#align_commodity_buffer	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#align_commodity_buffer() abort$/;"	f
ledger#autocomplete_and_align	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#autocomplete_and_align() abort$/;"	f
ledger#declared_accounts	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#declared_accounts(...) abort$/;"	f
ledger#entry	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#entry() abort$/;"	f
ledger#filter_items	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#filter_items(list, keyword) abort$/;"	f
ledger#find_in_tree	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#find_in_tree(tree, levels) abort$/;"	f
ledger#output	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#output(report) abort$/;"	f
ledger#reconcile	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#reconcile(file, account, target_amount) abort$/;"	f
ledger#register	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#register(file, args) abort$/;"	f
ledger#report	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#report(file, args) abort$/;"	f
ledger#show_balance	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#show_balance(file, ...) abort$/;"	f
ledger#transaction_date_set	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_date_set(lnum, type, ...) abort$/;"	f
ledger#transaction_from_lnum	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_from_lnum(lnum) abort$/;"	f
ledger#transaction_post_state_get	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_post_state_get(lnum) abort$/;"	f
ledger#transaction_post_state_set	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_post_state_set(lnum, char) abort$/;"	f
ledger#transaction_post_state_toggle	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_post_state_toggle(lnum, ...) abort$/;"	f
ledger#transaction_state_set	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_state_set(lnum, char) abort$/;"	f
ledger#transaction_state_toggle	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_state_toggle(lnum, ...) abort$/;"	f
ledger#transactions	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transactions(...) abort$/;"	f
left	autoload/plugged/fzf/src/tui/light.go	/^	left     int$/;"	m	struct:tui.LightWindow	typeref:typename:int
left	autoload/plugged/fzf/src/tui/tcell.go	/^	left        int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
length	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:BD.i
length	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:b3.w
level	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:OW.s.c
lg	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
lh	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
lhe	autoload/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(o):i+=Ql(o)+n+Ql(l)+F0}),e.section&&i.length&&(i="["+Ql(e.secti/;"	f
license	autoload/plugged/coc.nvim/package.json	/^  "license": "MIT",$/;"	s
license	~./config/nvim/plugged/gruvbox/package.json	/^  "license": "MIT",$/;"	s
lie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
line	autoload/plugged/coc.nvim/build/index.js	/^`),s=i.line==r.start.line?i.character-r.start.character:i.character,a=UB(o,i.line-r.start.line,s/;"	p	class:Bl.t
line	autoload/plugged/fzf/src/terminal.go	/^	line string$/;"	m	struct:fzf.eachLine	typeref:typename:string
lineCount	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get lineCount(){return this.lines.length+(this.eol?1:0)}getText(e){if(e){let t=this.offset/;"	G	class:i0
lineCount	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	G	class:o0
lines	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	G	class:ED
lines	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	G	class:xD
lines	autoload/plugged/fzf/src/history.go	/^	lines    []string$/;"	m	struct:fzf.History	typeref:typename:[]string
lines	autoload/plugged/fzf/src/terminal.go	/^	lines      []string$/;"	m	struct:fzf.previewer	typeref:typename:[]string
lines	autoload/plugged/fzf/src/terminal.go	/^	lines   []string$/;"	m	struct:fzf.previewResult	typeref:typename:[]string
link	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
link	autoload/plugged/coc.nvim/build/index.js	/^`}del(e){return this.o.del(e)}link(e,t,i){let n;if(this.options.sanitize){try{n=decodeURICompone/;"	m	class:FB
link_fzf_in_path	autoload/plugged/fzf/install	/^link_fzf_in_path() {$/;"	f
linkreltypes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['amphtml']$/;"	v
linkreltypes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['apple-touch-icon', 'apple-touch-icon-precomposed', 'apple-to/;"	v
linkreltypes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['canonical']$/;"	v
linkreltypes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['chrome-webstore-item']$/;"	v
linkreltypes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['hub']$/;"	v
linkreltypes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['import']$/;"	v
linkreltypes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['manifest']$/;"	v
linkreltypes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['pgpkey']$/;"	v
linkreltypes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['search']$/;"	v
linkreltypes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['sitemap']$/;"	v
linkreltypes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['webmention']$/;"	v
linkreltypes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linktypes$/;"	v
linktypes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let linktypes = ['alternate', 'author', 'bookmark', 'dns-prefetch', 'external', 'help', 'icon', /;"	v
list	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
list	autoload/plugged/coc.nvim/build/index.js	/^`}list(e,t){return e=this.o.list(e,t,this.tab),qf(Ape(Rpe(this.tab,e),this.tab))}listitem(e){let/;"	m	class:FB
list	autoload/plugged/fzf/src/terminal.go	/^	list     []*Item$/;"	m	struct:fzf.previewRequest	typeref:typename:[]*Item
list.alignColumns	autoload/plugged/coc.nvim/data/schema.json	/^    "list.alignColumns": {$/;"	o	object:properties
list.extendedSearchMode	autoload/plugged/coc.nvim/data/schema.json	/^    "list.extendedSearchMode": {$/;"	o	object:properties
list.height	autoload/plugged/coc.nvim/data/schema.json	/^    "list.height": {$/;"	o	object:properties
list.indicator	autoload/plugged/coc.nvim/data/schema.json	/^    "list.indicator": {$/;"	o	object:properties
list.insertMappings	autoload/plugged/coc.nvim/data/schema.json	/^    "list.insertMappings": {$/;"	o	object:properties
list.interactiveDebounceTime	autoload/plugged/coc.nvim/data/schema.json	/^    "list.interactiveDebounceTime": {$/;"	o	object:properties
list.limitLines	autoload/plugged/coc.nvim/data/schema.json	/^    "list.limitLines": {$/;"	o	object:properties
list.matchHighlightGroup	autoload/plugged/coc.nvim/data/schema.json	/^    "list.matchHighlightGroup": {$/;"	o	object:properties
list.maxPreviewHeight	autoload/plugged/coc.nvim/data/schema.json	/^    "list.maxPreviewHeight": {$/;"	o	object:properties
list.nextKeymap	autoload/plugged/coc.nvim/data/schema.json	/^    "list.nextKeymap": {$/;"	o	object:properties
list.normalMappings	autoload/plugged/coc.nvim/data/schema.json	/^    "list.normalMappings": {$/;"	o	object:properties
list.previewHighlightGroup	autoload/plugged/coc.nvim/data/schema.json	/^    "list.previewHighlightGroup": {$/;"	o	object:properties
list.previewSplitRight	autoload/plugged/coc.nvim/data/schema.json	/^    "list.previewSplitRight": {$/;"	o	object:properties
list.previousKeymap	autoload/plugged/coc.nvim/data/schema.json	/^    "list.previousKeymap": {$/;"	o	object:properties
list.selectedSignText	autoload/plugged/coc.nvim/data/schema.json	/^    "list.selectedSignText": {$/;"	o	object:properties
list.signOffset	autoload/plugged/coc.nvim/data/schema.json	/^    "list.signOffset": {$/;"	o	object:properties
list.source.diagnostics.includeCode	autoload/plugged/coc.nvim/data/schema.json	/^    "list.source.diagnostics.includeCode": {$/;"	o	object:properties
list.source.diagnostics.pathFormat	autoload/plugged/coc.nvim/data/schema.json	/^    "list.source.diagnostics.pathFormat": {$/;"	o	object:properties
list.source.outline.ctagsFilestypes	autoload/plugged/coc.nvim/data/schema.json	/^    "list.source.outline.ctagsFilestypes": {$/;"	o	object:properties
list.source.symbols.excludes	autoload/plugged/coc.nvim/data/schema.json	/^    "list.source.symbols.excludes": {$/;"	o	object:properties
list.statusLineSegments	autoload/plugged/coc.nvim/data/schema.json	/^    "list.statusLineSegments": {$/;"	o	object:properties
listen	autoload/plugged/coc.nvim/build/index.js	/^`);e=Zi.Position.create(e.line-o,e.character),t=Zi.Position.create(t.line-o,t.character);let l=k/;"	m	class:s0
listitem	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
listitem	autoload/plugged/coc.nvim/build/index.js	/^`}list(e,t){return e=this.o.list(e,t,this.tab),qf(Ape(Rpe(this.tab,e),this.tab))}listitem(e){let/;"	m	class:FB
lists	autoload/plugged/fzf/src/merger.go	/^	lists   [][]Result$/;"	m	struct:fzf.Merger	typeref:typename:[][]Result
live_region_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let live_region_attributes = {$/;"	v
livescript_compiler	autoload/plugged/vim-polyglot/compiler/ls.vim	/^  let livescript_compiler = 'lsc'$/;"	v
livescript_compiler	autoload/plugged/vim-polyglot/ftplugin/ls.vim	/^  let livescript_compiler = 'lsc'$/;"	v
livescript_make_options	autoload/plugged/vim-polyglot/compiler/ls.vim	/^  let livescript_make_options = ''$/;"	v
lj	autoload/plugged/coc.nvim/build/index.js	/^`);e=Zi.Position.create(e.line-o,e.character),t=Zi.Position.create(t.line-o,t.character);let l=k/;"	v
ll	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
lnum	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	p	class:mq.fire.n
lnum	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	p	class:p
lnum	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^let lnum = search('^\\s*(\\*:o\\?caml:', 'n')$/;"	v
lnums	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	p	class:i
lo	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
load	autoload/plugged/coc.nvim/build/index.js	/^`);e=Zi.Position.create(e.line-o,e.character),t=Zi.Position.create(t.line-o,t.character);let l=k/;"	m	class:l0
load_data	autoload/plugged/vim-polyglot/scripts/build	/^def load_data()$/;"	f
load_heuristics	autoload/plugged/vim-polyglot/scripts/build	/^def load_heuristics$/;"	f
load_languages	autoload/plugged/vim-polyglot/scripts/build	/^def load_languages$/;"	f
load_packages	autoload/plugged/vim-polyglot/scripts/build	/^def load_packages$/;"	f
loaded_eregex	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let loaded_eregex=1$/;"	v
loaded_nerd_tree	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
location	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	c	class:AnonymousFunctionb6668892fe00.e.a
loop	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:d
lp	autoload/plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[s-1]}async withProgress(e,t){return this.checkDialog()?await new e3(this.nvim/;"	f
lpe	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	f
lq	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
lse	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
lte	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
lu	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	v
ly	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
m	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
m	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
m	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
m	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:yR.k
m	autoload/plugged/coc.nvim/build/index.js	/^`+h(e.style.border,n.left)),I+=O.join(h(e.style.border,n.middle))+h(e.style.border,n.right)}),h(/;"	f	function:AnonymousFunctionb66688921aa00
m	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:zf
m	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:a
m1	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	v
m1e	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
m3	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
m5	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
mF	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
mG	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
mN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
mO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
mR	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
mU	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
mV	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
mX	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
mZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
macros,macro definitions	autoload/plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*macro_rules![ \\t]+([a-zA-Z0-9_]+)\/\\1\/d,macros,macro definitions\/$/;"	k	langdef:Rust
magenta	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.color
magenta	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.color
magentaBright	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.color
magentaBright	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.color
main	autoload/plugged/coc.nvim/package.json	/^  "main": ".\/lib\/index.js",$/;"	s
main	autoload/plugged/fzf/main.go	/^func main() {$/;"	f	package:main
main	autoload/plugged/fzf/main.go	/^package main$/;"	p
main_syntax	autoload/plugged/vim-polyglot/syntax/ansible.vim	/^  let main_syntax = 'yaml'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/aptconf.vim	/^  let main_syntax = 'aptconf'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/aspperl.vim	/^  let main_syntax = 'perlscript'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/aspvbs.vim	/^  let main_syntax = 'aspvbs'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/blade.vim	/^    let main_syntax = 'blade'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/css.vim	/^  let main_syntax = 'css'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/docker-compose.vim	/^    let main_syntax = 'yaml'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/ecrystal.vim	/^  let main_syntax = 'ecrystal'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/eelixir.vim	/^  let main_syntax = 'eelixir'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/elixir.vim	/^  let main_syntax = "elixir"$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/emblem.vim	/^  let main_syntax = 'emblem'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/ferm.vim	/^  let main_syntax = 'ferm'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/groovy.vim	/^  let main_syntax='groovy'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/gsp.vim	/^  let main_syntax = 'gsp'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/haml.vim	/^  let main_syntax = 'haml'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/haxe.vim	/^  let main_syntax='haxe'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/helm.vim	/^  let main_syntax = 'yaml'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/hjson.vim	/^  let main_syntax = 'hjson'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/html.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/htmldjango.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/htmlm4.vim	/^  let main_syntax='htmlm4'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/java.vim	/^  let main_syntax='java'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/jinja2.vim	/^  let main_syntax = 'jinja2'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/json.vim	/^  let main_syntax = 'json'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/jsp.vim	/^  let main_syntax = 'jsp'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/jst.vim	/^  let main_syntax = 'jst'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/liquid.vim	/^  let main_syntax = 'liquid'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/lite.vim	/^  let main_syntax = 'lite'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/lua.vim	/^  let main_syntax = 'lua'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/m4.vim	/^  let main_syntax='m4'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/mako.vim	/^  let main_syntax = b:mako_outer_lang$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/mason.vim	/^	let main_syntax = 'mason'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/msql.vim	/^  let main_syntax = 'msql'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/ora.vim	/^  let main_syntax = 'ora'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/pdf.vim	/^    let main_syntax = 'pdf'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/php.vim	/^  let main_syntax = 'php'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/plp.vim	/^  let main_syntax = 'perlscript'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/pug.vim	/^  let main_syntax = 'pug'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/qml.vim	/^  let main_syntax = 'qml'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/scala.vim	/^  let main_syntax = 'scala'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/scss.vim	/^  let main_syntax = 'scss'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/slim.vim	/^  let main_syntax = 'slim'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/slime.vim	/^  let main_syntax = 'slime'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/smarty.vim	/^  let main_syntax = 'smarty'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/spyce.vim	/^  let main_syntax='spyce'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/stylus.vim	/^  let main_syntax = 'css'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/svg.vim	/^  let main_syntax = 'svg'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/texinfo.vim	/^  let main_syntax = 'texinfo'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/tf.vim	/^  let main_syntax = 'tf'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/tpp.vim	/^  let main_syntax = 'tpp'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/typescript.vim	/^  let main_syntax = 'typescript'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/typescriptreact.vim	/^  let main_syntax = 'typescriptreact'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/uc.vim	/^  let main_syntax='uc'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/velocity.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/webmacro.vim	/^  let main_syntax = 'webmacro'$/;"	v
main_syntax	autoload/plugged/vim-polyglot/syntax/wml.vim	/^  let main_syntax = 'wml'$/;"	v
makeSpace	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) makeSpace() {$/;"	f	struct:tui.LightRenderer
makeSpinner	autoload/plugged/fzf/src/terminal.go	/^func makeSpinner(unicode bool) []string {$/;"	f	package:fzf	typeref:typename:[]string
map	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:mne.n
map	autoload/plugged/vim-airline/t/themes.vim	/^    let map = airline#themes#generate_color_map($/;"	v
margin	autoload/plugged/fzf/src/terminal.go	/^	margin       [4]sizeSpec$/;"	m	struct:fzf.Terminal	typeref:typename:[4]sizeSpec
marker	autoload/plugged/fzf/src/terminal.go	/^	marker       string$/;"	m	struct:fzf.Terminal	typeref:typename:string
markerEmpty	autoload/plugged/fzf/src/terminal.go	/^	markerEmpty  string$/;"	m	struct:fzf.Terminal	typeref:typename:string
markerLen	autoload/plugged/fzf/src/terminal.go	/^	markerLen    int$/;"	m	struct:fzf.Terminal	typeref:typename:int
matchAll	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	m	class:String
matchChunk	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) matchChunk(chunk *Chunk, space []Result, slab *util.Slab) []Result {$/;"	f	struct:fzf.Pattern	typeref:typename:[]Result
matchControlSequence	autoload/plugged/fzf/src/ansi.go	/^func matchControlSequence(s string) int {$/;"	f	package:fzf	typeref:typename:int
matchKeywords	autoload/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:s}}function oj(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	m	class:Qf
matchOperatingSystemCommand	autoload/plugged/fzf/src/ansi.go	/^func matchOperatingSystemCommand(s string) int {$/;"	f	package:fzf	typeref:typename:int
match_count	autoload/plugged/fzf/test/test_go.rb	/^          def match_count$/;"	f	method:Tmux.until
matches	autoload/plugged/fzf/src/matcher.go	/^	matches []Result$/;"	m	struct:fzf.partialResult	typeref:typename:[]Result
maxBodyLength	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	p	class:UU.e
maxHeightFunc	autoload/plugged/fzf/src/tui/light.go	/^	maxHeightFunc func(int) int$/;"	m	struct:tui.LightRenderer	typeref:typename:func(int) int
maxInputBuffer	autoload/plugged/fzf/src/tui/light.go	/^	maxInputBuffer  = 10 * 1024$/;"	c	package:tui
maxItems	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) maxItems() int {$/;"	f	struct:fzf.Terminal	typeref:typename:int
maxMulti	autoload/plugged/fzf/src/constants.go	/^	maxMulti          = math.MaxInt32$/;"	c	package:fzf
maxPartitions	autoload/plugged/fzf/src/constants.go	/^	maxPartitions           = 32$/;"	c	package:fzf
maxPatternLength	autoload/plugged/fzf/src/constants.go	/^	maxPatternLength  = 300$/;"	c	package:fzf
maxRedirects	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	p	class:UU.e
maxSize	autoload/plugged/fzf/src/history.go	/^	maxSize  int$/;"	m	struct:fzf.History	typeref:typename:int
maximum	autoload/plugged/coc.nvim/data/schema.json	/^      "maximum": 100,$/;"	n	object:properties.suggest.highPrioritySourceLimit
maximum	autoload/plugged/coc.nvim/data/schema.json	/^      "maximum": 100,$/;"	n	object:properties.suggest.lowPrioritySourceLimit
maximum	autoload/plugged/coc.nvim/data/schema.json	/^      "maximum": 1000,$/;"	n	object:properties.signature.triggerSignatureWait
maximum	autoload/plugged/coc.nvim/data/schema.json	/^      "maximum": 15000,$/;"	n	object:properties.suggest.timeout
maximum	autoload/plugged/coc.nvim/data/schema.json	/^      "maximum": 500,$/;"	n	object:properties.suggest.triggerCompletionWait
maximum	autoload/plugged/coc.nvim/data/schema.json	/^      "maximum": 5000,$/;"	n	object:properties.coc.preferences.highlightTimeout
maximum	autoload/plugged/coc.nvim/data/schema.json	/^      "maximum": 5000,$/;"	n	object:properties.coc.preferences.willSaveHandlerTimeout
maxwidth	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	p	class:xD.show.l
mb	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
mde	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
mel_minlines	autoload/plugged/vim-polyglot/syntax/mel.vim	/^  let mel_minlines=15$/;"	v
members	autoload/plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*(public|private)[ \\t]+(static|readonly)?[ \\t]*([a/;"	k	langdef:typescript
merge	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:Fr
merge	autoload/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) merge(other ColorPair, except Color) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
mergeContents	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:Fr
merged	autoload/plugged/fzf/src/merger.go	/^	merged  []Result$/;"	m	struct:fzf.Merger	typeref:typename:[]Result
mergedGet	autoload/plugged/fzf/src/merger.go	/^func (mg *Merger) mergedGet(idx int) Result {$/;"	f	struct:fzf.Merger	typeref:typename:Result
merger	autoload/plugged/fzf/src/terminal.go	/^	merger       *Merger$/;"	m	struct:fzf.Terminal	typeref:typename:*Merger
mergerCache	autoload/plugged/fzf/src/matcher.go	/^	mergerCache    map[string]*Merger$/;"	m	struct:fzf.Matcher	typeref:typename:map[string]*Merger
mergerCacheMax	autoload/plugged/fzf/src/constants.go	/^	mergerCacheMax int = 100000$/;"	c	package:fzf	typeref:typename:int
message	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892dd00.e.u
message	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:Xt.V
metadata_elements	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let metadata_elements = ['link', 'style', 'meta', 'script', 'noscript', 'command']$/;"	v
method	autoload/plugged/coc.nvim/data/schema.json	/^        "method": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
methods	autoload/plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy|override|private[^ ]*(\\[[a-z]*\\]/;"	k	langdef:scala
mfe	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
mg	autoload/plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[s-1]}async withProgress(e,t){return this.checkDialog()?await new e3(this.nvim/;"	f
mh	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
mhe	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
mi	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
microdata_attributes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let microdata_attributes = {'itemid': [], 'itemscope': ['itemscope', ''], 'itemtype': [], 'i/;"	v
microdata_attributes_value	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let microdata_attributes_value = {$/;"	v
minHeight	autoload/plugged/fzf/src/terminal.go	/^	minHeight = 4$/;"	c	package:fzf
minItem	autoload/plugged/fzf/src/item.go	/^var minItem = Item{text: util.Chars{Index: -1}}$/;"	v	package:fzf
minRank	autoload/plugged/fzf/src/result.go	/^func minRank() Result {$/;"	f	package:fzf	typeref:typename:Result
minWidth	autoload/plugged/fzf/src/terminal.go	/^	minWidth  = 4$/;"	c	package:fzf
minimum	autoload/plugged/coc.nvim/data/schema.json	/^      "minimum": 1,$/;"	n	object:properties.suggest.highPrioritySourceLimit
minimum	autoload/plugged/coc.nvim/data/schema.json	/^      "minimum": 1,$/;"	n	object:properties.suggest.lowPrioritySourceLimit
minimum	autoload/plugged/coc.nvim/data/schema.json	/^      "minimum": 200,$/;"	n	object:properties.coc.preferences.highlightTimeout
minimum	autoload/plugged/coc.nvim/data/schema.json	/^      "minimum": 200,$/;"	n	object:properties.coc.preferences.willSaveHandlerTimeout
minimum	autoload/plugged/coc.nvim/data/schema.json	/^      "minimum": 200,$/;"	n	object:properties.signature.triggerSignatureWait
minimum	autoload/plugged/coc.nvim/data/schema.json	/^      "minimum": 3,$/;"	n	object:properties.signature.maxWindowHeight
minimum	autoload/plugged/coc.nvim/data/schema.json	/^      "minimum": 30,$/;"	n	object:properties.suggest.triggerCompletionWait
minimum	autoload/plugged/coc.nvim/data/schema.json	/^      "minimum": 500,$/;"	n	object:properties.suggest.timeout
mj	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
mm	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
mne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
mode	autoload/plugged/coc.nvim/build/index.js	/^`;function AI(r,e){if(On.existsSync(r))return;let t=On.openSync(r,e.flags,e.mode);On.closeSync(t/;"	p	class:hee.i
modes	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	p	class:yD.createPopup.l
modified	autoload/plugged/fzf/src/history.go	/^	modified map[int]string$/;"	m	struct:fzf.History	typeref:typename:map[int]string
modifier	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	c	class:Qfe.e
modifier	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	c	class:xpe.e
modifyConfiguration	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:e0
module	autoload/plugged/coc.nvim/data/schema.json	/^        "module": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
module	autoload/plugged/coc.nvim/data/schema.json	/^        "module": {$/;"	o	object:definitions.languageServerModule.properties
moduleFileExtensions	autoload/plugged/coc.nvim/package.json	/^    "moduleFileExtensions": [$/;"	a	object:jest
modules	autoload/plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*module[ \\t]+([a-zA-Z0-9_]+)\/\\2\/n,modules\/$/;"	k	langdef:typescript
modules	autoload/plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*namespace[ \\t]+([a-zA-Z0-9_]+)\/\\2\/n,modules\/$/;"	k	langdef:typescript
modules,module names	autoload/plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?mod[ \\t]+([a-zA-Z0-9_]+)\/\\2\/m,modules,module names\/$/;"	k	langdef:Rust
moe	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
mouse	autoload/plugged/fzf/src/tui/light.go	/^	mouse         bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
mouse	autoload/plugged/fzf/src/tui/tui.go	/^	mouse        bool$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:bool
mouseSequence	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) mouseSequence(sz *int) Event {$/;"	f	struct:tui.LightRenderer	typeref:typename:Event
move	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) move(y int, x int, clear bool) {$/;"	f	struct:fzf.Terminal
move	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) move(y int, x int) {$/;"	f	struct:tui.LightRenderer
moveCursor	autoload/plugged/fzf/src/tui/tcell.go	/^	moveCursor  bool$/;"	m	struct:tui.TcellWindow	typeref:typename:bool
moveTo	autoload/plugged/coc.nvim/build/index.js	/^`)],!0)}async runTerminalCommand(e,t,i=!1){return t=t||b.cwd,await this.nvim.callAsync("coc#util/;"	m	class:Vj
mq	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	c
mre	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
mte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
multi	autoload/plugged/fzf/src/terminal.go	/^	multi        int$/;"	m	struct:fzf.Terminal	typeref:typename:int
mupad_cmdextversion	autoload/plugged/vim-polyglot/syntax/mupad.vim	/^  let mupad_cmdextversion = 2$/;"	v
mutex	autoload/plugged/fzf/src/cache.go	/^	mutex sync.Mutex$/;"	m	struct:fzf.ChunkCache	typeref:typename:sync.Mutex
mutex	autoload/plugged/fzf/src/chunklist.go	/^	mutex  sync.Mutex$/;"	m	struct:fzf.ChunkList	typeref:typename:sync.Mutex
mutex	autoload/plugged/fzf/src/reader.go	/^	mutex    sync.Mutex$/;"	m	struct:fzf.Reader	typeref:typename:sync.Mutex
mutex	autoload/plugged/fzf/src/terminal.go	/^	mutex        sync.Mutex$/;"	m	struct:fzf.Terminal	typeref:typename:sync.Mutex
mv_DEtools	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_DEtools    = 1$/;"	v
mv_Galois	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_Galois     = 1$/;"	v
mv_GaussInt	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_GaussInt   = 1$/;"	v
mv_LREtools	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_LREtools   = 1$/;"	v
mv_combinat	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_combinat   = 1$/;"	v
mv_combstruct	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_combstruct = 1$/;"	v
mv_difforms	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_difforms   = 1$/;"	v
mv_finance	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_finance    = 1$/;"	v
mv_genfunc	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_genfunc    = 1$/;"	v
mv_geometry	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_geometry   = 1$/;"	v
mv_grobner	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_grobner    = 1$/;"	v
mv_group	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_group      = 1$/;"	v
mv_inttrans	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_inttrans   = 1$/;"	v
mv_liesymm	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_liesymm    = 1$/;"	v
mv_linalg	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_linalg     = 1$/;"	v
mv_logic	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_logic      = 1$/;"	v
mv_networks	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_networks   = 1$/;"	v
mv_numapprox	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_numapprox  = 1$/;"	v
mv_numtheory	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_numtheory  = 1$/;"	v
mv_orthopoly	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_orthopoly  = 1$/;"	v
mv_padic	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_padic      = 1$/;"	v
mv_plots	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_plots      = 1$/;"	v
mv_plottools	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_plottools  = 1$/;"	v
mv_powseries	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_powseries  = 1$/;"	v
mv_process	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_process    = 1$/;"	v
mv_simplex	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_simplex    = 1$/;"	v
mv_stats	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_stats      = 1$/;"	v
mv_student	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_student    = 1$/;"	v
mv_sumtools	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_sumtools   = 1$/;"	v
mv_tensor	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_tensor     = 1$/;"	v
mv_totorder	autoload/plugged/vim-polyglot/syntax/maple.vim	/^  let mv_totorder   = 1$/;"	v
my	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
mygroup	plug-config/coc.vim	/^augroup mygroup$/;"	a
n	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	c	class:mq.fire
n	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	c	class:AnonymousFunctionb666889235400
n	autoload/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[c],!0),await e./;"	c
n	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionb666889210e00
n	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	c	class:AnonymousFunctionb6668892fb00.e
n	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892df00
n	autoload/plugged/coc.nvim/build/index.js	/^`)),m=+h.split(" ")[1];$p("got proxy server response: %o",h),e({statusCode:m,buffered:p})}r.on("/;"	f	function:AnonymousFunctionb66688922dc00
n	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
n	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889225e00.AnonymousFunctionb666889225f00
n	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889228a00
n	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:AnonymousFunctionb66688922cc00
n	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	f	function:AnonymousFunctionb66688922d500
n	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
n	autoload/plugged/coc.nvim/build/index.js	/^`)],!0)}async runTerminalCommand(e,t,i=!1){return t=t||b.cwd,await this.nvim.callAsync("coc#util/;"	v
n	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f	function:rde
n	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	v
n	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:AnonymousFunctionb66688923400
n	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:VY
n	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
n	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:yR.k
n	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
n	autoload/plugged/coc.nvim/build/index.js	/^`,"\\r"],Dx;(function(r){function e(o,s,a,l){return new Lse(o,s,a,l)}r.create=e;function t(o){va/;"	f	function:AnonymousFunctionb666889210700
n	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	c	class:ID.createStatusBarItem
n	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c	class:mne
n	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:AnonymousFunctionb66688929c00
n	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:ine
n	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	c	class:ta.constructor
n	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f	function:$D
n	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f	function:BD
n	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f	function:cde
n	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
n	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	c	class:AnonymousFunctionb66688921a200
n	autoload/plugged/coc.nvim/build/index.js	/^`}get document(){return new Promise((e,t)=>{this.nvim.buffer.then(i=>{let n=i.id;if(this.bufnr=n/;"	v
n	autoload/plugged/coc.nvim/build/index.js	/^augroup end`;try{let o=Fe.default.join(process.env.TMPDIR,`coc.nvim-${process.pid}`);St.default./;"	v
n	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	c
n	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:TY
n	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^	 let n = 1		" n = color index$/;"	v
n	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^	 let n = n + 1$/;"	v
n	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^let n      = 0$/;"	v
n	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^	let n = 1			" n = color index$/;"	v
n	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^	let n = n + 1$/;"	v
n	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^  let n      = 0$/;"	v
n0	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
n7	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
n9	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	v
nA	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	v
nB	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	v
nM	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
nP	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
nQ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
nU	autoload/plugged/coc.nvim/build/index.js	/^`;function nU(r,e){var t=[],i="";typeof e=="string"?e={section:e,whitespace:!1}:(e=e||{},e.white/;"	f
nX	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
name	autoload/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[c],!0),await e./;"	p	class:n
name	autoload/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[c],!0),await e./;"	p	class:o
name	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892fe00.e.a
name	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892ff00.e.u
name	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	G	class:p0
name	autoload/plugged/coc.nvim/package.json	/^  "name": "coc.nvim",$/;"	s
name	~./config/nvim/plugged/gruvbox/package.json	/^  "name": "gruvbox",$/;"	s
names	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	G	class:zB
nde	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
nee	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
nerdtree#checkForBrowse	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir) abort$/;"	f
nerdtree#closeBookmarksOnOpen	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! nerdtree#closeBookmarksOnOpen() abort$/;"	f
nerdtree#closeTreeOnOpen	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeOnOpen() abort$/;"	f
nerdtree#compareNodePaths	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! nerdtree#compareNodePaths(p1, p2) abort$/;"	f
nerdtree#compareNodes	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2) abort$/;"	f
nerdtree#completeBookmarks	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P) abort$/;"	f
nerdtree#deprecated	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...) abort$/;"	f
nerdtree#echo	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg) abort$/;"	f
nerdtree#echoError	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg) abort$/;"	f
nerdtree#echoWarning	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg) abort$/;"	f
nerdtree#exec	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd, ignoreAll) abort$/;"	f
nerdtree#has_opt	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name) abort$/;"	f
nerdtree#loadClassFiles	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles() abort$/;"	f
nerdtree#postSourceActions	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions() abort$/;"	f
nerdtree#renderView	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! nerdtree#renderView() abort$/;"	f
nerdtree#runningCygwin	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! nerdtree#runningCygwin() abort$/;"	f
nerdtree#runningWindows	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows() abort$/;"	f
nerdtree#slash	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! nerdtree#slash() abort$/;"	f
nerdtree#ui_glue#bookmarkNode	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...) abort$/;"	f
nerdtree#ui_glue#chRootCwd	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd() abort$/;"	f
nerdtree#ui_glue#clearBookmarks	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks) abort$/;"	f
nerdtree#ui_glue#createDefaultBindings	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings() abort$/;"	f
nerdtree#ui_glue#invokeKeyMap	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key) abort$/;"	f
nerdtree#ui_glue#openBookmark	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name) abort$/;"	f
nerdtree#ui_glue#revealBookmark	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name) abort$/;"	f
nerdtree#ui_glue#setupCommands	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands() abort$/;"	f
nerdtree#ui_glue#upDir	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(preserveState) abort$/;"	f
nerdtree#version	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! nerdtree#version(...) abort$/;"	f
newItem	autoload/plugged/fzf/src/terminal_test.go	/^func newItem(str string) *Item {$/;"	f	package:fzf	typeref:typename:*Item
newRange	autoload/plugged/fzf/src/tokenizer.go	/^func newRange(begin int, end int) Range {$/;"	f	package:fzf	typeref:typename:Range
newUri	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892e200.e.s
new_shell	autoload/plugged/fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestBash
new_shell	autoload/plugged/fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestFish
new_shell	autoload/plugged/fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestZsh
next	autoload/plugged/fzf/src/history.go	/^func (h *History) next() string {$/;"	f	struct:fzf.History	typeref:typename:string
nextAnsiEscapeSequence	autoload/plugged/fzf/src/ansi.go	/^func nextAnsiEscapeSequence(s string) (int, int) {$/;"	f	package:fzf	typeref:typename:(int, int)
nextInt	autoload/plugged/fzf/src/options.go	/^func nextInt(args []string, i *int, message string) int {$/;"	f	package:fzf	typeref:typename:int
nextString	autoload/plugged/fzf/src/options.go	/^func nextString(args []string, i *int, message string) string {$/;"	f	package:fzf	typeref:typename:string
nh	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
nhe	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
nie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
nim#init	autoload/plugged/vim-polyglot/autoload/nim.vim	/^fun! nim#init() abort$/;"	f
nim_highlight_builtins	autoload/plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_builtins     = 1$/;"	v
nim_highlight_builtins	autoload/plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_builtins = 1$/;"	v
nim_highlight_exceptions	autoload/plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_exceptions   = 1$/;"	v
nim_highlight_exceptions	autoload/plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_exceptions = 1$/;"	v
nim_highlight_numbers	autoload/plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_numbers      = 1$/;"	v
nim_highlight_numbers	autoload/plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_numbers = 1$/;"	v
nim_highlight_space_errors	autoload/plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_space_errors = 1$/;"	v
nim_highlight_special_vars	autoload/plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_special_vars = 1$/;"	v
nj	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
nl	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
nne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
noInfoLine	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) noInfoLine() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
node	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:OW.s.c
node	autoload/plugged/coc.nvim/package.json	/^    "node": ">=8.10.0"$/;"	s	object:engines
node	autoload/plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*node[[:space:]]*[\\'|\\"]*([a-zA-Z0-9_\\.\\-]+)[\\'|\\"]*\/\\1\/n,/;"	k	langdef:puppet
nodeFolder	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	G	class:tp
node_	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:OW.s.c
normal	autoload/plugged/fzf/src/tui/tcell.go	/^	normal      ColorPair$/;"	m	struct:tui.TcellWindow	typeref:typename:ColorPair
normalize	autoload/plugged/fzf/src/pattern.go	/^	normalize     bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
normalize	autoload/plugged/fzf/src/pattern.go	/^	normalize     bool$/;"	m	struct:fzf.term	typeref:typename:bool
normalizeRune	autoload/plugged/fzf/src/algo/algo.go	/^func normalizeRune(r rune) rune {$/;"	f	package:algo	typeref:typename:rune
normalized	autoload/plugged/fzf/src/algo/normalize.go	/^var normalized map[rune]rune = map[rune]rune{$/;"	v	package:algo	typeref:typename:map[rune]rune
notification.highlightGroup	autoload/plugged/coc.nvim/data/schema.json	/^    "notification.highlightGroup": {$/;"	o	object:properties
notification.marginRight	autoload/plugged/coc.nvim/data/schema.json	/^    "notification.marginRight": {$/;"	o	object:properties
notification.marginTop	autoload/plugged/coc.nvim/data/schema.json	/^    "notification.marginTop": {$/;"	o	object:properties
notification.maxHeight	autoload/plugged/coc.nvim/data/schema.json	/^    "notification.maxHeight": {$/;"	o	object:properties
notification.maxWidth	autoload/plugged/coc.nvim/data/schema.json	/^    "notification.maxWidth": {$/;"	o	object:properties
notification.minProgressWidth	autoload/plugged/coc.nvim/data/schema.json	/^    "notification.minProgressWidth": {$/;"	o	object:properties
notifyOnCont	autoload/plugged/fzf/src/terminal_unix.go	/^func notifyOnCont(resizeChan chan<- os.Signal) {$/;"	f	package:fzf
notifyOnCont	autoload/plugged/fzf/src/terminal_windows.go	/^func notifyOnCont(resizeChan chan<- os.Signal) {$/;"	f	package:fzf
notifyOnResize	autoload/plugged/fzf/src/terminal_unix.go	/^func notifyOnResize(resizeChan chan<- os.Signal) {$/;"	f	package:fzf
notifyOnResize	autoload/plugged/fzf/src/terminal_windows.go	/^func notifyOnResize(resizeChan chan<- os.Signal) {$/;"	f	package:fzf
notifyStop	autoload/plugged/fzf/src/terminal_unix.go	/^func notifyStop(p *os.Process) {$/;"	f	package:fzf
notifyStop	autoload/plugged/fzf/src/terminal_windows.go	/^func notifyStop(p *os.Process) {$/;"	f	package:fzf
npm.binPath	autoload/plugged/coc.nvim/data/schema.json	/^    "npm.binPath": {$/;"	o	object:properties
nqc_minlines	autoload/plugged/vim-polyglot/syntax/nqc.vim	/^    let nqc_minlines = 15	    " mostly for () constructs$/;"	v
nqc_minlines	autoload/plugged/vim-polyglot/syntax/nqc.vim	/^    let nqc_minlines = 50	    " #if 0 constructs can be long$/;"	v
nr	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
ns	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
nse	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
nth	autoload/plugged/fzf/src/pattern.go	/^	nth           []Range$/;"	m	struct:fzf.Pattern	typeref:typename:[]Range
nu	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	v
numLines	autoload/plugged/fzf/src/terminal.go	/^	numLines int$/;"	m	struct:fzf.previewed	typeref:typename:int
numPartitionsMultiplier	autoload/plugged/fzf/src/constants.go	/^	numPartitionsMultiplier = 8$/;"	c	package:fzf
number	autoload/plugged/fzf/src/terminal.go	/^	number        bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
numbers	autoload/plugged/coc.nvim/bin/check.js	/^let numbers = parts.map(function (s) {$/;"	v
nve	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
nvim	autoload/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[c],!0),await e./;"	G	class:Vj
nvim	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	G	class:e0
nw	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
nwe	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
ny	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	f
o	autoload/plug.vim	/^      nmap <buffer> o <plug>(plug-preview)$/;"	m
o	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f	function:AnonymousFunctionb66688921f500
o	autoload/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[c],!0),await e./;"	c
o	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionb666889210e00
o	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	c	class:AnonymousFunctionb666889210100.e
o	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	c	class:AnonymousFunctionb666889210300.e
o	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	c	class:AnonymousFunctionb6668892e100.e
o	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	c	class:AnonymousFunctionb6668892e300.e
o	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	c	class:r.getTextEditChange
o	autoload/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),ss("Output buffer: %o",e.outputData[0].data))/;"	f	function:$ve
o	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
o	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889228a00
o	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb66688922b600
o	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	c	class:AnonymousFunctionb666889221c00
o	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	c	class:CD.show
o	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:AnonymousFunctionb66688923400
o	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:VY
o	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
o	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:yR.k
o	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
o	autoload/plugged/coc.nvim/build/index.js	/^`+(d.tokens?this.parseInline(d.tokens):d.text);i+=t?this.renderer.paragraph(p):p;continue}defaul/;"	f	function:Re
o	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:AnonymousFunctionb66688929c00
o	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:fie
o	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	c
o	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f	function:$D
o	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f	function:BD
o	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
o	autoload/plugged/coc.nvim/build/index.js	/^`}get document(){return new Promise((e,t)=>{this.nvim.buffer.then(i=>{let n=i.id;if(this.bufnr=n/;"	v
o	autoload/plugged/coc.nvim/build/index.js	/^augroup end`;try{let o=Fe.default.join(process.env.TMPDIR,`coc.nvim-${process.pid}`);St.default./;"	c
o	autoload/plugged/coc.nvim/build/index.js	/^augroup end`;try{let o=Fe.default.join(process.env.TMPDIR,`coc.nvim-${process.pid}`);St.default./;"	v
o	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:TY
o	autoload/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <buffer> o <cr><c-w><c-w>$/;"	m
o	autoload/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> o    :call <sid>open(0)<cr>$/;"	m
o	autoload/plugged/gv.vim/plugin/gv.vim	/^  xnoremap <buffer> o :call <sid>gld()<cr>$/;"	m
o	autoload/plugged/gv.vim/plugin/gv.vim	/^  xnoremap <silent> <buffer> o    :<c-u>call <sid>open(1)<cr>$/;"	m
o$	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
o0	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get lineCount(){return this.lines.length+(this.eol?1:0)}getText(e){if(e){let t=this.offset/;"	c
o1	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	v
o2	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
o3	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
o6	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	v
o7	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
oI	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
oM	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
oN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
oO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
oP	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
oQ	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
oR	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
oT	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
oU	autoload/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(o):i+=Ql(o)+n+Ql(l)+F0}),e.section&&i.length&&(i="["+Ql(e.secti/;"	f
oV	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
oa	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	c
ob	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	v
objects	autoload/plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy)[ \\t]*)*(private[^ ]*|protected)?/;"	k	langdef:scala
ode	autoload/plugged/coc.nvim/build/index.js	/^`),a++,u=i,s=14;switch(x){case 123:return i++,s=1;case 125:return i++,s=2;case 91:return i++,s=3/;"	f
oee	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
off	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:AnonymousFunctionb66688929c00.t
offset	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:BD.i
offset	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:b3.w
offset	autoload/plugged/fzf/src/ansi.go	/^	offset [2]int32$/;"	m	struct:fzf.ansiOffset	typeref:typename:[2]int32
offset	autoload/plugged/fzf/src/result.go	/^	offset [2]int32$/;"	m	struct:fzf.colorOffset	typeref:typename:[2]int32
offset	autoload/plugged/fzf/src/terminal.go	/^	offset       int$/;"	m	struct:fzf.Terminal	typeref:typename:int
offset	autoload/plugged/fzf/src/terminal.go	/^	offset     int$/;"	m	struct:fzf.previewer	typeref:typename:int
offset	autoload/plugged/fzf/src/terminal.go	/^	offset   int$/;"	m	struct:fzf.previewed	typeref:typename:int
offset	autoload/plugged/fzf/src/terminal.go	/^	offset  int$/;"	m	struct:fzf.previewResult	typeref:typename:int
offsetAt	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	m	class:r
offsetAt	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:r
offsetAt	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get lineCount(){return this.lines.length+(this.eol?1:0)}getText(e){if(e){let t=this.offset/;"	m	class:i0
offsetComponentRegex	autoload/plugged/fzf/src/terminal.go	/^var offsetComponentRegex *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
offsetPollTries	autoload/plugged/fzf/src/tui/light.go	/^	offsetPollTries = 10$/;"	c	package:tui
offsetRegexp	autoload/plugged/fzf/src/tui/light.go	/^var offsetRegexp *regexp.Regexp = regexp.MustCompile("(.*)\\x1b\\\\[([0-9]+);([0-9]+)R")$/;"	v	package:tui	typeref:typename:*regexp.Regexp
offsetRegexpBegin	autoload/plugged/fzf/src/tui/light.go	/^var offsetRegexpBegin *regexp.Regexp = regexp.MustCompile("^\\x1b\\\\[[0-9]+;[0-9]+R")$/;"	v	package:tui	typeref:typename:*regexp.Regexp
offsetTrimCharsRegex	autoload/plugged/fzf/src/terminal.go	/^var offsetTrimCharsRegex *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
offsetX	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	p	class:yD.createPopup.l
og	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
oh	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
ohe	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	f
oie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
oj	autoload/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:s}}function oj(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	f
ok	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	v
ol	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
oldUri	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892e200.e.s
old_syntax	autoload/plugged/vim-polyglot/after/syntax/haskell.vim	/^let old_syntax = b:current_syntax$/;"	v
on	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	m	class:mq
on	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:AnonymousFunctionb66688929c00.t
onArrayBegin	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:BD.s
onArrayBegin	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:y3.a
onArrayEnd	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:BD.s
onArrayEnd	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:y3.a
onChange	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:d0
onChange	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	m	class:_0
onChange	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	m	class:o0
onError	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:BD.s
onError	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:y3.a
onInputChar	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:SD
onLiteralValue	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:BD.s
onLiteralValue	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:y3.a
onObjectBegin	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:BD.s
onObjectBegin	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:y3.a
onObjectEnd	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:BD.s
onObjectEnd	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:y3.a
onObjectProperty	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:BD.s
onObjectProperty	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:y3.a
onSeparator	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:BD.s
once	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:AnonymousFunctionb66688929c00.t
one	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
oneOf	autoload/plugged/coc.nvim/data/schema.json	/^          "oneOf": [$/;"	a	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$
oneline_comments	autoload/plugged/vim-polyglot/syntax/spup.vim	/^    let oneline_comments = 2$/;"	v
open	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e
open	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e
open	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	p	class:AnonymousFunctionb66688921a100.i
open	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	p	class:AnonymousFunctionb66688921a200.n
openLocalConfig	autoload/plugged/coc.nvim/build/index.js	/^`)],!0)}async runTerminalCommand(e,t,i=!1){return t=t||b.cwd,await this.nvim.callAsync("coc#util/;"	m	class:Vj
openTerminal	autoload/plugged/coc.nvim/build/index.js	/^`)],!0)}async runTerminalCommand(e,t,i=!1){return t=t||b.cwd,await this.nvim.callAsync("coc#util/;"	m	class:Vj
openTtyIn	autoload/plugged/fzf/src/tui/light_unix.go	/^func openTtyIn() *os.File {$/;"	f	package:tui	typeref:typename:*os.File
openTtyIn	autoload/plugged/fzf/src/tui/light_windows.go	/^func openTtyIn() *os.File {$/;"	f	package:tui	typeref:typename:*os.File
operator	autoload/plugged/coc.nvim/data/schema.json	/^        "operator": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
opt	~./config/nvim/plugged/gruvbox/package.json	/^    "opt": true$/;"	b	object:vim
optString	autoload/plugged/fzf/src/options.go	/^func optString(arg string, prefixes ...string) (bool, string) {$/;"	f	package:fzf	typeref:typename:(bool, string)
optionalNextString	autoload/plugged/fzf/src/options.go	/^func optionalNextString(args []string, i *int) (bool, string) {$/;"	f	package:fzf	typeref:typename:(bool, string)
optionalNumeric	autoload/plugged/fzf/src/options.go	/^func optionalNumeric(args []string, i *int, defaultValue int) int {$/;"	f	package:fzf	typeref:typename:int
optionalRunes	autoload/plugged/fzf/src/util/chars.go	/^func (chars *Chars) optionalRunes() []rune {$/;"	f	struct:util.Chars	typeref:typename:[]rune
opts.sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! opts.sink(lines)$/;"	f
opts.sink	autoload/plugged/fzf/plugin/fzf.vim	/^    function! opts.sink(lines) abort$/;"	f
optsFor	autoload/plugged/fzf/src/options_test.go	/^func optsFor(words ...string) *Options {$/;"	f	package:fzf	typeref:typename:*Options
origState	autoload/plugged/fzf/src/tui/light.go	/^	origState     *term.State$/;"	m	struct:tui.LightRenderer	typeref:typename:*term.State
origStateInput	autoload/plugged/fzf/src/tui/light.go	/^	origStateInput  uint32$/;"	m	struct:tui.LightRenderer	typeref:typename:uint32
origStateOutput	autoload/plugged/fzf/src/tui/light.go	/^	origStateOutput uint32$/;"	m	struct:tui.LightRenderer	typeref:typename:uint32
origText	autoload/plugged/fzf/src/item.go	/^	origText    *[]byte       \/\/ 8$/;"	m	struct:fzf.Item	typeref:typename:*[]byte
origin	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) origin() {$/;"	f	struct:tui.LightRenderer
os	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
ose	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
ote	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
ou	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	v
outHandle	autoload/plugged/fzf/src/tui/light.go	/^	outHandle       uintptr$/;"	m	struct:tui.LightRenderer	typeref:typename:uintptr
output	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) output() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
overflow	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) overflow(runes []rune, max int) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
overflow32	autoload/plugged/fzf/src/util/chars.go	/^	overflow32 uint32 = 0x80808080$/;"	c	package:util	typeref:typename:uint32
overflow64	autoload/plugged/fzf/src/util/chars.go	/^	overflow64 uint64 = 0x8080808080808080$/;"	c	package:util	typeref:typename:uint64
override	autoload/plugged/fzf/src/history.go	/^func (h *History) override(str string) {$/;"	f	struct:fzf.History
ow	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
owe	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
p	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	v
p	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	c
p	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889228a00.o
p	autoload/plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Nf.prototype.render;Nf.prototype.toString=function(){var r=""/;"	f	function:AnonymousFunctionb66688921aa00
p	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
p	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:yR.k
p	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:zf
p	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
p	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:AnonymousFunctionb66688929c00
p	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:TY.t
p0	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	c
p1	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	v
p3	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
p5	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
pD	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	f
pF	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
pL	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
pN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
pO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
pR	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
pU	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	v
pX	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
pZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
packages	autoload/plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*package[ \\t]+([a-zA-Z0-9_.]+)\/\\1\/p,packages\/$/;"	k	langdef:scala
padding	autoload/plugged/fzf/src/terminal.go	/^	padding      [4]sizeSpec$/;"	m	struct:fzf.Terminal	typeref:typename:[4]sizeSpec
pal	autoload/plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let pal = g:airline#themes#dark_minimal#palette$/;"	v
palenight#GetColors	autoload/plugged/palenight.vim/autoload/palenight.vim	/^function! palenight#GetColors()$/;"	f
palenight#set_highlight	autoload/plugged/palenight.vim/colors/palenight.vim	/^function! palenight#set_highlight(group, style)$/;"	f
paragraph	autoload/plugged/coc.nvim/build/index.js	/^`+hD+t(e)}checkbox(e){return"["+(e?"X":" ")+"] "}paragraph(e){return e=this.compose(this.o.parag/;"	m	class:FB
paragraph	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
parent	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:zfe.r
parent	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:OW.s.c
parent	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:BD.i
parse	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f	function:r
parse	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	m	class:AnonymousFunctionb66688923400.t
parseAlgo	autoload/plugged/fzf/src/options.go	/^func parseAlgo(str string) algo.Algo {$/;"	f	package:fzf	typeref:typename:algo.Algo
parseAnsiCode	autoload/plugged/fzf/src/ansi.go	/^func parseAnsiCode(s string) (int, string) {$/;"	f	package:fzf	typeref:typename:(int, string)
parseBorder	autoload/plugged/fzf/src/options.go	/^func parseBorder(str string, optional bool) tui.BorderShape {$/;"	f	package:fzf	typeref:typename:tui.BorderShape
parseContentFromFile	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:ta
parseHeight	autoload/plugged/fzf/src/options.go	/^func parseHeight(str string) sizeSpec {$/;"	f	package:fzf	typeref:typename:sizeSpec
parseInfoStyle	autoload/plugged/fzf/src/options.go	/^func parseInfoStyle(str string) infoStyle {$/;"	f	package:fzf	typeref:typename:infoStyle
parseKeyChords	autoload/plugged/fzf/src/options.go	/^func parseKeyChords(str string, message string) map[tui.Event]string {$/;"	f	package:fzf	typeref:typename:map[tui.Event]string
parseKeymap	autoload/plugged/fzf/src/options.go	/^func parseKeymap(keymap map[tui.Event][]action, str string) {$/;"	f	package:fzf
parseLayout	autoload/plugged/fzf/src/options.go	/^func parseLayout(str string) layoutType {$/;"	f	package:fzf	typeref:typename:layoutType
parseMargin	autoload/plugged/fzf/src/options.go	/^func parseMargin(opt string, margin string) [4]sizeSpec {$/;"	f	package:fzf	typeref:typename:[4]sizeSpec
parseOptions	autoload/plugged/fzf/src/options.go	/^func parseOptions(opts *Options, allArgs []string) {$/;"	f	package:fzf
parsePlaceholder	autoload/plugged/fzf/src/terminal.go	/^func parsePlaceholder(match string) (bool, string, placeholderFlags) {$/;"	f	package:fzf	typeref:typename:(bool, string, placeholderFlags)
parsePreviewWindow	autoload/plugged/fzf/src/options.go	/^func parsePreviewWindow(opts *previewOpts, input string) {$/;"	f	package:fzf
parsePrompt	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) parsePrompt(prompt string) (func(), int) {$/;"	f	struct:fzf.Terminal	typeref:typename:(func(), int)
parseSize	autoload/plugged/fzf/src/options.go	/^func parseSize(str string, maxPercent float64, label string) sizeSpec {$/;"	f	package:fzf	typeref:typename:sizeSpec
parseTerms	autoload/plugged/fzf/src/pattern.go	/^func parseTerms(fuzzy bool, caseMode Case, normalize bool, str string) []termSet {$/;"	f	package:fzf	typeref:typename:[]termSet
parseTheme	autoload/plugged/fzf/src/options.go	/^func parseTheme(defaultTheme *tui.ColorTheme, str string) *tui.ColorTheme {$/;"	f	package:fzf	typeref:typename:*tui.ColorTheme
parseTiebreak	autoload/plugged/fzf/src/options.go	/^func parseTiebreak(str string) []criterion {$/;"	f	package:fzf	typeref:typename:[]criterion
parseToggleSort	autoload/plugged/fzf/src/options.go	/^func parseToggleSort(keymap map[tui.Event][]action, str string) {$/;"	f	package:fzf
parse_remote	autoload/plugged/vim-polyglot/scripts/build	/^def parse_remote(remote)$/;"	f
parsed	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:AnonymousFunctionb66688922ae00.t
partialResult	autoload/plugged/fzf/src/matcher.go	/^type partialResult struct {$/;"	s	package:fzf
partitions	autoload/plugged/fzf/src/matcher.go	/^	partitions     int$/;"	m	struct:fzf.Matcher	typeref:typename:int
parts	autoload/plugged/coc.nvim/bin/check.js	/^let parts = version.split('.')$/;"	v
paste	autoload/plugged/fzf/test/test_go.rb	/^  def paste(str)$/;"	f	class:Tmux
patchChange	autoload/plugged/coc.nvim/build/index.js	/^`),s=ij(this.lines,o),a=await this.mutex.acquire();try{let l=await this.nvim.call("coc#util#set_/;"	m	class:o0
path	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:OW.s.c
path	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	p	class:jU.e
path	autoload/plugged/fzf/src/history.go	/^	path     string$/;"	m	struct:fzf.History	typeref:typename:string
path	autoload/plugged/vim-polyglot/ftplugin/awk.vim	/^  let path = substitute(path, ':', ',', 'g')$/;"	v
path	autoload/plugged/vim-polyglot/ftplugin/awk.vim	/^  let path = substitute(path, '^\\.\\=:\\|:\\.\\=$\\|:\\.\\=:', ',,', 'g') " POSIX cwd$/;"	v
path	autoload/plugged/vim-polyglot/ftplugin/awk.vim	/^  let path = system("gawk 'BEGIN { printf ENVIRON[\\"AWKPATH\\"] }'")$/;"	v
pathlist	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^    let pathlist = sort(glob($LOCALAPPDATA . '\\Julia-*\\bin\\julia.exe', 1, 1))$/;"	v
pathname	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	p	class:jU.e
pattern	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:AnonymousFunctionb66688922aa00.u
pattern	autoload/plugged/coc.nvim/data/schema.json	/^      "pattern": "^https?:\/\/([^:]*(:[^@]*)?@)?([^:]+|\\\\[[:0-9a-fA-F]+\\\\])(:\\\\d+)?\/?$|^$/;"	s	object:properties.http.proxy
pattern	autoload/plugged/fzf/src/matcher.go	/^	pattern    *Pattern$/;"	m	struct:fzf.MatchRequest	typeref:typename:*Pattern
pattern	autoload/plugged/fzf/src/merger.go	/^	pattern *Pattern$/;"	m	struct:fzf.Merger	typeref:typename:*Pattern
patternBuilder	autoload/plugged/fzf/src/matcher.go	/^	patternBuilder func([]rune) *Pattern$/;"	m	struct:fzf.Matcher	typeref:typename:func([]rune) *Pattern
patternProperties	autoload/plugged/coc.nvim/data/schema.json	/^      "patternProperties": {$/;"	o	object:properties.languageserver
pattern_to_condition	autoload/plugged/vim-polyglot/scripts/build	/^def pattern_to_condition(rule)$/;"	f	method:copy_file
patterns_to_vim_patterns	autoload/plugged/vim-polyglot/scripts/build	/^def patterns_to_vim_patterns(patterns)$/;"	f
paused	autoload/plugged/fzf/src/terminal.go	/^	paused       bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
pborder	autoload/plugged/fzf/src/terminal.go	/^	pborder      tui.Window$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Window
pc	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
pd	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
peek	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:d
percent	autoload/plugged/fzf/src/options.go	/^	percent bool$/;"	m	struct:fzf.sizeSpec	typeref:typename:bool
perlpath	autoload/plugged/vim-polyglot/ftplugin/perl.vim	/^	    let perlpath = system("perl -e 'print join(q\/,\/,@INC)'")$/;"	v
perlpath	autoload/plugged/vim-polyglot/ftplugin/perl.vim	/^	    let perlpath = system('perl -e "print join(q\/,\/,@INC)"')$/;"	v
perlpath	autoload/plugged/vim-polyglot/ftplugin/perl.vim	/^	let perlpath = ".,,"$/;"	v
perlpath	autoload/plugged/vim-polyglot/ftplugin/perl.vim	/^	let perlpath = substitute(perlpath,',.$',',,','')$/;"	v
pfe	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
pg	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
ph	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	v
php_folding	autoload/plugged/vim-polyglot/syntax/php.vim	/^  let php_folding = 0$/;"	v
php_html_in_heredoc	autoload/plugged/vim-polyglot/syntax/php.vim	/^    let php_html_in_heredoc=1$/;"	v
php_html_in_heredoc	autoload/plugged/vim-polyglot/syntax/php.vim	/^  let php_html_in_heredoc=0$/;"	v
php_html_in_nowdoc	autoload/plugged/vim-polyglot/syntax/php.vim	/^    let php_html_in_nowdoc=1$/;"	v
php_html_in_nowdoc	autoload/plugged/vim-polyglot/syntax/php.vim	/^  let php_html_in_nowdoc=0$/;"	v
php_html_in_strings	autoload/plugged/vim-polyglot/syntax/php.vim	/^  let php_html_in_strings=0$/;"	v
php_html_load	autoload/plugged/vim-polyglot/syntax/php.vim	/^  let php_html_load=1$/;"	v
php_phpdoc_folding	autoload/plugged/vim-polyglot/syntax/php.vim	/^  let php_phpdoc_folding = 0$/;"	v
php_sql_heredoc	autoload/plugged/vim-polyglot/syntax/php.vim	/^  let php_sql_heredoc=1$/;"	v
php_sql_nowdoc	autoload/plugged/vim-polyglot/syntax/php.vim	/^  let php_sql_nowdoc=1$/;"	v
php_sync_method	autoload/plugged/vim-polyglot/syntax/php.vim	/^    let php_sync_method=-1$/;"	v
php_sync_method	autoload/plugged/vim-polyglot/syntax/php.vim	/^    let php_sync_method=php_minlines$/;"	v
php_xml_heredoc	autoload/plugged/vim-polyglot/syntax/php.vim	/^  let php_xml_heredoc=0$/;"	v
php_xml_nowdoc	autoload/plugged/vim-polyglot/syntax/php.vim	/^  let php_xml_nowdoc=0$/;"	v
phrasing_elements	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let phrasing_elements = ['a', 'em', 'strong', 'small', 'mark', 'abbr', 'dfn', 'i', 'b', 'u', 'co/;"	v
pie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
placeCursor	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) placeCursor() {$/;"	f	struct:fzf.Terminal
placeholder	autoload/plugged/fzf/src/terminal.go	/^var placeholder *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
placeholderFlags	autoload/plugged/fzf/src/terminal.go	/^type placeholderFlags struct {$/;"	s	package:fzf
plug#	autoload/plug.vim	/^function! plug#(repo, ...)$/;"	f
plug#begin	autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	autoload/plug.vim	/^function! plug#load(...)$/;"	f
plug#shellescape	autoload/plug.vim	/^function! plug#shellescape(arg, ...)$/;"	f
plugin	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    augroup plugin-xtabline$/;"	a
plugin	autoload/plugged/vim-polyglot/ftplugin/crystal.vim	/^augroup plugin-ft-crystal$/;"	a
plus	autoload/plugged/fzf/src/terminal.go	/^	plus          bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
pm	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
po	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
pointer	autoload/plugged/fzf/src/terminal.go	/^	pointer      string$/;"	m	struct:fzf.Terminal	typeref:typename:string
pointerEmpty	autoload/plugged/fzf/src/terminal.go	/^	pointerEmpty string$/;"	m	struct:fzf.Terminal	typeref:typename:string
pointerLen	autoload/plugged/fzf/src/terminal.go	/^	pointerLen   int$/;"	m	struct:fzf.Terminal	typeref:typename:int
points	autoload/plugged/fzf/src/result.go	/^	points [4]uint16$/;"	m	struct:fzf.Result	typeref:typename:[4]uint16
polyglot	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^  augroup polyglot-observer$/;"	a
polyglot	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^  augroup polyglot-sleuth$/;"	a
polyglot	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^augroup polyglot-observer | augroup END$/;"	a
polyglot	autoload/plugged/vim-polyglot/plugin/polyglot.vim	/^    augroup polyglot-sensible$/;"	a
polyglot#detect#Asa	autoload/plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Asa(...)$/;"	f
polyglot#detect#Asp	autoload/plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Asp(...)$/;"	f
polyglot#detect#Bas	autoload/plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Bas(...)$/;"	f
polyglot#detect#Fs	autoload/plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Fs(...)$/;"	f
polyglot#detect#H	autoload/plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#H(...)$/;"	f
polyglot#detect#Html	autoload/plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Html(...)$/;"	f
polyglot#detect#Idr	autoload/plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Idr(...)$/;"	f
polyglot#detect#Inp	autoload/plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Inp(...)$/;"	f
polyglot#detect#Lidr	autoload/plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Lidr(...)$/;"	f
polyglot#detect#M	autoload/plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#M(...)$/;"	f
polyglot#detect#Pl	autoload/plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Pl(...)$/;"	f
polyglot#detect#Pm	autoload/plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Pm(...)$/;"	f
polyglot#detect#Re	autoload/plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Re(...)$/;"	f
polyglot#detect#T	autoload/plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#T(...)$/;"	f
polyglot#detect#Tt2	autoload/plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Tt2(...)$/;"	f
polyglot#ft#BindzoneCheck	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#BindzoneCheck(default)$/;"	f
polyglot#ft#CSH	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#CSH()$/;"	f
polyglot#ft#Check_inp	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#Check_inp()$/;"	f
polyglot#ft#DtraceCheck	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#DtraceCheck()$/;"	f
polyglot#ft#EuphoriaCheck	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#EuphoriaCheck()$/;"	f
polyglot#ft#FTRules	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTRules()$/;"	f
polyglot#ft#FTVB	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTVB(alt)$/;"	f
polyglot#ft#FTasm	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTasm()$/;"	f
polyglot#ft#FTasmsyntax	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTasmsyntax()$/;"	f
polyglot#ft#FTbtm	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTbtm()$/;"	f
polyglot#ft#FTchange	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTchange()$/;"	f
polyglot#ft#FTe	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTe()$/;"	f
polyglot#ft#FTent	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTent()$/;"	f
polyglot#ft#FTheader	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTheader()$/;"	f
polyglot#ft#FThtml	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FThtml()$/;"	f
polyglot#ft#FTidl	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTidl()$/;"	f
polyglot#ft#FTinc	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTinc()$/;"	f
polyglot#ft#FTlpc	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTlpc()$/;"	f
polyglot#ft#FTm	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTm()$/;"	f
polyglot#ft#FTmm	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTmm()$/;"	f
polyglot#ft#FTmms	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTmms()$/;"	f
polyglot#ft#FTnroff	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTnroff()$/;"	f
polyglot#ft#FTperl	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTperl()$/;"	f
polyglot#ft#FTpl	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTpl()$/;"	f
polyglot#ft#FTpp	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTpp()$/;"	f
polyglot#ft#FTprogress_asm	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTprogress_asm()$/;"	f
polyglot#ft#FTprogress_cweb	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTprogress_cweb()$/;"	f
polyglot#ft#FTprogress_pascal	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTprogress_pascal()$/;"	f
polyglot#ft#FTr	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTr()$/;"	f
polyglot#ft#FTtex	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTtex()$/;"	f
polyglot#ft#FTxml	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTxml()$/;"	f
polyglot#ft#FTy	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTy()$/;"	f
polyglot#ft#McSetf	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#McSetf()$/;"	f
polyglot#ft#ProtoCheck	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#ProtoCheck(default)$/;"	f
polyglot#ft#Redif	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#Redif()$/;"	f
polyglot#ft#SQL	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#SQL()$/;"	f
polyglot#ft#SetFileTypeSH	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#SetFileTypeSH(name)$/;"	f
polyglot#ft#SetFileTypeShell	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#SetFileTypeShell(name)$/;"	f
polyglot#init#init	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! polyglot#init#init()$/;"	f
polyglot#init#is_disabled	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! polyglot#init#is_disabled(caller, name, path)$/;"	f
polyglot#shebang#Detect	autoload/plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^func! polyglot#shebang#Detect()$/;"	f
polyglot#shebang#VimDetect	autoload/plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^func! polyglot#shebang#VimDetect()$/;"	f
polyglot#sleuth#GlobForFiletype	autoload/plugged/vim-polyglot/autoload/polyglot/sleuth.vim	/^func! polyglot#sleuth#GlobForFiletype(type)$/;"	f
pony	autoload/plugged/vim-polyglot/indent/pony.vim	/^augroup pony$/;"	a
pony#ClearTrailingSpace	autoload/plugged/vim-polyglot/autoload/pony.vim	/^function! pony#ClearTrailingSpace(all, alt, ...)$/;"	f
pony#Indent	autoload/plugged/vim-polyglot/autoload/pony.vim	/^function! pony#Indent()$/;"	f
pop	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:r
port	autoload/plugged/coc.nvim/data/schema.json	/^        "port": {$/;"	o	object:definitions.languageServerSocket.properties
posArray	autoload/plugged/fzf/src/algo/algo.go	/^func posArray(withPos bool, len int) *[]int {$/;"	f	package:algo	typeref:typename:*[]int
posDown	autoload/plugged/fzf/src/options.go	/^	posDown$/;"	c	package:fzf
posLeft	autoload/plugged/fzf/src/options.go	/^	posLeft$/;"	c	package:fzf
posRight	autoload/plugged/fzf/src/options.go	/^	posRight$/;"	c	package:fzf
posUp	autoload/plugged/fzf/src/options.go	/^	posUp windowPosition = iota$/;"	c	package:fzf	typeref:type:windowPosition
position	autoload/plugged/fzf/src/options.go	/^	position    windowPosition$/;"	m	struct:fzf.previewOpts	typeref:typename:windowPosition
positionAt	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	m	class:r
positionAt	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:r
positionAt	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get lineCount(){return this.lines.length+(this.eol?1:0)}getText(e){if(e){let t=this.offset/;"	m	class:i0
post	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:OW.s.c
postProcessOptions	autoload/plugged/fzf/src/options.go	/^func postProcessOptions(opts *Options) {$/;"	f	package:fzf
postscr_level	autoload/plugged/vim-polyglot/syntax/postscr.vim	/^  let postscr_level = 2$/;"	v
posx	autoload/plugged/fzf/src/tui/light.go	/^	posx     int$/;"	m	struct:tui.LightWindow	typeref:typename:int
posy	autoload/plugged/fzf/src/tui/light.go	/^	posy     int$/;"	m	struct:tui.LightWindow	typeref:typename:int
ppe	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	f
ppwiz_highlight_defs	autoload/plugged/vim-polyglot/syntax/ppwiz.vim	/^    let ppwiz_highlight_defs = 1$/;"	v
ppwiz_with_html	autoload/plugged/vim-polyglot/syntax/ppwiz.vim	/^    let ppwiz_with_html = 1$/;"	v
pq	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	f
pr	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
pre	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
pre	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:OW.s.c
preferTop	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	p	class:yD.createPopup.l
prefixLength	autoload/plugged/fzf/src/tokenizer.go	/^	prefixLength int32$/;"	m	struct:fzf.Token	typeref:typename:int32
prepare	autoload/plugged/fzf/test/test_go.rb	/^  def prepare$/;"	f	class:Tmux
preserveSpace	autoload/plugged/fzf/src/terminal.go	/^	preserveSpace bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
pressed	autoload/plugged/fzf/src/terminal.go	/^	pressed      string$/;"	m	struct:fzf.Terminal	typeref:typename:string
prevDownTime	autoload/plugged/fzf/src/tui/light.go	/^	prevDownTime  time.Time$/;"	m	struct:tui.LightRenderer	typeref:typename:time.Time
prevDownTime	autoload/plugged/fzf/src/tui/tui.go	/^	prevDownTime time.Time$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:time.Time
prevLines	autoload/plugged/fzf/src/terminal.go	/^	prevLines    []itemLine$/;"	m	struct:fzf.Terminal	typeref:typename:[]itemLine
preview	autoload/plugged/fzf/src/tui/light.go	/^	preview  bool$/;"	m	struct:tui.LightWindow	typeref:typename:bool
preview	autoload/plugged/fzf/src/tui/tcell.go	/^	preview     bool$/;"	m	struct:tui.TcellWindow	typeref:typename:bool
previewBox	autoload/plugged/fzf/src/terminal.go	/^	previewBox   *util.EventBox$/;"	m	struct:fzf.Terminal	typeref:typename:*util.EventBox
previewCancelWait	autoload/plugged/fzf/src/constants.go	/^	previewCancelWait = 500 * time.Millisecond$/;"	c	package:fzf
previewChunkDelay	autoload/plugged/fzf/src/constants.go	/^	previewChunkDelay = 100 * time.Millisecond$/;"	c	package:fzf
previewDelayed	autoload/plugged/fzf/src/constants.go	/^	previewDelayed    = 500 * time.Millisecond$/;"	c	package:fzf
previewOpts	autoload/plugged/fzf/src/options.go	/^type previewOpts struct {$/;"	s	package:fzf
previewOpts	autoload/plugged/fzf/src/terminal.go	/^	previewOpts  previewOpts$/;"	m	struct:fzf.Terminal	typeref:typename:previewOpts
previewRequest	autoload/plugged/fzf/src/terminal.go	/^type previewRequest struct {$/;"	s	package:fzf
previewResult	autoload/plugged/fzf/src/terminal.go	/^type previewResult struct {$/;"	s	package:fzf
previewed	autoload/plugged/fzf/src/terminal.go	/^	previewed    previewed$/;"	m	struct:fzf.Terminal	typeref:typename:previewed
previewed	autoload/plugged/fzf/src/terminal.go	/^type previewed struct {$/;"	s	package:fzf
previewer	autoload/plugged/fzf/src/terminal.go	/^	previewer    previewer$/;"	m	struct:fzf.Terminal	typeref:typename:previewer
previewer	autoload/plugged/fzf/src/terminal.go	/^type previewer struct {$/;"	s	package:fzf
previewwindow	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	G	class:o0
previous	autoload/plugged/fzf/src/history.go	/^func (h *History) previous() string {$/;"	f	struct:fzf.History	typeref:typename:string
printAll	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) printAll() {$/;"	f	struct:fzf.Terminal
printHeader	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) printHeader() {$/;"	f	struct:fzf.Terminal
printHighlighted	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) printHighlighted(result Result, colBase tui.ColorPair, colMatch tui.ColorPair/;"	f	struct:fzf.Terminal	typeref:typename:int
printInfo	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) printInfo() {$/;"	f	struct:fzf.Terminal
printItem	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) printItem(result Result, line int, i int, current bool) {$/;"	f	struct:fzf.Terminal
printList	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) printList() {$/;"	f	struct:fzf.Terminal
printPreview	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) printPreview() {$/;"	f	struct:fzf.Terminal
printPreviewDelayed	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) printPreviewDelayed() {$/;"	f	struct:fzf.Terminal
printPrompt	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) printPrompt() {$/;"	f	struct:fzf.Terminal
printQuery	autoload/plugged/fzf/src/terminal.go	/^	printQuery   bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
printString	autoload/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) printString(text string, pair ColorPair) {$/;"	f	struct:tui.TcellWindow
print_and	autoload/plugged/vim-polyglot/scripts/build	/^def print_and(list)$/;"	f	method:copy_file.rules_to_code.rule_to_code
print_pattern	autoload/plugged/vim-polyglot/scripts/import_vim	/^def print_pattern(p)$/;"	f
printer	autoload/plugged/fzf/src/terminal.go	/^	printer      func(string)$/;"	m	struct:fzf.Terminal	typeref:typename:func(string)
printsep	autoload/plugged/fzf/src/terminal.go	/^	printsep     string$/;"	m	struct:fzf.Terminal	typeref:typename:string
prior_isk	autoload/plugged/vim-polyglot/syntax/rst.vim	/^    let prior_isk = &l:iskeyword$/;"	v
priority	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	p	class:ID.createStatusBarItem.n
procFun	autoload/plugged/fzf/src/pattern.go	/^	procFun       map[termType]algo.Algo$/;"	m	struct:fzf.Pattern	typeref:typename:map[termType]algo.Algo
processId	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	G	class:p0
processTabs	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) processTabs(runes []rune, prefixWidth int) (string, int) {$/;"	f	struct:fzf.Terminal	typeref:typename:(string, int)
process_list	autoload/plugged/vim-polyglot/scripts/build	/^def process_list(list, extras)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
progress	autoload/plugged/fzf/src/terminal.go	/^	progress     int$/;"	m	struct:fzf.Terminal	typeref:typename:int
progress	autoload/plugged/vim-polyglot/scripts/build	/^def progress$/;"	f	method:copy_file
progressMinDuration	autoload/plugged/fzf/src/constants.go	/^	progressMinDuration     = 200 * time.Millisecond$/;"	c	package:fzf
progressOnInitialization	autoload/plugged/coc.nvim/data/schema.json	/^        "progressOnInitialization": {$/;"	o	object:definitions.languageServerBase.properties
progressOnInitialization	autoload/plugged/coc.nvim/data/schema.json	/^        "progressOnInitialization": {},$/;"	o	object:definitions.languageServerCommand.properties
progressOnInitialization	autoload/plugged/coc.nvim/data/schema.json	/^        "progressOnInitialization": {},$/;"	o	object:definitions.languageServerModule.properties
progressOnInitialization	autoload/plugged/coc.nvim/data/schema.json	/^        "progressOnInitialization": {},$/;"	o	object:definitions.languageServerSocket.properties
projects	autoload/plugged/coc.nvim/package.json	/^    "projects": [$/;"	a	object:jest
prompt	autoload/plugged/fzf/src/terminal.go	/^	prompt       func()$/;"	m	struct:fzf.Terminal	typeref:typename:func()
promptLen	autoload/plugged/fzf/src/terminal.go	/^	promptLen    int$/;"	m	struct:fzf.Terminal	typeref:typename:int
properties	autoload/plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerBase
properties	autoload/plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerCommand
properties	autoload/plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerModule
properties	autoload/plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerSocket
properties	autoload/plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:properties.suggest.completionItemKindLabels
properties	autoload/plugged/coc.nvim/data/schema.json	/^  "properties": {$/;"	o
property	autoload/plugged/coc.nvim/data/schema.json	/^        "property": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
protector	autoload/plugged/fzf/src/protector/protector.go	/^package protector$/;"	p
protector	autoload/plugged/fzf/src/protector/protector_openbsd.go	/^package protector$/;"	p
protocol	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	G	class:AnonymousFunctionb66688922d400.e
protocol	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	S	class:AnonymousFunctionb66688922d400.e
protocol	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	p	class:jU.e
pte	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
pumAlignTop	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	p	class:yD.createPopup.l
puppet	autoload/plugged/vim-polyglot/ctags/puppet.ctags	/^--langdef=puppet$/;"	l
puppet	autoload/plugged/vim-polyglot/ctags/puppet_u.ctags	/^--langdef=puppet$/;"	l
puppet#align#AlignHashrockets	autoload/plugged/vim-polyglot/autoload/puppet/align.vim	/^function! puppet#align#AlignHashrockets(...) abort$/;"	f
puppet#align#IndentLevel	autoload/plugged/vim-polyglot/autoload/puppet/align.vim	/^function! puppet#align#IndentLevel(lnum)$/;"	f
puppet#align#LinesInBlock	autoload/plugged/vim-polyglot/autoload/puppet/align.vim	/^function! puppet#align#LinesInBlock(lnum)$/;"	f
puppet#ctags#OptionFile	autoload/plugged/vim-polyglot/autoload/puppet/ctags.vim	/^function! puppet#ctags#OptionFile()$/;"	f
puppet#ctags#Type	autoload/plugged/vim-polyglot/autoload/puppet/ctags.vim	/^function! puppet#ctags#Type()$/;"	f
puppet#format#Fallback	autoload/plugged/vim-polyglot/autoload/puppet/format.vim	/^function! puppet#format#Fallback(start_lnum, end_lnum) abort$/;"	f
puppet#format#Format	autoload/plugged/vim-polyglot/autoload/puppet/format.vim	/^function! puppet#format#Format() abort$/;"	f
puppet#format#Hashrocket	autoload/plugged/vim-polyglot/autoload/puppet/format.vim	/^function! puppet#format#Hashrocket(start_lnum, end_lnum) abort$/;"	f
puppet#format#Indention	autoload/plugged/vim-polyglot/autoload/puppet/format.vim	/^function! puppet#format#Indention(start_lnum, end_lnum) abort$/;"	f
push	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:r0
push	autoload/plugged/fzf/src/chunklist.go	/^func (c *Chunk) push(trans ItemBuilder, data []byte) bool {$/;"	f	struct:fzf.Chunk	typeref:typename:bool
pusher	autoload/plugged/fzf/src/reader.go	/^	pusher   func([]byte) bool$/;"	m	struct:fzf.Reader	typeref:typename:func([]byte) bool
pw	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
pwindow	autoload/plugged/fzf/src/terminal.go	/^	pwindow      tui.Window$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Window
pwindow	autoload/plugged/fzf/src/terminal.go	/^	pwindow  tui.Window$/;"	m	struct:fzf.previewRequest	typeref:typename:tui.Window
py	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
python#utils#fix_qflist	autoload/plugged/vim-polyglot/autoload/python/utils.vim	/^function! python#utils#fix_qflist() " {{{$/;"	f
python.linting.pylintEnabled	coc-settings.json	/^  "python.linting.pylintEnabled": true,$/;"	b
q	autoload/plug.vim	/^  nnoremap <silent> <buffer> q :call <SID>close_pane()<cr>$/;"	m
q	autoload/plug.vim	/^  nnoremap <silent> <buffer> q :q<cr>$/;"	m
q	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
q	autoload/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <buffer> q :tabclose<cr>$/;"	m
q	autoload/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> q    :$wincmd w <bar> close<cr>$/;"	m
q	autoload/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> q :close<cr>$/;"	m
q	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> q    :<C-U>echoerr "fugitive: q is removed in favor of gq (or/;"	m
q	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> q :echoerr "fugitive: q removed in favor of gq (or :q)"<CR>$/;"	m
q	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^  nnoremap <silent> <buffer> q <c-w><c-p>@=winnr('#')<cr><c-w>c$/;"	m
q	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^  nnoremap <buffer> <silent> q :hide<CR>$/;"	m
q	autoload/plugged/vim-polyglot/ftplugin/gitcommit.vim	/^  nnoremap <buffer> <silent> q :q<CR>$/;"	m
q	autoload/plugged/vim-polyglot/ftplugin/ls.vim	/^    nnoremap <buffer> <silent> q :hide<CR>$/;"	m
qB	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	v
qD	autoload/plugged/coc.nvim/build/index.js	/^`),a++,u=i,s=14;switch(x){case 123:return i++,s=1;case 125:return i++,s=2;case 91:return i++,s=3/;"	f
qF	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
qL	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
qN	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
qO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
qP	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
qQ	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
qW	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
qZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
q_	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
qb	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
qc	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
qe	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	f
qf	autoload/plugged/coc.nvim/build/index.js	/^`)}function _pe(r,e,t){return r=r.trim(),r=e?Npe(r,t):Lpe(r,t),r}function qf(r){return r+`$/;"	f
qi	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
qj	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
ql	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	f
qle	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
qm	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	v
qne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
qpe	autoload/plugged/coc.nvim/build/index.js	/^`}function qpe(r){return r.replace(Spe,":")}function IB(r,e=null){if(!r)return[];e=e||Ki;let t=e/;"	f
qre	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
qs	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
qse	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
qt	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
qte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
query	autoload/plugged/fzf/src/terminal.go	/^	query         bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
queryCache	autoload/plugged/fzf/src/cache.go	/^type queryCache map[string][]Result$/;"	t	package:fzf	typeref:typename:map[string][]Result
queryCacheMax	autoload/plugged/fzf/src/constants.go	/^	queryCacheMax int = chunkSize \/ 5$/;"	c	package:fzf	typeref:typename:int
queryLen	autoload/plugged/fzf/src/terminal.go	/^	queryLen     [2]int$/;"	m	struct:fzf.Terminal	typeref:typename:[2]int
queryLen	autoload/plugged/fzf/src/terminal.go	/^	queryLen int$/;"	m	struct:fzf.itemLine	typeref:typename:int
queued	autoload/plugged/fzf/src/tui/light.go	/^	queued        string$/;"	m	struct:tui.LightRenderer	typeref:typename:string
quoteEntry	autoload/plugged/fzf/src/terminal.go	/^func quoteEntry(entry string) string {$/;"	f	package:fzf	typeref:typename:string
quoteEntryCmd	autoload/plugged/fzf/src/terminal.go	/^func quoteEntryCmd(entry string) string {$/;"	f	package:fzf	typeref:typename:string
qw	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
r	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	c	class:zfe
r	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f	function:$
r	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f	function:Ale
r	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	c
r	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	c	class:AnonymousFunctionb6668892e600
r	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	c	class:AnonymousFunctionb6668892e700
r	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	g
r	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:yR.k
r	autoload/plugged/coc.nvim/build/index.js	/^`,"\\r"],Dx;(function(r){function e(o,s,a,l){return new Lse(o,s,a,l)}r.create=e;function t(o){va/;"	c	class:AnonymousFunctionb666889210900
r	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	c	class:v3
r	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c	class:rne
r	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:ine
r$	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
r0	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	c
r3	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
r9	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	v
rB	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	v
rE	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
rI	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
rIe	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
rL	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
rO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
rQ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
rX	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
rZ	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
randResult	autoload/plugged/fzf/src/merger_test.go	/^func randResult() Result {$/;"	f	package:fzf	typeref:typename:Result
range	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb666889210300.e.o
range	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892dd00.e.u
range	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892fb00.e.n
range	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892fe00.e.a.location
range	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892ff00.e.u
range	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	p	class:p
rangeEllipsis	autoload/plugged/fzf/src/tokenizer.go	/^const rangeEllipsis = 0$/;"	c	package:fzf
rbe	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
rde	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
rdfa_attributes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let rdfa_attributes = {'about': [], 'content': [], 'datatype': [], 'prefix': [], 'profile': /;"	v
rdfa_attributes_value	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let rdfa_attributes_value = {$/;"	v
read	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:r
readFiles	autoload/plugged/fzf/src/reader.go	/^func (r *Reader) readFiles() bool {$/;"	f	struct:fzf.Reader	typeref:typename:bool
readFromCommand	autoload/plugged/fzf/src/reader.go	/^func (r *Reader) readFromCommand(shell *string, command string) bool {$/;"	f	struct:fzf.Reader	typeref:typename:bool
readFromStdin	autoload/plugged/fzf/src/reader.go	/^func (r *Reader) readFromStdin() bool {$/;"	f	struct:fzf.Reader	typeref:typename:bool
readerBufferSize	autoload/plugged/fzf/src/constants.go	/^	readerBufferSize       = 64 * 1024$/;"	c	package:fzf
readerPollIntervalMax	autoload/plugged/fzf/src/constants.go	/^	readerPollIntervalMax  = 50 * time.Millisecond$/;"	c	package:fzf
readerPollIntervalMin	autoload/plugged/fzf/src/constants.go	/^	readerPollIntervalMin  = 10 * time.Millisecond$/;"	c	package:fzf
readerPollIntervalStep	autoload/plugged/fzf/src/constants.go	/^	readerPollIntervalStep = 5 * time.Millisecond$/;"	c	package:fzf
reading	autoload/plugged/fzf/src/terminal.go	/^	reading      bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
readline	autoload/plugged/coc.nvim/bin/prompt.js	/^const readline = require("readline")$/;"	C
readonce	autoload/plugged/fzf/test/test_go.rb	/^  def readonce$/;"	f	class:TestBase
reason	autoload/plugged/coc.nvim/build/index.js	/^augroup end`;try{let o=Fe.default.join(process.env.TMPDIR,`coc.nvim-${process.pid}`);St.default./;"	p	class:o
reconcile	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^    augroup reconcile$/;"	a
reconcile	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^  augroup reconcile$/;"	a
red	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.color
red	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.color
redBright	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.color
redBright	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.color
redraw	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) redraw() {$/;"	f	struct:fzf.Terminal
refactor.afterContext	autoload/plugged/coc.nvim/data/schema.json	/^    "refactor.afterContext": {$/;"	o	object:properties
refactor.beforeContext	autoload/plugged/coc.nvim/data/schema.json	/^    "refactor.beforeContext": {$/;"	o	object:properties
refactor.openCommand	autoload/plugged/coc.nvim/data/schema.json	/^    "refactor.openCommand": {$/;"	o	object:properties
refactor.saveToFile	autoload/plugged/coc.nvim/data/schema.json	/^    "refactor.saveToFile": {$/;"	o	object:properties
reference	autoload/plugged/coc.nvim/data/schema.json	/^        "reference": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
referrerpolicy	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let referrerpolicy = ['no-referrer', 'no-referrer-when-downgrade', 'same-origin', 'origin', 'str/;"	v
refresh	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) refresh() {$/;"	f	struct:fzf.Terminal
refreshAle	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	m	class:_0
refreshScrollbar	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:DD
regex	autoload/plugged/fzf/src/tokenizer.go	/^	regex *regexp.Regexp$/;"	m	struct:fzf.Delimiter	typeref:typename:*regexp.Regexp
regex_extra	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^                let regex_extra = '\\\\w*'$/;"	v
regex_extra	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^        let regex_extra = ''$/;"	v
relationship_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let relationship_attributes = {$/;"	v
release	autoload/plugged/fzf/Makefile	/^release:$/;"	t
relrev	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let relrev = ['chapter', 'contents', 'copyright', 'first', 'glossary', 'help', 'icon', 'inde/;"	v
remove	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8")}async remove(e){let t=await this.load(),i=t.indexOf(e);i!==-1&&(t.splice(i,1),Uo.defa/;"	m	class:l0
remove	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:OW.s.c
remove	autoload/plugged/fzf/uninstall	/^remove() {$/;"	f
removeValue	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:Fr
remove_line	autoload/plugged/fzf/uninstall	/^remove_line() {$/;"	f
renameFile	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	m	class:r
renderPreviewArea	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) renderPreviewArea(unchanged bool) {$/;"	f	struct:fzf.Terminal
renderPreviewSpinner	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) renderPreviewSpinner() {$/;"	f	struct:fzf.Terminal
renderPreviewText	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) renderPreviewText(height int, lines []string, lineNo int, unchanged bool) {$/;"	f	struct:fzf.Terminal
renderer	autoload/plugged/fzf/src/tui/light.go	/^	renderer *LightRenderer$/;"	m	struct:tui.LightWindow	typeref:typename:*LightRenderer
repeat	autoload/plugged/fzf/src/tui/light.go	/^func repeat(r rune, times int) string {$/;"	f	package:tui	typeref:typename:string
replace	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	p	class:pfe.t
replace	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	m	class:r
replacePlaceholder	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) replacePlaceholder(template string, forcePlus bool, input string, list []*Ite/;"	f	struct:fzf.Terminal	typeref:typename:string
replacePlaceholder	autoload/plugged/fzf/src/terminal.go	/^func replacePlaceholder(template string, stripAnsi bool, delimiter Delimiter, printsep string, f/;"	f	package:fzf	typeref:typename:string
repository	autoload/plugged/coc.nvim/package.json	/^  "repository": {$/;"	o
repository	~./config/nvim/plugged/gruvbox/package.json	/^  "repository": "git@github.com:morhetz\/gruvbox.git",$/;"	s
reqBox	autoload/plugged/fzf/src/matcher.go	/^	reqBox         *util.EventBox$/;"	m	struct:fzf.Matcher	typeref:typename:*util.EventBox
reqBox	autoload/plugged/fzf/src/terminal.go	/^	reqBox       *util.EventBox$/;"	m	struct:fzf.Terminal	typeref:typename:*util.EventBox
reqClose	autoload/plugged/fzf/src/terminal.go	/^	reqClose$/;"	c	package:fzf
reqHeader	autoload/plugged/fzf/src/terminal.go	/^	reqHeader$/;"	c	package:fzf
reqInfo	autoload/plugged/fzf/src/terminal.go	/^	reqInfo$/;"	c	package:fzf
reqJump	autoload/plugged/fzf/src/terminal.go	/^	reqJump$/;"	c	package:fzf
reqList	autoload/plugged/fzf/src/terminal.go	/^	reqList$/;"	c	package:fzf
reqPreviewDelayed	autoload/plugged/fzf/src/terminal.go	/^	reqPreviewDelayed$/;"	c	package:fzf
reqPreviewDisplay	autoload/plugged/fzf/src/terminal.go	/^	reqPreviewDisplay$/;"	c	package:fzf
reqPreviewEnqueue	autoload/plugged/fzf/src/terminal.go	/^	reqPreviewEnqueue$/;"	c	package:fzf
reqPreviewRefresh	autoload/plugged/fzf/src/terminal.go	/^	reqPreviewRefresh$/;"	c	package:fzf
reqPrintQuery	autoload/plugged/fzf/src/terminal.go	/^	reqPrintQuery$/;"	c	package:fzf
reqPrompt	autoload/plugged/fzf/src/terminal.go	/^	reqPrompt util.EventType = iota$/;"	c	package:fzf	typeref:typename:util.EventType
reqQuit	autoload/plugged/fzf/src/terminal.go	/^	reqQuit$/;"	c	package:fzf
reqRedraw	autoload/plugged/fzf/src/terminal.go	/^	reqRedraw$/;"	c	package:fzf
reqRefresh	autoload/plugged/fzf/src/terminal.go	/^	reqRefresh$/;"	c	package:fzf
reqReinit	autoload/plugged/fzf/src/terminal.go	/^	reqReinit$/;"	c	package:fzf
reqReset	autoload/plugged/fzf/src/matcher.go	/^	reqReset$/;"	c	package:fzf
reqRetry	autoload/plugged/fzf/src/matcher.go	/^	reqRetry util.EventType = iota$/;"	c	package:fzf	typeref:typename:util.EventType
request	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f	function:s
requestInput	autoload/plugged/coc.nvim/build/index.js	/^`)],!0)}async runTerminalCommand(e,t,i=!1){return t=t||b.cwd,await this.nvim.callAsync("coc#util/;"	m	class:Vj
requireRootPattern	autoload/plugged/coc.nvim/data/schema.json	/^        "requireRootPattern": {$/;"	o	object:definitions.languageServerBase.properties
requireRootPattern	autoload/plugged/coc.nvim/data/schema.json	/^        "requireRootPattern": {},$/;"	o	object:definitions.languageServerCommand.properties
requireRootPattern	autoload/plugged/coc.nvim/data/schema.json	/^        "requireRootPattern": {},$/;"	o	object:definitions.languageServerModule.properties
requireRootPattern	autoload/plugged/coc.nvim/data/schema.json	/^        "requireRootPattern": {},$/;"	o	object:definitions.languageServerSocket.properties
required	autoload/plugged/coc.nvim/data/schema.json	/^      "required": ["command", "filetypes"],$/;"	a	object:definitions.languageServerCommand
required	autoload/plugged/coc.nvim/data/schema.json	/^      "required": ["module", "filetypes"],$/;"	a	object:definitions.languageServerModule
required	autoload/plugged/coc.nvim/data/schema.json	/^      "required": ["port", "filetypes"],$/;"	a	object:definitions.languageServerSocket
requiredExtraSize	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:AnonymousFunctionb66688922aa00.u
reset	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.modifier
reset	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:d0
reset	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.modifier
resizeWindows	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) resizeWindows() {$/;"	f	struct:fzf.Terminal
resolveModule	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:tp
resource	autoload/plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*[~|\\-]?>?[[:space:]]*([a-z][a-zA-Z0-9_:]+)[[:space:]]*\\{ *(.*):\//;"	k	langdef:puppet
restart	autoload/plugged/fzf/src/reader.go	/^func (r *Reader) restart(command string) {$/;"	f	struct:fzf.Reader
restoreTerminal	autoload/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) restoreTerminal() {$/;"	f	unknown:tui.LightRenderer
restoreTerminal	autoload/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) restoreTerminal() error {$/;"	f	unknown:tui.LightRenderer	typeref:typename:error
result	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	p	class:Ed.te.Zt
result	autoload/plugged/fzf/src/terminal.go	/^	result   Result$/;"	m	struct:fzf.itemLine	typeref:typename:Result
revealOutputChannelOn	autoload/plugged/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {$/;"	o	object:definitions.languageServerBase.properties
revealOutputChannelOn	autoload/plugged/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {},$/;"	o	object:definitions.languageServerCommand.properties
revealOutputChannelOn	autoload/plugged/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {},$/;"	o	object:definitions.languageServerModule.properties
revealOutputChannelOn	autoload/plugged/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {},$/;"	o	object:definitions.languageServerSocket.properties
reverseStringArray	autoload/plugged/fzf/src/terminal.go	/^func reverseStringArray(input []string) []string {$/;"	f	package:fzf	typeref:typename:[]string
revision	autoload/plugged/fzf/main.go	/^var revision string = "devel"$/;"	v	package:main	typeref:typename:string
revive	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f	function:r
rg	autoload/plugged/coc.nvim/build/index.js	/^`);e=Zi.Position.create(e.line-o,e.character),t=Zi.Position.create(t.line-o,t.character);let l=k/;"	f
rgb	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:e.bgColor.ansi16m
rgb	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:e.color.ansi16m
rhe	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
rhubarb	autoload/plugged/vim-rhubarb/plugin/rhubarb.vim	/^augroup rhubarb$/;"	a
rhubarb#Complete	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#Complete(findstart, base) abort$/;"	f
rhubarb#FugitiveUrl	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#FugitiveUrl(...) abort$/;"	f
rhubarb#HomepageForUrl	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#HomepageForUrl(url) abort$/;"	f
rhubarb#JsonDecode	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#JsonDecode(string) abort$/;"	f
rhubarb#JsonEncode	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#JsonEncode(object) abort$/;"	f
rhubarb#RepoRequest	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#RepoRequest(...) abort$/;"	f
rhubarb#RepoSearch	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#RepoSearch(type, q) abort$/;"	f
rhubarb#Request	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#Request(path, ...) abort$/;"	f
rhubarb#fugitive_url	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#fugitive_url(...) abort$/;"	f
rhubarb#homepage_for_url	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#homepage_for_url(url) abort$/;"	f
rhubarb#omnifunc	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#omnifunc(findstart, base) abort$/;"	f
rhubarb#repo_request	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#repo_request(...) abort$/;"	f
rhubarb#repo_search	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#repo_search(...) abort$/;"	f
rhubarb#request	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#request(...) abort$/;"	f
rhubarb.vim	autoload/plugged/vim-rhubarb/README.markdown	/^# rhubarb.vim$/;"	c
rie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
rl	autoload/plugged/coc.nvim/bin/prompt.js	/^const rl = readline.createInterface({$/;"	C
rmcup	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) rmcup() {$/;"	f	struct:tui.LightRenderer
rne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(role, dpub_role)$/;"	v
role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(role, graphic_role)$/;"	v
role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(role, landmark_role)$/;"	v
role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(widget_role, document_structure)$/;"	v
role	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(role, dpub_role)$/;"	v
role	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(role, landmark_role)$/;"	v
role	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(widget_role, document_structure)$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes = {}$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['alert'] = role_attributes['region']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['alertdialog'] = role_attributes['alert'] + role_attributes['dialog']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['application'] = abstract_role['landmark'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['article'] = role_attributes['document'] + role_attributes['region'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['banner'] = abstract_role['landmark'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['button'] = role_attributes['region'] + role_attributes['menuitemcheckbox']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['cell'] = abstract_role['section'] + ['aria-colindex', 'aria-colspan', 'aria/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['checkbox'] = abstract_role['input'] + ['aria-checked'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['columnheader'] = role_attributes['gridcell'] + abstract_role['sectionhead']/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['combobox'] = abstract_role['select'] + ['aria-expanded', 'aria-required'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['complementary'] = abstract_role['landmark'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['contentinfo'] = abstract_role['landmark'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['default'] = abstract_role['roletype']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['definition'] = abstract_role['section'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['dialog'] = abstract_role['window']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['directory'] = role_attributes['list'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['document'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['feed'] = role_attributes['list']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['figure'] = abstract_role['section'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['form'] = abstract_role['landmark'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['grid'] = abstract_role['composite'] + role_attributes['region'] + ['aria-le/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['gridcell'] = abstract_role['section'] + abstract_role['widget']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['group'] = abstract_role['section']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['heading'] = abstract_role['sectionhead'] + ['aria-level'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['img'] = abstract_role['section'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['link'] = abstract_role['widget'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['list'] = role_attributes['region'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['listbox'] = role_attributes['list'] + abstract_role['select'] + ['aria-mult/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['listitem'] = abstract_role['section']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['log'] = role_attributes['region'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['main'] = abstract_role['landmark'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['marquee'] = role_attributes['region'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['math'] = abstract_role['section'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menu'] =  role_attributes['list'] + abstract_role['select'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menubar'] = role_attributes['menu'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitem'] = abstract_role['input'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitemcheckbox'] = role_attributes['menuitem'] + role_attributes['checkbo/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitemradio'] = role_attributes['menuitemcheckbox'] + role_attributes['ra/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['navigation'] = abstract_role['landmark'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['none'] = role_attributes['presentation']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['note'] = abstract_role['section'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['option'] = abstract_role['input'] + ['aria-checked', 'aria-posinset', 'aria/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['presentation'] = abstract_role['structure']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['progressbar'] = abstract_role['widget'] + ['aria-valuemax', 'aria-valuemin'/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['radio'] = role_attributes['checkbox'] + role_attributes['option']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['radiogroup'] = abstract_role['select'] + ['aria-required']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['region'] = abstract_role['section']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['row'] = role_attributes['group'] + ['aria-level', 'aria-selected']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['rowheader'] = role_attributes['gridcell'] + abstract_role['sectionhead']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['scrollbar'] = abstract_role['range'] + ['aria-controls', 'aria-orientation'/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['search'] = abstract_role['landmark']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['searchbox'] = role_attributes['textbox']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['separator'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['slider'] = abstract_role['range'] + ['aria-valuemax', 'aria-valuemin', 'ari/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['spinbutton'] = abstract_role['composite'] + abstract_role['range'] + ['aria/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['status'] = abstract_role['composite'] + role_attributes['region']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['switch'] = role_attributes['checkbox']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tab'] = abstract_role['sectionhead'] + abstract_role['widget'] + ['aria-sel/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['table'] = abstract_role['section'] + ['aria-colcount', 'aria-rowcount']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tablist'] = abstract_role['composite'] + role_attributes['directory']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tabpanel'] = role_attributes['region']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['term'] = abstract_role['section']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['textbox'] = abstract_role['input'] + ['aria-autocomplete', 'aria-multiline'/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['timer'] = role_attributes['status'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['toolbar'] = role_attributes['group'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tooltip'] = abstract_role['section'] $/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tree'] = abstract_role['select'] + ['aria-multiselectable', 'aria-required'/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['treegrid'] = role_attributes['grid'] + role_attributes['tree']$/;"	v
role_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['treeitem'] = role_attributes['listitem'] + role_attributes['option']$/;"	v
rootPatterns	autoload/plugged/coc.nvim/data/schema.json	/^        "rootPatterns": {$/;"	o	object:definitions.languageServerBase.properties
rootPatterns	autoload/plugged/coc.nvim/data/schema.json	/^        "rootPatterns": {},$/;"	o	object:definitions.languageServerCommand.properties
rootPatterns	autoload/plugged/coc.nvim/data/schema.json	/^        "rootPatterns": {},$/;"	o	object:definitions.languageServerModule.properties
rootPatterns	autoload/plugged/coc.nvim/data/schema.json	/^        "rootPatterns": {},$/;"	o	object:definitions.languageServerSocket.properties
rooter	autoload/plugged/vim-rooter/plugin/rooter.vim	/^augroup rooter$/;"	a
rpe	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
rre	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
rte	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
ru	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
rubout	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) rubout(pattern string) {$/;"	f	struct:fzf.Terminal
ruby_minlines	autoload/plugged/vim-polyglot/syntax/ruby.vim	/^    let ruby_minlines = 500$/;"	v
rubycomplete#Complete	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Init	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
rue	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
rule_to_code	autoload/plugged/vim-polyglot/scripts/build	/^def rule_to_code(rule)$/;"	f	method:copy_file.rules_to_code
rules_to_code	autoload/plugged/vim-polyglot/scripts/build	/^def rules_to_code(rules)$/;"	f	method:copy_file
runTerminalCommand	autoload/plugged/coc.nvim/build/index.js	/^`)],!0)}async runTerminalCommand(e,t,i=!1){return t=t||b.cwd,await this.nvim.callAsync("coc#util/;"	m	class:Vj
run_script	autoload/plugged/vim-polyglot/scripts/test	/^def run_script(src)$/;"	f
run_vimscript	autoload/plugged/vim-polyglot/scripts/test	/^def run_vimscript(src)$/;"	f
running	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	G	class:f0
running	autoload/plugged/fzf/src/terminal.go	/^	running      bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
runtime	autoload/plugged/coc.nvim/data/schema.json	/^        "runtime": {$/;"	o	object:definitions.languageServerModule.properties
rust	autoload/plugged/vim-polyglot/after/syntax/rust.vim	/^    augroup rust.vim.after$/;"	a
rust	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^    augroup rust.vim.DelimitMate$/;"	a
rust	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^augroup rust.vim.PreWrite$/;"	a
rust#AppendCmdLine	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! rust#AppendCmdLine(text)$/;"	f
rust#CompleteExpand	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! rust#CompleteExpand(lead, line, pos)$/;"	f
rust#Emit	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Emit(type, args)$/;"	f
rust#Expand	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Expand(bang, args)$/;"	f
rust#GetConfigVar	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! rust#GetConfigVar(name, default)$/;"	f
rust#IncludeExpr	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! rust#IncludeExpr(fname) abort$/;"	f
rust#Jump	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Jump(mode, function) range$/;"	f
rust#Load	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Load()$/;"	f
rust#Play	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Play(count, line1, line2, ...) abort$/;"	f
rust#Run	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Run(bang, args)$/;"	f
rust#Test	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Test(mods, winsize, all, options) abort$/;"	f
rust#debugging#Info	autoload/plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! rust#debugging#Info() abort$/;"	f
rust#debugging#InfoToClipboard	autoload/plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! rust#debugging#InfoToClipboard() abort$/;"	f
rust#debugging#InfoToFile	autoload/plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! rust#debugging#InfoToFile(filename) abort$/;"	f
rust#delimitmate#onMap	autoload/plugged/vim-polyglot/autoload/rust/delimitmate.vim	/^function! rust#delimitmate#onMap() abort$/;"	f
rust#delimitmate#onUnmap	autoload/plugged/vim-polyglot/autoload/rust/delimitmate.vim	/^function! rust#delimitmate#onUnmap() abort$/;"	f
rust#tags#IsUCtags	autoload/plugged/vim-polyglot/autoload/rust/tags.vim	/^function! rust#tags#IsUCtags() abort$/;"	f
rustfmt#Cmd	autoload/plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#Cmd()$/;"	f
rustfmt#DetectVersion	autoload/plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#DetectVersion()$/;"	f
rustfmt#Format	autoload/plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#Format()$/;"	f
rustfmt#FormatRange	autoload/plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#FormatRange(line1, line2)$/;"	f
rustfmt#Load	autoload/plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#Load()$/;"	f
rustfmt#PreWrite	autoload/plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#PreWrite()$/;"	f
rwe	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
s	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f	function:AnonymousFunctionb666889236400
s	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionb666889210e00
s	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	c	class:AnonymousFunctionb666889210200.e
s	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	c	class:AnonymousFunctionb6668892e200.e
s	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	c	class:AnonymousFunctionb6668892f900.e
s	autoload/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),ss("Output buffer: %o",e.outputData[0].data))/;"	f	function:$ve
s	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
s	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:OW
s	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:AnonymousFunctionb666889225e00.AnonymousFunctionb666889225f00
s	autoload/plugged/coc.nvim/build/index.js	/^`)],!0)}async runTerminalCommand(e,t,i=!1){return t=t||b.cwd,await this.nvim.callAsync("coc#util/;"	v
s	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	c	class:AnonymousFunctionb666889223f00
s	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:AnonymousFunctionb66688923400
s	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
s	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:yR.k
s	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
s	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Xie
s	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:fie
s	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	c	class:BD
s	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f	function:y3
s	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
s	autoload/plugged/coc.nvim/build/index.js	/^`;function AI(r,e){if(On.existsSync(r))return;let t=On.openSync(r,e.flags,e.mode);On.closeSync(t/;"	f	function:dee
s	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f	function:uee
s	autoload/plugged/coc.nvim/build/index.js	/^augroup end`;try{let o=Fe.default.join(process.env.TMPDIR,`coc.nvim-${process.pid}`);St.default./;"	v
s	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:AnonymousFunctionb66688922300.AnonymousFunctionb66688922400
s	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:AnonymousFunctionb66688922500.AnonymousFunctionb66688922600
s	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:TY
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['asdf', 'func'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['conditional'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['hi'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['paste'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['text', 'raw', 'func'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['whitespace'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'aaaa', 'raw'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'raw'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['text', 'text'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['%t', 'asdf', '%{getcwd()}'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['ffenc','%{strftime("%H:%M")}'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['raw', '%f'])$/;"	v
s	autoload/plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['text', 'text'])$/;"	v
s	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^	 let s = escape(s, '\/\\*^$.~[]')$/;"	v
s	autoload/plugged/vim-polyglot/syntax/xpm.vim	/^   let s = matchstr(getline(i), '".\\{-1,}"')$/;"	v
s	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^	let s = escape(s, '\/\\*^$.~[]')$/;"	v
s	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^	let s = substitute(s, "[ \\t][ \\t]*", "\\\\\\\\s\\\\\\\\+", "g")$/;"	v
s	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^      let s = matchstr(s, "^[^\\!]*")$/;"	v
s	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^    let s = getline(i)$/;"	v
s0	autoload/plugged/coc.nvim/build/index.js	/^`);e=Zi.Position.create(e.line-o,e.character),t=Zi.Position.create(t.line-o,t.character);let l=k/;"	c
s3	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
s7	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
s:Accents	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^   fun! s:Accents(chr,...)$/;"	f
s:AccessModifier	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:AccessModifier(cline_info) abort$/;"	f
s:AdaBlockStart	autoload/plugged/vim-polyglot/indent/ada.vim	/^   let s:AdaBlockStart = '^\\s*\\(if\\>\\|while\\>\\|else\\>\\|elsif\\>\\|loop\\>\\|for\\>.*\\<\\/;"	v
s:Add	autoload/plugged/vim-polyglot/syntax/cucumber.vim	/^function! s:Add(name)$/;"	f
s:AddAnsiGroups	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:AddAnsiGroups() abort$/;"	f
s:AddBlockTag	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:AddBlockTag(tag, id, ...)$/;"	f
s:AddBlockTag	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:AddBlockTag(tag, id, ...)$/;"	f
s:AddHeader	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AddHeader(key, value) abort$/;"	f
s:AddITags	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:AddITags(tags, taglist)$/;"	f
s:AddITags	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:AddITags(tags, taglist)$/;"	f
s:AddSection	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AddSection(label, lines, ...) abort$/;"	f
s:AfterAccessModifier	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterAccessModifier(pline_info) abort$/;"	f
s:AfterBlockOpening	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterBlockOpening(pline_info) abort$/;"	f
s:AfterEndKeyword	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterEndKeyword(pline_info) abort$/;"	f
s:AfterHangingSplat	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterHangingSplat(pline_info) abort$/;"	f
s:AfterIndentKeyword	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterIndentKeyword(pline_info) abort$/;"	f
s:AfterLeadingOperator	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterLeadingOperator(pline_info) abort$/;"	f
s:AfterUnbalancedBracket	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterUnbalancedBracket(pline_info) abort$/;"	f
s:Alien2	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:Alien2()$/;"	f
s:Alien2	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:Alien2()$/;"	f
s:Alien3	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:Alien3()$/;"	f
s:Alien3	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:Alien3()$/;"	f
s:Alien4	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:Alien4()$/;"	f
s:Alien4	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:Alien4()$/;"	f
s:Alien5	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:Alien5()$/;"	f
s:Alien5	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:Alien5()$/;"	f
s:Alien6	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:Alien6()$/;"	f
s:Alien6	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:Alien6()$/;"	f
s:AlternatePair	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function s:AlternatePair()$/;"	f
s:ArgSplit	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ArgSplit(string) abort$/;"	f
s:AskPassArgs	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AskPassArgs(dir) abort$/;"	f
s:AsyncRequest	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:AsyncRequest(name, args) abort$/;"	f
s:Autocmd	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:Autocmd(...) abort$/;"	f
s:BB	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:BB = [s:gui_termfg, s:gui_termbg, s:cterm_termfg, s:cterm_termbg] " Branch and file format/;"	v
s:BB	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:BB = [s:gui_termfg, s:gui_termbg, s:cterm_termfg, s:cterm_termbg] " Branch and file format/;"	v
s:BB	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:BB = [s:gui_termfg, s:gui_termbg, s:cterm_termfg, s:cterm_termbg]$/;"	v
s:BEGIN_BLOCK	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK = s:BEGIN_BLOCK_KEYWORD . '\\|' . s:COMPOUND_EXPRESSION$/;"	v
s:BEGIN_BLOCK_KEYWORD	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK_KEYWORD = '\\C^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:BEGIN_BLOCK_OP	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK_OP = '[([{:=]$'$/;"	v
s:BG	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:BG     = s:BLACK$/;"	v
s:BG	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:BG     = s:WHITE$/;"	v
s:BLACK	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:BLACK  = '#000000'$/;"	v
s:BLACK	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:BLACK  = '#000000'$/;"	v
s:BLUE	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:BLUE   = '#4285F4'$/;"	v
s:BLUE	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:BLUE   = '#4285F4'$/;"	v
s:BMAdd	autoload/plugged/vim-polyglot/extras/menu.vim	/^func s:BMAdd()$/;"	f
s:BMCanAdd	autoload/plugged/vim-polyglot/extras/menu.vim	/^func s:BMCanAdd(name, num)$/;"	f
s:BMFilename	autoload/plugged/vim-polyglot/extras/menu.vim	/^func s:BMFilename(name, num)$/;"	f
s:BMHash	autoload/plugged/vim-polyglot/extras/menu.vim	/^func s:BMHash(name)$/;"	f
s:BMHash2	autoload/plugged/vim-polyglot/extras/menu.vim	/^func s:BMHash2(name)$/;"	f
s:BMMunge	autoload/plugged/vim-polyglot/extras/menu.vim	/^func s:BMMunge(fname, bnum)$/;"	f
s:BMRemove	autoload/plugged/vim-polyglot/extras/menu.vim	/^func s:BMRemove()$/;"	f
s:BMShow	autoload/plugged/vim-polyglot/extras/menu.vim	/^func s:BMShow(...)$/;"	f
s:BMTruncName	autoload/plugged/vim-polyglot/extras/menu.vim	/^func s:BMTruncName(fname)$/;"	f
s:BRACKET_CONTINUATION	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:BRACKET_CONTINUATION = '^\\s*[}\\])]\\s*' . s:CONTINUATION_OP$/;"	v
s:BRACKET_PAIRS	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:BRACKET_PAIRS = {']': '\\[', '}': '{', ')': '('}$/;"	v
s:BREAK_BLOCK_OP	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:BREAK_BLOCK_OP = '\\C^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:Balanced	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function s:Balanced(lnum,line)$/;"	f
s:BeginElementFound	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:BeginElementFound(stack, token, curr_vcol, stored_vcol, end_token, sw)$/;"	f
s:BeginElementFoundIfEmpty	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:BeginElementFoundIfEmpty(stack, token, curr_vcol, stored_vcol, sw)$/;"	f
s:BeginningOfClauseFound	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:BeginningOfClauseFound(stack, token, stored_vcol, lnum, i)$/;"	f
s:BlameBufnr	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameBufnr(...) abort$/;"	f
s:BlameCommit	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameCommit(cmd, ...) abort$/;"	f
s:BlameCommitFileLnum	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameCommitFileLnum(...) abort$/;"	f
s:BlameJump	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameJump(suffix, ...) abort$/;"	f
s:BlameLeave	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameLeave() abort$/;"	f
s:BlameQuit	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameQuit() abort$/;"	f
s:BlameRehighlight	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameRehighlight() abort$/;"	f
s:BlameSubcommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameSubcommand(line1, count, range, bang, mods, options) abort$/;"	f
s:BlobTemp	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlobTemp(url) abort$/;"	f
s:BlockComment	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:BlockComment(cline_info) abort$/;"	f
s:Block_pattern	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Block_pattern(lin1,lin2,col1,col2)$/;"	f
s:BlurStatus	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlurStatus() abort$/;"	f
s:Bookmark	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:Bookmark.AddBookmark	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
s:Bookmark.BookmarkExistsFor	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
s:Bookmark.BookmarkFor	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
s:Bookmark.BookmarkNames	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
s:Bookmark.Bookmarks	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
s:Bookmark.CacheBookmarks	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
s:Bookmark.ClearAll	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
s:Bookmark.CompareBookmarksByName	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CompareBookmarksByName(firstBookmark, secondBookmark)$/;"	f
s:Bookmark.Edit	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Edit()$/;"	f
s:Bookmark.GetNodeForName	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f
s:Bookmark.GetSelected	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
s:Bookmark.InvalidBookmarks	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
s:Bookmark.New	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
s:Bookmark.SortBookmarksList	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.SortBookmarksList()$/;"	f
s:Bookmark.ToRoot	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f
s:Bookmark.Write	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
s:Bookmark.activate	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f
s:Bookmark.delete	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
s:Bookmark.getNode	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f
s:Bookmark.mustExist	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
s:Bookmark.open	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f
s:Bookmark.openInNewTab	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
s:Bookmark.setPath	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
s:Bookmark.str	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
s:Bookmark.toRoot	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f
s:Bookmark.validate	autoload/plugged/NERDTree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
s:BrowserOpen	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BrowserOpen(url, mods, echo_copy) abort$/;"	f
s:BufName	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BufName(var) abort$/;"	f
s:BuildEnvPrefix	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BuildEnvPrefix(env) abort$/;"	f
s:BuildShell	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BuildShell(dir, env, git, args) abort$/;"	f
s:BuildStructures	autoload/plugged/vim-polyglot/indent/twig.vim	/^fun! s:BuildStructures()$/;"	f
s:C	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:C = s:V.import('ColorEcho')$/;"	v
s:C1	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:C1 = [ '#0E3B4F' , '#FEFCF9' , 189 , 55  , '' ]$/;"	v
s:C2	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:C2 = [ '#0E3B4F' , '#DDC6AF' , 231 , 98  , '' ]$/;"	v
s:C3	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:C3 = [ '#ffffff' , '#B9A695' , 55  , 231 , '' ]$/;"	v
s:COLORS	autoload/plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^let s:COLORS = {$/;"	v
s:COMPOUND_ASSIGNMENT	autoload/plugged/vim-polyglot/indent/ls.vim	/^let s:COMPOUND_ASSIGNMENT = '[:=]\\s*\\%(if\\|unless\\|for\\|while\\|until\\|'$/;"	v
s:COMPOUND_ASSIGNMENT	autoload/plugged/vim-polyglot/indent/moon.vim	/^let s:COMPOUND_ASSIGNMENT = '[:=]\\s*\\%(if\\|unless\\|for\\|while\\|'$/;"	v
s:COMPOUND_EXPRESSION	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:COMPOUND_EXPRESSION = '\\C\\%([^-]-\\|[^+]+\\|[^\/]\/\\|[:=*%&|^<>]\\)\\s*'$/;"	v
s:CONTAINED_THEN	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:CONTAINED_THEN = '\\C[(\\[].\\{-}\\<then\\>.\\{-\\}[)\\]]'$/;"	v
s:CONTINUATION	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:CONTINUATION = s:CONTINUATION_OP . '\\|' . s:BEGIN_BLOCK_OP$/;"	v
s:CONTINUATION	autoload/plugged/vim-polyglot/indent/ls.vim	/^let s:CONTINUATION = '\\<\\%(is\\|isnt\\|and\\|or\\|do\\)\\>$'$/;"	v
s:CONTINUATION	autoload/plugged/vim-polyglot/indent/moon.vim	/^let s:CONTINUATION = '\\<\\%(is\\|isnt\\|and\\|or\\)\\>$'$/;"	v
s:CONTINUATION_BLOCK	autoload/plugged/vim-polyglot/indent/ls.vim	/^let s:CONTINUATION_BLOCK = '[([{:=]$'$/;"	v
s:CONTINUATION_BLOCK	autoload/plugged/vim-polyglot/indent/moon.vim	/^let s:CONTINUATION_BLOCK = '[([{:=]$'$/;"	v
s:CONTINUATION_OP	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:CONTINUATION_OP = '\\C\\%(\\<\\%(is\\|isnt\\|and\\|or\\)\\>\\|'$/;"	v
s:CP1	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:CP1 = [s:guiWhite, s:gui01, s:ctermWhite, s:cterm01]$/;"	v
s:CP1	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:CP1 = [ s:guiWhite , s:guiDarkGray , s:ctermWhite , s:ctermDarkGray  ]$/;"	v
s:CP1	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:CP1 = [ s:guiWhite , s:gui01 , s:ctermWhite , s:cterm01  ]$/;"	v
s:CP1	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:CP1 = [ s:guiWhite , s:gui01 , s:ctermWhite , s:cterm01  ]$/;"	v
s:CP1	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:CP1 = [ s:lh_gui1 , s:lh_gui7 , s:lh_cterm1, s:lh_cterm7 ]$/;"	v
s:CP1	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:CP1 = [s:guiWhite, s:gui01, s:ctermWhite, s:cterm01]$/;"	v
s:CP2	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:CP2 = [s:guiWhite, s:gui03, s:ctermWhite, s:cterm01]$/;"	v
s:CP2	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:CP2 = [ s:guiWhite , s:guiGray , s:ctermWhite , s:ctermDarkGray  ]$/;"	v
s:CP2	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:CP2 = [ s:guiWhite , s:gui03 , s:ctermWhite , s:cterm01  ]$/;"	v
s:CP2	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:CP2 = [ s:guiWhite , s:gui03 , s:ctermWhite , s:cterm01  ]$/;"	v
s:CP2	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:CP2 = [ s:lh_gui1 , s:lh_gui2 , s:lh_cterm1, s:lh_cterm2 ]$/;"	v
s:CP2	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:CP2 = [s:guiWhite, s:gui03, s:ctermWhite, s:cterm01]$/;"	v
s:CP3	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:CP3 = [s:guiWhite, s:gui0D, s:ctermWhite, s:cterm0D]$/;"	v
s:CP3	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:CP3 = [ s:guiWhite , s:guiLavender , s:ctermWhite , s:ctermLavender  ]$/;"	v
s:CP3	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:CP3 = [ s:guiWhite , s:gui0D , s:ctermWhite , s:cterm0D  ]$/;"	v
s:CP3	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:CP3 = [ s:guiWhite , s:gui0D , s:ctermWhite , s:cterm0D  ]$/;"	v
s:CP3	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:CP3 = [ s:lh_gui1 , s:lh_gui5 , s:lh_cterm1, s:lh_cterm5 ]$/;"	v
s:CP3	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:CP3 = [s:guiWhite, s:gui0D, s:ctermWhite, s:cterm0D]$/;"	v
s:CSSIndent	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:CSSIndent()$/;"	f
s:CSSIndent	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:CSSIndent()$/;"	f
s:CacheRstFold	autoload/plugged/vim-polyglot/autoload/RstFold.vim	/^function s:CacheRstFold()$/;"	f
s:CalcVCol	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:CalcVCol(line, first_index, last_index, vcol, tabstop)$/;"	f
s:Call	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:Call(method, args)$/;"	f
s:CallBaseIndent	autoload/plugged/vim-polyglot/indent/twig.vim	/^function! s:CallBaseIndent()$/;"	f
s:Cb	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^  function! s:Cb() closure$/;"	f
s:CeilingDirectories	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:CeilingDirectories() abort$/;"	f
s:ChannelSet	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! s:ChannelSet(dict, key, val)$/;"	f
s:CharAtCursor	autoload/plugged/vim-polyglot/autoload/pony.vim	/^function! s:CharAtCursor(...)$/;"	f
s:CheckBlockTag	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:CheckBlockTag(blocktag, ind)$/;"	f
s:CheckBlockTag	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:CheckBlockTag(blocktag, ind)$/;"	f
s:CheckCustomTag	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:CheckCustomTag(ctag)$/;"	f
s:CheckCustomTag	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:CheckCustomTag(ctag)$/;"	f
s:CheckDefined	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  def s:CheckDefined(colors: list<any>): list<any>$/;"	f
s:CheckDefined	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  function! s:CheckDefined(colors) abort$/;"	f
s:CheckForFunctions	autoload/plugged/vim-polyglot/syntax/octave.vim	/^function! s:CheckForFunctions()$/;"	f
s:CheckPairedIsLastCharacter	autoload/plugged/vim-polyglot/after/indent/tex.vim	/^function! s:CheckPairedIsLastCharacter(lnum, col) "{{{$/;"	f
s:CheckSubtype	autoload/plugged/vim-polyglot/autoload/svelte.vim	/^  function! s:CheckSubtype()$/;"	f
s:CheckTag	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:CheckTag(itag)$/;"	f
s:CheckTag	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:CheckTag(itag)$/;"	f
s:CheckToIgnoreRightParen	autoload/plugged/vim-polyglot/indent/pgsql.vim	/^function! s:CheckToIgnoreRightParen( prev_lnum, num_levels )$/;"	f
s:ChompDefault	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ChompDefault(default, ...) abort$/;"	f
s:ChompError	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ChompError(...) abort$/;"	f
s:ClearTokenCacheIfNeeded	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:ClearTokenCacheIfNeeded()$/;"	f
s:ClosingBracketOnEmptyLine	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:ClosingBracketOnEmptyLine(cline_info) abort$/;"	f
s:ClosingHeredocDelimiter	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:ClosingHeredocDelimiter(cline_info) abort$/;"	f
s:CodeActionFromSelected	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:CodeActionFromSelected(type)$/;"	f
s:CoffeeCompile	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompile(startline, endline, args)$/;"	f
s:CoffeeCompileClose	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileClose()$/;"	f
s:CoffeeCompileResetVars	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileResetVars()$/;"	f
s:CoffeeCompileToBuf	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileToBuf(buf, startline, endline)$/;"	f
s:CoffeeComplete	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeComplete(cmd, cmdline, cursor)$/;"	f
s:CoffeeLint	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeLint(startline, endline, bang, args)$/;"	f
s:CoffeeMakeDeprecated	autoload/plugged/vim-polyglot/compiler/coffee.vim	/^function! s:CoffeeMakeDeprecated(bang, args)$/;"	f
s:CoffeeRun	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRun(startline, endline, args)$/;"	f
s:CoffeeRunClose	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRunClose()$/;"	f
s:CoffeeRunResetVars	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRunResetVars()$/;"	f
s:CoffeeWatch	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatch(args)$/;"	f
s:CoffeeWatchClose	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchClose()$/;"	f
s:CoffeeWatchResetVars	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchResetVars()$/;"	f
s:CoffeeWatchUpdate	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchUpdate()$/;"	f
s:ColonEnd	autoload/plugged/vim-polyglot/indent/occam.vim	/^let s:ColonEnd = '\\(--.*\\)\\@<!:\\s*\\(--.*\\)\\=$'$/;"	v
s:ColonIndent	autoload/plugged/vim-polyglot/indent/occam.vim	/^let s:ColonIndent = '\\(--.*\\)\\@<!\\<PROC\\>'$/;"	v
s:ColonNonColonEndIndent	autoload/plugged/vim-polyglot/indent/occam.vim	/^let s:ColonNonColonEndIndent = '^\\C\\s*PROTOCOL\\>\\|\\(--.*\\)\\@<!\\<\\(\\(CHAN\\|DATA\\)\\s\\/;"	v
s:ColonStart	autoload/plugged/vim-polyglot/indent/occam.vim	/^let s:ColonStart = '^\\s*:\\s*\\(--.*\\)\\=$'$/;"	v
s:CommandList	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:CommandList(...) abort$/;"	f
s:Comment	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:Comment(arg)$/;"	f
s:CommentKeywordMatch	autoload/plugged/vim-polyglot/syntax/swift.vim	/^function! s:CommentKeywordMatch(keyword)$/;"	f
s:CommentLine	autoload/plugged/vim-polyglot/indent/occam.vim	/^let s:CommentLine = '^\\s*--'$/;"	v
s:CommentOrString	autoload/plugged/vim-polyglot/indent/mp.vim	/^function! s:CommentOrString(line, pos)$/;"	f
s:CommitInteractive	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CommitInteractive(line1, line2, range, bang, mods, options, patch) abort$/;"	f
s:CommitSubcommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CommitSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:CompareAge	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompareAge(mine, theirs) abort$/;"	f
s:CompletableSubcommands	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompletableSubcommands(dir) abort$/;"	f
s:CompleteHeads	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteHeads(dir) abort$/;"	f
s:CompleteRemote	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteRemote(A, L, P, ...) abort$/;"	f
s:CompleteRevision	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteRevision(A, L, P, ...) abort$/;"	f
s:CompleteSub	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteSub(subcommand, A, L, P, ...) abort$/;"	f
s:ConfigTimestamps	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ConfigTimestamps(dir, dict) abort$/;"	f
s:ContainedGroup	autoload/plugged/vim-polyglot/syntax/scala.vim	/^function! s:ContainedGroup()$/;"	f
s:ContainingCommit	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ContainingCommit() abort$/;"	f
s:ContinuedHangingOperator	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:ContinuedHangingOperator(msl_info) abort$/;"	f
s:ContinuedLine	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:ContinuedLine(pline_info) abort$/;"	f
s:Continues	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function s:Continues()$/;"	f
s:CountITags	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:CountITags(text)$/;"	f
s:CountITags	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:CountITags(text)$/;"	f
s:CountTagsAndState	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:CountTagsAndState(text)$/;"	f
s:CountTagsAndState	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:CountTagsAndState(text)$/;"	f
s:CountUnbalancedParen	autoload/plugged/vim-polyglot/indent/pgsql.vim	/^function! s:CountUnbalancedParen( line, paren_to_check )$/;"	f
s:Cpath	autoload/plugged/vim-polyglot/syntax/lex.vim	/^   let s:Cpath= fnameescape(s:Cpath)$/;"	v
s:Cpath	autoload/plugged/vim-polyglot/syntax/lex.vim	/^let s:Cpath= fnameescape(expand("<sfile>:p:h")."\/cpp.vim")$/;"	v
s:Cpath	autoload/plugged/vim-polyglot/syntax/yacc.vim	/^   let s:Cpath= fnameescape(s:Cpath)$/;"	v
s:Cpath	autoload/plugged/vim-polyglot/syntax/yacc.vim	/^let s:Cpath= fnameescape(expand("<sfile>:p:h").(exists("g:yacc_uses_cpp")? "\/cpp.vim" : "\/c.vi/;"	v
s:CreateOrExpression	autoload/plugged/vim-polyglot/ftplugin/scala.vim	/^function! s:CreateOrExpression(keywords)$/;"	f
s:CreateTabTreeVCS	autoload/plugged/NERDTree/nerdtree_plugin/vcs.vim	/^function! s:CreateTabTreeVCS(name)$/;"	f
s:Creator	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:Creator.BufNamePrefix	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
s:Creator.CreateMirror	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
s:Creator.CreateTabTree	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f
s:Creator.CreateWindowTree	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f
s:Creator.New	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
s:Creator.ToggleTabTree	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f
s:Creator._bindMappings	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
s:Creator._broadcastInitEvent	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
s:Creator._createNERDTree	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f
s:Creator._createTreeWin	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
s:Creator._isBufHidden	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f
s:Creator._nextBufferName	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
s:Creator._nextBufferNumber	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
s:Creator._pathForString	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
s:Creator._removeTreeBufForTab	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f
s:Creator._setCommonBufOptions	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
s:Creator._setupStatusline	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
s:Creator._tabpagevar	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
s:Creator._uniq	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
s:Creator.createMirror	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
s:Creator.createTabTree	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f
s:Creator.createWindowTree	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f
s:Creator.toggleTabTree	autoload/plugged/NERDTree/lib/nerdtree/creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f
s:CssFirstUnfinished	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:CssFirstUnfinished(lnum, min_lnum)$/;"	f
s:CssFirstUnfinished	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:CssFirstUnfinished(lnum, min_lnum)$/;"	f
s:CssPrevNonComment	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:CssPrevNonComment(lnum, stopline)$/;"	f
s:CssPrevNonComment	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:CssPrevNonComment(lnum, stopline)$/;"	f
s:CssUnfinished	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:CssUnfinished(text)$/;"	f
s:CssUnfinished	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:CssUnfinished(text)$/;"	f
s:CurrentNimFile	autoload/plugged/vim-polyglot/autoload/nim.vim	/^fun! s:CurrentNimFile() abort$/;"	f
s:CursorRangeFromSelected	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:CursorRangeFromSelected(type, ...) abort$/;"	f
s:DEFAULT_LEVEL	autoload/plugged/vim-polyglot/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = '-1'$/;"	v
s:DEFAULT_LEVEL	autoload/plugged/vim-polyglot/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = 'indent(prevnlnum)'$/;"	v
s:DGREY	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:DGREY  = '#656565'$/;"	v
s:DGREY	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:DGREY  = '#656565'$/;"	v
s:DOT_ACCESS	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:DOT_ACCESS	autoload/plugged/vim-polyglot/indent/ls.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:DOT_ACCESS	autoload/plugged/vim-polyglot/indent/moon.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:DecreaseFunc	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:DecreaseFunc(type)$/;"	f
s:DecreaseIndent	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:DecreaseIndent()$/;"	f
s:DecreaseIndentOnClosingTag	autoload/plugged/vim-polyglot/indent/mp.vim	/^function! s:DecreaseIndentOnClosingTag(curr_indent)$/;"	f
s:DefRuby	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:DefRuby()$/;"	f
s:DefineInlineMarkup	autoload/plugged/vim-polyglot/syntax/rst.vim	/^function! s:DefineInlineMarkup(name, start, middle, end)$/;"	f
s:DefineOneInlineMarkup	autoload/plugged/vim-polyglot/syntax/rst.vim	/^function! s:DefineOneInlineMarkup(name, start, middle, end, char_left, char_right)$/;"	f
s:DeindentingKeyword	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:DeindentingKeyword(cline_info) abort$/;"	f
s:DeleteLines	autoload/plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:DeleteLines(start, end) abort$/;"	f
s:DifftoolSubcommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DifftoolSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:Dir	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Dir(...) abort$/;"	f
s:DirCheck	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirCheck(...) abort$/;"	f
s:DirCommitFile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirCommitFile(path) abort$/;"	f
s:DirRev	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirRev(url) abort$/;"	f
s:Disable	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:Disable() abort$/;"	f
s:Do	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:Do(action)$/;"	f
s:Do	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Do(action, visual) abort$/;"	f
s:DoAutocmd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoAutocmd(cmd) abort$/;"	f
s:DoAutocmdChanged	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoAutocmdChanged(dir) abort$/;"	f
s:DoStagePushHeader	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStagePushHeader(value) abort$/;"	f
s:DoStageUnpushed	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnpushed(record) abort$/;"	f
s:DoStageUnpushedHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnpushedHeading(heading) abort$/;"	f
s:DoStageUnstaged	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstaged(record) abort$/;"	f
s:DoStageUnstagedHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstagedHeading(heading) abort$/;"	f
s:DoStageUntracked	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUntracked(record) abort$/;"	f
s:DoStageUntrackedHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUntrackedHeading(heading) abort$/;"	f
s:DoToggleHeadHeader	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleHeadHeader(value) abort$/;"	f
s:DoToggleHelpHeader	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleHelpHeader(value) abort$/;"	f
s:DoTogglePushHeader	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoTogglePushHeader(value) abort$/;"	f
s:DoToggleStaged	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStaged(record) abort$/;"	f
s:DoToggleStagedHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStagedHeading(...) abort$/;"	f
s:DoToggleUnpulled	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulled(record) abort$/;"	f
s:DoToggleUnpulledHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulledHeading(heading) abort$/;"	f
s:DoToggleUnpushed	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushed(record) abort$/;"	f
s:DoToggleUnpushedHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushedHeading(heading) abort$/;"	f
s:DoToggleUnstaged	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstaged(record) abort$/;"	f
s:DoToggleUnstagedHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstagedHeading(...) abort$/;"	f
s:DoToggleUntracked	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUntracked(record) abort$/;"	f
s:DoToggleUntrackedHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUntrackedHeading(...) abort$/;"	f
s:DoUnstageStaged	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStaged(record) abort$/;"	f
s:DoUnstageStagedHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStagedHeading(heading) abort$/;"	f
s:DoUnstageUnpulled	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpulled(record) abort$/;"	f
s:DoUnstageUnpulledHeading	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpulledHeading(heading) abort$/;"	f
s:DoUnstageUnpushed	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpushed(record) abort$/;"	f
s:DoUnstageUnstaged	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnstaged(record) abort$/;"	f
s:DoWhile	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function s:DoWhile()$/;"	f
s:DocumentationForSymbolRequest	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:DocumentationForSymbolRequest(xmlSig, assembly)$/;"	f
s:DotPackagesFile	autoload/plugged/vim-polyglot/autoload/dart.vim	/^function! s:DotPackagesFile() abort$/;"	f
s:DotRelative	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DotRelative(path, ...) abort$/;"	f
s:E	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:E = [s:gui_errorfg, s:gui_errorbg, s:cterm_errorfg, s:cterm_errorbg, 'bold']$/;"	v
s:ECRDedent	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:ECRDedent(...) abort$/;"	f
s:ECRIndent	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:ECRIndent(...) abort$/;"	f
s:ELSE_COND	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:ELSE_COND = '\\C^\\s*else\\s\\+\\<\\%(if\\|unless\\)\\>'$/;"	v
s:ER	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:ER = airline#themes#get_highlight2(['ErrorMsg', 'bg'], ['ErrorMsg', 'fg'], 'bold')$/;"	v
s:ER	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:ER = [s:gui07, s:gui08, s:cterm07, s:cterm08]$/;"	v
s:ER	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:ER = [ '#282C34', '#E06C75', s:term_black, s:term_red ]$/;"	v
s:ER	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:ER = [ '#1C1C1C' , '' , 234 , 167 , '' ]$/;"	v
s:ERROR	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:ERROR = [ s:gui07, s:gui08, s:cterm07, s:cterm08 ]$/;"	v
s:ES	autoload/plugged/vim-polyglot/indent/vhdl.vim	/^let s:ES = '\\s*\\%(--.*\\)\\=$'$/;"	v
s:ESCAPEDCHARS	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^  let s:ESCAPEDCHARS = " \\t\\n*?[{`$\\\\%#'\\"|!<"$/;"	v
s:ESCAPEDCHARS	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^  let s:ESCAPEDCHARS = " \\t\\n\\"#%'*<?`|"$/;"	v
s:Echo	autoload/plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! s:Echo(message) abort$/;"	f
s:EchoExec	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:EchoExec(...) abort$/;"	f
s:EchoGlobalVariables	autoload/plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! s:EchoGlobalVariables() abort$/;"	f
s:EditUrlUnderCursor	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^    function s:EditUrlUnderCursor()$/;"	f
s:EditVimrc	autoload/plugged/vim-polyglot/extras/menu.vim	/^fun! s:EditVimrc()$/;"	f
s:Eglobal	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Eglobal(bang, ...) range$/;"	f
s:Ematch	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Ematch(...)$/;"	f
s:Emit	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! s:Emit(dict, type, args)$/;"	f
s:EmptyInsideString	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:EmptyInsideString(pline_info) abort$/;"	f
s:Enable	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:Enable(initialize)$/;"	f
s:EnableByDefault	autoload/plugged/vim-polyglot/syntax/python.vim	/^function! s:EnableByDefault(name)$/;"	f
s:Enabled	autoload/plugged/vim-polyglot/syntax/python.vim	/^function! s:Enabled(name)$/;"	f
s:EndBlockIndent	autoload/plugged/vim-polyglot/indent/ada.vim	/^function s:EndBlockIndent( prev_indent, prev_lnum, blockstart, blockend )$/;"	f
s:EndStructure	autoload/plugged/vim-polyglot/indent/twig.vim	/^function! s:EndStructure(name)$/;"	f
s:Enter_annotation_buffer	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Enter_annotation_buffer(annot_file_path)$/;"	f
s:ErlangCalcIndent	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:ErlangCalcIndent(lnum, stack)$/;"	f
s:ErlangCalcIndent2	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:ErlangCalcIndent2(lnum, stack)$/;"	f
s:ErrMsg	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
s:EscapeAndUnescape	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! s:EscapeAndUnescape(vimregex, delim)$/;"	f
s:Esubstitute	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Esubstitute(...) range$/;"	f
s:Event	autoload/plugged/NERDTree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:Event.New	autoload/plugged/NERDTree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
s:Evglobal	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Evglobal(...) range$/;"	f
s:ExchangeReplaceSpecials	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ExchangeReplaceSpecials(replacement, sort)$/;"	f
s:ExcludeOther	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! s:ExcludeOther(nr, exclude_preview)$/;"	f
s:ExcludePaths	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! s:ExcludePaths(nr, exclude_paths)$/;"	f
s:ExecPath	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExecPath() abort$/;"	f
s:Exit_annotation_buffer	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Exit_annotation_buffer()$/;"	f
s:ExitingOneLineScope	autoload/plugged/vim-polyglot/indent/solidity.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
s:ExitingOneLineScope	autoload/plugged/vim-polyglot/indent/typescript.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
s:Expand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Expand(rev, ...) abort$/;"	f
s:Expand	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! s:Expand(dict, pretty, args)$/;"	f
s:ExpandAtomsInBrackets	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ExpandAtomsInBrackets(bracket)$/;"	f
s:ExpandMap	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:ExpandMap(map)$/;"	f
s:ExpandVar	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandVar(other, var, flags, esc, ...) abort$/;"	f
s:ExpandVarLegacy	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandVarLegacy(str) abort$/;"	f
s:ExpireStatus	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpireStatus(bufnr) abort$/;"	f
s:ExprCol	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function s:ExprCol()$/;"	f
s:ExtendedRegex2VimRegex	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ExtendedRegex2VimRegex(extendedregex, ...)$/;"	f
s:ExtendedRegex2VimRegexLineWise	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ExtendedRegex2VimRegexLineWise(...) range$/;"	f
s:ExtensionList	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:ExtensionList(...) abort$/;"	f
s:ExtraBrackets	autoload/plugged/vim-polyglot/indent/falcon.vim	/^function s:ExtraBrackets(lnum)$/;"	f
s:ExtraBrackets	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:ExtraBrackets(lnum) abort$/;"	f
s:Extract_type_data	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Extract_type_data(block_pattern, annot_file_name)$/;"	f
s:FALSE	autoload/plugged/vim-polyglot/indent/autohotkey.vim	/^let s:FALSE = 0$/;"	v
s:FNAMEESCAPEPATTERN	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:FNAMEESCAPEPATTERN = '\\\\\\ze[' . escape(s:ESCAPEDCHARS, ']^-\\') . ']'$/;"	v
s:FUNCTION	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:FUNCTION = '[-=]>$'$/;"	v
s:Ferm_SpecialDelimiters	autoload/plugged/vim-polyglot/syntax/ferm.vim	/^    let s:Ferm_SpecialDelimiters = 0$/;"	v
s:Ferm_SpecialDelimiters	autoload/plugged/vim-polyglot/syntax/ferm.vim	/^    let s:Ferm_SpecialDelimiters = g:Ferm_SpecialDelimiters$/;"	v
s:FileFormat	autoload/plugged/vim-polyglot/extras/menu.vim	/^fun! s:FileFormat()$/;"	f
s:FileIgnoreCase	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FileIgnoreCase(for_completion) abort$/;"	f
s:Filetype	autoload/plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^func! s:Filetype()$/;"	f
s:FilterEscape	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FilterEscape(items, ...) abort$/;"	f
s:FindComment	autoload/plugged/vim-polyglot/indent/moon.vim	/^function! s:FindComment(linenum)$/;"	f
s:FindContainingClass	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:FindContainingClass() abort$/;"	f
s:FindCornerOfSyntax	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindCornerOfSyntax(lnum, col, step)$/;"	f
s:FindCornersOfSyntax	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindCornersOfSyntax(lnum, col)$/;"	f
s:FindDartFmt	autoload/plugged/vim-polyglot/autoload/dart.vim	/^function! s:FindDartFmt() abort$/;"	f
s:FindECRControl	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:FindECRControl(...) abort$/;"	f
s:FindIndToken	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:FindIndToken(lnum, dir)$/;"	f
s:FindLeftOfSyntax	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindLeftOfSyntax(lnum, col)$/;"	f
s:FindLet	autoload/plugged/vim-polyglot/indent/fsharp.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
s:FindLet	autoload/plugged/vim-polyglot/indent/ocaml.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
s:FindLet	autoload/plugged/vim-polyglot/indent/sml.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
s:FindNextSyntax	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindNextSyntax(lnum, col, name)$/;"	f
s:FindPair	autoload/plugged/vim-polyglot/indent/elm.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
s:FindPair	autoload/plugged/vim-polyglot/indent/fsharp.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
s:FindPair	autoload/plugged/vim-polyglot/indent/ocaml.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
s:FindPair	autoload/plugged/vim-polyglot/indent/sml.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
s:FindParentVCSRoot	autoload/plugged/NERDTree/nerdtree_plugin/vcs.vim	/^function! s:FindParentVCSRoot(path)$/;"	f
s:FindPrevECRControl	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:FindPrevECRControl(...) abort$/;"	f
s:FindPrevLEIndentedLineMatchingRegex	autoload/plugged/vim-polyglot/indent/yaml.vim	/^function s:FindPrevLEIndentedLineMatchingRegex(lnum, regex)$/;"	f
s:FindPrevLessIndentedLine	autoload/plugged/vim-polyglot/indent/yaml.vim	/^function s:FindPrevLessIndentedLine(lnum, ...)$/;"	f
s:FindPrevLnum	autoload/plugged/vim-polyglot/autoload/fish.vim	/^function! s:FindPrevLnum(lnum)$/;"	f
s:FindPreviousNonCompilerDirectiveLine	autoload/plugged/vim-polyglot/indent/cs.vim	/^function! s:FindPreviousNonCompilerDirectiveLine(start_lnum)$/;"	f
s:FindPreviousOpenStructure	autoload/plugged/vim-polyglot/indent/twig.vim	/^function! s:FindPreviousOpenStructure(lineNumber)$/;"	f
s:FindRightOfSyntax	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindRightOfSyntax(lnum, col)$/;"	f
s:FindStartLine	autoload/plugged/vim-polyglot/indent/nim.vim	/^function! s:FindStartLine(fromln, pattern)$/;"	f
s:Find_common_path	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  function! s:Find_common_path (p1,p2)$/;"	f
s:FirstLevelIndent	autoload/plugged/vim-polyglot/indent/occam.vim	/^let s:FirstLevelIndent = '^\\C\\s*\\(IF\\|ALT\\|PRI\\s\\+ALT\\|PAR\\|SEQ\\|PRI\\s\\+PAR\\|WHILE\\/;"	v
s:FirstLevelNonColonEndIndent	autoload/plugged/vim-polyglot/indent/occam.vim	/^let s:FirstLevelNonColonEndIndent = '^\\C\\s*PROTOCOL\\>\\|\\(--.*\\)\\@<!\\<\\(\\(CHAN\\|DATA\\/;"	v
s:First_word_len	autoload/plugged/vim-polyglot/indent/awk.vim	/^function! s:First_word_len( line )$/;"	f
s:FixFText	autoload/plugged/vim-polyglot/extras/menu.vim	/^fun! s:FixFText()$/;"	f
s:FlagSet	autoload/plugged/NERDTree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:FlagSet.New	autoload/plugged/NERDTree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
s:FlagSet._flagsForScope	autoload/plugged/NERDTree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
s:FlagSet.addFlag	autoload/plugged/NERDTree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
s:FlagSet.clearFlags	autoload/plugged/NERDTree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
s:FlagSet.removeFlag	autoload/plugged/NERDTree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
s:FlagSet.renderToString	autoload/plugged/NERDTree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
s:FnameEscape	autoload/plugged/vim-polyglot/extras/menu.vim	/^func s:FnameEscape(fname)$/;"	f
s:Fnameescape	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  function! s:Fnameescape(s)$/;"	f
s:FocusGainedHandler	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:FocusGainedHandler(timer)$/;"	f
s:Fold_Collate	autoload/plugged/vim-polyglot/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<begin\\>$\\|'$/;"	v
s:Fold_Collate	autoload/plugged/vim-polyglot/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<exception\\>$\\|'$/;"	v
s:Fold_Collate	autoload/plugged/vim-polyglot/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<is\\>$\\|'$/;"	v
s:Fold_Collate	autoload/plugged/vim-polyglot/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<private\\>$\\|'$/;"	v
s:Fold_Collate	autoload/plugged/vim-polyglot/autoload/ada.vim	/^   let s:Fold_Collate .= '--\\)'$/;"	v
s:Fold_Collate	autoload/plugged/vim-polyglot/autoload/ada.vim	/^   let s:Fold_Collate = '^\\([;)]*$\\|'$/;"	v
s:FoldableRegion	autoload/plugged/vim-polyglot/syntax/lua.vim	/^function! s:FoldableRegion(tag, name, expr)$/;"	f
s:Format	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Format(val) abort$/;"	f
s:FormatFile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatFile(dict) abort$/;"	f
s:FormatFromSelected	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:FormatFromSelected(type)$/;"	f
s:FormatLog	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatLog(dict) abort$/;"	f
s:FormatRebase	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatRebase(dict) abort$/;"	f
s:FreshState	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:FreshState(lnum)$/;"	f
s:FreshState	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:FreshState(lnum)$/;"	f
s:FsdnRequest	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:FsdnRequest(query)$/;"	f
s:GF	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
s:GREEN	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:GREEN  = '#34A853'$/;"	v
s:GREEN	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:GREEN  = '#34A853'$/;"	v
s:GREY0	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:GREY0  = s:WHITE$/;"	v
s:GREY0	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:GREY0  = s:BLACK$/;"	v
s:GREY1	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:GREY1  = s:LGREY$/;"	v
s:GREY1	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:GREY1  = s:DGREY$/;"	v
s:GREY2	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:GREY2  = s:DGREY$/;"	v
s:GREY2	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:GREY2  = s:LGREY$/;"	v
s:Generate	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Generate(object, ...) abort$/;"	f
s:GetBufferRubyClass	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
s:GetBufferRubyEntity	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
s:GetBufferRubyModule	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
s:GetBufferRubySingletonMethods	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
s:GetContents	autoload/plugged/vim-polyglot/indent/lua.vim	/^function s:GetContents(lnum)$/;"	f
s:GetDefaultPolicy	autoload/plugged/vim-polyglot/indent/coffee.vim	/^function! s:GetDefaultPolicy(curlnum)$/;"	f
s:GetDelim	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! s:GetDelim(str)$/;"	f
s:GetEndIndentation	autoload/plugged/vim-polyglot/after/indent/tex.vim	/^function! s:GetEndIndentation(lnum) " {{{$/;"	f
s:GetHeaderLevel	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetHeaderLevel(...)$/;"	f
s:GetHeaderLineNum	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetHeaderLineNum(...)$/;"	f
s:GetHeaderList	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetHeaderList()$/;"	f
s:GetHiCmd	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  def s:GetHiCmd(list: list<string>): string$/;"	f
s:GetHiCmd	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  function! s:GetHiCmd(list) abort$/;"	f
s:GetInd	autoload/plugged/vim-polyglot/indent/fsharp.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
s:GetInd	autoload/plugged/vim-polyglot/indent/ocaml.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
s:GetInd	autoload/plugged/vim-polyglot/indent/sml.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
s:GetIndtokenAtCol	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:GetIndtokenAtCol(indtokens, col)$/;"	f
s:GetLastBeginIndentation	autoload/plugged/vim-polyglot/after/indent/tex.vim	/^function! s:GetLastBeginIndentation(lnum) " {{{$/;"	f
s:GetLevelOfHeaderAtLine	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetLevelOfHeaderAtLine(linenum)$/;"	f
s:GetLineWithoutFullComment	autoload/plugged/vim-polyglot/indent/fsharp.vim	/^function! s:GetLineWithoutFullComment(lnum)$/;"	f
s:GetLineWithoutFullComment	autoload/plugged/vim-polyglot/indent/ocaml.vim	/^function! s:GetLineWithoutFullComment(lnum)$/;"	f
s:GetLiveScriptIndent	autoload/plugged/vim-polyglot/indent/ls.vim	/^function! s:GetLiveScriptIndent(curlinenum)$/;"	f
s:GetMSL	autoload/plugged/vim-polyglot/indent/falcon.vim	/^function s:GetMSL(lnum)$/;"	f
s:GetMSL	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:GetMSL(lnum) abort$/;"	f
s:GetMSL	autoload/plugged/vim-polyglot/indent/solidity.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
s:GetMSL	autoload/plugged/vim-polyglot/indent/typescript.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
s:GetMakePrg	autoload/plugged/vim-polyglot/compiler/coffee.vim	/^function! s:GetMakePrg()$/;"	f
s:GetMakePrg	autoload/plugged/vim-polyglot/compiler/ls.vim	/^function! s:GetMakePrg()$/;"	f
s:GetMatch	autoload/plugged/vim-polyglot/indent/ls.vim	/^function! s:GetMatch(curline)$/;"	f
s:GetMatch	autoload/plugged/vim-polyglot/indent/moon.vim	/^function! s:GetMatch(curline)$/;"	f
s:GetMdIndent	autoload/plugged/vim-polyglot/indent/rmd.vim	/^function s:GetMdIndent()$/;"	f
s:GetMoonIndent	autoload/plugged/vim-polyglot/indent/moon.vim	/^function! s:GetMoonIndent(curlinenum)$/;"	f
s:GetNextHeaderLineNumberAtLevel	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetNextHeaderLineNumberAtLevel(level, ...)$/;"	f
s:GetOffsetOf	autoload/plugged/vim-polyglot/indent/config.vim	/^function s:GetOffsetOf(line, regexp)$/;"	f
s:GetPair	autoload/plugged/vim-polyglot/indent/javascript.vim	/^  function s:GetPair(start,end,flags,skip)$/;"	f
s:GetParentHeaderLineNumber	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetParentHeaderLineNumber(...)$/;"	f
s:GetPrevNonCommentLineNum	autoload/plugged/vim-polyglot/indent/pascal.vim	/^function! s:GetPrevNonCommentLineNum( line_num )$/;"	f
s:GetPrevNormalLine	autoload/plugged/vim-polyglot/indent/coffee.vim	/^function! s:GetPrevNormalLine(startlnum)$/;"	f
s:GetPrevNormalLine	autoload/plugged/vim-polyglot/indent/ls.vim	/^function! s:GetPrevNormalLine(startlinenum)$/;"	f
s:GetPrevNormalLine	autoload/plugged/vim-polyglot/indent/moon.vim	/^function! s:GetPrevNormalLine(startlinenum)$/;"	f
s:GetPreviousHeaderLineNumberAtLevel	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetPreviousHeaderLineNumberAtLevel(level, ...)$/;"	f
s:GetRelVer	autoload/plugged/vim-polyglot/ftplugin/spec.vim	/^	function! s:GetRelVer()$/;"	f
s:GetRubyVarType	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
s:GetScriptType	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:GetScriptType(str)$/;"	f
s:GetScriptType	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:GetScriptType(str)$/;"	f
s:GetStmtStarterIndent	autoload/plugged/vim-polyglot/indent/pgsql.vim	/^function! s:GetStmtStarterIndent( keyword, curr_lnum )$/;"	f
s:GetSynStack	autoload/plugged/vim-polyglot/indent/purescript.vim	/^function! s:GetSynStack(lnum, col)$/;"	f
s:GetTokensFromLine	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:GetTokensFromLine(line, string_continuation, atom_continuation,$/;"	f
s:GetTrimmedLine	autoload/plugged/vim-polyglot/indent/coffee.vim	/^function! s:GetTrimmedLine(lnum)$/;"	f
s:GetTrimmedLine	autoload/plugged/vim-polyglot/indent/ls.vim	/^function! s:GetTrimmedLine(linenum)$/;"	f
s:GetTrimmedLine	autoload/plugged/vim-polyglot/indent/moon.vim	/^function! s:GetTrimmedLine(linenum)$/;"	f
s:GetVarIndent	autoload/plugged/vim-polyglot/indent/solidity.vim	/^function s:GetVarIndent(lnum)$/;"	f
s:GetVarIndent	autoload/plugged/vim-polyglot/indent/typescript.vim	/^function s:GetVarIndent(lnum)$/;"	f
s:GetVars	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function s:GetVars()$/;"	f
s:GetYamlIndent	autoload/plugged/vim-polyglot/indent/rmd.vim	/^function s:GetYamlIndent()$/;"	f
s:Get_brace_balance	autoload/plugged/vim-polyglot/indent/awk.vim	/^function! s:Get_brace_balance( line, b_open, b_close )$/;"	f
s:Get_prev_line	autoload/plugged/vim-polyglot/indent/awk.vim	/^function! s:Get_prev_line( lineno )$/;"	f
s:Get_type	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Get_type(mode, annot_file_name)$/;"	f
s:GlobComplete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GlobComplete(lead, pattern, ...) abort$/;"	f
s:GlobalChange	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! s:GlobalChange(dict, key, val)$/;"	f
s:Go	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let s:Go = ""$/;"	v
s:Go	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^  let s:Go = "\\<C-G>U"$/;"	v
s:Greek	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^  fun! s:Greek(group,pat,cchar)$/;"	f
s:GrepParseLine	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepParseLine(prefix, name_only, dir, line) abort$/;"	f
s:GrepSubcommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:HELPHISTORY	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:HELPHISTORY = []$/;"	v
s:HELPPROMPT	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:HELPPROMPT = 'help?> '$/;"	v
s:HL	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^function! s:HL(group, fg, ...)$/;"	f
s:HasOpt	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:HasOpt(args, ...) abort$/;"	f
s:HeaderDecrease	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:HeaderDecrease(line1, line2, ...)$/;"	f
s:Helpfind	autoload/plugged/vim-polyglot/extras/menu.vim	/^fun! s:Helpfind()$/;"	f
s:Hi	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:Hi() abort$/;"	f
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:I1 = [s:guiWhite, s:gui0B, s:ctermWhite, s:cterm0B]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:cterm_med_gray_hi, s:cterm_blue]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:I1 = [ '#3D424D' , '#39BAE6' , 59  , 74  ] " guifg guibg ctermfg ctermbg$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:I1 = [ '#6C7680' , '#55B4D4' , 66  , 74  ] " guifg guibg ctermfg ctermbg$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:I1 = [ '#212733' , '#80D4FF' , 0   , 80  ] " guifg guibg ctermfg ctermbg$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:I1 = [ '#141413' , '#0a9dff' , 232 , 39  ] " blackestgravel & tardis$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:cterm_med_gray_hi, s:cterm_blue]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:I1 = [ s:base00 , s:base0B , 235 , 84 ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:I1 = [s:gui_insertfg, s:gui_insertbg, s:cterm_insertfg, s:cterm_insertbg] " Outside blocks/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:I1 = [ '#141413' , '#FDE76E' , 232 , 'yellow' ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:I1 = [ '#121212', '#00ff87', 233, 48  ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:cterm_med_gray_hi, s:cterm_blue]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:I1 = [ '#666d51' , '#fee533' , 231 , 106 ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:I1 = [ '#585858' , '#E4E4E4' , 59  , 188  ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:I1 = [ '#ffffff' , '#004866' , 231 , 24 ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:I1 = [ '#282C34', '#61AFEF', s:term_black, s:term_blue ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:I1 = [s:outerfg[1], s:golden[1], s:outerfg[0], s:golden[0]]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:I1 = [ '#ffffff' , '#00875f' , 255 , 29  ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:I1 = [ s:guiDarkGray , s:guiDarkSeafoam , s:ctermWhite , s:ctermDarkSeafoam  ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:I1 = [ s:BG, s:BLUE, s:TERM_BG, s:TERM_BLUE ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:I1 = [ s:BG, s:BLUE, s:TERM_BG, s:TERM_BLUE ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:I1 = [ '#005f5f' , '#8abeb7' , 23  , 14 ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:I1 = [ s:guiWhite , s:gui0B , s:ctermWhite , s:cterm0B  ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:I1 = [ s:guiWhite , s:gui0B , s:ctermOrange , s:ctermAsh  ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:I1 = [ '#242322' , '#7eaefd' , 234 , 111 ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:I1 = [ '#f8f6f2', '#ab3e5b','15','161']$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:I1 = [ '#ffffff' , '#00875f' , 255 , 29  ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:I1 = [ s:lh_gui1 , s:lh_gui5 , s:lh_cterm1, s:lh_cterm5 ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:I1 = [ '#ffffff' , '#789f00' , 231 , 106 ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:I1 = [ '#080808' , '#66d9ef' , 232 , 81  ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:I1 = [s:gui_insertfg, s:gui_insertbg, s:cterm_insertfg, s:cterm_insertbg] " Outside blocks/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:I1 = [ s:gui_black, s:gui_green, s:cterm_black, s:cterm_green ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:I1   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:I1 = [s:gui_insertfg, s:gui_insertbg, s:cterm_insertfg, s:cterm_insertbg]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:cterm_med_gray_hi, s:cterm_blue]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:I1 = [ '#585858' , '#e4e4e4' , 240 , 254 ] " Mode$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:I1 = [ '#3A3A3A' , '#60F080' , 254 , 237 ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:I1 = [ '#005f5f' , '#ffffff' , 23  , 231 ] " darkestcyan    & white$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:I1 = [ '#0E3B4F' , '#FFF5D9' , 17  , 45 ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:I1 = [ '#11c279' , '#2e2e2e' , 36 , 235 ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:I1 = [ '#87d7ff' , '#1d1f21' , 7   , 24  ] " mediumcyan     & darkestblue$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:I1 = [ '#5fff00' , s:guibg , 82  , s:termbg ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:I1 = [s:guiWhite, s:gui0B, s:ctermWhite, s:cterm0B]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:I1 = [ '#0d935c' , '#e1e1e1' , 29 , 188 ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:I1 = [ s:guibg, '#5fff00' , s:termbg , 82 ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:I1 = [ '#eeeeee' , '#09643f' , 255 , 30  ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:I1 = [ '#141413' , '#FDE76E' , 232 , 3 ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:I1 = [ '#f0f0f0' , '#FADE3E' , 15,  3 ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:I1 = [s:darkgray[1], s:golden[1], s:outerfg[0], s:golden[0]]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:I1 = [ '#f8f6f2', '#e25a74','15','161']$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:I1 = ['#FFFFFF', '#87AF5F', 15, 107] " Outside blocks in normal mode (mode and file positi/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:I1 = [ '#CACFD2' , '#009966' , 253 , 35  ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:I1 = [ '#141413' , '#FDE76E' , 232 , 227 ]$/;"	v
s:I1	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:I1 = [ '#eeeeee' , '#00875f' , 255 , 29  ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:I2 = s:N2$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:I2 = [ '#39BAE6' , '#304357' , 74  , 59  ] " guifg guibg ctermfg ctermbg$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:I2 = [ '#55B4D4' , '#6C7680' , 74  , 66  ] " guifg guibg ctermfg ctermbg$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:I2 = [ '#80D4FF' , '#212733' , 80  , 0   ] " guifg guibg ctermfg ctermbg$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:I2 = [ '#f4cf86' , '#005fff' , 222 , 27  ] " dirtyblonde    & facebook$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:I2 = [ s:base0B , s:base00 , 84 , 235 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:I2 = [s:gui_insertbg, s:gui_termbg2, s:cterm_insertbg, s:cterm_termbg2]   " Middle block$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:I2 = [ '#FDE76E' , '#32322F' , 'yellow' , 235 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:I2 = s:N2$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:I2 = [ '#ffffff' , '#8cc2fd' , 231 , 29  ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:I2 = [ '#E4E4E4' , '#47AF00' , 188 , 70  ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:I2 = [ '#99DDFF' , '#0087af' , 74  , 31 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:I2 = s:N2$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:I2 = [ '#9e9e9e' , '#303030' , 247 , 236 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:I2 = s:N2$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:I2 = s:N2$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:I2 = s:N2$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:I2 = [ '#c5c8c6' , '#0087af' , 15  , 31 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:I2 = s:N2$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:I2 = [ s:gui02 , s:gui01 , s:ctermAsh , s:ctermOrange  ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:I2 = [ '#75d7d8' , '#242322' , 80  , 234 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:I2 = [ '#242321', '#ab3e5b','235','161']$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:I2 = [ '#005f00' , '#00df87' , 22  , 42  ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:I2 = [ s:lh_gui3 , s:lh_gui4 , s:lh_cterm3, s:lh_cterm4 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:I2 = [ '#ffffff' , '#003f3f' , 231 , 29  ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:I2 = [ '#f8f8f0' , '#232526' , 253 , 16 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:I2 = [ '#f8f8f0' , '#232526' , 253 , 208 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:I2 = [s:gui_insertbg, s:gui_termbg2, s:cterm_insertbg, s:cterm_termbg2]   " Middle block$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:I2 = [ s:gui_black, s:gui_green_offset, s:cterm_black, s:cterm_green_offset ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:I2   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:I2 = s:BB$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:I2 = [ '#e4e4e4' , '#0087af' , 254 , 31  ] " Info$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:I2 = [ '#E4E4E4' , '#4E4E4E' , 254 , 239 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:I2 = [ '#5fafd7' , '#0087af' , 74  , 31  ] " darkcyan       & darkblue$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:I2 = [ '#0E3B4F' , '#DDE58E' , 255 , 27 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:I2 = [ '#11c279' , '#2e2e2e' , 36 , 235 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:I2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:I2 = s:N2$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:I2 = [ '#0d935c' , '#e1e1e1' , 29 , 188 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:I2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:I2 = [ '#343434' , '#a3a3a3' , 237 , 249 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:I2 = [ '#FDE76E' , '#32322F' , 3 , 'black' ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:I2 = [ '#FADE3E' , '#deded9' ,  3,  8 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:I2 = [ '#242321', '#c14c3d','235','160']$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:I2 = ['#AFAF87', '#5F5F5F', 144, 59] " Next blocks inside (branch and file format)$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:I2 = [ '#d75fd7' , '#4e4e4e' , 170 , 239 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:I2 = [ '#FDE76E' , '#32322F' , 227 , 238 ]$/;"	v
s:I2	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:I2 = [ '#005f00' , '#00d787' , 22  , 42  ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:I3 = [s:guiWhite, s:gui01, s:ctermWhite, s:cterm01]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:cterm_blue, s:cterm_med_gray_hi] " inside text$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:I3 = [ '#B3B1AD' , '#0A0E14' , 145 , 16  ] " guifg guibg ctermfg ctermbg$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:I3 = [ '#6C7680' , '#FAFAFA' , 66  , 231 ] " guifg guibg ctermfg ctermbg$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:I3 = [ '#E6E1CF' , '#212733' , 15  , 0   ] " guifg guibg ctermfg ctermbg$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:I3 = [ '#0a9dff' , '#242321' , 39  , 235 ] " tardis         & darkgravel$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:cterm_blue, s:cterm_med_gray_hi]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:I3 = [ s:base0B , s:base00 , 84 , 235 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:I3 = [ '#FDE76E' , '#242424' , 'yellow' , 234 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:I3 = s:N3$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:cterm_blue, s:cterm_med_gray_hi]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:I3 = [ '#ffffff' , '#204458' , 231 , 23  ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:I3 = [ '#EEEEEE' , '#2E8700' , 231  , 28 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:I3 = [ '#B2E5FF' , '#005f87' , 117 , 24 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:I3 = [ '#61AFEF', '#282C34', s:term_blue, '' ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:I3 = [s:golden[1], s:innerbg[1], s:golden[0], s:innerbg[0]]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:I3 = [ '#87d7ff' , '#005f87' , 117 , 24  ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:I3 = [ s:guiWhite , s:guiDarkGray , s:ctermWhite , s:ctermShadow  ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:I3 = [ s:BLUE, s:BG, s:TERM_BLUE, s:TERM_BG ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:I3 = [ s:BLUE, s:BG, s:TERM_BLUE, s:TERM_BG ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:I3 = [ '#ffffff' , '#005f87' , 255 , 24 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:I3 = [ s:guiWhite , s:gui01 , s:ctermWhite , s:cterm00  ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:I3 = [ s:guiWhite , s:gui01 , s:ctermOrange , s:ctermBlack  ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:I3 = [ '#e2e2e2' , '#4a4a4a' , 254 , 238 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:I3 = [ '#1693a5', '#f8f6f2', '62', '15']$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:I3 = [ '#005f5f' , '#afff87' , 23  , 156 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:I3 = [ s:lh_gui5 , s:lh_gui1 , s:lh_cterm5, s:lh_cterm1 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:I3 = [ '#ffffff' , '#002b2b' , 231 , 23  ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:I3 = [ '#f8f8f0' , '#465457' , 253 , 67  ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:I3 = [ s:gui_green, s:gui_black, s:cterm_green, s:cterm_black ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:I3   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:I3 = [s:gui_insertbg, s:gui_termbg2, s:cterm_insertbg, s:cterm_termbg2]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:cterm_blue, s:cterm_med_gray_hi]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:I3 = [ '#eeeeee' , '#005f87' , 255 , 24  ] " StatusLine$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:I3 = [ '#EEEEEE' , '#262626' , 255 , 235 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:I3 = [ '#87d7ff' , '#005f87' , 117 , 24  ] " mediumcyan     & darkestblue$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:I3 = [ '#ffffff' , '#9ED47B' , 15  , 17 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:I3 = [ '#11c279' , '#2e2e2e' , 36 , 235 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:I3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:I3 = [s:guiWhite, s:gui01, s:ctermWhite, s:cterm01]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:I3 = [ '#0d935c' , '#e1e1e1' , 29 , 188 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:I3 = [ '#767676' , s:guibg, 243 , s:termbg ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:I3 = [ '#343434' , '#b0b0b0' , 237 , 250 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:I3 = [ '#FDE76E' , '#242424' , 3 , 233 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:I3 = [ '#FADE3E' , '#888a85' ,  3, 15 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:I3 = [s:golden[1]  , s:innerbg[1], s:golden[0], s:innerbg[0]]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:I3 = [ '#f4cf86' , '#242321' , 222 , 235 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:I3 = ['#AFAF87', '#5F5F5F', 144, 59] " The middle block$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:I3 = [ '#c6c6c6' , '#3a3a3a' , 251 , 237 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:I3 = [ '#FDE76E' , '#242424' , 227 , 235 ]$/;"	v
s:I3	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:I3 = [ '#005f5f' , '#afff87' , 23  , 156 ]$/;"	v
s:I4	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:I4 = [ s:base0B , 84 ]$/;"	v
s:I4	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:I4 = [ '#FADE3E' , 'yellow' ]$/;"	v
s:I4	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:I4 = [ '#1693a5' , 62 ]$/;"	v
s:I4	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:I4 = [ '#ffffff' , '#6BAD3F' , 255 , 53 ]$/;"	v
s:I4	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:I4 = [ '#FADE3E' , 11 ]$/;"	v
s:I4	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:I4 = [ '#FDE76E' , '#141413' , 11,  0 ]$/;"	v
s:I4	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:I4 = [ '#f4cf86' , 222 ]$/;"	v
s:I4	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:I4 = [ '#FADE3E' , 221 ]$/;"	v
s:I5	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:I5 = [ '#ffffff' , '#6BAD3F' , 17  , 172 ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:IA = [s:gui_light_gray, s:gui_med_gray_hi, s:cterm_light_gray, s:cterm_med_gray_hi, '']$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:IA = [ s:N1[1] , s:N3[1] , s:N1[3] , s:N3[3] , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:IA = [ s:N1[1] , s:N3[1] , s:N1[3] , s:N3[3] , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:IA = [ s:N1[1] , s:N3[1] , s:N1[3] , s:N3[3] , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:IA = [ s:N3[1] , s:N2[1] , s:N3[3] , s:N2[3] , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let s:IA = [s:gui_dark_gray, s:gui_med_gray_hi, s:cterm_light_gray, s:cterm_med_gray_hi, '']$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let s:IA = [s:gui_dark_gray, s:gui_med_gray_hi, s:cterm_lightlight_gray, s:cterm_med_gray_hi/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:IA = [ '' , s:N3[1] , 244 , 235 , '' ] " [ color of bar on inactive splits ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:IA = [ '#767676' , s:N3[1] , 243 , s:N3[3] , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:IA = [s:gui_light_gray, s:gui_med_gray_hi, s:cterm_light_gray, s:cterm_med_gray_hi, '']$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:IA = [ '#4e4e4e' , '#204458' , 59 , 23 , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:IA = [s:middle[1], s:innerbg[1], s:middle[3], s:innerbg[0]]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:IA = [ s:N2[1], s:N3[1], s:N2[3], s:N3[3], '' ]	$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:IA = [ '#4e4e4e' , '#002b2b' , 59 , 23 , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:IA = [ '#1b1d1e' , '#465457' , 233 , 67 , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:IA = [s:gui_light_gray, s:gui_med_gray_hi, s:cterm_light_gray, s:cterm_med_gray_hi, '']$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:IA = [ '#585858' , '#e4e4e4' , 240 , 254 , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:IA = [ '#666666' , '#262626' , 242 , 235 , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:IA = [ s:N2[0] , s:N3[1] , s:N2[2] , s:N3[3] , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:IA = [ '#5e5e5e' , '#222222' , 59 , 235 , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:IA = [ s:N2[1] , s:N3[1] , s:N2[3] , s:N3[3] , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:IA  = [ '#4e4e4e' , s:guibg  , 239 , s:termbg  , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:IA = [ '#a1a1a1' , '#dddddd' , 145 , 188 , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:IA  = [ '#4e4e4e' , s:guibg  , 239 , s:termbg  , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:IA = [ '#777777' , '#c7c7c7' , 244 , 251 , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:IA = [ '#767676' , s:N3[1] , 243 , s:N3[3] , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:IA = [ '#767676' , s:N3[1] , 243 , s:N3[3] , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:IA = [s:darkgray[1], s:outerbg[1], s:innerbg[0], s:innerbg[0]]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:IA = [ s:N2[1], s:N3[1], s:N2[3], s:N3[3], '' ]	$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:IA = [ s:N1[1] , s:N3[1] , s:N1[3] , s:N3[3] , '' ]$/;"	v
s:IA	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:IA = [ '#767676' , s:N3[1] , 243 , s:N3[3] , '' ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:IA1 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:IA1 = [ '#4e4e4e', '#1c1c1c', 239, 234, '' ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:IA1 = [ '#585858' , '#E4E4E4' , 59 , 188 , '' ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:IA1 = [ '#777777' , '#4a4a4a' , 240 , 237     , '' ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:IA1 = [ '#282C34', '#ABB2BF', s:term_black, s:term_white ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:IA1 = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:IA1 = [ s:BG, s:GREY2, s:TERM_BG, s:TERM_GREY2 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:IA1 = [ s:BG, s:GREY2, s:TERM_BG, s:TERM_GREY2 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:IA1 = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:IA1 = [ '#b2b2b2' , '#4a4a4a' , 247 , 238 , '' ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:IA1 = [ '#666666' , '#b2b2b2' , 242 , 249 , '' ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:IA1 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:IA1 = [ s:gui_black, s:gui_purple, s:cterm_black, s:cterm_purple ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:IA1   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:IA1 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:IA1 = [ '#0E3B4F' , '#FEFCF9' , 239 , 234 , '' ]$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:IA1 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IA1	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:IA1 = [ '#6c6c6c' , '#b2b2b2' , 242 , 249 , '' ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:IA2 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:IA2 = [ '#4e4e4e', '#262626', 239, 235, '' ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:IA2 = [ '#E4E4E4' , '#466D79' , 188 , 60 , '' ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:IA2 = [ '#777777' , '#3a3a3a' , 242 , 236     , '' ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:IA2 = [ '#ABB2BF', '#3E4452', s:term_white, s:term_grey ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:IA2 = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:IA2 = s:N2$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:IA2 = s:N2$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:IA2 = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:IA2 = [ '#b2b2b2' , '#4a4a4a' , 247 , 238 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:IA2 = [ '#8a8a8a' , '#d0d0d0' , 245 , 252 , '' ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:IA2 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:IA2 = [ s:gui_purple, s:gui_black, s:cterm_purple, s:cterm_black ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:IA2   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:IA2 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:IA2 = [ '#0E3B4F' , '#DDC6AF' , 239 , 235 , '' ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:IA2 = [ '#4e4e4e' , s:guisep , 239 , s:termsep , '' ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:IA2 = [ '#4e4e4e' , s:guibg2 , 239 , s:termbg2 , '' ]$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:IA2 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IA2	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:IA2 = [ '#8a8a8a' , '#d0d0d0' , 245 , 252 , '' ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:IA3 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:IA3 = [ '#4e4e4e', '#1c1c1c', 239, 234, 'bold' ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:IA3 = [ '#EEEEEE' , '#324E59' , 231 , 59 , '' ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:IA3 = [ '#999999' , s:N3[1]   , 244 , s:N3[3] , '' ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:IA3 = s:N2$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:IA3 = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:IA3 = [ s:GREY2, s:BG, s:TERM_GREY2, s:TERM_BG ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:IA3 = [ s:GREY2, s:BG, s:TERM_GREY2, s:TERM_BG ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:IA3 = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:IA3 = [ '#b2b2b2' , '#4a4a4a' , 247 , 238 , '' ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:IA3 = [ '#a8a8a8' , '#ffffff' , 248 , 255 , '' ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:IA3 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:IA3 = [ s:gui_purple, s:gui_black, s:cterm_purple, s:cterm_black ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:IA3   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:IA3 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:IA3 = [ '#ffffff' , '#A28E79' , 239 , 236 , '' ]$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:IA3 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IA3	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:IA3 = [ '#a8a8a8' , '#eeeeee' , 248 , 255 , '' ]$/;"	v
s:IAc	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:IAc = [s:gray[1], s:outerbg[1], s:outerbg[0], s:outerbg[0]]$/;"	v
s:IM	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:IM = [ s:base00 , 235 ]$/;"	v
s:IM	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:IM = [ '#40403C' , 236 ]$/;"	v
s:IM	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:IM = [ '#242321' , 235 ]$/;"	v
s:IM	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:IM = [ '#40403C' , 7 ]$/;"	v
s:IM	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:IM = [ '#40403C' , 7 ]$/;"	v
s:IM	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:IM = [ '#242321' , 235 ]$/;"	v
s:IM	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:IM = [ '#40403C' , 238 ]$/;"	v
s:IN1	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:IN1 = [s:guiGray, s:gui01, s:ctermGray, s:cterm01]$/;"	v
s:IN1	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:IN1 = [ s:guiGray , s:guiDarkGray , s:ctermGray , s:ctermDarkGray ]$/;"	v
s:IN1	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:IN1 = [ s:guiGray , s:gui01 , s:ctermGray , s:cterm01 ]$/;"	v
s:IN1	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:IN1 = [ s:gui00 , s:gui01 , s:cterm00 , s:cterm01 ]$/;"	v
s:IN1	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:IN1 = [ s:lh_gui8 , s:lh_gui1 , s:lh_cterm8, s:lh_cterm1 ]$/;"	v
s:IN1	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:IN1 = [s:guiGray, s:gui01, s:ctermGray, s:cterm01]$/;"	v
s:IN2	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:IN2 = [s:gui02, s:guiAlmostBlack, s:cterm02, s:ctermAlmostBlack]$/;"	v
s:IN2	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:IN2 = [ s:guiBgPurple , s:guiShadow , s:ctermBgPurple , s:ctermShadow ]$/;"	v
s:IN2	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:IN2 = [ s:gui02 , s:gui00 , s:cterm02 , s:cterm00 ]$/;"	v
s:IN2	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:IN2 = [ s:gui02 , s:gui00 , s:cterm02 , s:cterm00 ]$/;"	v
s:IN2	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:IN2 = [ s:lh_gui8 , s:lh_gui1 , s:lh_cterm8, s:lh_cterm1 ]$/;"	v
s:IN2	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:IN2 = [s:gui02, s:guiAlmostBlack, s:cterm02, s:ctermAlmostBlack]$/;"	v
s:IN3	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:IN3 = [s:gui02, s:guiAlmostBlack, s:cterm02, s:ctermAlmostBlack]$/;"	v
s:IN3	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:IN3 = [ s:guiBgPurple , s:guiShadow , s:ctermBgPurple , s:ctermShadow ]$/;"	v
s:IN3	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:IN3 = [ s:gui02 , s:gui00 , s:cterm02 , s:cterm00 ]$/;"	v
s:IN3	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:IN3 = [ s:gui02 , s:gui00 , s:cterm02 , s:cterm00 ]$/;"	v
s:IN3	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:IN3 = [ s:lh_gui8 , s:lh_gui1 , s:lh_cterm8, s:lh_cterm1 ]$/;"	v
s:IN3	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:IN3 = [s:gui02, s:guiAlmostBlack, s:cterm02, s:ctermAlmostBlack]$/;"	v
s:INDENT_AFTER_KEYWORD	autoload/plugged/vim-polyglot/indent/ls.vim	/^let s:INDENT_AFTER_KEYWORD = '^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:INDENT_AFTER_KEYWORD	autoload/plugged/vim-polyglot/indent/moon.vim	/^let s:INDENT_AFTER_KEYWORD = '^\\%(if\\|unless\\|else\\|for\\|while\\|with\\|elseif\\|'$/;"	v
s:INDENT_AFTER_OPERATOR	autoload/plugged/vim-polyglot/indent/ls.vim	/^let s:INDENT_AFTER_OPERATOR = '\\%([([{:=]\\|[-=]>\\)$'$/;"	v
s:INDENT_AFTER_OPERATOR	autoload/plugged/vim-polyglot/indent/moon.vim	/^let s:INDENT_AFTER_OPERATOR = '\\%([([{:=]\\|[-=]>\\)$'$/;"	v
s:IS_WINDOWS	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:IS_WINDOWS = has('win32')$/;"	v
s:IdrisCommand	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! s:IdrisCommand(...)$/;"	f
s:IdrisCommand	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! s:IdrisCommand(...)$/;"	f
s:InBracket	autoload/plugged/vim-polyglot/autoload/pony.vim	/^function! s:InBracket(...)$/;"	f
s:InComment	autoload/plugged/vim-polyglot/autoload/pony.vim	/^function! s:InComment(...)$/;"	f
s:InComment2	autoload/plugged/vim-polyglot/autoload/pony.vim	/^function! s:InComment2(...)$/;"	f
s:InCommentOrLiteral	autoload/plugged/vim-polyglot/autoload/pony.vim	/^function! s:InCommentOrLiteral(...)$/;"	f
s:InKeyword	autoload/plugged/vim-polyglot/autoload/pony.vim	/^function! s:InKeyword(...)$/;"	f
s:InLiteral	autoload/plugged/vim-polyglot/autoload/pony.vim	/^function! s:InLiteral(...)$/;"	f
s:InLiteral2	autoload/plugged/vim-polyglot/autoload/pony.vim	/^function! s:InLiteral2(...)$/;"	f
s:InMultiVarStatement	autoload/plugged/vim-polyglot/indent/solidity.vim	/^function s:InMultiVarStatement(lnum)$/;"	f
s:InMultiVarStatement	autoload/plugged/vim-polyglot/indent/typescript.vim	/^function s:InMultiVarStatement(lnum)$/;"	f
s:InOneLineScope	autoload/plugged/vim-polyglot/indent/solidity.vim	/^function s:InOneLineScope(lnum)$/;"	f
s:InOneLineScope	autoload/plugged/vim-polyglot/indent/typescript.vim	/^function s:InOneLineScope(lnum)$/;"	f
s:InString	autoload/plugged/vim-polyglot/indent/graphql.vim	/^function s:InString(lnum, col)$/;"	f
s:IncreaseFunc	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:IncreaseFunc(type)$/;"	f
s:IncreaseIndent	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:IncreaseIndent()$/;"	f
s:IndentError	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:IndentError(msg, token, stack)$/;"	f
s:IndentLevel	autoload/plugged/vim-polyglot/ftplugin/svelte/fold.vim	/^function! s:IndentLevel(lnum)$/;"	f
s:IndentWithContinuation	autoload/plugged/vim-polyglot/indent/solidity.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
s:IndentWithContinuation	autoload/plugged/vim-polyglot/indent/typescript.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
s:IndentingKeywordInMSL	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:IndentingKeywordInMSL(msl_info) abort$/;"	f
s:InitCwds	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:InitCwds()$/;"	f
s:InnerPos	autoload/plugged/vim-polyglot/autoload/pony.vim	/^function! s:InnerPos(x, y)$/;"	f
s:InsertToc	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:InsertToc(format, ...)$/;"	f
s:InsideMultilineString	autoload/plugged/vim-polyglot/indent/puppet.vim	/^function! s:InsideMultilineString(lnum)$/;"	f
s:InsideTag	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:InsideTag(foundHtmlString)$/;"	f
s:InsideTag	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:InsideTag(foundHtmlString)$/;"	f
s:InstallOptions	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:InstallOptions(...)abort$/;"	f
s:IsAssignment	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsAssignment(str, pos) abort$/;"	f
s:IsAttributeLine	autoload/plugged/vim-polyglot/indent/cs.vim	/^function! s:IsAttributeLine(line)$/;"	f
s:IsBlankLine	autoload/plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsBlankLine(line)$/;"	f
s:IsBlock	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function s:IsBlock()$/;"	f
s:IsBlockEnd	autoload/plugged/vim-polyglot/indent/svelte.vim	/^function! s:IsBlockEnd(cursyns, curline)$/;"	f
s:IsBlockStart	autoload/plugged/vim-polyglot/indent/svelte.vim	/^function! s:IsBlockStart(prevsyns)$/;"	f
s:IsCatchStandalone	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:IsCatchStandalone(lnum, i)$/;"	f
s:IsColComment	autoload/plugged/vim-polyglot/indent/pgsql.vim	/^function! s:IsColComment(lnum, cnum)$/;"	f
s:IsComment	autoload/plugged/vim-polyglot/indent/coffee.vim	/^function! s:IsComment(lnum, col)$/;"	f
s:IsComment	autoload/plugged/vim-polyglot/indent/ls.vim	/^function! s:IsComment(linenum, col)$/;"	f
s:IsComment	autoload/plugged/vim-polyglot/indent/moon.vim	/^function! s:IsComment(linenum, col)$/;"	f
s:IsCommentLine	autoload/plugged/vim-polyglot/indent/ls.vim	/^function! s:IsCommentLine(linenum)$/;"	f
s:IsCommentLine	autoload/plugged/vim-polyglot/indent/moon.vim	/^function! s:IsCommentLine(linenum)$/;"	f
s:IsCommentLine	autoload/plugged/vim-polyglot/indent/swift.vim	/^function! s:IsCommentLine(lnum)$/;"	f
s:IsCommentOrString	autoload/plugged/vim-polyglot/indent/coffee.vim	/^function! s:IsCommentOrString(lnum, col)$/;"	f
s:IsCommentOrString	autoload/plugged/vim-polyglot/indent/ls.vim	/^function! s:IsCommentOrString(linenum, col)$/;"	f
s:IsCommentOrString	autoload/plugged/vim-polyglot/indent/moon.vim	/^function! s:IsCommentOrString(linenum, col)$/;"	f
s:IsCompilerDirective	autoload/plugged/vim-polyglot/indent/cs.vim	/^function! s:IsCompilerDirective(line)$/;"	f
s:IsConflicted	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:IsConflicted() abort$/;"	f
s:IsContOne	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function s:IsContOne(cont)$/;"	f
s:IsContinued	autoload/plugged/vim-polyglot/autoload/pony.vim	/^function! s:IsContinued(lnum)$/;"	f
s:IsContinuedLine	autoload/plugged/vim-polyglot/autoload/fish.vim	/^function! s:IsContinuedLine(lnum)$/;"	f
s:IsExcludedFromIndent	autoload/plugged/vim-polyglot/indent/swift.vim	/^function! s:IsExcludedFromIndent()$/;"	f
s:IsExcludedFromIndentAtPosition	autoload/plugged/vim-polyglot/indent/swift.vim	/^function! s:IsExcludedFromIndentAtPosition(line, column)$/;"	f
s:IsHeaderLine	autoload/plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsHeaderLine(line)$/;"	f
s:IsInBlock	autoload/plugged/vim-polyglot/indent/hog.vim	/^function s:IsInBlock(lnum)$/;"	f
s:IsInClassDef	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
s:IsInComment	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:IsInComment(pos)$/;"	f
s:IsInCommentOrString	autoload/plugged/vim-polyglot/indent/lua.vim	/^function s:IsInCommentOrString(lnum, col)$/;"	f
s:IsInMultilineComment	autoload/plugged/vim-polyglot/indent/solidity.vim	/^function s:IsInMultilineComment(lnum, col)$/;"	f
s:IsInRubyGroup	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInRubyGroup(groups, lnum, col) abort$/;"	f
s:IsInString	autoload/plugged/vim-polyglot/indent/falcon.vim	/^function s:IsInString(lnum, col)$/;"	f
s:IsInString	autoload/plugged/vim-polyglot/indent/json.vim	/^function s:IsInString(lnum, col)$/;"	f
s:IsInString	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInString(lnum, col) abort$/;"	f
s:IsInString	autoload/plugged/vim-polyglot/indent/solidity.vim	/^function s:IsInString(lnum, col)$/;"	f
s:IsInString	autoload/plugged/vim-polyglot/indent/typescript.vim	/^function s:IsInString(lnum, col)$/;"	f
s:IsInStringDelimiter	autoload/plugged/vim-polyglot/indent/falcon.vim	/^function s:IsInStringDelimiter(lnum, col)$/;"	f
s:IsInStringDelimiter	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInStringDelimiter(lnum, col) abort$/;"	f
s:IsInStringOrComment	autoload/plugged/vim-polyglot/indent/falcon.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
s:IsInStringOrComment	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInStringOrComment(lnum, col) abort$/;"	f
s:IsInStringOrComment	autoload/plugged/vim-polyglot/indent/solidity.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
s:IsInStringOrComment	autoload/plugged/vim-polyglot/indent/typescript.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
s:IsInStringOrDocumentation	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInStringOrDocumentation(lnum, col) abort$/;"	f
s:IsLiStart	autoload/plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsLiStart(line)$/;"	f
s:IsLineAtomContinuation	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:IsLineAtomContinuation(lnum)$/;"	f
s:IsLineComment	autoload/plugged/vim-polyglot/indent/pgsql.vim	/^function! s:IsLineComment(lnum)$/;"	f
s:IsLineComment	autoload/plugged/vim-polyglot/indent/solidity.vim	/^function s:IsLineComment(lnum, col)$/;"	f
s:IsLineStringContinuation	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:IsLineStringContinuation(lnum)$/;"	f
s:IsMkdCode	autoload/plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsMkdCode(lnum)$/;"	f
s:IsPosInClassDef	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
s:IsStartingDelimiter	autoload/plugged/vim-polyglot/indent/blade.vim	/^function! s:IsStartingDelimiter(lnum)$/;"	f
s:IsString	autoload/plugged/vim-polyglot/autoload/fish.vim	/^function! s:IsString(lnum, col)$/;"	f
s:IsString	autoload/plugged/vim-polyglot/indent/coffee.vim	/^function! s:IsString(lnum, col)$/;"	f
s:IsString	autoload/plugged/vim-polyglot/indent/ls.vim	/^function! s:IsString(linenum, col)$/;"	f
s:IsString	autoload/plugged/vim-polyglot/indent/moon.vim	/^function! s:IsString(linenum, col)$/;"	f
s:IsSwitch	autoload/plugged/vim-polyglot/autoload/fish.vim	/^function! s:IsSwitch(lnum)$/;"	f
s:IsSwitch	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function s:IsSwitch()$/;"	f
s:IsSyntaxNameExcludedFromIndent	autoload/plugged/vim-polyglot/indent/swift.vim	/^function! s:IsSyntaxNameExcludedFromIndent(name)$/;"	f
s:J	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^  let s:J = s:V.import('Web.JSON')$/;"	v
s:JobOpts	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JobOpts(cmd, env) abort$/;"	f
s:Jump_Back	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! s:Jump_Back()$/;"	f
s:Jump_Forward	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! s:Jump_Forward()$/;"	f
s:KEYWORDPATTERN	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:KEYWORDPATTERN = '\\m@\\?\\h\\k*!\\?'$/;"	v
s:KEYWORD_PAIRS	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:KEYWORD_PAIRS = [$/;"	v
s:KIND_BLOCK_FOLLOW	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let s:KIND_BLOCK_FOLLOW = 1$/;"	v
s:KIND_BLOCK_PREC	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let s:KIND_BLOCK_PREC = 0$/;"	v
s:KIND_FUNC_BEGIN	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let s:KIND_FUNC_BEGIN = 2$/;"	v
s:KIND_FUNC_END	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let s:KIND_FUNC_END = 3$/;"	v
s:KeyMap	autoload/plugged/NERDTree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:KeyMap.Add	autoload/plugged/NERDTree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
s:KeyMap.All	autoload/plugged/NERDTree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
s:KeyMap.BindAll	autoload/plugged/NERDTree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
s:KeyMap.Compare	autoload/plugged/NERDTree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Compare(keyMap1, keyMap2)$/;"	f
s:KeyMap.Create	autoload/plugged/NERDTree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
s:KeyMap.FindFor	autoload/plugged/NERDTree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
s:KeyMap.Invoke	autoload/plugged/NERDTree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
s:KeyMap.Remove	autoload/plugged/NERDTree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
s:KeyMap.bind	autoload/plugged/NERDTree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
s:KeyMap.invoke	autoload/plugged/NERDTree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
s:Keywordprg	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Keywordprg() abort$/;"	f
s:L2U_AutosubReset	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_AutosubReset()$/;"	f
s:L2U_InsertCompleteDoneAutocommand	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_InsertCompleteDoneAutocommand()$/;"	f
s:L2U_InsertInsertLeaveAutocommand	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_InsertInsertLeaveAutocommand()$/;"	f
s:L2U_InsertLeaveClenup	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function s:L2U_InsertLeaveClenup()$/;"	f
s:L2U_ReinstateMapping	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_ReinstateMapping(mmdict)$/;"	f
s:L2U_RemoveCompleteDoneAutocommand	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_RemoveCompleteDoneAutocommand()$/;"	f
s:L2U_ResetLastCompletionInfo	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_ResetLastCompletionInfo()$/;"	f
s:L2U_RestoreCompleteopt	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_RestoreCompleteopt()$/;"	f
s:L2U_SetAutoSub	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetAutoSub(wait_insert_enter)$/;"	f
s:L2U_SetCompleteopt	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetCompleteopt()$/;"	f
s:L2U_SetFallbackMapping	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetFallbackMapping(s, k)$/;"	f
s:L2U_SetKeymap	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetKeymap()$/;"	f
s:L2U_SetTab	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetTab(wait_insert_enter)$/;"	f
s:L2U_Setup	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_Setup()$/;"	f
s:L2U_SetupGlobal	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetupGlobal()$/;"	f
s:L2U_UnsetAutoSub	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_UnsetAutoSub()$/;"	f
s:L2U_UnsetKeymap	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_UnsetKeymap()$/;"	f
s:L2U_UnsetTab	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_UnsetTab()$/;"	f
s:L2U_deprecated_options	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_deprecated_options()$/;"	f
s:L2U_file_type_regex	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_file_type_regex(ft)$/;"	f
s:L2U_fix_compose_chars	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_fix_compose_chars(uni)$/;"	f
s:L2U_ismatch	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_ismatch()$/;"	f
s:L2U_longest_common_prefix	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_longest_common_prefix(partmatches)$/;"	f
s:L2U_partmatches_sort	autoload/plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_partmatches_sort(p1, p2)$/;"	f
s:LGREY	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:LGREY  = '#EEEEEE'$/;"	v
s:LGREY	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:LGREY  = '#EEEEEE'$/;"	v
s:LastTagIsOpen	autoload/plugged/vim-polyglot/indent/mp.vim	/^function! s:LastTagIsOpen(line)$/;"	f
s:LastValidMatchEnd	autoload/plugged/vim-polyglot/indent/mp.vim	/^function! s:LastValidMatchEnd(line, pat, start)$/;"	f
s:LeadingOperator	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:LeadingOperator(cline_info) abort$/;"	f
s:Left	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^let s:Left = s:Go."\\<LEFT>"$/;"	v
s:LineHasOpeningBrackets	autoload/plugged/vim-polyglot/indent/json.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
s:LineHasOpeningBrackets	autoload/plugged/vim-polyglot/indent/solidity.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
s:LineHasOpeningBrackets	autoload/plugged/vim-polyglot/indent/typescript.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
s:LinesError	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:LinesError(...) abort$/;"	f
s:LiveScriptCompile	autoload/plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompile(startline, endline, args)$/;"	f
s:LiveScriptCompileClose	autoload/plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileClose()$/;"	f
s:LiveScriptCompileComplete	autoload/plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileComplete(arg, cmdline, cursor)$/;"	f
s:LiveScriptCompileResetVars	autoload/plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileResetVars()$/;"	f
s:LiveScriptCompileUpdate	autoload/plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileUpdate(startline, endline)$/;"	f
s:LiveScriptCompileWatchUpdate	autoload/plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileWatchUpdate()$/;"	f
s:LoadDefaultSyntax	autoload/plugged/vim-polyglot/syntax/svelte.vim	/^function! s:LoadDefaultSyntax(group, type)$/;"	f
s:LoadFullSyntax	autoload/plugged/vim-polyglot/syntax/svelte.vim	/^function! s:LoadFullSyntax(group, type)$/;"	f
s:LoadSyntax	autoload/plugged/vim-polyglot/syntax/svelte.vim	/^function! s:LoadSyntax(group, type)$/;"	f
s:LoadVimSesn	autoload/plugged/vim-polyglot/extras/menu.vim	/^fun! s:LoadVimSesn()$/;"	f
s:Load_annotation	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Load_annotation(annot_file_name)$/;"	f
s:LoadedExtensions	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:LoadedExtensions(...) abort$/;"	f
s:Locate_annotation	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  function! s:Locate_annotation()$/;"	f
s:Log	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:Log(s)$/;"	f
s:Log	autoload/plugged/vim-polyglot/indent/svelte.vim	/^function! s:Log(msg)$/;"	f
s:LogFlushQueue	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:LogFlushQueue(state, dir) abort$/;"	f
s:LogParse	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:LogParse(state, dir, line) abort$/;"	f
s:LookingAt	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function s:LookingAt()$/;"	f
s:MAX_LOOKBACK	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MAX_LOOKBACK	autoload/plugged/vim-polyglot/indent/ls.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MAX_LOOKBACK	autoload/plugged/vim-polyglot/indent/moon.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MainBlockIndent	autoload/plugged/vim-polyglot/indent/ada.vim	/^function s:MainBlockIndent (prev_indent, prev_lnum, blockstart, stop_at)$/;"	f
s:Map	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Map(mode, lhs, rhs, ...) abort$/;"	f
s:Map	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Map(mode, lhs, rhs, ...) abort$/;"	f
s:Map	autoload/plugged/vim-polyglot/indent/twig.vim	/^function! s:Map(Fun, list)$/;"	f
s:MapMotion	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MapMotion(lhs, rhs) abort$/;"	f
s:MapNormVis	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MapNormVis(rhs,lhs)$/;"	f
s:MapNotHasmapto	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MapNotHasmapto(lhs, rhs)$/;"	f
s:MarkdownClearSyntaxVariables	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MarkdownClearSyntaxVariables()$/;"	f
s:MarkdownHighlightSources	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MarkdownHighlightSources(force)$/;"	f
s:MarkdownRefreshSyntax	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MarkdownRefreshSyntax(force)$/;"	f
s:Markdown_GetUrlForPosition	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:Markdown_GetUrlForPosition(lnum, col)$/;"	f
s:Match	autoload/plugged/vim-polyglot/indent/falcon.vim	/^function s:Match(lnum, regex)$/;"	f
s:Match	autoload/plugged/vim-polyglot/indent/json.vim	/^function s:Match(lnum, regex)$/;"	f
s:Match	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:Match(lnum, regex) abort$/;"	f
s:Match	autoload/plugged/vim-polyglot/indent/solidity.vim	/^function s:Match(lnum, regex)$/;"	f
s:Match	autoload/plugged/vim-polyglot/indent/typescript.vim	/^function s:Match(lnum, regex)$/;"	f
s:MatchAt	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:MatchAt(lnum, col, pattern) abort$/;"	f
s:MatchCount	autoload/plugged/vim-polyglot/indent/pov.vim	/^function! s:MatchCount(line, rexp)$/;"	f
s:MatchCursor	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:MatchCursor(pattern) abort$/;"	f
s:MatchECR	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:MatchECR(...) abort$/;"	f
s:MatchECRControl	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:MatchECRControl(...) abort$/;"	f
s:MatchLast	autoload/plugged/vim-polyglot/indent/falcon.vim	/^function s:MatchLast(lnum, regex)$/;"	f
s:Match_borders	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Match_borders(mode)$/;"	f
s:Match_data	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Match_data()$/;"	f
s:MaxLookback	autoload/plugged/vim-polyglot/indent/ls.vim	/^function! s:MaxLookback(startlinenum)$/;"	f
s:MaxLookback	autoload/plugged/vim-polyglot/indent/moon.vim	/^function! s:MaxLookback(startlinenum)$/;"	f
s:MenuController	autoload/plugged/NERDTree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuController.New	autoload/plugged/NERDTree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
s:MenuController._allIndexesFor	autoload/plugged/NERDTree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
s:MenuController._current	autoload/plugged/NERDTree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
s:MenuController._cursorDown	autoload/plugged/NERDTree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
s:MenuController._cursorUp	autoload/plugged/NERDTree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
s:MenuController._echoPrompt	autoload/plugged/NERDTree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
s:MenuController._handleKeypress	autoload/plugged/NERDTree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
s:MenuController._nextIndexFor	autoload/plugged/NERDTree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
s:MenuController._restoreOptions	autoload/plugged/NERDTree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
s:MenuController._saveOptions	autoload/plugged/NERDTree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
s:MenuController._setCmdheight	autoload/plugged/NERDTree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
s:MenuController.isMinimal	autoload/plugged/NERDTree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.isMinimal()$/;"	f
s:MenuController.showMenu	autoload/plugged/NERDTree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
s:MenuItem	autoload/plugged/NERDTree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:MenuItem.All	autoload/plugged/NERDTree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
s:MenuItem.AllEnabled	autoload/plugged/NERDTree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
s:MenuItem.Create	autoload/plugged/NERDTree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
s:MenuItem.CreateSeparator	autoload/plugged/NERDTree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
s:MenuItem.CreateSubmenu	autoload/plugged/NERDTree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
s:MenuItem.enabled	autoload/plugged/NERDTree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
s:MenuItem.execute	autoload/plugged/NERDTree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
s:MenuItem.isSeparator	autoload/plugged/NERDTree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
s:MenuItem.isSubmenu	autoload/plugged/NERDTree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
s:MergeHead	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MergeHead(...) abort$/;"	f
s:MergeSubcommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MergeSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:MergetoolSubcommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MergetoolSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:MessageCfile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MessageCfile(...) abort$/;"	f
s:ModifierFlags	autoload/plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! s:ModifierFlags()$/;"	f
s:Mods	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Mods(mods, ...) abort$/;"	f
s:ModuloIndent	autoload/plugged/vim-polyglot/indent/pgsql.vim	/^function! s:ModuloIndent(ind)$/;"	f
s:Move	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Move(force, rename, destination) abort$/;"	f
s:MoveToCurHeader	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToCurHeader()$/;"	f
s:MoveToNextHeader	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToNextHeader()$/;"	f
s:MoveToNextSiblingHeader	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToNextSiblingHeader()$/;"	f
s:MoveToParentHeader	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToParentHeader()$/;"	f
s:MoveToPreviousHeader	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToPreviousHeader()$/;"	f
s:MoveToPreviousSiblingHeader	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToPreviousSiblingHeader()$/;"	f
s:MultilineStringOrLineComment	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:MultilineStringOrLineComment(cline_info) abort$/;"	f
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:N1 = [s:gui07, s:gui0D, s:cterm07, s:cterm0D]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:N1 = [s:gui_dark_gray, s:gui_green, s:cterm_dark_gray, s:cterm_green]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:N1 = [ '#3D424D' , '#C2D94C' , 59  , 149 ] " guifg guibg ctermfg ctermbg$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:N1 = [ '#6C7680' , '#86B300' , 66  , 106 ] " guifg guibg ctermfg ctermbg$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:N1 = [ '#212733' , '#BBE67E' , 0   , 114 ] " guifg guibg ctermfg ctermbg$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:N1 = [ '#141413' , '#aeee00' , 232 , 154 ] " blackestgravel & lime$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let s:N1 = [s:gui_dark_gray, s:gui_green, s:cterm_dark_gray, s:cterm_green]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:N1 = [ s:base00 , s:base0D , 235 , 81 ]           " [ color of body and line-info ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:N1 = [s:gui_normalfg, s:gui_normalbg, s:cterm_normalfg, s:cterm_normalbg] " Outside blocks/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:N1 = [ '#141413' , '#CAE682' ,  232 , 'green' ] " mode$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:N1 = [ '#121212', '#5f87ff', 233, 69  ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:N1 = [s:gui_dark_gray, s:gui_green, s:cterm_dark_gray, s:cterm_green]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:N1 = [ '#ffffff' , '#1f7ad8' , 231  , 36 ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:N1   = [ '#585858' , '#E4E4E4' , 59  , 188 ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let s:N1   = [ '#00005f' , '#dfff00' , 17  , 190 ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:N1 = [ '#005f00' , '#afd700' , 22  , 148, '' ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:N1 = [ '#282C34', '#98C379', s:term_black, s:term_green ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:N1 = [s:outerfg[1], s:gray[1], s:outerfg[0], s:gray[0]]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:N1 = [ '#005f00' , '#afd700' , 22  , 148 ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:N1 = [ s:guiSilver , s:guiLavender , s:ctermSilver , s:ctermLavender  ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:N1 = [ s:BG, s:GREEN, s:TERM_BG, s:TERM_GREEN ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:N1 = [ s:BG, s:GREEN, s:TERM_BG, s:TERM_GREEN ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:N1 = [ '#282a2e' , '#c5c8c6' , 'black' , 15      ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:N1 = [ s:gui07 , s:gui0D , s:cterm07 , s:cterm0D  ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:N1 = [ s:gui07 , s:gui0D , s:ctermAsh , s:ctermBlood ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:N1 = [ '#e2e2e2' , '#4f3598' , 254 , 56  ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:N1 = [ '#081c8c' , '#f8f6f2','18','15']$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:N1 = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:N1 = [ s:lh_gui1 , s:lh_gui2 , s:lh_cterm1, s:lh_cterm2 ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:N1 = [ '#ffffff' , '#005252' , 231  , 36 ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:N1 = [ '#080808' , '#e6db74' , 232 , 144 ] " mode$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:N1 = [s:gui_normalfg, s:gui_normalbg, s:cterm_normalfg, s:cterm_normalbg] " Outside blocks/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:N1 = [ s:gui_black, s:gui_cyan, s:cterm_black, s:cterm_cyan ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:N1   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:N1 = [s:gui_normalfg, s:gui_normalbg, s:cterm_normalfg, s:cterm_normalbg]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:N1 = [s:gui_dark_gray, '#87d7ff', s:cterm_dark_gray, 117]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:N1 = [ '#585858' , '#e4e4e4' , 240 , 254 ] " Mode$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:N1 = [ '#3A3A3A' , '#C0D8F8' , 254 , 237 ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:N1 = [ '#005f00' , '#afd700' , 22  , 148 ] " darkestgreen   & brightgreen$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:N1   = [ '#0E3B4F' , '#FFEEE5' , 17  , 190 ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:N1 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:N1 = [ '#005f00' , '#1d1f21' , 7  , 8 ]    " darkestgreen   & brightgreen$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:N1 = [ '#00dfff' , s:guibg , 45  , s:termbg ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:N1 = [s:guiWhite, s:gui0D, s:ctermWhite, s:cterm0D]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:N1 = [ '#414141' , '#e1e1e1' , 59 , 188 ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:N1 = [ s:guibg , '#00dfff' , s:termbg , 45 ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:N1 = [ '#343434' , '#a0a0a0' , 237 , 248 ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:N1 = [ '#141413' , '#CAE682' , 232 , 2 ] " mode$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:N1 = [ '#f0f0f0' , '#86CD74' , 15,  2 ] " mode$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:N1 = [s:outerfg[1], s:outerbg[1], s:outerfg[0], s:gray[0]]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:N1 = [ '#005f00' , '#f8f6f2','22','15']$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:N1 = ['#FFFFFF', '#5F87FF', 15, 69]  " Outside blocks in normal mode (mode and file positi/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:N1 = [ '#bcbcbc' , '#875faf' , 250 , 97  ]$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:N1 = [ '#141413' , '#CAE682' , 232 , 192 ] " mode$/;"	v
s:N1	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:N1 = [ '#eeeeee' , '#005fff' , 255 , 27  ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:N2 = [s:guiWhite, s:gui01, s:ctermWhite, s:cterm01]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:cterm_light_gray, s:cterm_med_gray_lo]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:N2 = [ '#C2D94C' , '#304357' , 149 , 59  ] " guifg guibg ctermfg ctermbg$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:N2 = [ '#86B300' , '#6C7680' , 106 , 66  ] " guifg guibg ctermfg ctermbg$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:N2 = [ '#BBE67E' , '#212733' , 114 , 0   ] " guifg guibg ctermfg ctermbg$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:N2 = [ '#f4cf86' , '#45413b' , 222 , 238 ] " dirtyblonde    & deepgravel$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:cterm_light_gray, s:cterm_med_gray_lo]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let s:N2 = [s:gui_lightlight_gray, s:gui_med_gray_lo, s:cterm_lightlight_gray, s:cterm_med_g/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:N2 = [ s:base0D , s:base00 , 81 , 235 ]           " [ diffcount and file-info ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:N2 = [s:gui_termfg2, s:gui_termbg2, s:cterm_normalbg, s:cterm_termbg2]     " Middle block$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:N2 = [ '#CAE682' , '#32322F' , 'green' , 235 ]  " info$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:N2 = [ '#5f87ff', '#262626', 69 , 235 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:cterm_light_gray, s:cterm_med_gray_lo]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:N2 = [ '#ffffff' , '#8cc2fd' , 231 , 29 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:N2   = [ '#E4E4E4' , '#0087AF' , 188 , 31 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let s:N2   = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:N2 = [ '#bbbbbb' , '#444444' , 250 , 238, '' ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:N2 = [ '#ABB2BF', '#3E4452', s:term_white, s:term_grey ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:N2 = [ '#93a1a1' , '#586e75' , 245 , 240 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:N2 = [ s:guiWhite , s:guiDarkGray , s:ctermWhite , s:ctermDarkGray  ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:N2 = [ s:GREY1, s:GREY2, s:TERM_GREY1, s:TERM_GREY2 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:N2 = [ s:GREY1, s:GREY2, s:TERM_GREY1, s:TERM_GREY2 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:N2 = [ '#c5c8c6' , '#373b41' , 15      , 8       ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:N2 = [ s:guiWhite , s:gui01 , s:ctermWhite , s:cterm01  ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:N2 = [ s:guiWhite , s:gui01 , s:ctermIron , s:ctermCongealing  ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:N2 = [ '#ff5fd7' , '#242322' , 206 , 234 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:N2 = [ '#1693a5' , '#f8f6f2','62','15']$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:N2 = [ '#000087' , '#00dfff' , 18  , 45  ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:N2 = [ s:lh_gui3 , s:lh_gui4 , s:lh_cterm3, s:lh_cterm4 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:N2 = [ '#ffffff' , '#003f3f' , 231 , 29 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:N2 = [ '#f8f8f0' , '#232526' , 253 , 16 ] " info$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:N2 = [ '#f8f8f0' , '#232526' , 253 , 208 ] " info$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:N2 = [s:gui_termfg2, s:gui_termbg2, s:cterm_normalbg, s:cterm_termbg2]     " Middle block$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:N2 = [ s:gui_black, s:gui_cyan_offset,  s:cterm_black, s:cterm_cyan_offset ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:N2   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:N2 = s:BB$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:cterm_light_gray, s:cterm_med_gray_lo]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:N2 = [ '#e4e4e4' , '#0087af' , 254 , 31  ] " Info$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:N2 = [ '#E4E4E4' , '#4E4E4E' , 254 , 239 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:N2 = [ '#9e9e9e' , '#303030' , 247 , 236 ] " gray8          & gray2$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:N2   = [ '#0E3B4F' , '#FFD3CB' , 255 , 238 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:N2 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:N2 = [ '#9e9e9e' , '#303030' , 247 , 236 ] " gray8          & gray2$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:N2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:N2 = [s:guiWhite, s:gui01, s:ctermWhite, s:cterm01]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:N2 = [ '#414141' , '#e1e1e1' , 59 , 188 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:N2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:N2 = [ '#343434' , '#b3b3b3' , 237 , 250 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:N2 = [ '#CAE682' , '#32322F' , 2 , 'black' ] " info$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:N2 = [ '#86CD74' , '#deded9' ,  2,  8 ] " info$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:N2 = [ '#f8f6f2' , '#005f00','15','22']$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:N2 = ['#AFAF87', '#5F5F5F', 144, 59] " Next blocks inside (branch and file format)$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:N2 = [ '#d75fd7' , '#4e4e4e' , 170 , 239 ]$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:N2 = [ '#CAE682' , '#32322F' , 192 , 238 ] " info$/;"	v
s:N2	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:N2 = [ '#000087' , '#00d7ff' , 18  , 45  ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:N3 = [s:gui02, s:guiDarkGray, s:cterm02, s:ctermDarkGray]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:N3 = [s:gui_light_gray, s:gui_med_gray_hi, s:cterm_light_gray, s:cterm_med_gray_hi] " insi/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:N3 = [ '#B3B1AD' , '#0A0E14' , 145 , 16  ] " guifg guibg ctermfg ctermbg$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:N3 = [ '#6C7680' , '#FAFAFA' , 66  , 231 ] " guifg guibg ctermfg ctermbg$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:N3 = [ '#E6E1CF' , '#212733' , 15  , 0   ] " guifg guibg ctermfg ctermbg$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:N3 = [ '#8cffba' , '#242321' , 121 , 235 ] " saltwatertaffy & darkgravel$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let s:N3 = [s:gui_green, s:gui_med_gray_hi, s:cterm_green, s:cterm_med_gray_hi]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:N3 = [ s:base0D , s:base00 , 81 , 235 ]           " [ filename ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:N3 = [ '#CAE682' , '#242424' , 'green' , 234 ]  " statusline$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:N3 = [ '#5f87ff', '#1c1c1c', 69 , 234, 'bold' ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:N3 = [s:gui_green, s:gui_med_gray_hi, s:cterm_green, s:cterm_med_gray_hi]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:N3 = [ '#ffffff' , '#204458' , 231  , 23 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:N3   = [ '#EEEEEE' , '#005F87' , 231  , 24]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let s:N3   = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:N3 = [ '#ffffff' , '#303030' , 231 , 235, 'bold' ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:N3 = [ '#98C379', '#282C34', s:term_green, '' ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:N3 = [s:gray[1], s:innerbg[1], s:gray[0], s:innerbg[0]]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:N3 = [ '#93a1a1' , '#073642' , 240 , 233 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:N3 = [ s:guiShadow , s:guiLavender , s:ctermBgPurple , s:ctermShadow  ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:N3 = [ s:GREEN, s:BG, s:TERM_GREEN, s:TERM_BG ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:N3 = [ s:GREEN, s:BG, s:TERM_GREEN, s:TERM_BG ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:N3 = [ '#ffffff' , '#282a2e' , 255     , 'black' ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:N3 = [ s:gui02 , s:gui00 , s:cterm02 , s:cterm00  ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:N3 = [ s:gui02 , s:gui00 , s:ctermRed , s:ctermBlack  ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:N3 = [ '#e2e2e2' , '#4a4a4a' , 254 , 238 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:N3 = [ '#90a680' , '#2e2d2a' , 64, 235 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:N3 = [ '#005fff' , '#afffff' , 27  , 159 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:N3 = [ s:lh_gui2 , s:lh_gui1 , s:lh_cterm2, s:lh_cterm1 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:N3 = [ '#ffffff' , '#002b2b' , 231  , 23 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:N3 = [ '#f8f8f0' , '#465457' , 253 , 67  ] " statusline$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:N3 = [ s:gui_cyan, s:gui_black, s:cterm_cyan, s:cterm_black ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:N3   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:N3 = [s:gui_termfg2, s:gui_termbg2, s:cterm_normalbg, s:cterm_termbg2]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:N3 = ['#87d7ff', s:gui_med_gray_hi, 117, s:cterm_med_gray_hi]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:N3 = [ '#eeeeee' , '#005f87' , 255 , 24  ] " StatusLine$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:N3 = [ '#EEEEEE' , '#262626' , 255 , 235 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:N3 = [ '#ffffff' , '#121212' , 231 , 233 ] " white          & gray4$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:N3   = [ '#ffffff' , '#F7846E' , 85  , 234 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:N3 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:N3 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ] " white          & gray4$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:N3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:N3 = [s:gui02, s:guiDarkGray, s:cterm02, s:ctermDarkGray]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:N3 = [ '#414141' , '#e1e1e1' , 59 , 188 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:N3 = [ '#767676' , s:guibg, 243 , s:termbg]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:N3 = [ '#343434' , '#c7c7c7' , 237 , 252 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:N3 = [ '#CAE682' , '#242424' , 2 , 233 ] " statusline$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:N3 = [ '#86CD74' , '#888a85' ,  2, 15 ] " statusline$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:N3 = [s:gray[1]   , s:innerbg[1], s:gray[0]   , s:innerbg[0]]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:N3 = [ '#b88853' , '#242321' , 137, 235 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:N3 = ['#AFAF87', '#5F5F5F', 144, 59] " The middle block$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:N3 = [ '#c6c6c6' , '#3a3a3a' , 251 , 237 ]$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:N3 = [ '#CAE682' , '#242424' , 192 , 235 ] " statusline$/;"	v
s:N3	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:N3 = [ '#005fff' , '#afffff' , 27  , 159 ]$/;"	v
s:N4	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:N4 = [ '#666462' , 241 ]                   " mediumgravel$/;"	v
s:N4	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:N4 = [ s:base0D , 81 ]                            " [ buffer modified ]$/;"	v
s:N4	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:N4 = [ '#86CD74' , 'DarkGreen' ]                " mode modified$/;"	v
s:N4	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:N4 = [ '#081c8c' , 18 ]$/;"	v
s:N4	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:N4   = [ '#ffffff' , '#FF5D4F' , 255 , 53  ]$/;"	v
s:N4	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:N4 = [ '#86CD74' , 10 ]                   " mode modified$/;"	v
s:N4	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:N4 = [ '#CAE682' , '#141413' , 10,  0 ] " mode modified$/;"	v
s:N4	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:N4 = [ '#005f00' , 22 ]$/;"	v
s:N4	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:N4 = [ '#86CD74' , 113 ]                   " mode modified$/;"	v
s:NC	autoload/plugged/vim-polyglot/indent/vhdl.vim	/^let s:NC = '\\%(--.*\\)\\@<!'$/;"	v
s:NE	autoload/plugged/vim-polyglot/indent/vhdl.vim	/^let s:NE = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:NERDTree	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:NERDTree.AddPathFilter	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
s:NERDTree.Close	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
s:NERDTree.CursorToBookmarkTable	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
s:NERDTree.CursorToTreeWin	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin(...)$/;"	f
s:NERDTree.ExistsForBuf	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
s:NERDTree.ExistsForTab	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
s:NERDTree.ForCurrentBuf	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
s:NERDTree.ForCurrentTab	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f
s:NERDTree.GetWinNum	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
s:NERDTree.IsOpen	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
s:NERDTree.MustBeOpen	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
s:NERDTree.New	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f
s:NERDTree.PathFilters	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
s:NERDTree.changeRoot	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f
s:NERDTree.getRoot	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f
s:NERDTree.isTabTree	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f
s:NERDTree.isWinTree	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f
s:NERDTree.previousBuf	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f
s:NERDTree.render	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
s:NERDTree.setPreviousBuf	autoload/plugged/NERDTree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.setPreviousBuf(bnum)$/;"	f
s:NM1	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:NM1 = [s:darkgray[1], s:orange[1], s:darkgray[0], s:orange[0]]$/;"	v
s:NM3	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:NM3 = [s:orange[1]  , s:outerbg[1], s:orange[0], s:darkgray[0]]$/;"	v
s:NODOCPATTERN	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:NODOCPATTERN = '\\C\\VNo documentation found.'$/;"	v
s:Nat	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function s:Nat(int)$/;"	f
s:NavigateUp	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NavigateUp(count) abort$/;"	f
s:NextExpandedHunk	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextExpandedHunk(count) abort$/;"	f
s:NextFile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextFile(count) abort$/;"	f
s:NextHunk	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextHunk(count) abort$/;"	f
s:NextIndToken	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:NextIndToken(lnum, i)$/;"	f
s:NextItem	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextItem(count) abort$/;"	f
s:NextNonBlankLine	autoload/plugged/vim-polyglot/ftplugin/svelte/fold.vim	/^function! s:NextNonBlankLine(lnum)$/;"	f
s:NextSection	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextSection(count) abort$/;"	f
s:NextSection	autoload/plugged/vim-polyglot/ftplugin/scala.vim	/^function! s:NextSection(backwards)$/;"	f
s:NextSectionEnd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextSectionEnd(count) abort$/;"	f
s:NoTeXIndent	autoload/plugged/vim-polyglot/indent/rnoweb.vim	/^function! s:NoTeXIndent()$/;"	f
s:NotEnoughBuffers	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:NotEnoughBuffers()$/;"	f
s:Notifier	autoload/plugged/NERDTree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:Notifier.AddListener	autoload/plugged/NERDTree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
s:Notifier.GetListenersForEvent	autoload/plugged/NERDTree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
s:Notifier.GetListenersMap	autoload/plugged/NERDTree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
s:Notifier.NotifyListeners	autoload/plugged/NERDTree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f
s:NullError	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NullError(...) abort$/;"	f
s:NumberOfMatches	autoload/plugged/vim-polyglot/indent/swift.vim	/^function! s:NumberOfMatches(char, string, index)$/;"	f
s:OUTDENT_AFTER	autoload/plugged/vim-polyglot/indent/ls.vim	/^let s:OUTDENT_AFTER = '^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:OUTDENT_AFTER	autoload/plugged/vim-polyglot/indent/moon.vim	/^let s:OUTDENT_AFTER = '^\\%(return\\|break\\)\\>'$/;"	v
s:Observe	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! s:Observe(fn)$/;"	f
s:OcpGrep	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^function! s:OcpGrep(bang,args) abort$/;"	f
s:OnExit	autoload/plugged/coc.nvim/autoload/coc/terminal.vim	/^  function! s:OnExit(status) closure$/;"	f
s:OnExit	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^  function! s:OnExit(status) closure$/;"	f
s:OneScope	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function s:OneScope()$/;"	f
s:OpenBrace	autoload/plugged/vim-polyglot/indent/puppet.vim	/^function! s:OpenBrace(lnum)$/;"	f
s:OpenConfig	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:OpenConfig()$/;"	f
s:OpenDiagnostics	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:OpenDiagnostics(...) abort$/;"	f
s:OpenParse	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:OpenParse(string, wants_cmd) abort$/;"	f
s:OpenUrlUnderCursor	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:OpenUrlUnderCursor()$/;"	f
s:Opener	autoload/plugged/NERDTree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:Opener.New	autoload/plugged/NERDTree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
s:Opener._bufInWindows	autoload/plugged/NERDTree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
s:Opener._checkToCloseTree	autoload/plugged/NERDTree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
s:Opener._firstUsableWindow	autoload/plugged/NERDTree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
s:Opener._gotoTargetWin	autoload/plugged/NERDTree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
s:Opener._isWindowUsable	autoload/plugged/NERDTree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
s:Opener._newSplit	autoload/plugged/NERDTree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
s:Opener._newVSplit	autoload/plugged/NERDTree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
s:Opener._openDirectory	autoload/plugged/NERDTree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
s:Opener._openFile	autoload/plugged/NERDTree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
s:Opener._previousWindow	autoload/plugged/NERDTree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
s:Opener._restoreCursorPos	autoload/plugged/NERDTree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
s:Opener._reuseWindow	autoload/plugged/NERDTree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
s:Opener._saveCursorPos	autoload/plugged/NERDTree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
s:Opener.open	autoload/plugged/NERDTree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
s:Or	autoload/plugged/vim-polyglot/autoload/pony.vim	/^function! s:Or(x, y)$/;"	f
s:OuterPos	autoload/plugged/vim-polyglot/autoload/pony.vim	/^function! s:OuterPos(x, y)$/;"	f
s:Owner	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Owner(path, ...) abort$/;"	f
s:P	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:P = s:V.import('Process')$/;"	v
s:PA	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:PA = [ '#f4cf86' , 222 ]                   " dirtyblonde$/;"	v
s:PA	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:PA = [ s:base0B , 84 ] $/;"	v
s:PA	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:PA = [ '#94E42C' , 005 ]$/;"	v
s:PA	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:PA = [ '#ab3e5d' , 161 ]$/;"	v
s:PA	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:PA = [ '#94E42C' , 6 ]$/;"	v
s:PA	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:PA = [ '#94E42C' , 6 ]$/;"	v
s:PA	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:PA = [ '#f9ef6d' , 154 ]$/;"	v
s:PA	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:PA = [ '#94E42C' , 47 ]$/;"	v
s:POSTFIX_CONDITION	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:POSTFIX_CONDITION = '\\C\\S\\s\\+\\zs\\<\\%(if\\|unless\\|when\\|while\\|until\\)\\>'$/;"	v
s:POSTFIX_CONDITION	autoload/plugged/vim-polyglot/indent/ls.vim	/^let s:POSTFIX_CONDITION = '\\S\\s\\+\\zs\\<\\%(if\\|unless\\)\\>'$/;"	v
s:POSTFIX_CONDITION	autoload/plugged/vim-polyglot/indent/moon.vim	/^let s:POSTFIX_CONDITION = '\\S\\s\\+\\zs\\<\\%(if\\|unless\\)\\>'$/;"	v
s:PS	autoload/plugged/vim-polyglot/ftplugin/purescript.vim	/^let s:PS = []$/;"	v
s:PackageMap	autoload/plugged/vim-polyglot/autoload/dart.vim	/^function! s:PackageMap() abort$/;"	f
s:ParseCino	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function s:ParseCino(f)$/;"	f
s:ParseCoffeeError	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:ParseCoffeeError(output, src, startline)$/;"	f
s:ParseRpmVars	autoload/plugged/vim-polyglot/ftplugin/spec.vim	/^    function s:ParseRpmVars(str, strline)$/;"	f
s:PartOfInclude	autoload/plugged/vim-polyglot/indent/puppet.vim	/^function! s:PartOfInclude(lnum)$/;"	f
s:PatchSearchExpr	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PatchSearchExpr(reverse) abort$/;"	f
s:Path	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:Path.AbsolutePathFor	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(pathStr)$/;"	f
s:Path.CopyingSupported	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
s:Path.Create	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
s:Path.JoinPathStrings	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
s:Path.New	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.New(pathStr)$/;"	f
s:Path.Resolve	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
s:Path.WinToUnixPath	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
s:Path._escChars	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
s:Path._ignorePatternMatches	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
s:Path._splitChunks	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path._splitChunks(path)$/;"	f
s:Path._str	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
s:Path._strForCd	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
s:Path._strForEdit	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
s:Path._strForGlob	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
s:Path._strForUI	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
s:Path.addDelimiter	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.addDelimiter(line)$/;"	f
s:Path.bookmarkNames	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
s:Path.cacheDisplayString	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
s:Path.changeToDir	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
s:Path.copy	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
s:Path.copyingWillOverwrite	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
s:Path.createParentDirectories	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
s:Path.delete	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
s:Path.displayString	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
s:Path.edit	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
s:Path.equals	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
s:Path.exists	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
s:Path.extractDriveLetter	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
s:Path.getDir	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
s:Path.getLastPathComponent	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
s:Path.getParent	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
s:Path.getSortKey	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
s:Path.getSortOrderIndex	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
s:Path.ignore	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f
s:Path.isAncestor	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.isAncestor(child)$/;"	f
s:Path.isHiddenUnder	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.isHiddenUnder(path)$/;"	f
s:Path.isUnder	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(parent)$/;"	f
s:Path.isUnixHiddenFile	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
s:Path.isUnixHiddenPath	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
s:Path.readInfoFromDisk	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
s:Path.refresh	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f
s:Path.refreshFlags	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f
s:Path.rename	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
s:Path.str	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
s:Path.strTrunk	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
s:Path.tabnr	autoload/plugged/NERDTree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
s:PathInfo	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PathInfo(url) abort$/;"	f
s:PlainNotification	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:PlainNotification(content)$/;"	f
s:Pop	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:Pop(stack)$/;"	f
s:Pop	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Pop()$/;"	f
s:Position	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:Position(line, character)$/;"	f
s:PreparePathArgs	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreparePathArgs(cmd, dir, literal) abort$/;"	f
s:PrevIndToken	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:PrevIndToken(lnum, i)$/;"	f
s:PrevLineOfCode	autoload/plugged/vim-polyglot/indent/lua.vim	/^function s:PrevLineOfCode(lnum)$/;"	f
s:PrevMatch	autoload/plugged/vim-polyglot/indent/sas.vim	/^function! s:PrevMatch(lnum, regex)$/;"	f
s:PrevMultilineEmptyTag	autoload/plugged/vim-polyglot/indent/svelte.vim	/^function! s:PrevMultilineEmptyTag(lnum)$/;"	f
s:PrevNonBlank	autoload/plugged/vim-polyglot/indent/markdown.vim	/^function! s:PrevNonBlank(lnum)$/;"	f
s:PrevNonBlankNonComment	autoload/plugged/vim-polyglot/indent/mp.vim	/^function! s:PrevNonBlankNonComment(lnum)$/;"	f
s:PrevNonBlankNonString	autoload/plugged/vim-polyglot/indent/falcon.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
s:PrevNonBlankNonString	autoload/plugged/vim-polyglot/indent/json.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
s:PrevNonBlankNonString	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:PrevNonBlankNonString(lnum) abort$/;"	f
s:PrevNonBlankNonString	autoload/plugged/vim-polyglot/indent/solidity.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
s:PrevNonBlankNonString	autoload/plugged/vim-polyglot/indent/typescript.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
s:PrevNonMultilineString	autoload/plugged/vim-polyglot/indent/puppet.vim	/^function! s:PrevNonMultilineString(lnum)$/;"	f
s:PrevNonblank	autoload/plugged/vim-polyglot/autoload/pony.vim	/^function! s:PrevNonblank(lnum)$/;"	f
s:PreviousFile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousFile(count) abort$/;"	f
s:PreviousHunk	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousHunk(count) abort$/;"	f
s:PreviousItem	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousItem(count) abort$/;"	f
s:PreviousNotMSL	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:PreviousNotMSL(msl_info) abort$/;"	f
s:PreviousSection	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousSection(count) abort$/;"	f
s:PreviousSectionEnd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousSectionEnd(count) abort$/;"	f
s:PreviousToken	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function s:PreviousToken(...)$/;"	f
s:ProjectParms	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:ProjectParms(projectUri)$/;"	f
s:ProjectionistDetect	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:ProjectionistDetect() abort$/;"	f
s:Pure	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function s:Pure(f,...)$/;"	f
s:PurifyCode	autoload/plugged/vim-polyglot/indent/pascal.vim	/^function! s:PurifyCode( line_num )$/;"	f
s:Push	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:Push(stack, token)$/;"	f
s:Push	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Push(fct, kind)$/;"	f
s:Python2Syntax	autoload/plugged/vim-polyglot/syntax/python.vim	/^function! s:Python2Syntax()$/;"	f
s:QueryLog	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QueryLog(refspec) abort$/;"	f
s:QuickfixCreate	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixCreate(nr, opts) abort$/;"	f
s:QuickfixGet	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixGet(nr, ...) abort$/;"	f
s:QuickfixSet	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixSet(nr, ...) abort$/;"	f
s:QuickfixStream	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixStream(nr, event, title, cmd, first, mods, callback, ...) abort$/;"	f
s:QuickpickFilter	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^    function! s:QuickpickFilter(id, key) closure$/;"	f
s:QuickpickHandler	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^    function! s:QuickpickHandler(id, result) closure$/;"	f
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:R1 = [s:gui08, s:gui00, s:cterm08, s:cterm00]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:R1 = [ s:base00 , s:base08 , 235 , 203 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:R1 = [s:gui_replacefg, s:gui_replacebg, s:cterm_replacefg, s:cterm_replacebg]  " Outside b/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:R1 = [ '#141413' , '#E5786D' , 232 , 'red' ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:R1 = [ '#ffffff' , '#ea9299' , 231 , 106 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:R1 = [ '#585858' , '#E4E4E4' , 59  , 188  ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:R1 = [ '#282C34', '#E06C75', s:term_black, s:term_red ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:R1 = [s:outerfg[1], s:blue[1], s:outerfg[0], s:blue[0]]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:R1 = [ s:guiFuschia , s:guiDarkGray , s:ctermFuschia, s:ctermShadow ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:R1 = [ s:BG, s:RED, s:TERM_BG, s:TERM_RED ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:R1 = [ s:BG, s:RED, s:TERM_BG, s:TERM_RED ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:R1 = [ s:gui08 , s:gui01 , s:cterm08, s:cterm00 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:R1 = [ s:gui08 , s:gui01 , s:ctermBlood, s:ctermBlack ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let s:R1 = [ '#d75fff' , '#ffffff','171','231']$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:R1 = [ '#90a680' , '#f8f6f2','66','15']$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:R1 = [ s:lh_gui1 , s:lh_gui7 , s:lh_cterm1, s:lh_cterm7 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:R1 = [ '#080808' , '#f92672' , 232 , 161 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:R1 = [s:gui_replacefg, s:gui_replacebg, s:cterm_replacefg, s:cterm_replacebg]  " Outside b/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:R1 = [ s:gui_black, s:gui_yellow, s:cterm_black, s:cterm_yellow ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:R1   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:R1 = [s:gui_replacefg, s:gui_replacebg, s:cterm_replacefg, s:cterm_replacebg]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:R1 = [ '#3A3A3A' , '#D0D090' , 254 , 237 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:R1 = [ '#0E3B4F' , '#C1F9CD' , 17  , 45  ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:R1 = [s:gui08, s:gui00, s:cterm08, s:cterm00]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:R1 = [ '#141413' , '#E5786D' , 232 , 1 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:R1 = [ '#f0f0f0' , '#E55345' , 15,  1 ]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:R1 = [s:darkgray[1], s:blue[1], s:outerfg[0], s:blue[0]]$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:R1 = [ '#242321' , '#f8f6f2','235','15']$/;"	v
s:R1	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:R1 = [ '#141413' , '#E5786D' , 232 , 173 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:R2 = s:N2$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:R2 = [ s:base08 , s:base00 , 203 , 235 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:R2 = [s:gui_termfg, s:gui_termbg2, s:cterm_termfg, s:cterm_termbg2]            " Middle bl/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:R2 = [ '#E5786D' , '#32322F' , 'red' , 235 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:R2 = [ '#ffffff' , '#8cc2fd' , 88 , 29 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:R2 = [ '#E4E4E4' , '#AF5F00' , 188 , 130  ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:R2 = s:N2$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:R2 = s:N2$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:R2 = s:N2$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:R2 = s:N2$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:R2 = s:N2$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:R2 = [ s:gui02 , s:gui01 , s:ctermRed , s:ctermBlack  ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let s:R2 = [ '#5f005f' , '#d75fff','53','171']$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:R2 = [ '#90a680' , '#242321','66','235']$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:R2 = [ s:lh_gui3 , s:lh_gui4 , s:lh_cterm3, s:lh_cterm4 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:R2 = [ '#f8f8f0' , '#232526' , 253 , 16 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:R2 = [ '#f8f8f0' , '#232526' , 253 , 208 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:R2 = [s:gui_termfg, s:gui_termbg2, s:cterm_termfg, s:cterm_termbg2]            " Middle bl/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:R2 = [ s:gui_black, s:gui_yellow_offset, s:cterm_black, s:cterm_yellow_offset ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:R2   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:R2 = s:BB$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:R2 = [ '#E4E4E4' , '#4E4E4E' , 254 , 239 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:R2 = [ '#0E3B4F' , '#8BEFC7' , 255 , 27  ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:R2 = s:N2$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:R2 = [ '#E5786D' , '#32322F' , 1 , 'black' ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:R2 = [ '#E55345' , '#deded9' ,  1,  8 ]$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:R2 = [ '#ffa724' , '#666462','214','241']$/;"	v
s:R2	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:R2 = [ '#E5786D' , '#32322F' , 173 , 238 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:R3 = s:I3$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:R3 = [ s:base08 , s:base00 , 203 , 235 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:R3 = [ '#E5786D' , '#242424' , 'red' , 234 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:R3 = [ '#ffffff' , '#204458' , 231  , 23  ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:R3 = [ '#EEEEEE' , '#875300' , 231  , 94  ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:R3 = [ '#E06C75', '#282C34', s:term_red, '' ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:R3 = [s:blue[1], s:innerbg[1], s:blue[0], s:innerbg[0]]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:R3 = s:I3$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:R3 = [ s:RED, s:BG, s:TERM_RED, s:TERM_BG ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:R3 = [ s:RED, s:BG, s:TERM_RED, s:TERM_BG ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:R3 = s:I3$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:R3 = [ s:guiWhite , s:gui01 , s:ctermIron , s:ctermBlack  ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let s:R3 = [ '#ff87ff' , '#8700af','213','91']$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:R3 = [ '#f8f6f2' , '#90a680','15','66']$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:R3 = [ s:lh_gui7 , s:lh_gui1 , s:lh_cterm7, s:lh_cterm1 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:R3 = [ '#f8f8f0' , '#465457' , 253 , 67  ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:R3 = [ s:gui_yellow, s:gui_black, s:cterm_yellow, s:cterm_black ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:R3   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:R3 = [s:gui_termfg, s:gui_termbg2, s:cterm_termfg, s:cterm_termbg2]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:R3 = [ '#EEEEEE' , '#262626' , 255 , 235 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:R3 = [ '#ffffff' , '#04BEC3' , 15  , 17  ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:R3 = s:I3$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:R3 = [ '#E5786D' , '#242424' , 1 , 233 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:R3 = [ '#E55345' , '#888a85' ,  1, 15 ]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:R3 = [s:blue[1], s:innerbg[1], s:blue[0], s:innerbg[0]]$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:R3 = [ '#f8f6f2' , '#ff7400','15','215']$/;"	v
s:R3	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:R3 = [ '#E5786D' , '#242424' , 173 , 235 ]$/;"	v
s:R4	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:R4 = [ s:base08 , 203 ]$/;"	v
s:R4	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:R4 = [ '#E55345' , 'red' ]$/;"	v
s:R4	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:R4 = [ '#90a680' , 66 ]$/;"	v
s:R4	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:R4 = [ '#ffffff' , '#008492' , 255 , 53  ]$/;"	v
s:R4	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:R4 = [ '#E55345' , 9 ]$/;"	v
s:R4	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:R4 = [ '#E5786D' , '#141413' ,  9,  0 ]$/;"	v
s:R4	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:R4 = [ '#ffa724' , 214 ]$/;"	v
s:R4	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:R4 = [ '#E55345' , 203 ]$/;"	v
s:RE	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:RE = [ '#3D424D' , '#FF3333' , 59  , 203 ] " guifg guibg ctermfg ctermbg$/;"	v
s:RE	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:RE = [ '#6C7680' , '#F51818' , 66  , 196 ] " guifg guibg ctermfg ctermbg$/;"	v
s:RE	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:RE = [ '#212733' , '#F07178' , 0   , 167 ] " guifg guibg ctermfg ctermbg$/;"	v
s:RE	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:RE = [ '#ff9eb8' , 211 ]                   " dress$/;"	v
s:RE	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:RE = [ '#ffffff' , '#d74444' , 231 , 9 ]$/;"	v
s:RE	autoload/plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:RE = [ '#ffffff' , '#d70000' , 231 , 160 ] " white          & brightred$/;"	v
s:RE	autoload/plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:RE = [ '#ffffff' , '#d70000' , 231 , 160 ] " white          & brightred$/;"	v
s:RE	autoload/plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:RE = [ '#c6c6c6' , '#ce537a' , 251, 168 ]$/;"	v
s:RED	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:RED    = '#EA4335'$/;"	v
s:RED	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:RED    = '#EA4335'$/;"	v
s:REPL_SEARCH	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^  let s:REPL_SEARCH = 'Base.Docs.repl_search'$/;"	v
s:REPL_SEARCH	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^  let s:REPL_SEARCH = 'import REPL.repl_search; repl_search'$/;"	v
s:RIndent	autoload/plugged/vim-polyglot/indent/rmd.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:RIndent	autoload/plugged/vim-polyglot/indent/rnoweb.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:RIndent	autoload/plugged/vim-polyglot/indent/rrst.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:Racket_visual_doc	autoload/plugged/vim-polyglot/ftplugin/racket.vim	/^function! s:Racket_visual_doc()$/;"	f
s:ReadExec	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReadExec(line1, count, range, mods, env, args, options) abort$/;"	f
s:ReadPrepare	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReadPrepare(line1, count, range, mods) abort$/;"	f
s:RebaseArgument	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseArgument() abort$/;"	f
s:RebaseSubcommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:ReferenceName	autoload/plugged/vim-polyglot/syntax/rst.vim	/^let s:ReferenceName = '[[:alnum:]]\\%([-_.:+]\\?[[:alnum:]]\\+\\)*'$/;"	v
s:RefreshTabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:RefreshTabline()$/;"	f
s:Relative	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Relative(...) abort$/;"	f
s:ReloadStatus	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadStatus(...) abort$/;"	f
s:ReloadStatusBuffer	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadStatusBuffer(...) abort$/;"	f
s:ReloadTabStatus	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadTabStatus(...) abort$/;"	f
s:ReloadWinStatus	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadWinStatus(...) abort$/;"	f
s:Remote	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Remote(dir) abort$/;"	f
s:Remove	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Remove(after, force) abort$/;"	f
s:RemoveITags	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:RemoveITags(tags, taglist)$/;"	f
s:RemoveITags	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:RemoveITags(tags, taglist)$/;"	f
s:RemoveTrailingComments	autoload/plugged/vim-polyglot/indent/solidity.vim	/^function s:RemoveTrailingComments(content)$/;"	f
s:RemoveTrailingComments	autoload/plugged/vim-polyglot/indent/typescript.vim	/^function s:RemoveTrailingComments(content)$/;"	f
s:ReplaceAsStr	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ReplaceAsStr(str, search, replacement, ...)$/;"	f
s:ReplaceCmd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReplaceCmd(cmd) abort$/;"	f
s:ReplaceExtendedRegexFactorWithNumberFactor	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ReplaceExtendedRegexFactorWithNumberFactor(extendedregex)$/;"	f
s:ReplaceNumberFactorWithVimRegexFactor	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ReplaceNumberFactorWithVimRegexFactor(halfway)$/;"	f
s:ReplaceRemainFactorWithVimRegexFactor	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ReplaceRemainFactorWithVimRegexFactor(halfway)$/;"	f
s:Resolve	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Resolve(path) abort$/;"	f
s:RestoreShiftwidth	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:RestoreShiftwidth()$/;"	f
s:RevertSubcommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RevertSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:Right	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^let s:Right = s:Go."\\<RIGHT>"$/;"	v
s:RmDir	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! s:RmDir(path)$/;"	f
s:Run	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! s:Run(dict, rustc_args, args)$/;"	f
s:RunBufDelete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunBufDelete(bufnr) abort$/;"	f
s:RunClose	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunClose(state, tmp, job, ...) abort$/;"	f
s:RunCloseIn	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunCloseIn(job) abort$/;"	f
s:RunEcho	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunEcho(tmp) abort$/;"	f
s:RunEdit	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunEdit(state, tmp, job) abort$/;"	f
s:RunExit	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunExit(state, tmp, job, exit_status) abort$/;"	f
s:RunFinished	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunFinished(state, ...) abort$/;"	f
s:RunJobs	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunJobs() abort$/;"	f
s:RunReceive	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunReceive(state, tmp, type, job, data, ...) abort$/;"	f
s:RunRustfmt	autoload/plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RunRustfmt(command, tmpname, from_writepre)$/;"	f
s:RunSave	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunSave(state) abort$/;"	f
s:RunSend	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunSend(job, str) abort$/;"	f
s:RunTick	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunTick(job) abort$/;"	f
s:RunWait	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunWait(state, tmp, job, ...) abort$/;"	f
s:RustfmtCommand	autoload/plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtCommand()$/;"	f
s:RustfmtCommandRange	autoload/plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtCommandRange(filename, line1, line2)$/;"	f
s:RustfmtConfigOptions	autoload/plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtConfigOptions()$/;"	f
s:RustfmtWriteMode	autoload/plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtWriteMode()$/;"	f
s:SID	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:SID() abort$/;"	f
s:SINGLE_LINE_ELSE	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:SINGLE_LINE_ELSE = '\\C^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SINGLE_LINE_ELSE	autoload/plugged/vim-polyglot/indent/ls.vim	/^let s:SINGLE_LINE_ELSE = '^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SINGLE_LINE_ELSE	autoload/plugged/vim-polyglot/indent/moon.vim	/^let s:SINGLE_LINE_ELSE = '^else\\s\\+\\%(\\<\\%(if\\)\\>\\)\\@!'$/;"	v
s:SNR	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val]))/;"	v
s:SQLBlockEnd	autoload/plugged/vim-polyglot/indent/pgsql.vim	/^let s:SQLBlockEnd = '^\\s*\\(end\\)\\>'$/;"	v
s:SQLBlockStart	autoload/plugged/vim-polyglot/indent/pgsql.vim	/^let s:SQLBlockStart = '^\\s*\\%('.$/;"	v
s:SYNTAX_COMMENT	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_COMMENT = 'coffee\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_COMMENT	autoload/plugged/vim-polyglot/indent/moon.vim	/^let s:SYNTAX_COMMENT = 'moon\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_STRING	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_STRING = 'coffee\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_STRING	autoload/plugged/vim-polyglot/indent/moon.vim	/^let s:SYNTAX_STRING = 'moon\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_STRING_COMMENT	autoload/plugged/vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
s:SYNTAX_STRING_COMMENT	autoload/plugged/vim-polyglot/indent/moon.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
s:Safe_indent	autoload/plugged/vim-polyglot/indent/awk.vim	/^function! s:Safe_indent( base, wordlen, this_line )$/;"	f
s:SaveVimSesn	autoload/plugged/vim-polyglot/extras/menu.vim	/^fun! s:SaveVimSesn()$/;"	f
s:ScratchBufBuild	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:ScratchBufBuild(src, vert, size)$/;"	f
s:ScratchBufUpdate	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:ScratchBufUpdate(buf, text)$/;"	f
s:SearchCode	autoload/plugged/vim-polyglot/indent/coffee.vim	/^function! s:SearchCode(lnum, regex)$/;"	f
s:SearchEndPair	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:SearchEndPair(lnum, curr_col)$/;"	f
s:SearchLoop	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function s:SearchLoop(pat,flags,expr)$/;"	f
s:SearchMatchingKeyword	autoload/plugged/vim-polyglot/indent/coffee.vim	/^function! s:SearchMatchingKeyword(startlnum, open, close)$/;"	f
s:SearchOptions	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:SearchOptions(...) abort$/;"	f
s:SearchP	autoload/plugged/vim-polyglot/extras/menu.vim	/^fun! s:SearchP()$/;"	f
s:SearchPair	autoload/plugged/vim-polyglot/indent/coffee.vim	/^function! s:SearchPair(startlnum, lookback, skip, open, close)$/;"	f
s:SearchPair	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:SearchPair(lnum, curr_col, start, middle, end)$/;"	f
s:SearchPair	autoload/plugged/vim-polyglot/indent/ls.vim	/^function! s:SearchPair(start, end)$/;"	f
s:SearchPair	autoload/plugged/vim-polyglot/indent/moon.vim	/^function! s:SearchPair(start, end)$/;"	f
s:SearchSection	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^function! s:SearchSection(end, backwards, visualmode) abort$/;"	f
s:SearchTestFunctionNameUnderCursor	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! s:SearchTestFunctionNameUnderCursor() abort$/;"	f
s:SecondLevelIndent	autoload/plugged/vim-polyglot/indent/occam.vim	/^let s:SecondLevelIndent = '^\\C\\s*\\(IF\\|ALT\\|PRI\\s\\+ALT\\)\\>\\|\\(--.*\\)\\@<!?\\s*\\<CAS/;"	v
s:SecondLevelNonColonEndIndent	autoload/plugged/vim-polyglot/indent/occam.vim	/^let s:SecondLevelNonColonEndIndent = '\\(--.*\\)\\@<!\\<\\(CHAN\\|DATA\\)\\s\\+TYPE\\>'$/;"	v
s:Seems_continuing	autoload/plugged/vim-polyglot/indent/awk.vim	/^function! s:Seems_continuing( line )$/;"	f
s:SelectAll	autoload/plugged/vim-polyglot/extras/menu.vim	/^func s:SelectAll()$/;"	f
s:Selection	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Selection(arg1, ...) abort$/;"	f
s:SetCurrentSyntax	autoload/plugged/vim-polyglot/syntax/svelte.vim	/^function! s:SetCurrentSyntax(type)$/;"	f
s:SetDefault	autoload/plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! s:SetDefault(var, val)$/;"	f
s:SetDefault	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^function! s:SetDefault(name, value)$/;"	f
s:SetMakePrg	autoload/plugged/vim-polyglot/compiler/coffee.vim	/^function! s:SetMakePrg()$/;"	f
s:SetMakePrg	autoload/plugged/vim-polyglot/compiler/ls.vim	/^function! s:SetMakePrg()$/;"	f
s:SetModifiers	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! s:SetModifiers(mods)$/;"	f
s:SetUpMessage	autoload/plugged/vim-rhubarb/plugin/rhubarb.vim	/^function! s:SetUpMessage(filename) abort$/;"	f
s:SetexToAtx	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:SetexToAtx(line1, line2)$/;"	f
s:Setf	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! s:Setf(ft)$/;"	f
s:SetupColorSchemes	autoload/plugged/vim-polyglot/extras/menu.vim	/^func s:SetupColorSchemes() abort$/;"	f
s:SetupCompilers	autoload/plugged/vim-polyglot/extras/menu.vim	/^func s:SetupCompilers() abort$/;"	f
s:SetupKeymaps	autoload/plugged/vim-polyglot/extras/menu.vim	/^  func s:SetupKeymaps() abort$/;"	f
s:SetupLazyloadMenus	autoload/plugged/vim-polyglot/extras/menu.vim	/^  func s:SetupLazyloadMenus()$/;"	f
s:ShellTokenize	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! s:ShellTokenize(text)$/;"	f
s:ShiftWidth	autoload/plugged/vim-polyglot/indent/coffee.vim	/^  function! s:ShiftWidth()$/;"	f
s:ShiftWidth	autoload/plugged/vim-polyglot/indent/coffee.vim	/^  let s:ShiftWidth = function('shiftwidth')$/;"	v
s:ShouldSkip	autoload/plugged/vim-polyglot/indent/coffee.vim	/^function! s:ShouldSkip(startlnum, lnum, col)$/;"	f
s:ShouldSkip	autoload/plugged/vim-polyglot/indent/ls.vim	/^function! s:ShouldSkip(startlinenum, linenum, col)$/;"	f
s:ShouldSkip	autoload/plugged/vim-polyglot/indent/moon.vim	/^function! s:ShouldSkip(startlinenum, linenum, col)$/;"	f
s:ShowInfo	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:ShowInfo()$/;"	f
s:SimplifyAdjacentCollections	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^function s:SimplifyAdjacentCollections(p)$/;"	f
s:SimplifyToAssumeAllPrintable	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^function s:SimplifyToAssumeAllPrintable(p)$/;"	f
s:SkipExpr	autoload/plugged/vim-polyglot/indent/ls.vim	/^function! s:SkipExpr(startlinenum)$/;"	f
s:SkipExpr	autoload/plugged/vim-polyglot/indent/moon.vim	/^function! s:SkipExpr(startlinenum)$/;"	f
s:SkipFunc	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function s:SkipFunc()$/;"	f
s:SkipPattern	autoload/plugged/vim-polyglot/indent/sml.vim	/^function! s:SkipPattern(lnum, pat)$/;"	f
s:Slash	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  function! s:Slash(path) abort$/;"	f
s:Slash	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^  function! s:Slash(path) abort$/;"	f
s:SmartSearch	autoload/plugged/vim-polyglot/indent/ls.vim	/^function! s:SmartSearch(linenum, regex)$/;"	f
s:SmartSearch	autoload/plugged/vim-polyglot/indent/moon.vim	/^function! s:SmartSearch(linenum, regex)$/;"	f
s:SpecChangelog	autoload/plugged/vim-polyglot/ftplugin/spec.vim	/^	function s:SpecChangelog(format)$/;"	f
s:SpellDel	autoload/plugged/vim-polyglot/extras/menu.vim	/^  func s:SpellDel()$/;"	f
s:SpellLang	autoload/plugged/vim-polyglot/extras/menu.vim	/^  func s:SpellLang()$/;"	f
s:SpellPopup	autoload/plugged/vim-polyglot/extras/menu.vim	/^  func s:SpellPopup()$/;"	f
s:SpellReplace	autoload/plugged/vim-polyglot/extras/menu.vim	/^  func s:SpellReplace(n)$/;"	f
s:SplitExpandChain	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SplitExpandChain(string, ...) abort$/;"	f
s:SquashArgument	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SquashArgument(...) abort$/;"	f
s:StageApply	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageApply(info, reverse, extra) abort$/;"	f
s:StageArgs	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageArgs(visual) abort$/;"	f
s:StageDelete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDelete(lnum1, lnum2, count) abort$/;"	f
s:StageDiff	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
s:StageDiffEdit	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
s:StageIgnore	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageIgnore(lnum1, lnum2, count) abort$/;"	f
s:StageInfo	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInfo(...) abort$/;"	f
s:StageInline	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInline(mode, ...) abort$/;"	f
s:StageJump	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageJump(offset, section, ...) abort$/;"	f
s:StagePatch	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
s:StageReveal	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageReveal() abort$/;"	f
s:StageSeek	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageSeek(info, fallback) abort$/;"	f
s:StarSetf	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! s:StarSetf(ft)$/;"	f
s:StarSetf	autoload/plugged/vim-polyglot/extras/filetype.vim	/^func! s:StarSetf(ft)$/;"	f
s:StartOfFile	autoload/plugged/vim-polyglot/indent/ruby.vim	/^function! s:StartOfFile(pline_info) abort$/;"	f
s:StartStructure	autoload/plugged/vim-polyglot/indent/twig.vim	/^function! s:StartStructure(name)$/;"	f
s:Starts_with_word	autoload/plugged/vim-polyglot/indent/awk.vim	/^function! s:Starts_with_word( line )$/;"	f
s:StatementIndent	autoload/plugged/vim-polyglot/indent/ada.vim	/^function s:StatementIndent( current_indent, prev_lnum )$/;"	f
s:StatusCfile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StatusCfile(...) abort$/;"	f
s:StatusCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StatusCommand(line1, line2, range, count, bang, mods, reg, arg, args, ...) abort$/;"	f
s:SuperSub	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^  fun! s:SuperSub(group,leader,pat,cchar)$/;"	f
s:SwitchWindow	autoload/plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:SwitchWindow(buf)$/;"	f
s:SynAt	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function s:SynAt(l,c)$/;"	f
s:SynAttrXMLish	autoload/plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynAttrXMLish(synattr)$/;"	f
s:SynBlockBody	autoload/plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynBlockBody(syn)$/;"	f
s:SynBlockEnd	autoload/plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynBlockEnd(syn)$/;"	f
s:SynBlockStart	autoload/plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynBlockStart(syn)$/;"	f
s:SynCoffee	autoload/plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynCoffee(syn)$/;"	f
s:SynEOL	autoload/plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynEOL(lnum)$/;"	f
s:SynHTML	autoload/plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynHTML(syn)$/;"	f
s:SynOnOff	autoload/plugged/vim-polyglot/extras/menu.vim	/^    fun s:SynOnOff()$/;"	f
s:SynPug	autoload/plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynPug(syn)$/;"	f
s:SynSASS	autoload/plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynSASS(syn)$/;"	f
s:SynSOL	autoload/plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynSOL(lnum)$/;"	f
s:SynStyle	autoload/plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynStyle(syn)$/;"	f
s:SynSvelteScriptOrStyle	autoload/plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynSvelteScriptOrStyle(syn)$/;"	f
s:SynTSXBlockEnd	autoload/plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynTSXBlockEnd(syns)$/;"	f
s:SynTSXContinues	autoload/plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynTSXContinues(cursyn, prevsyn)$/;"	f
s:SynTSXDepth	autoload/plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynTSXDepth(syns)$/;"	f
s:SynTypeScript	autoload/plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynTypeScript(syn)$/;"	f
s:SynXMLish	autoload/plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynXMLish(syns)$/;"	f
s:SyncAutocmd	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:SyncAutocmd(...)$/;"	f
s:SynsEOL	autoload/plugged/vim-polyglot/autoload/svelte.vim	/^function! s:SynsEOL(lnum)$/;"	f
s:SynsEOL	autoload/plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynsEOL(lnum)$/;"	f
s:SynsSOL	autoload/plugged/vim-polyglot/indent/svelte.vim	/^function! s:SynsSOL(lnum)$/;"	f
s:SyntaxInclude	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:SyntaxInclude(filetype)$/;"	f
s:SyntaxName	autoload/plugged/vim-polyglot/indent/coffee.vim	/^function! s:SyntaxName(lnum, col)$/;"	f
s:SyntaxName	autoload/plugged/vim-polyglot/indent/ls.vim	/^function! s:SyntaxName(linenum, col)$/;"	f
s:SyntaxName	autoload/plugged/vim-polyglot/indent/moon.vim	/^function! s:SyntaxName(linenum, col)$/;"	f
s:SyntaxName	autoload/plugged/vim-polyglot/indent/swift.vim	/^function! s:SyntaxName()$/;"	f
s:SyntaxNameAtPosition	autoload/plugged/vim-polyglot/indent/swift.vim	/^function! s:SyntaxNameAtPosition(line, column)$/;"	f
s:SystemError	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SystemError(cmd, ...) abort$/;"	f
s:TE	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:TE = [ '#1C1C1C' , '#3A3A3A' , 254 , 237 , '' ]$/;"	v
s:TERM_BG	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_BG     = s:TERM_BLACK$/;"	v
s:TERM_BG	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_BG     = s:TERM_WHITE$/;"	v
s:TERM_BLACK	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_BLACK  = 16$/;"	v
s:TERM_BLACK	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_BLACK  = 16$/;"	v
s:TERM_BLUE	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_BLUE   = 69$/;"	v
s:TERM_BLUE	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_BLUE   = 69$/;"	v
s:TERM_DGREY	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_DGREY  = 241$/;"	v
s:TERM_DGREY	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_DGREY  = 241$/;"	v
s:TERM_GREEN	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_GREEN  = 71$/;"	v
s:TERM_GREEN	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_GREEN  = 71$/;"	v
s:TERM_GREY0	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_GREY0  = s:TERM_WHITE$/;"	v
s:TERM_GREY0	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_GREY0  = s:TERM_BLACK$/;"	v
s:TERM_GREY1	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_GREY1  = s:TERM_LGREY$/;"	v
s:TERM_GREY1	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_GREY1  = s:TERM_DGREY$/;"	v
s:TERM_GREY2	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_GREY2  = s:TERM_DGREY$/;"	v
s:TERM_GREY2	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_GREY2  = s:TERM_LGREY$/;"	v
s:TERM_LGREY	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_LGREY  = 255$/;"	v
s:TERM_LGREY	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_LGREY  = 255$/;"	v
s:TERM_RED	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_RED    = 167$/;"	v
s:TERM_RED	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_RED    = 167$/;"	v
s:TERM_WHITE	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_WHITE  = 231$/;"	v
s:TERM_WHITE	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_WHITE  = 231$/;"	v
s:TERM_YELLOW	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_YELLOW = 220$/;"	v
s:TERM_YELLOW	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_YELLOW = 220$/;"	v
s:TH	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:TH  = [ s:N1[1], s:N1[0], s:N1[3], s:N1[2] ]     " hidden buffers$/;"	v
s:TM	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:TM  = [ '#870000', '#ff8700',  88, 208, 'bold' ] " modified buffers$/;"	v
s:TMU	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:TMU = [ '#ff8700', '#870000', 208,  88, 'bold' ] " modified unselected buffers$/;"	v
s:TN	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:TN  = s:N2 " normal buffers$/;"	v
s:TRUE	autoload/plugged/vim-polyglot/indent/autohotkey.vim	/^let s:TRUE = !0$/;"	v
s:TYPE	autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:TYPE	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:TYPE = {'dict': type({}), 'funcref': type(function('call')), 'string': type(''), 'list': t/;"	v
s:TYPE_DICT	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_LIST	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_STRING	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_STRING = type('')$/;"	v
s:Tab	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:Tab()$/;"	f
s:TabBuffers	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:TabBuffers()$/;"	f
s:TableFormat	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:TableFormat()$/;"	f
s:Tag	autoload/plugged/vim-polyglot/ftplugin/pdf.vim	/^function! s:Tag()$/;"	f
s:TagFiles	autoload/plugged/vim-polyglot/extras/menu.vim	/^fun! s:TagFiles()$/;"	f
s:TeXIndent	autoload/plugged/vim-polyglot/indent/rnoweb.vim	/^  let s:TeXIndent = function("s:NoTeXIndent")$/;"	v
s:TeXIndent	autoload/plugged/vim-polyglot/indent/rnoweb.vim	/^  let s:TeXIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:TempCmd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempCmd(out, cmd) abort$/;"	f
s:TempDelete	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempDelete(file) abort$/;"	f
s:TempReadPost	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempReadPost(file) abort$/;"	f
s:TempReadPre	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempReadPre(file) abort$/;"	f
s:TempScript	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempScript(...) abort$/;"	f
s:TempState	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempState(...) abort$/;"	f
s:TextDocumentIdentifier	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:TextDocumentIdentifier(path)$/;"	f
s:TextDocumentPositionParams	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:TextDocumentPositionParams(documentUri, line, character)$/;"	f
s:TextWidth	autoload/plugged/vim-polyglot/extras/menu.vim	/^fun! s:TextWidth()$/;"	f
s:Toc	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:Toc(...)$/;"	f
s:ToggleGuiOption	autoload/plugged/vim-polyglot/extras/menu.vim	/^fun! s:ToggleGuiOption(option)$/;"	f
s:ToggleTabTreeVCS	autoload/plugged/NERDTree/nerdtree_plugin/vcs.vim	/^function! s:ToggleTabTreeVCS(name)$/;"	f
s:Token	autoload/plugged/vim-polyglot/indent/javascript.vim	/^function s:Token()$/;"	f
s:TokenizeLine	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:TokenizeLine(lnum, direction)$/;"	f
s:ToolItems	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolItems(state, from, to, offsets, text, ...) abort$/;"	f
s:ToolParse	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolParse(state, line) abort$/;"	f
s:ToolStream	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolStream(line1, line2, range, bang, mods, options, args, state) abort$/;"	f
s:ToolToFrom	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolToFrom(str) abort$/;"	f
s:Tree	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Tree(...) abort$/;"	f
s:Tree	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Tree(path) abort$/;"	f
s:TreeChomp	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeChomp(...) abort$/;"	f
s:TreeDirNode	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeDirNode.AbsoluteTreeRoot	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
s:TreeDirNode.GetSelected	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
s:TreeDirNode.New	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f
s:TreeDirNode._glob	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._glob(pattern, all)$/;"	f
s:TreeDirNode._initChildren	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
s:TreeDirNode._openInNewTab	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
s:TreeDirNode.activate	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
s:TreeDirNode.addChild	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
s:TreeDirNode.close	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
s:TreeDirNode.closeChildren	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
s:TreeDirNode.createChild	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
s:TreeDirNode.displayString	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.displayString()$/;"	f
s:TreeDirNode.findNode	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
s:TreeDirNode.getCascade	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascade()$/;"	f
s:TreeDirNode.getCascadeRoot	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascadeRoot()$/;"	f
s:TreeDirNode.getChild	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
s:TreeDirNode.getChildByIndex	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
s:TreeDirNode.getChildCount	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
s:TreeDirNode.getChildIndex	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
s:TreeDirNode.getDirChildren	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getDirChildren()$/;"	f
s:TreeDirNode.getVisibleChildCount	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
s:TreeDirNode.getVisibleChildren	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
s:TreeDirNode.hasVisibleChildren	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
s:TreeDirNode.isCascadable	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.isCascadable()$/;"	f
s:TreeDirNode.open	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
s:TreeDirNode.openAlong	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
s:TreeDirNode.openExplorer	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
s:TreeDirNode.openInNewTab	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
s:TreeDirNode.openRecursively	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
s:TreeDirNode.refresh	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
s:TreeDirNode.refreshDirFlags	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
s:TreeDirNode.refreshFlags	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
s:TreeDirNode.removeChild	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
s:TreeDirNode.reveal	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f
s:TreeDirNode.sortChildren	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
s:TreeDirNode.toggleOpen	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
s:TreeDirNode.transplantChild	autoload/plugged/NERDTree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
s:TreeFileNode	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:TreeFileNode.GetRootForTab	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
s:TreeFileNode.GetSelected	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
s:TreeFileNode.New	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f
s:TreeFileNode._renderToString	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText)$/;"	f
s:TreeFileNode.activate	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
s:TreeFileNode.bookmark	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
s:TreeFileNode.cacheParent	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
s:TreeFileNode.clearBookmarks	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
s:TreeFileNode.copy	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
s:TreeFileNode.delete	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
s:TreeFileNode.displayString	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
s:TreeFileNode.equals	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
s:TreeFileNode.findNode	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
s:TreeFileNode.findSibling	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
s:TreeFileNode.getNerdtree	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f
s:TreeFileNode.isRoot	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
s:TreeFileNode.isVisible	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
s:TreeFileNode.open	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
s:TreeFileNode.openExplorer	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openExplorer()$/;"	f
s:TreeFileNode.openInNewTab	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
s:TreeFileNode.openSplit	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
s:TreeFileNode.openVSplit	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
s:TreeFileNode.putCursorHere	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
s:TreeFileNode.refresh	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
s:TreeFileNode.refreshFlags	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
s:TreeFileNode.rename	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
s:TreeFileNode.renderToString	autoload/plugged/NERDTree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
s:TreeInfo	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeInfo(dir, commit) abort$/;"	f
s:UI	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:UI.IndentWid	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
s:UI.MarkupReg	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
s:UI.New	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
s:UI.UpDirLine	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
s:UI._dumpHelp	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
s:UI._indentLevelFor	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
s:UI._renderBookmarks	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
s:UI._stripMarkup	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line)$/;"	f
s:UI.centerView	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
s:UI.getLineNum	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(node)$/;"	f
s:UI.getPath	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
s:UI.getRootLineNum	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
s:UI.getShowBookmarks	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f
s:UI.getShowFiles	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.getShowFiles()$/;"	f
s:UI.getShowHelp	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHelp()$/;"	f
s:UI.getShowHidden	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHidden()$/;"	f
s:UI.isIgnoreFilterEnabled	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f
s:UI.isMinimal	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.isMinimal()$/;"	f
s:UI.render	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
s:UI.renderViewSavingPosition	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
s:UI.restoreScreenState	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
s:UI.saveScreenState	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
s:UI.setShowHidden	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f
s:UI.toggleHelp	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.toggleHelp()$/;"	f
s:UI.toggleIgnoreFilter	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
s:UI.toggleShowBookmarks	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
s:UI.toggleShowFiles	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
s:UI.toggleShowHidden	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
s:UI.toggleZoom	autoload/plugged/NERDTree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
s:UnexpectedToken	autoload/plugged/vim-polyglot/indent/erlang.vim	/^function! s:UnexpectedToken(token, stack)$/;"	f
s:Uniq	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Uniq(list) abort$/;"	f
s:UnletStack	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^function! s:UnletStack()$/;"	f
s:UpdateIndex	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function s:UpdateIndex(dir, info) abort$/;"	f
s:UpdateMakePrg	autoload/plugged/vim-polyglot/compiler/coffee.vim	/^  function! s:UpdateMakePrg()$/;"	f
s:UpdateMakePrg	autoload/plugged/vim-polyglot/compiler/ls.vim	/^  function! s:UpdateMakePrg()$/;"	f
s:UpdateNimLog	autoload/plugged/vim-polyglot/autoload/nim.vim	/^fun! s:UpdateNimLog() abort$/;"	f
s:UsableWin	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UsableWin(nr) abort$/;"	f
s:UserCommand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommand(...) abort$/;"	f
s:UserCommandCwd	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommandCwd(dir) abort$/;"	f
s:UserCommandList	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommandList(...) abort$/;"	f
s:V	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:V = vital#crystal#new()$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:V1 = [s:guiWhite, s:gui08, s:ctermWhite, s:cterm08]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:V1 = [s:gui_dark_gray, s:gui_pink, s:cterm_dark_gray, s:cterm_pink]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:V1 = [ '#3D424D' , '#FF8F40' , 59  , 209 ] " guifg guibg ctermfg ctermbg$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:V1 = [ '#6C7680' , '#FA8D3E' , 66  , 209 ] " guifg guibg ctermfg ctermbg$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:V1 = [ '#212733' , '#FFAE57' , 0   , 173 ] " guifg guibg ctermfg ctermbg$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:V1 = [ '#141413' , '#ffa724' , 232 , 214 ] " blackestgravel & orange$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let s:V1 = [s:gui_dark_gray, s:gui_pink, s:cterm_dark_gray, s:cterm_pink]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:V1 = [ s:base00 , s:base0A , 235 , 229 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:V1 = [s:gui_visualfg, s:gui_visualbg, s:cterm_visualfg, s:cterm_visualbg] " Outside blocks/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:V1 = [ '#141413' , '#B5D3F3' , 232 , 'blue' ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:V1 = [ '#121212', '#5fff5f', 233, 83 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:V1 = [s:gui_dark_gray, s:gui_pink, s:cterm_dark_gray, s:cterm_pink]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:V1 = [ '#ffff9a' , '#ff9d00' , 222 , 208 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:V1 = [ '#585858' , '#E4E4E4' , 59 , 188 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:V1 = [ '#080808' , '#ffaf00' , 232 , 214 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:V1 = [ '#282C34', '#C678DD', s:term_black, s:term_purple ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:V1 = [s:outerfg[1], s:pink[1], s:outerfg[0], s:pink[0]]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:V1 = [ '#1a1a18' , '#ffffff' , 232 , 255 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:V1 = [ s:guiWhite , s:guiFuschia , s:ctermWhite , s:ctermFuschia ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:V1 = [ s:BG, s:YELLOW, s:TERM_BG, s:TERM_YELLOW ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:V1 = [ s:BG, s:YELLOW, s:TERM_BG, s:TERM_YELLOW ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:V1 = [ s:guiWhite , s:gui08 , s:ctermWhite , s:cterm08 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:V1 = [ s:guiWhite , s:gui08 , s:ctermAsh , s:ctermWinter ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let s:V1 = [ '#0087ff' , '#ffffff','33','231']$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:V1 = [ '#242322' , '#e6987a' , 234 , 180 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:V1 = [ '#005f00', '#f8f6f2','22','15']$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:V1 = [ '#ffffff' , '#ff5f00' , 255 , 202 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:V1 = [ s:lh_gui1 , s:lh_gui6 , s:lh_cterm1, s:lh_cterm6 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:V1 = [ '#ffff9a' , '#ff8036' , 222 , 208 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:V1 = [ '#080808' , '#a6e22e' , 232 , 118 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:V1 = [s:gui_visualfg, s:gui_visualbg, s:cterm_visualfg, s:cterm_visualbg] " Outside blocks/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:V1 = [ s:gui_black, s:gui_blue, s:cterm_black, s:cterm_blue ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:V1   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:V1 = [s:gui_visualfg, s:gui_visualbg, s:cterm_visualfg, s:cterm_visualbg]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:V1 = [s:gui_dark_gray, '#87d787', s:cterm_dark_gray, 114]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:V1 = [ '#005f87', '#e4e4e4', 24,  254 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:V1 = [ '#3A3A3A' , '#F0C0F0' , 254 , 237 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:V1 = [ '#080808' , '#ffaf00' , 232 , 214 ] " gray3          & brightestorange$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:V1 = [ '#0E3B4F' , '#FFEEE5' , 232 , 214 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:V1 = [ '#6565ff' , '#2e2e2e' , 63 , 235 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:V1 = [ '#080808' , '#ffaf00' , 232 , 214 ] " gray3          & brightestorange$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:V1 = [ '#dfdf00' , s:guibg , 184 , s:termbg ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:V1 = [s:guiWhite, s:gui08, s:ctermWhite, s:cterm08]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:V1 = [ '#0000b3' , '#e1e1e1' , 19 , 188 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:V1 = [ s:guibg, '#dfdf00' , s:termbg , 184 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:V1 = [ '#ffff9a' , '#ff6003' , 222 , 202 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:V1 = [ '#141413' , '#B5D3F3' , 232 , 4 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:V1 = [ '#f0f0f0' , '#7CB0E6' , 15,  4 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:V1 = [s:darkgray[1], s:pink[1], s:outerfg[0], s:pink[0]]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:V1 = [ '#416389', '#f8f6f2','18','15']$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:V1 = ['#080808', '#FFAF00', 232, 214]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:V1 = ['#FFFFFF', '#AF5F00', 15, 130]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:V1 = [ '#5f0000' , '#ff5faf' , 52 , 205 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:V1 = [ '#141413' , '#B5D3F3' , 232 , 153 ]$/;"	v
s:V1	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:V1 = [ '#eeeeee' , '#ff5f00' , 255 , 202 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:V2 = s:N2$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:V2 = [ '#FF8F40' , '#304357' , 209 , 59  ] " guifg guibg ctermfg ctermbg$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:V2 = [ '#FA8D3E' , '#6C7680' , 209 , 66  ] " guifg guibg ctermfg ctermbg$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:V2 = [ '#FFAE57' , '#212733' , 173 , 0   ] " guifg guibg ctermfg ctermbg$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:V2 = [ '#000000' , '#fade3e' , 16  , 221 ] " coal           & dalespale$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:V2 = [ s:base0A , s:base00 , 229 , 235 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:V2 = [s:gui_visualbg, s:gui_termbg2, s:cterm_visualbg, s:cterm_termbg2]   " Middle block$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:V2 = [ '#B5D3F3' , '#32322F' , 'blue' , 235 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:V2 = s:N2$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:V2 = [ '#ffffff' , '#8cc2fd' , 231 , 29 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:V2 = [ '#E4E4E4' , '#AF2800' , 188 , 124 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:V2 = s:N2$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:V2 = [ '#ffffff' , '#44403a' , 255, 238 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:V2 = s:N2$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:V2 = s:N2$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:V2 = s:N2$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:V2 = s:N2$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:V2 = [ s:gui02 , s:gui01 , s:ctermWinter , s:ctermAsh  ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let s:V2 = [ '#005faf' , '#5fafff','25','75']$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:V2 = [ '#dbc570' , '#242322' , 186 , 234 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:V2 = [ '#f8f6f2', '#005f00','15','22']$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:V2 = [ '#5f0000' , '#ffaf00' , 52  , 214 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:V2 = [ s:lh_gui3 , s:lh_gui4 , s:lh_cterm3, s:lh_cterm4 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:V2 = [ '#ffffff' , '#003f3f' , 231 , 29 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:V2 = [ '#f8f8f0' , '#232526' , 253 , 16 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:V2 = [ '#f8f8f0' , '#232526' , 253 , 208 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:V2 = [s:gui_visualbg, s:gui_termbg2, s:cterm_visualbg, s:cterm_termbg2]   " Middle block$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:V2 = [ s:gui_black, s:gui_blue_offset,  s:cterm_black, s:cterm_blue_offset ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:V2   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:V2 = s:BB$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:V2 = [ '',        '#0087af', '',  31  ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:V2 = [ '#E4E4E4' , '#4E4E4E' , 254 , 239 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:V2 = [ '#0E3B4F' , '#FF9DA5' , 232 , 202 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:V2 = [ '#6565ff' , '#2e2e2e' , 63 , 235 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:V2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:V2 = s:N2$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:V2 = [ '#0000b3' , '#e1e1e1' , 19 , 188 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:V2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:V2 = [ '#343434' , '#a3a3a3' , 237 , 249 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:V2 = [ '#B5D3F3' , '#32322F' , 4 , 'black' ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:V2 = [ '#7CB0E6' , '#deded9' ,  4,  8 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:V2 = [ '#416389', '#f4cf86','18','222']$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:V2 = ['#AFAF87', '#5F5F5F', 144, 59]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:V2 = [ '#B5D3F3' , '#32322F' , 153 , 238 ]$/;"	v
s:V2	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:V2 = [ '#5f0000' , '#ffaf00' , 52  , 214 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:V3 = s:I3$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:V3 = [s:gui_pink, s:gui_med_gray_hi, s:cterm_pink, s:cterm_med_gray_hi]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:V3 = [ '#B3B1AD' , '#0A0E14' , 145 , 16  ] " guifg guibg ctermfg ctermbg$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:V3 = [ '#6C7680' , '#FAFAFA' , 66  , 231 ] " guifg guibg ctermfg ctermbg$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:V3 = [ '#E6E1CF' , '#212733' , 15  , 0   ] " guifg guibg ctermfg ctermbg$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:V3 = [ '#000000' , '#b88853' , 16  , 137 ] " coal           & toffee$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let s:V3 = [s:gui_pink, s:gui_med_gray_hi, s:cterm_pink, s:cterm_med_gray_hi]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:V3 = [ s:base0A , s:base00 , 229 , 235 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:V3 = [ '#B5D3F3' , '#242424' , 'blue' , 234 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:V3 = s:N3$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:V3 = [s:gui_pink, s:gui_med_gray_hi, s:cterm_pink, s:cterm_med_gray_hi]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:V3 = [ '#ffffff' , '#204458' , 231  , 23  ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:V3 = [ '#EEEEEE' , '#872800' , 231  , 88  ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:V3 = [ '#C678DD', '#282C34', s:term_purple, '' ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:V3 = [s:pink[1], s:innerbg[1], s:pink[0], s:innerbg[0]]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:V3 = [ '#90a680' , '#2e2d2a' , 64, 235 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:V3 = s:I3$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:V3 = [ s:YELLOW, s:BG, s:TERM_YELLOW, s:TERM_BG ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:V3 = [ s:YELLOW, s:BG, s:TERM_YELLOW, s:TERM_BG ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:V3 = s:I3$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:V3 = [ s:guiWhite , s:gui01 , s:ctermWinter , s:ctermBlack  ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let s:V3 = [ '#87d7ff' , '#005faf','117','25']$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:V3 = [ '#e2e2e2' , '#4a4a4a' , 254 , 238 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:V3 = [ '#594512', '#f8f6f2','64','15']$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:V3 = [ '#df5f00' , '#ffff87' , 166 , 228 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:V3 = [ s:lh_gui6 , s:lh_gui1 , s:lh_cterm6, s:lh_cterm1 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:V3 = [ '#ffffff' , '#002b2b' , 231  , 23  ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:V3 = [ '#f8f8f0' , '#465457' , 253 , 67  ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:V3 = [ s:gui_blue, s:gui_black, s:cterm_blue, s:cterm_black ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:V3   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:V3 = [s:gui_visualbg, s:gui_termbg2, s:cterm_visualbg, s:cterm_termbg2]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:V3 = ['#87d787', s:gui_med_gray_hi, 114, s:cterm_med_gray_hi]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:V3 = [ '#e4e4e4', '#005f87', 254, 24  ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:V3 = [ '#EEEEEE' , '#262626' , 255 , 235 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:V3 = [ '#ffffff' , '#FF5B6F' , 15  , 52  ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:V3 = [ '#6565ff' , '#2e2e2e' , 63 , 235 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:V3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:V3 = s:I3$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:V3 = [ '#0000b3' , '#e1e1e1' , 19 , 188 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:V3 = [ '#767676' , s:guibg, 243 , s:termbg ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:V3 = [ '#343434' , '#b0b0b0' , 237 , 250 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:V3 = [ '#B5D3F3' , '#242424' , 4 , 233 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:V3 = [ '#7CB0E6' , '#888a85' ,  4, 15 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:V3 = [s:pink[1]    , s:innerbg[1], s:pink[0], s:innerbg[0]]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:V3 = [ '#9a4820' , '#f8f6f2','88','15']$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:V3 = ['#AFAF87', '#5F5F5F', 144, 59]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:V3 = [ '#B5D3F3' , '#242424' , 153 , 235 ]$/;"	v
s:V3	autoload/plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:V3 = [ '#d75f00' , '#ffff87' , 166 , 228 ]$/;"	v
s:V4	autoload/plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:V4 = [ '#c7915b' , 173 ]                   " coffee$/;"	v
s:V4	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:V4 = [ s:base0A , 229 ]$/;"	v
s:V4	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:V4 = [ '#7CB0E6' , 'blue' ]$/;"	v
s:V4	autoload/plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:V4 = [ '#594512' , 64 ]$/;"	v
s:V4	autoload/plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:V4 = [ '#ffffff' , '#FF003F' , 255  , 53  ]$/;"	v
s:V4	autoload/plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:V4 = [ '#7CB0E6' , 12 ]$/;"	v
s:V4	autoload/plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:V4 = [ '#B5D3F3' , '#141413' , 12,  0 ]$/;"	v
s:V4	autoload/plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:V4 = [ '#9a4820' , 88 ]$/;"	v
s:V4	autoload/plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:V4 = [ '#7CB0E6' , 111 ]$/;"	v
s:VERSION	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:VERSION = s:version()$/;"	v
s:ValidMatchEnd	autoload/plugged/vim-polyglot/indent/mp.vim	/^function! s:ValidMatchEnd(line, pat, start)$/;"	f
s:VersionAwareNetrwBrowseX	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:VersionAwareNetrwBrowseX(url)$/;"	f
s:VersionCheck	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:VersionCheck() abort$/;"	f
s:VisMove	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:VisMove(f)$/;"	f
s:Vital	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital = {}$/;"	v
s:Vital	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:W	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:W = [s:gui_warningfg, s:gui_warningbg, s:cterm_warningfg, s:cterm_warningbg, 'bold']$/;"	v
s:WARNING	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:WARNING = [ s:gui01, s:gui0A, s:cterm0C, s:cterm06 ]$/;"	v
s:WHITE	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:WHITE  = '#FFFFFF'$/;"	v
s:WHITE	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:WHITE  = '#FFFFFF'$/;"	v
s:WI	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:WI = [s:gui07, s:gui09, s:cterm07, s:cterm09]$/;"	v
s:WI	autoload/plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:WI = [ '#121212', '#d7005f', 233, 161 ]$/;"	v
s:WI	autoload/plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:WI = [ '#204458', '#ffffff', 231, 88 ]$/;"	v
s:WI	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:WI = [ '#282C34', '#E5C07B', s:term_black, s:term_yellow ]$/;"	v
s:WI	autoload/plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:WI = [ '#ffffff', '#5f0000', 231, 88 ]$/;"	v
s:WI	autoload/plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:WI = [ '#1C1C1C' , '#E0C060' , 234 , 215 , '' ]$/;"	v
s:WI	autoload/plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:WI = [ '#ff0000', '#2e2e2e', 196, 235 ]$/;"	v
s:WI	autoload/plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:WI = [ '#ff0000', '#e1e1e1', 196, 188 ]$/;"	v
s:WI	autoload/plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:WI = [ '#eeeeee', '#e33900', 255, 166 ]$/;"	v
s:Weight	autoload/plugged/vim-polyglot/indent/mp.vim	/^function! s:Weight(line)$/;"	f
s:WinShellEsc	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:WinShellEsc(arg) abort$/;"	f
s:WithPath	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! s:WithPath(func, ...)$/;"	f
s:WorkspaceLoadParms	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:WorkspaceLoadParms(files)$/;"	f
s:WorkspacePeekRequest	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:WorkspacePeekRequest(directory, deep, excludedDirs)$/;"	f
s:XxdBack	autoload/plugged/vim-polyglot/extras/menu.vim	/^func s:XxdBack()$/;"	f
s:XxdConv	autoload/plugged/vim-polyglot/extras/menu.vim	/^func s:XxdConv()$/;"	f
s:XxdFind	autoload/plugged/vim-polyglot/extras/menu.vim	/^func s:XxdFind()$/;"	f
s:YELLOW	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:YELLOW = '#FBBC05'$/;"	v
s:YELLOW	autoload/plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:YELLOW = '#FBBC05'$/;"	v
s:_SID	autoload/plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:_SID() abort$/;"	f
s:_SID	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_SID() abort$/;"	f
s:_SID	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_SID() abort$/;"	f
s:_SID	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:_SID() abort$/;"	f
s:_SID	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_SID() abort$/;"	f
s:_SID	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_SID() abort$/;"	f
s:_bounder	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:_bounder = s:SimplifyToAssumeAllPrintable('\\%([[\\]{}, \\t]\\@!\\p\\)')$/;"	v
s:_call_string_expr	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_call_string_expr(expr, args) abort$/;"	f
s:_collection	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:_collection = '[^\\@!\\(\\%(\\\\\\.\\|\\[^\\\\\\]]\\)\\+\\)]'$/;"	v
s:_compare	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
s:_default_compare	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
s:_define_ansi_highlights	autoload/plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:_define_ansi_highlights() abort$/;"	f
s:_dot_to_sharp	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
s:_encode_dict	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_encode_dict(val, settings) abort$/;"	f
s:_encode_list	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_encode_list(val, settings) abort$/;"	f
s:_ends_with	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:_ends_with(text, expr, lnum)$/;"	f
s:_execute	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_execute(cmd) abort$/;"	f
s:_extract_files	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
s:_false	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_false() abort$/;"	f
s:_file2module	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_file2module(file) abort$/;"	f
s:_function	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_function(fstr) abort$/;"	f
s:_get_builtin_module	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
s:_get_module	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_get_module(name) abort dict$/;"	f
s:_global_vital_files	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_global_vital_files() abort$/;"	f
s:_import	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_import(name) abort dict$/;"	f
s:_import_func_name	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
s:_is_available	autoload/plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:_is_available() abort$/;"	f
s:_module_path	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_module_path(name) abort$/;"	f
s:_module_sid	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_module_sid(name) abort$/;"	f
s:_module_sid_base_dir	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
s:_neg_collection	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:_neg_collection = '[^\\(\\%(\\\\\\.\\|\\[^\\\\\\]]\\)\\+\\)]'$/;"	v
s:_null	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_null() abort$/;"	f
s:_pad_with_char	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
s:_plugin_name	autoload/plugged/vim-polyglot/autoload/vital/_crystal.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_replace	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
s:_resolve	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_resolve(val, prefix) abort$/;"	f
s:_s	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_self_vital_files	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_self_vital_files() abort$/;"	f
s:_sfuncname	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
s:_sid	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
s:_skip_special_chars	autoload/plugged/vim-polyglot/indent/cython.vim	/^    function! s:_skip_special_chars(line, col)$/;"	f
s:_skip_special_chars	autoload/plugged/vim-polyglot/indent/python.vim	/^    function! s:_skip_special_chars(line, col)$/;"	f
s:_source	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_source(path) abort$/;"	f
s:_split_by_wcswidth	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
s:_split_by_wcswidth_once	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
s:_starts_with	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:_starts_with(text, expr, lnum)$/;"	f
s:_true	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_true() abort$/;"	f
s:_unify_path	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_unify_path(path) abort$/;"	f
s:_unify_path_cache	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_uniq	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_uniq(list) abort$/;"	f
s:_vital_created	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_created	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_depends	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_loaded	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_wcwidth	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
s:abort	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:abort()$/;"	f
s:accents	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:accents = {}$/;"	v
s:access_modifier_regex	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:access_modifier_regex = '\\C^\\s*\\%(public\\|protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:action_for	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:action_for(key, ...)$/;"	f
s:activate	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^  let s:activate = 'activate'$/;"	v
s:activate	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^let s:activate = ""$/;"	v
s:activate	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:activate()$/;"	f
s:activateAll	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll() abort$/;"	f
s:activateBookmark	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm) abort$/;"	f
s:activateDirNode	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(directoryNode, ...) abort$/;"	f
s:activateFileNode	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node) abort$/;"	f
s:activated	autoload/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:activated = 0$/;"	v
s:active_winnr	autoload/plugged/vim-airline/plugin/airline.vim	/^let s:active_winnr = -1$/;"	v
s:add_methods	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
s:add_related	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:add_related(winid, target) abort$/;"	f
s:add_section	autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^  function! s:add_section(builder, context, key)$/;"	f
s:add_sign	autoload/plugged/vim-signify/autoload/sy/sign.vim	/^function! s:add_sign(sy, line, type, ...) abort$/;"	f
s:add_syntax	autoload/plugged/vim-polyglot/syntax/pgsql.vim	/^fun! s:add_syntax(s)$/;"	f
s:addr_other	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:addr_other = has('patch-8.1.560') ? '-addr=other' : ''$/;"	v
s:addr_tabs	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:addr_tabs  = has('patch-7.4.542') ? '-addr=tabs' : ''$/;"	v
s:addr_wins	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:addr_wins  = has('patch-7.4.542') ? '-addr=windows' : ''$/;"	v
s:adjust_win_row	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:adjust_win_row(winid, changed) abort$/;"	f
s:ag_handler	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_handler(lines, has_column)$/;"	f
s:ag_to_qf	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_to_qf(line, has_column)$/;"	f
s:airline_a_commandline	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_a_commandline = [s:colors.black.gui, s:colors.white.gui, s:colors.black.cterm, s:c/;"	v
s:airline_a_commandline	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_commandline = [ '#00005f' , '#00d700' , 17  , 40 ]$/;"	v
s:airline_a_inactive	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_a_inactive = s:color_list(s:darker_grey, s:medium_grey)$/;"	v
s:airline_a_inactive	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_a_inactive = ['#4e4e4e', '#1c1c1c', 239, 234, '']$/;"	v
s:airline_a_inactive	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_inactive = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:airline_a_insert	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_a_insert = [s:colors.black.gui, s:colors.green.gui, s:colors.black.cterm, s:colors/;"	v
s:airline_a_insert	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_a_insert = s:color_list(s:darker_grey, s:green)$/;"	v
s:airline_a_insert	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:airline_a_insert = s:gen_def(s:dark_gray, s:banana_smoothie)$/;"	v
s:airline_a_insert	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_a_insert = [s:base03['hex'] , s:cyan['hex'],$/;"	v
s:airline_a_insert	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_insert = [ '#00005f' , '#00dfff' , 17  , 45  ]$/;"	v
s:airline_a_normal	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_a_normal = [s:colors.black.gui, s:colors.blue_purple.gui, s:colors.black.cterm, s:/;"	v
s:airline_a_normal	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_a_normal = s:color_list(s:darker_grey, s:ocre)$/;"	v
s:airline_a_normal	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:airline_a_normal = s:gen_def(s:dark_gray, s:pretty_pink)$/;"	v
s:airline_a_normal	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_a_normal = [s:base03['hex'],  s:green['hex'],$/;"	v
s:airline_a_normal	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_normal   = [ '#00005f' , '#dfff00' , 17  , 190 ]$/;"	v
s:airline_a_replace	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_a_replace = [s:colors.black.gui, s:colors.light_red.gui, s:colors.black.cterm, s:c/;"	v
s:airline_a_replace	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_a_replace = s:color_list(s:darker_grey, s:red)$/;"	v
s:airline_a_replace	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:airline_a_replace = s:gen_def(s:dark_gray, s:faded_red)$/;"	v
s:airline_a_visual	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_a_visual = [s:colors.black.gui, s:colors.yellow.gui, s:colors.black.cterm, s:color/;"	v
s:airline_a_visual	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_a_visual = s:color_list(s:darker_grey, s:yellow)$/;"	v
s:airline_a_visual	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:airline_a_visual = s:gen_def(s:dark_gray, s:icy_sky)$/;"	v
s:airline_a_visual	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_a_visual = [s:base03['hex'],  s:yellow['hex'],$/;"	v
s:airline_a_visual	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_visual = [ '#000000' , '#ffaf00' , 232 , 214 ]$/;"	v
s:airline_ale_count	autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:airline_ale_count(cnt, symbol)$/;"	f
s:airline_ale_get_line_number	autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:airline_ale_get_line_number(cnt, type) abort$/;"	f
s:airline_b_commandline	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_b_commandline = s:airline_b_normal$/;"	v
s:airline_b_commandline	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_commandline = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:airline_b_inactive	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_b_inactive = s:color_list(s:medium_grey, s:darker_grey)$/;"	v
s:airline_b_inactive	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_b_inactive = ['#4e4e4e', '#262626', 239, 235, '']$/;"	v
s:airline_b_inactive	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_inactive = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:airline_b_insert	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_b_insert = s:airline_b_normal$/;"	v
s:airline_b_insert	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_b_insert = s:airline_b_normal$/;"	v
s:airline_b_insert	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_b_insert = [s:base1['hex'],  s:base03['hex'],$/;"	v
s:airline_b_insert	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_insert = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:airline_b_normal	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_b_normal = [s:colors.white.gui, s:colors.white_mask_3.gui, s:colors.white.cterm, s/;"	v
s:airline_b_normal	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_b_normal = s:color_list(s:darker_grey, s:medium_grey)$/;"	v
s:airline_b_normal	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_b_normal = [s:base1['hex'],  s:base03['hex'],$/;"	v
s:airline_b_normal	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_normal   = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:airline_b_replace	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_b_replace = s:airline_b_normal$/;"	v
s:airline_b_replace	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_b_replace = s:airline_b_normal$/;"	v
s:airline_b_visual	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_b_visual = s:airline_b_normal$/;"	v
s:airline_b_visual	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_b_visual = s:airline_b_normal$/;"	v
s:airline_b_visual	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_b_visual = [s:base1['hex'],  s:base03['hex'],$/;"	v
s:airline_b_visual	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_visual = [ '#000000' , '#ff5f00' , 232 , 202 ]$/;"	v
s:airline_c_commandline	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_c_commandline = s:airline_c_normal$/;"	v
s:airline_c_commandline	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_commandline = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:airline_c_inactive	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_c_inactive = s:airline_b_inactive$/;"	v
s:airline_c_inactive	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_c_inactive = ['#4e4e4e', '#303030', 239, 236, '']$/;"	v
s:airline_c_inactive	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_inactive = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:airline_c_insert	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_c_insert = s:airline_c_normal$/;"	v
s:airline_c_insert	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_c_insert = s:airline_c_normal$/;"	v
s:airline_c_insert	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:airline_c_insert = s:gen_def(s:banana_smoothie, s:med_gray_hi)$/;"	v
s:airline_c_insert	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_c_insert = [s:blue['hex'],  s:base03['hex'],$/;"	v
s:airline_c_insert	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_insert = [ '#ffffff' , '#000080' , 15  , 17  ]$/;"	v
s:airline_c_normal	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_c_normal = [s:colors.white.gui, s:colors.white_mask_1.gui, s:colors.white.cterm, s/;"	v
s:airline_c_normal	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_c_normal = s:color_list(s:lighter_grey, s:darker_grey)$/;"	v
s:airline_c_normal	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:airline_c_normal = s:gen_def(s:pretty_pink, s:med_gray_hi)$/;"	v
s:airline_c_normal	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_c_normal = [s:cyan['hex'],  s:base03['hex'],$/;"	v
s:airline_c_normal	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_normal   = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:airline_c_replace	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_c_replace = s:airline_c_normal$/;"	v
s:airline_c_replace	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_c_replace = s:airline_c_normal$/;"	v
s:airline_c_replace	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:airline_c_replace = s:gen_def(s:faded_red, s:med_gray_hi)$/;"	v
s:airline_c_visual	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_c_visual = s:airline_c_normal$/;"	v
s:airline_c_visual	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_c_visual = s:airline_c_normal$/;"	v
s:airline_c_visual	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:airline_c_visual = s:gen_def(s:icy_sky, s:med_gray_hi)$/;"	v
s:airline_c_visual	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_c_visual = [s:red['hex'],  s:base03['hex'],$/;"	v
s:airline_c_visual	autoload/plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_visual = [ '#ffffff' , '#5f0000' , 15  , 52  ]$/;"	v
s:airline_error	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_error = [s:colors.black.gui, s:colors.red.gui, s:colors.black.cterm, s:colors.red./;"	v
s:airline_extensions	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:airline_extensions()$/;"	f
s:airline_inactive	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_inactive = [ s:colors.comment_grey.gui, s:colors.white_mask_1.gui, s:colors.commen/;"	v
s:airline_inactive	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:airline_inactive = s:gen_def(s:light_gray, s:med_gray_hi)$/;"	v
s:airline_initialized	autoload/plugged/vim-airline/plugin/airline.vim	/^let s:airline_initialized = 0$/;"	v
s:airline_languageclient_count	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:airline_languageclient_count(cnt, symbol)$/;"	f
s:airline_languageclient_get_line_number	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:airline_languageclient_get_line_number(type) abort$/;"	f
s:airline_lsp_count	autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! s:airline_lsp_count(cnt, symbol) abort$/;"	f
s:airline_lsp_get_line_number	autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! s:airline_lsp_get_line_number(cnt, type) abort$/;"	f
s:airline_modified	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_modified = [s:colors.green.gui, '', s:colors.green.cterm, '', s:wrap_opts(['italic/;"	v
s:airline_nvimlsp_count	autoload/plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! s:airline_nvimlsp_count(cnt, symbol) abort$/;"	f
s:airline_refresh	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:airline_refresh(...)$/;"	f
s:airline_tabfill	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_tabfill = [s:colors.white.gui, s:colors.black.gui, s:colors.white.cterm, s:colors./;"	v
s:airline_tabsel	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_tabsel = [s:colors.black.gui, s:colors.white_mask_11.gui, s:colors.black.cterm, s:/;"	v
s:airline_tagbar_last_lookup_time	autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_time = 0$/;"	v
s:airline_tagbar_last_lookup_val	autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_val = ''$/;"	v
s:airline_theme	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:airline_theme(...)$/;"	f
s:airline_toggle	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:airline_toggle()$/;"	f
s:airline_warning	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:airline_warning = [s:colors.red.gui, s:colors.black.gui, s:colors.red.cterm, s:colors.blac/;"	v
s:ale_refresh	autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:ale_refresh()$/;"	f
s:alias_pattern	autoload/plugged/vim-polyglot/syntax/rst.vim	/^    let s:alias_pattern = ''$/;"	v
s:align_lists	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_lists(lists)$/;"	f
s:align_pairs	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_pairs(list)$/;"	f
s:all	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
s:all_delims	autoload/plugged/vim-polyglot/syntax/raku.vim	/^let s:all_delims = s:plain_delims + s:bracketing_delims$/;"	v
s:all_tokens	autoload/plugged/vim-polyglot/indent/erlang.vim	/^let s:all_tokens = {}$/;"	v
s:allsteps	autoload/plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:allsteps()$/;"	f
s:almost_black	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:almost_black = [ '#1c1c1c', 234 ]$/;"	v
s:alpha_metaops	autoload/plugged/vim-polyglot/syntax/raku.vim	/^let s:alpha_metaops = [$/;"	v
s:alpha_metaops_or	autoload/plugged/vim-polyglot/syntax/raku.vim	/^let s:alpha_metaops_or = join(s:temp, "\\\\|")$/;"	v
s:and	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:and(xs) abort$/;"	f
s:annot_file_list	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:annot_file_list = {}$/;"	v
s:annotationMatcher	autoload/plugged/vim-polyglot/indent/scala.vim	/^let s:annotationMatcher = '@[A-Za-z._]\\+\\s\\+'$/;"	v
s:anon_func_end	autoload/plugged/vim-polyglot/indent/lua.vim	/^let s:anon_func_end = '\\<end\\%(\\s*[)}]\\)\\+'$/;"	v
s:anon_func_start	autoload/plugged/vim-polyglot/indent/lua.vim	/^let s:anon_func_start = '\\S\\+\\s*[({].*\\<function\\s*(.*)\\s*$'$/;"	v
s:ansi	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ansi(str, group, default, ...)$/;"	f
s:ansi	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:ansi = {'black': 30, 'red': 31, 'green': 32, 'yellow': 33, 'blue': 34, 'magenta': 35, 'cya/;"	v
s:ant_cpo_save	autoload/plugged/vim-polyglot/syntax/ant.vim	/^let s:ant_cpo_save = &cpo$/;"	v
s:any	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
s:app	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "MacVim"$/;"	v
s:app	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "System Events"$/;"	v
s:app	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "Terminal"$/;"	v
s:app	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "iTerm2"$/;"	v
s:append_ul	autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
s:aqua	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:aqua   = s:getGruvColor('GruvboxAqua')$/;"	v
s:aqua	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:aqua   = s:gb.bright_aqua$/;"	v
s:aqua	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:aqua   = s:gb.faded_aqua$/;"	v
s:aqua	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:aqua[1]   = 14$/;"	v
s:archs	autoload/plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:archs = [$/;"	v
s:array_entry	autoload/plugged/vim-polyglot/indent/ansible.vim	/^let s:array_entry = '\\v^\\s*-\\s' " - foo$/;"	v
s:ask	autoload/plug.vim	/^function! s:ask(message, ...)$/;"	f
s:ask_no_interrupt	autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	f
s:assign_name	autoload/plug.vim	/^function! s:assign_name()$/;"	f
s:assignment_rx	autoload/plugged/vim-polyglot/indent/make.vim	/^let s:assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\==\\s*\\zs.*\\\\$'$/;"	v
s:assignment_rx	autoload/plugged/vim-polyglot/indent/omake.vim	/^let s:assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\==\\s*\\zs.*\\\\$'$/;"	v
s:assoc	autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
s:at	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:at     = deepcopy(s:atl)$/;"	v
s:at	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:at[0]  = '#6C6C6C'$/;"	v
s:at	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:at[2]  = 242$/;"	v
s:atbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:atbg   = ['#080808', 232]$/;"	v
s:atf	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:atf    = s:atl$/;"	v
s:atl	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:atl    = ['#444444', s:atbg[0], 238, s:atbg[1], 'NONE']$/;"	v
s:atm	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:atm    = deepcopy(s:ats)$/;"	v
s:atm	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:atm[4] = 'italic,bold'$/;"	v
s:ats	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:ats    = ['#D0D0D0', '#1C1C1C', 252,       234, 'NONE']$/;"	v
s:attr	autoload/plugged/vim-polyglot/syntax/vue.vim	/^function! s:attr(name, value)$/;"	f
s:attr_pattern	autoload/plugged/vim-polyglot/syntax/vue.vim	/^  let s:attr_pattern = has_key(s:language, 'attr_pattern') ? s:language.attr_pattern : s:attr('l/;"	v
s:attribute_highlight	autoload/plugged/vim-polyglot/syntax/ansible.vim	/^fun! s:attribute_highlight(attributes)$/;"	f
s:attributes	autoload/plugged/vim-polyglot/indent/haml.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:attributes	autoload/plugged/vim-polyglot/indent/pug.vim	/^let s:attributes = '\\%((.\\{-\\})\\)'$/;"	v
s:attributes	autoload/plugged/vim-polyglot/indent/slim.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:attributes	autoload/plugged/vim-polyglot/indent/slime.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:atu	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:atu    = deepcopy(s:at)$/;"	v
s:atu	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:atu[4] = 'italic,bold' " according to issue#2298, this attribute may be invalid$/;"	v
s:autocmd_handler	autoload/plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! s:autocmd_handler()$/;"	f
s:backslash_continuation_regex	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:backslash_continuation_regex = '%\\@<!\\\\\\s*$'$/;"	v
s:backspace	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:backspace(s)$/;"	f
s:bad_git_dir	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:bad_git_dir = '\/$\\|^fugitive:'$/;"	v
s:bakregex	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:bakregex=''$/;"	v
s:banana_smoothie	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:banana_smoothie = ['#fce78d', 222]$/;"	v
s:bang	autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	f
s:bang_edits	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:bang_edits = {'split': 'Git', 'vsplit': 'vert Git', 'tabedit': 'tab Git', 'pedit': 'Git!'}$/;"	v
s:bar	autoload/plug.vim	/^function! s:bar()$/;"	f
s:bar_main	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:bar_main = s:gen_def(s:light_gray, s:med_gray_lo) + ['']$/;"	v
s:base	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^let s:base = resolve(expand('<sfile>:p:h:h:h'))$/;"	v
s:base0	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:base0   = {'hex': '#839496', 'term': 246}  " 131, 148, 150 *$/;"	v
s:base00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base00 = '#282a36' "236 $/;"	v
s:base00	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:base00  = {'hex': '#657B83', 'term':  66}  " 101, 123, 131 *$/;"	v
s:base01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base01 = '#34353e' "237$/;"	v
s:base01	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:base01  = {'hex': '#586E75', 'term': 242}  "  88, 110, 117 *$/;"	v
s:base02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base02 = '#43454f' "238$/;"	v
s:base02	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:base02  = {'hex': '#073642', 'term': 235}  "   7,  54,  66$/;"	v
s:base03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base03 = '#78787e' "244$/;"	v
s:base03	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:base03  = {'hex': '#002B36', 'term': 234}  "   0,  43,  54$/;"	v
s:base04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base04 = '#a5a5a9' "248$/;"	v
s:base05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base05 = '#e2e4e5' "254$/;"	v
s:base06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base06 = '#eff0eb' "255$/;"	v
s:base07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base07 = '#f1f1f0' "15$/;"	v
s:base08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base08 = '#ff5c57' "203$/;"	v
s:base09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base09 = '#ff9f43' "215$/;"	v
s:base0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base0A = '#f3f99d' "229$/;"	v
s:base0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base0B = '#5af78e' "84$/;"	v
s:base0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base0C = '#9aedfe' "123$/;"	v
s:base0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base0D = '#57c7ff' "81$/;"	v
s:base0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base0E = '#ff6ac1' "205$/;"	v
s:base0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base0F = '#b2643c' "131$/;"	v
s:base1	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:base1   = {'hex': '#93A1A1', 'term': 247}  " 147, 161, 161 *$/;"	v
s:base2	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:base2   = {'hex': '#EEE8D5', 'term': 254}  " 238, 232, 213$/;"	v
s:base3	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:base3   = {'hex': '#FDF6E3', 'term': 230}  " 253, 246, 227$/;"	v
s:baseIndentExpr	autoload/plugged/vim-polyglot/indent/twig.vim	/^let s:baseIndentExpr=&indentexpr$/;"	v
s:base_dir	autoload/plugged/fzf/plugin/fzf.vim	/^  let s:base_dir = expand('<sfile>:h:h')$/;"	v
s:base_spec	autoload/plug.vim	/^let s:base_spec = { 'branch': '', 'frozen': 0 }$/;"	v
s:basic16	autoload/plugged/vim-airline/autoload/airline/msdos.vim	/^let s:basic16 = [$/;"	v
s:batchfile	autoload/plug.vim	/^  function! s:batchfile(cmd)$/;"	f
s:beflet	autoload/plugged/vim-polyglot/indent/ocaml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\/;"	v
s:beflet	autoload/plugged/vim-polyglot/indent/sml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\/;"	v
s:begin	autoload/plugged/gv.vim/plugin/gv.vim	/^let s:begin = '^[^0-9]*[0-9]\\{4}-[0-9]\\{2}-[0-9]\\{2}\\s\\+'$/;"	v
s:beginBlock	autoload/plugged/vim-polyglot/indent/octave.vim	/^let s:beginBlock = ['for', 'parfor', 'function', 'if', 'switch',$/;"	v
s:bg	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:bg  = ['#303030', 236] "       other bg$/;"	v
s:bg	autoload/plugged/vim-polyglot/syntax/tmux.vim	/^        let s:bg = (!s:i || s:i == 16 || (s:i > 231 && s:i < 235)) ? 15 : "none"$/;"	v
s:bg0	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg0  = s:getGruvColor('GruvboxBg0')$/;"	v
s:bg0	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.dark0_hard$/;"	v
s:bg0	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.dark0_soft$/;"	v
s:bg0	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.light0_hard$/;"	v
s:bg0	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.light0_soft$/;"	v
s:bg0	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg0  = s:gb.dark0$/;"	v
s:bg0	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg0  = s:gb.light0$/;"	v
s:bg0	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg0[1]    = 0$/;"	v
s:bg1	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg1  = s:getGruvColor('GruvboxBg1')$/;"	v
s:bg1	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg1  = s:gb.dark1$/;"	v
s:bg1	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg1  = s:gb.light1$/;"	v
s:bg2	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg2  = s:getGruvColor('GruvboxBg2')$/;"	v
s:bg2	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg2  = s:gb.dark2$/;"	v
s:bg2	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg2  = s:gb.light2$/;"	v
s:bg3	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg3  = s:gb.dark3$/;"	v
s:bg3	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg3  = s:gb.light3$/;"	v
s:bg4	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg4  = s:getGruvColor('GruvboxBg4')$/;"	v
s:bg4	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg4  = s:gb.dark4$/;"	v
s:bg4	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg4  = s:gb.light4$/;"	v
s:bin	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = fnamemodify(s:bin.preview, ':8')$/;"	v
s:bin	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = split(system('for %A in ("'.s:bin.preview.'") do @echo %~sA'), "\\n")[0]$/;"	v
s:bin	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin = {$/;"	v
s:binNMU	autoload/plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:binNMU='binary-only=yes'$/;"	v
s:bin_dir	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin_dir = expand('<sfile>:p:h:h:h').'\/bin\/'$/;"	v
s:bin_regex	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:bin_regex = '0b[01]\\%(_\\?[01]\\)*\\%(\\>\\|im\\>\\|\\ze[^01]\\)'$/;"	v
s:binary_search	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
s:binding_close	autoload/plugged/vim-polyglot/indent/nix.vim	/^let s:binding_close = '\\%(\\<in\\>\\)'$/;"	v
s:binding_open	autoload/plugged/vim-polyglot/indent/nix.vim	/^let s:binding_open = '\\%(\\<let\\>\\)'$/;"	v
s:binop_chars	autoload/plugged/vim-polyglot/autoload/julia.vim	/^let s:binop_chars = "=+\\\\U2D*\/\\\\%÷^&|⊻<>≤≥≡≠≢∈∉⋅×∪∩⊆⊈⊂⊄⊊←/;"	v
s:binop_chars	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:binop_chars = "=+\\\\U2D*\/\\\\%÷^&|⊻<>≤≥≡≠≢∈∉⋅×∪∩⊆⊈⊂⊄⊊←/;"	v
s:binop_chars_extra	autoload/plugged/vim-polyglot/autoload/julia.vim	/^let s:binop_chars_extra = "\\\\U214B\\\\U2190-\\\\U2194\\\\U219A\\\\U219B\\\\U21A0\\\\U21A3\\\\U/;"	v
s:binop_chars_extra	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:binop_chars_extra = "\\\\U214B\\\\U2190-\\\\U2194\\\\U219A\\\\U219B\\\\U21A0\\\\U21A3\\\\U/;"	v
s:black	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:black = s:colors.black$/;"	v
s:blobdirs	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:blobdirs = {}$/;"	v
s:block_close	autoload/plugged/vim-polyglot/indent/nix.vim	/^let s:block_close = '\\%(}\\|]\\)'$/;"	v
s:block_continuation_regex	autoload/plugged/vim-polyglot/indent/falcon.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_continuation_regex	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_end	autoload/plugged/vim-polyglot/ftplugin/svelte/fold.vim	/^let s:block_end = '\\v^\\s*}|]|\\)'$/;"	v
s:block_end	autoload/plugged/vim-polyglot/indent/sas.vim	/^let s:block_end = '\\v<%(end|endcomp|endlayout|endgraph)\\s*;'$/;"	v
s:block_open	autoload/plugged/vim-polyglot/indent/nix.vim	/^let s:block_open  = '\\%({\\|[\\)'$/;"	v
s:block_regex	autoload/plugged/vim-polyglot/indent/falcon.vim	/^let s:block_regex =$/;"	v
s:block_regex	autoload/plugged/vim-polyglot/indent/json.vim	/^let s:block_regex = '\\%({\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\/;"	v
s:block_regex	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:block_regex =$/;"	v
s:block_regex	autoload/plugged/vim-polyglot/indent/solidity.vim	/^let s:block_regex = '\\%([{[]\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)/;"	v
s:block_regex	autoload/plugged/vim-polyglot/indent/typescript.vim	/^let s:block_regex = '\\%([{[]\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)/;"	v
s:block_rules	autoload/plugged/vim-polyglot/indent/cython.vim	/^let s:block_rules = {$/;"	v
s:block_rules	autoload/plugged/vim-polyglot/indent/python.vim	/^let s:block_rules = {$/;"	v
s:block_rules_multiple	autoload/plugged/vim-polyglot/indent/cython.vim	/^let s:block_rules_multiple = {$/;"	v
s:block_rules_multiple	autoload/plugged/vim-polyglot/indent/python.vim	/^let s:block_rules_multiple = {$/;"	v
s:block_scalar_header	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let s:block_scalar_header = '\\v[|>]%([+-]?[1-9]|[1-9]?[+-])?'$/;"	v
s:block_str	autoload/plugged/vim-polyglot/indent/sas.vim	/^let s:block_str = '\\v<%(do>%([^;]+<%(to|over|while)>[^;]+)=|%(compute|define\\s+%(column|footer/;"	v
s:blocks_graph_at	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:blocks_graph_at(linum) abort$/;"	f
s:blue	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:blue = s:colors.blue$/;"	v
s:blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:blue    = [ 67, '#5f87af']$/;"	v
s:blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:blue    = {'hex': '#268BD2', 'term':  32}  "  38, 139, 210 *$/;"	v
s:blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:blue     = [ 67, '#D4BFFF']$/;"	v
s:blue	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:blue   = s:getGruvColor('GruvboxBlue')$/;"	v
s:blue	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:blue   = s:gb.bright_blue$/;"	v
s:blue	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:blue   = s:gb.faded_blue$/;"	v
s:blue	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:blue[1]   = 12$/;"	v
s:blue_purple	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:blue_purple = s:colors.blue_purple$/;"	v
s:bmenu_items	autoload/plugged/vim-polyglot/extras/menu.vim	/^let s:bmenu_items = {}$/;"	v
s:bmenu_wait	autoload/plugged/vim-polyglot/extras/menu.vim	/^let s:bmenu_wait = 1$/;"	v
s:bold	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:bold = ''$/;"	v
s:bold	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:bold = 'bold,'$/;"	v
s:boolQuadGen	autoload/plugged/vim-polyglot/syntax/neomuttrc.vim	/^function! s:boolQuadGen(type, vars, deprecated)$/;"	f
s:border_opt	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:border_opt(window)$/;"	f
s:borderchars	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^let s:borderchars = get(g:, 'coc_borderchars', ['─', '│', '─', '│', '┌', '┐', '┘',/;"	v
s:borderjoinchars	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^let s:borderjoinchars = get(g:, 'coc_border_joinchars', ['┬', '┤', '┴', '├'])$/;"	v
s:bracketBlocks	autoload/plugged/vim-polyglot/indent/julia.vim	/^let s:bracketBlocks = '\\<julia\\%(\\%(\\%(Printf\\)\\?Par\\|SqBra\\%(Idx\\)\\?\\|CurBra\\)Block/;"	v
s:bracket_continuation_regex	autoload/plugged/vim-polyglot/indent/falcon.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bracket_continuation_regex	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bracket_switch_continuation_regex	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:bracket_switch_continuation_regex = '^\\([^(]\\+\\zs).\\+\\)\\+'.s:continuation_regex$/;"	v
s:bracket_type	autoload/plugged/vim-polyglot/indent/clojure.vim	/^	function! s:bracket_type(char)$/;"	f
s:bracket_type	autoload/plugged/vim-polyglot/indent/fennel.vim	/^	function! s:bracket_type(char)$/;"	f
s:bracketing_delims	autoload/plugged/vim-polyglot/syntax/raku.vim	/^let s:bracketing_delims = [$/;"	v
s:break	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
s:browse	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:browse(url)$/;"	f
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/ant.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/ant.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/aspvbs.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.htm*\\n" .$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/config.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/config.vim	/^let s:browsefilter = "Bourne Shell Files (*.sh)\\t*.sh\\n" .$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/ecrystal.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','',''/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:browsefilter = 'All Files (*.*)\\t*.*\\n'$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','',''/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','',''/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','',''/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','',''/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/haml.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:browsefilter = b:browsefilter . s:browsefilter$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/jsp.vim	/^let s:browsefilter = "Java Files (*.java)\\t*.java\\n" .$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/pug.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/pug.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/stylus.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:browsefilter = b:browsefilter . s:browsefilter$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/xhtml.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.html;*.htm\\n" .$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/xsd.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	autoload/plugged/vim-polyglot/ftplugin/xsd.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browser_open_command	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:browser_open_command() abort$/;"	f
s:bstartp	autoload/plugged/vim-polyglot/autoload/pony.vim	/^let s:bstartp = '\\v<%(ifdef|if|then|elseif|else|(match)|while|for|in|do|try|with|recover|repeat/;"	v
s:bsub	autoload/plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:bsub(target,pattern,replacement)$/;"	f
s:btags_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_sink(lines)$/;"	f
s:btags_source	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_source(tag_cmds)$/;"	f
s:buf_line_count	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:buf_line_count(bufnr) abort$/;"	f
s:buf_min_count	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:buf_min_count = get(g:, 'airline#extensions#tabline#buffer_min_count', 0)$/;"	v
s:buffer_line_handler	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_line_handler(lines)$/;"	f
s:buffer_lines	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_lines(query)$/;"	f
s:buffer_prototype	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_repo	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
s:buffer_type	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
s:buflisted	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buflisted()$/;"	f
s:bufopen	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:bufopen(lines)$/;"	f
s:buildConfigKeys	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:buildConfigKeys()$/;"	f
s:build_command	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:build_command(color)$/;"	f
s:build_path	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:build_path(path) abort$/;"	f
s:build_sections	autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! s:build_sections(builder, context, keys)$/;"	f
s:builder	autoload/plugged/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 0})$/;"	v
s:builder	autoload/plugged/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:builder	autoload/plugged/vim-airline/t/extensions_default.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:bvars	autoload/plugged/vim-polyglot/indent/javascript.vim	/^let s:bvars = {$/;"	v
s:byte_pattern	autoload/plugged/vim-polyglot/syntax/cdrtoc.vim	/^let s:byte_pattern = '\\<\\%([01]\\=\\d\\{1,2}\\|2\\%([0-4]\\d\\|5[0-5]\\)\\)\\>'$/;"	v
s:c_flow_indicator	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_flow_indicator = '[,[\\]{}]'$/;"	v
s:c_indicator	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_indicator      = '[\\-?:,[\\]{}#&*!|>''"%@`]'$/;"	v
s:c_named_tag_handle	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let s:c_named_tag_handle     = '\\v\\!'.s:ns_word_char.'+\\!'$/;"	v
s:c_named_tag_handle	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_named_tag_handle     = '!'.s:ns_word_char.'\\+!'$/;"	v
s:c_non_specific_tag	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let s:c_non_specific_tag = '\\v\\!'$/;"	v
s:c_non_specific_tag	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_non_specific_tag = '!'$/;"	v
s:c_ns_alias_node	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_alias_node      = '\\*'.s:c_ns_anchor_name$/;"	v
s:c_ns_anchor_char	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_anchor_char = '\\v%([\\n\\r\\uFEFF \\t,[\\]{}]@!\\p)'$/;"	v
s:c_ns_anchor_char	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_anchor_char = '\\%([\\n\\r\\uFEFF \\t,[\\]{}]\\@!\\p\\)'$/;"	v
s:c_ns_anchor_char	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_anchor_char = s:SimplifyToAssumeAllPrintable(s:c_ns_anchor_char)$/;"	v
s:c_ns_anchor_name	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_anchor_name = s:c_ns_anchor_char.'+'$/;"	v
s:c_ns_anchor_name	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_anchor_name = s:c_ns_anchor_char.'\\+'$/;"	v
s:c_ns_anchor_property	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_anchor_property =  '\\v\\&'.s:c_ns_anchor_name$/;"	v
s:c_ns_anchor_property	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_anchor_property =  '&'.s:c_ns_anchor_name$/;"	v
s:c_ns_shorthand_tag	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_shorthand_tag = '\\v'.s:c_tag_handle . s:ns_tag_char.'+'$/;"	v
s:c_ns_shorthand_tag	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_shorthand_tag = s:c_tag_handle . s:ns_tag_char.'\\+'$/;"	v
s:c_ns_tag_property	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_tag_property = '\\v'.s:c_verbatim_tag.$/;"	v
s:c_ns_tag_property	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_tag_property = s:c_verbatim_tag.$/;"	v
s:c_primary_tag_handle	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let s:c_primary_tag_handle   = '\\v\\!'$/;"	v
s:c_primary_tag_handle	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_primary_tag_handle   = '!'$/;"	v
s:c_secondary_tag_handle	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let s:c_secondary_tag_handle = '\\v\\!\\!'$/;"	v
s:c_secondary_tag_handle	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_secondary_tag_handle = '!!'$/;"	v
s:c_tag_handle	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let s:c_tag_handle = '\\v%('.s:c_named_tag_handle.$/;"	v
s:c_tag_handle	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_tag_handle = '\\%('.s:c_named_tag_handle.$/;"	v
s:c_verbatim_tag	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let s:c_verbatim_tag = '\\v\\!\\<'.s:ns_uri_char.'+\\>'$/;"	v
s:c_verbatim_tag	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_verbatim_tag = '!<'.s:ns_uri_char.'\\+>'$/;"	v
s:cache_sid	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:cache_sid = {}$/;"	v
s:calc_size	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:calc_size(max, val, dict)$/;"	f
s:call	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:call(method, params, cont)$/;"	f
s:callback	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:callback(dict, lines) abort$/;"	f
s:callback_findWorkspace	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^    function! s:callback_findWorkspace(result)$/;"	f
s:callback_load	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^    function! s:callback_load(_)$/;"	f
s:callback_nvim_exit	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:callback_nvim_exit(_job_id, exitval, _event) dict abort$/;"	f
s:callback_nvim_stdout	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:callback_nvim_stdout(_job_id, data, _event) dict abort$/;"	f
s:callback_reloadProjects	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^        function! s:callback_reloadProjects(_)$/;"	f
s:callback_showSignature	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^    function! s:callback_showSignature(result)$/;"	f
s:callback_showTooltip	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^    function! s:callback_showTooltip(result)$/;"	f
s:callback_vim_close	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:callback_vim_close(channel) dict abort$/;"	f
s:callback_vim_stdout	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:callback_vim_stdout(_job_id, data) dict abort$/;"	f
s:callbacks	autoload/plugged/coc.nvim/autoload/coc.vim	/^let s:callbacks = {}$/;"	v
s:can_diffoff	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
s:cbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:cbg = ['#AFFFFF', 159] " commandline bg; for all sections$/;"	v
s:cd	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:cd(dir)$/;"	f
s:cexpr	autoload/plugged/vim-polyglot/autoload/dart.vim	/^function! s:cexpr(errorformat, lines, reason) abort$/;"	f
s:cfend	autoload/plugged/vim-polyglot/autoload/pony.vim	/^let s:cfend = '\\v<end>'$/;"	v
s:cfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:cfg = s:nfg            " commandline fg; for all sections$/;"	v
s:cfile	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:cfile() abort$/;"	f
s:cfilemap	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:cfilemap = {}$/;"	v
s:cfilemap	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:cfilemap.rhs = "substitute(&l:inex =~# '\\\\<v:fname\\\\>' && len(expand('<cfile>')) ? e/;"	v
s:cfilemap	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:cfilemap = v:version >= 704 ? maparg('<Plug><cfile>', 'c', 0, 1) : {}$/;"	v
s:cfmiddle	autoload/plugged/vim-polyglot/autoload/pony.vim	/^let s:cfmiddle = '\\v<%(then|elseif|else|until|do|in|elseiftype)>|\\|'$/;"	v
s:cfstart	autoload/plugged/vim-polyglot/autoload/pony.vim	/^let s:cfstart = '\\v<%(ifdef|if|match|while|for|repeat|try|with|recover|object|lambda|iftype)>'$/;"	v
s:chCwd	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node) abort$/;"	f
s:chRoot	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node) abort$/;"	f
s:ch_braces	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_braces=3$/;"	v
s:ch_brackets	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_brackets=2$/;"	v
s:ch_parentheses	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_parentheses=5$/;"	v
s:ch_parentheses_option	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_parentheses_option=4$/;"	v
s:ch_posix_charclass	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_posix_charclass=1$/;"	v
s:ch_with_backslash	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_with_backslash=0$/;"	v
s:chained_func_call	autoload/plugged/vim-polyglot/indent/lua.vim	/^let s:chained_func_call = "^\\\\v\\\\s*[:.]\\\\w+[({\\"']"$/;"	v
s:channel_map	autoload/plugged/coc.nvim/autoload/coc/terminal.vim	/^let s:channel_map = {}$/;"	v
s:char_map	autoload/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:char_map = {$/;"	v
s:char_range	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
s:checkAutocmd	autoload/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkAutocmd()$/;"	f
s:checkCommand	autoload/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkCommand()$/;"	f
s:checkEnvironment	autoload/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkEnvironment() abort$/;"	f
s:checkInitailize	autoload/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkInitailize() abort$/;"	f
s:checkVersion	autoload/plugged/coc.nvim/plugin/coc.vim	/^function! s:checkVersion() abort$/;"	f
s:check_back_space	plug-config/coc.vim	/^function! s:check_back_space() abort$/;"	f
s:check_buffer	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:check_buffer(fugitive_repo, current)$/;"	f
s:check_defined	autoload/plugged/vim-airline/autoload/airline/init.vim	/^function! s:check_defined(variable, default)$/;"	f
s:check_defined_section	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:check_defined_section(name)$/;"	f
s:check_diff_accurev	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_accurev(exitval, diff) abort$/;"	f
s:check_diff_bzr	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_bzr(exitval, diff) abort$/;"	f
s:check_diff_cvs	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_cvs(exitval, diff) abort$/;"	f
s:check_diff_darcs	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_darcs(exitval, diff) abort$/;"	f
s:check_diff_diff	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_diff(exitval, diff) abort$/;"	f
s:check_diff_fossil	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_fossil(exitval, diff) abort$/;"	f
s:check_diff_git	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_git(exitval, diff) abort$/;"	f
s:check_diff_hg	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_hg(exitval, diff) abort$/;"	f
s:check_diff_perforce	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_perforce(exitval, diff) abort$/;"	f
s:check_diff_rcs	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_rcs(exitval, diff) abort$/;"	f
s:check_diff_svn	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_svn(exitval, diff) abort$/;"	f
s:check_diff_tfs	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_tfs(exitval, diff) abort$/;"	f
s:check_diff_yadm	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_yadm(exitval, diff) abort$/;"	f
s:check_for_string	autoload/plugged/vim-polyglot/indent/clojure.vim	/^	function! s:check_for_string()$/;"	f
s:check_for_string	autoload/plugged/vim-polyglot/indent/fennel.vim	/^	function! s:check_for_string()$/;"	f
s:check_mixed_indent	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent()$/;"	f
s:check_mixed_indent_file	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent_file()$/;"	f
s:check_node	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:check_node() abort$/;"	f
s:check_requirements	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:check_requirements()$/;"	f
s:check_ruby	autoload/plug.vim	/^function! s:check_ruby()$/;"	f
s:checked	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:checked = 0$/;"	v
s:checked	autoload/plugged/fzf/plugin/fzf.vim	/^let s:checked = {}$/;"	v
s:checked_ctags	autoload/plugged/vim-polyglot/autoload/rust/tags.vim	/^let s:checked_ctags = 0$/;"	v
s:checkout	autoload/plug.vim	/^function! s:checkout(spec)$/;"	f
s:child	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:child(dir, identifier)$/;"	f
s:chomp	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:chomp(str)$/;"	f
s:chomp	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
s:choose	autoload/plugged/vim-polyglot/ftplugin/gitrebase.vim	/^function! s:choose(word) abort$/;"	f
s:chop	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
s:chsh	autoload/plug.vim	/^function! s:chsh(swap)$/;"	f
s:clean	autoload/plug.vim	/^function! s:clean(force)$/;"	f
s:clean_jobs	autoload/plugged/vim-airline/autoload/airline/async.vim	/^let s:clean_jobs     = {}$/;"	v
s:clear	autoload/plugged/vim-airline/t/init.vim	/^function! s:clear()$/;"	f
s:clear	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:clear(list) abort$/;"	f
s:clearQfList	autoload/plugged/vim-polyglot/autoload/dart.vim	/^function! s:clearQfList(reason) abort$/;"	f
s:clear_match_by_id	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^let s:clear_match_by_id = has('nvim-0.5.0') || has('patch-8.1.1084')$/;"	v
s:clear_match_by_window	autoload/plugged/coc.nvim/autoload/coc/highlight.vim	/^    let s:clear_match_by_window = 0$/;"	v
s:clear_match_by_window	autoload/plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:clear_match_by_window = has('nvim-0.5.0') || has('patch-8.1.1084')$/;"	v
s:client	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:client = v:null$/;"	v
s:clients	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^let s:clients = {}$/;"	v
s:clojure_check_for_string_worker	autoload/plugged/vim-polyglot/indent/clojure.vim	/^	function! s:clojure_check_for_string_worker()$/;"	f
s:clojure_indent_pos	autoload/plugged/vim-polyglot/indent/clojure.vim	/^	function! s:clojure_indent_pos()$/;"	f
s:clojure_is_method_special_case_worker	autoload/plugged/vim-polyglot/indent/clojure.vim	/^	function! s:clojure_is_method_special_case_worker(position)$/;"	f
s:clojure_syntax_keywords	autoload/plugged/vim-polyglot/syntax/clojure.vim	/^let s:clojure_syntax_keywords = {$/;"	v
s:closeBlock	autoload/plugged/vim-polyglot/indent/octave.vim	/^let s:closeBlock = s:midBlock + s:endBlock$/;"	v
s:closeChildren	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node) abort$/;"	f
s:closeCurrentDir	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node) abort$/;"	f
s:closeTreeWindow	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow() abort$/;"	f
s:close_pane	autoload/plug.vim	/^function! s:close_pane()$/;"	f
s:close_patt	autoload/plugged/vim-polyglot/indent/lua.vim	/^let s:close_patt = '\\C\\%(\\<\\%(end\\|until\\)\\>\\|)\\|}\\)'$/;"	v
s:close_win	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:close_win(winid) abort$/;"	f
s:close_win	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! s:close_win(winid) abort$/;"	f
s:cmd	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:cmd(bang, ...) abort$/;"	f
s:cmd	autoload/plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^let s:cmd = join(['mix', 'run', '--no-start', '--no-compile', shellescape(s:path.'\/get_repos.ex/;"	v
s:cmd_history_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:cmd_history_sink(lines)$/;"	f
s:coc_git_enabled	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:coc_git_enabled() abort$/;"	f
s:collect	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:collect(temps) abort$/;"	f
s:color_column	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:color_column = get(s:gb, g:gruvbox_color_column)$/;"	v
s:color_column	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:color_column = s:bg1$/;"	v
s:color_list	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^function! s:color_list(fg, bg) abort$/;"	f
s:color_template	autoload/plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^let s:color_template = get(g:, 'airline#extensions#ctrlp#color_template', 'insert')$/;"	v
s:color_template	autoload/plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:color_template = get(g:, 'airline#extensions#promptline#color_template', 'normal')$/;"	v
s:color_template	autoload/plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:color_template = get(g:, 'airline#extensions#tmuxline#color_template', 'normal')$/;"	v
s:colors	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^let s:colors = palenight#GetColors()$/;"	v
s:colors	autoload/plugged/palenight.vim/autoload/palenight.vim	/^let s:colors = {$/;"	v
s:colors	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:colors = palenight#GetColors()$/;"	v
s:colour	autoload/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:colour(r, g, b)$/;"	f
s:column_display	autoload/plugged/vim-airline/autoload/airline/extensions/csv.vim	/^let s:column_display = get(g:, 'airline#extensions#csv#column_display', 'Number')$/;"	v
s:combinations	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
s:comma_first	autoload/plugged/vim-polyglot/indent/solidity.vim	/^let s:comma_first = '^\\s*,'$/;"	v
s:comma_first	autoload/plugged/vim-polyglot/indent/typescript.vim	/^let s:comma_first = '^\\s*,'$/;"	v
s:comma_last	autoload/plugged/vim-polyglot/indent/solidity.vim	/^let s:comma_last = ',\\s*$'$/;"	v
s:comma_last	autoload/plugged/vim-polyglot/indent/typescript.vim	/^let s:comma_last = ',\\s*$'$/;"	v
s:command_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:command_sink(lines)$/;"	f
s:commands	autoload/plugged/vim-polyglot/syntax/wget.vim	/^let s:commands = map([$/;"	v
s:comment	autoload/plugged/vim-polyglot/indent/ansible.vim	/^let s:comment = '\\v^\\s*#' " # comment$/;"	v
s:comment_grey	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:comment_grey = s:colors.comment_grey$/;"	v
s:comment_rx	autoload/plugged/vim-polyglot/indent/make.vim	/^let s:comment_rx = '^\\s*#'$/;"	v
s:comment_rx	autoload/plugged/vim-polyglot/indent/omake.vim	/^let s:comment_rx = '^\\s*#'$/;"	v
s:comments	autoload/plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:comments = escape(&comments, ' \\')$/;"	v
s:comments	autoload/plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:comments = ''$/;"	v
s:commit_mode	autoload/plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^let s:commit_mode = {'ST': 'STAGING', 'CC': 'COMMIT', 'CA': 'AMEND'}$/;"	v
s:commits	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits(buffer_local, args)$/;"	f
s:commits_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits_sink(lines)$/;"	f
s:common_head	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
s:common_sink	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:common_sink(action, lines) abort$/;"	f
s:commondirs	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:commondirs = {}$/;"	v
s:compareReverseFtime	autoload/plugged/vim-polyglot/ftplugin/raku.vim	/^func s:compareReverseFtime(a, b)$/;"	f
s:compare_binary_versions	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:compare_binary_versions(a, b)$/;"	f
s:compare_git_uri	autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
s:compare_pos	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:compare_pos(pos1, pos2)$/;"	f
s:compare_versions	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:compare_versions(a, b)$/;"	f
s:compile	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:compile(projectPath, cont)$/;"	f
s:compilerLocation	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:compilerLocation(cont)$/;"	f
s:complete_insert	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_insert(lines)$/;"	f
s:complete_trigger	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_trigger()$/;"	f
s:concat	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:concat(list) abort$/;"	f
s:conceal	autoload/plugged/vim-polyglot/syntax/markdown.vim	/^  let s:conceal = ' conceal'$/;"	v
s:conceal	autoload/plugged/vim-polyglot/syntax/markdown.vim	/^let s:conceal = ''$/;"	v
s:concealcode	autoload/plugged/vim-polyglot/syntax/markdown.vim	/^  let s:concealcode = ' concealends'$/;"	v
s:concealcode	autoload/plugged/vim-polyglot/syntax/markdown.vim	/^let s:concealcode = ''$/;"	v
s:concealends	autoload/plugged/vim-polyglot/syntax/markdown.vim	/^  let s:concealends = ' concealends'$/;"	v
s:concealends	autoload/plugged/vim-polyglot/syntax/markdown.vim	/^let s:concealends = ''$/;"	v
s:conditional_directive_rx	autoload/plugged/vim-polyglot/indent/make.vim	/^let s:conditional_directive_rx = '^ *\\%(ifn\\=\\%(eq\\|def\\)\\|else\\)\\>'$/;"	v
s:conditional_directive_rx	autoload/plugged/vim-polyglot/indent/omake.vim	/^let s:conditional_directive_rx = '^ *\\%(ifn\\=\\%(eq\\|def\\)\\|else\\)\\>'$/;"	v
s:config	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:config = {}$/;"	v
s:config_fugitive_branch	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:config_fugitive_branch() abort$/;"	f
s:config_gina_branch	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:config_gina_branch() abort$/;"	f
s:config_keys	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^let s:config_keys = []$/;"	v
s:config_keys_camel	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^let s:config_keys_camel =$/;"	v
s:conflict_marker	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:conflict_marker()$/;"	f
s:conj	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
s:cons	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
s:contains_multibyte	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
s:contexts	autoload/plugged/vim-airline/autoload/airline.vim	/^let s:contexts = {}$/;"	v
s:continuable_regex	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:continuable_regex =$/;"	v
s:continuation	autoload/plugged/vim-polyglot/indent/javascript.vim	/^let s:continuation = get(g:,'javascript_continuation',$/;"	v
s:continuation_regex	autoload/plugged/vim-polyglot/indent/falcon.vim	/^let s:continuation_regex =$/;"	v
s:continuation_regex	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:continuation_regex =$/;"	v
s:continuation_regex	autoload/plugged/vim-polyglot/indent/solidity.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:l/;"	v
s:continuation_regex	autoload/plugged/vim-polyglot/indent/typescript.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\|[^=]=[^/;"	v
s:continuation_rx	autoload/plugged/vim-polyglot/indent/make.vim	/^let s:continuation_rx = '\\\\$'$/;"	v
s:continuation_rx	autoload/plugged/vim-polyglot/indent/omake.vim	/^let s:continuation_rx = '\\\\$'$/;"	v
s:continued_rule_rx	autoload/plugged/vim-polyglot/indent/make.vim	/^let s:continued_rule_rx = '^[^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:continued_rule_rx	autoload/plugged/vim-polyglot/indent/omake.vim	/^let s:continued_rule_rx = '^[^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:convert_config_nvim	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:convert_config_nvim(config) abort$/;"	f
s:core_funcrefs	autoload/plugged/vim-airline/autoload/airline.vim	/^let s:core_funcrefs = [$/;"	v
s:count	autoload/plugged/vim-polyglot/indent/bst.vim	/^function! s:count(string,char)$/;"	f
s:count	autoload/plugged/vim-polyglot/indent/liquid.vim	/^function! s:count(string,pattern)$/;"	f
s:count_braces	autoload/plugged/vim-polyglot/indent/css.vim	/^function s:count_braces(lnum, count_open)$/;"	f
s:count_braces	autoload/plugged/vim-polyglot/indent/ld.vim	/^function s:count_braces(lnum, count_open)$/;"	f
s:count_braces	autoload/plugged/vim-polyglot/indent/stylus.vim	/^function s:count_braces(lnum, count_open)$/;"	f
s:count_braces	autoload/plugged/vim-polyglot/indent/tcl.vim	/^function s:count_braces(lnum, count_open)$/;"	f
s:count_braces	autoload/plugged/vim-polyglot/indent/xinetd.vim	/^function s:count_braces(lnum, count_open)$/;"	f
s:count_chars	autoload/plugged/vim-polyglot/indent/scss.vim	/^function s:count_chars(lnum, count_open, chars)$/;"	f
s:countermeasure	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:countermeasure=1$/;"	v
s:countonly	autoload/plugged/vim-polyglot/after/indent/html.vim	/^let s:countonly = 0$/;"	v
s:countonly	autoload/plugged/vim-polyglot/indent/html.vim	/^let s:countonly = 0$/;"	v
s:cpath	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:cpath(path, ...) abort$/;"	f
s:cpo	autoload/plugged/vim-polyglot/ftplugin/scheme.vim	/^let s:cpo = &cpo$/;"	v
s:cpo	autoload/plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:cpo = &cpo$/;"	v
s:cpo	autoload/plugged/vim-polyglot/syntax/debsources.vim	/^let s:cpo = &cpo$/;"	v
s:cpo	autoload/plugged/vim-polyglot/syntax/scheme.vim	/^let s:cpo = &cpo$/;"	v
s:cpo_orig	autoload/plugged/vim-polyglot/ftplugin/zig.vim	/^let s:cpo_orig = &cpo$/;"	v
s:cpo_orig	autoload/plugged/vim-polyglot/syntax/plantuml.vim	/^let s:cpo_orig=&cpoptions$/;"	v
s:cpo_sav	autoload/plugged/vim-polyglot/indent/eruby.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	autoload/plugged/vim-polyglot/syntax/clojure.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	autoload/plugged/vim-polyglot/syntax/fennel.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	autoload/plugged/vim-polyglot/syntax/mp.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	autoload/plugged/vim-polyglot/syntax/puppet.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	autoload/plugged/vim-polyglot/syntax/ruby.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_save	autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/fzf.vim/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/fzf/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/after/indent/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/after/indent/tex.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/autoload/polyglot/detect.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/autoload/polyglot/sleuth.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/autoload/pony.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/autoload/terraform.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/compiler/ant.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/compiler/bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/compiler/cucumber.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/compiler/eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/compiler/exunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/compiler/go.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/compiler/haml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/compiler/nim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/compiler/ocaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/compiler/powershell.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/compiler/puppet-lint.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/compiler/rake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/compiler/rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/compiler/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/compiler/rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/compiler/sass.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/compiler/sbt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/compiler/sml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/compiler/tidy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/extras/filetype.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/extras/menu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/a2ps.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/abap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/abaqus.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/alsaconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/arch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/automake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/awk.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/basic.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/calendar.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/cdrdaoconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/cfg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/clojure.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/conf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/crm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/css.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/csv.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/cvsrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/denyhosts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/dictconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/dictdconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/dircolors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/dosbatch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/dosini.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/elinks.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/eterm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/falcon.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/fennel.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/fetchmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/framescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/gpg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/groovy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/group.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/grub.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/hamster.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/help.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/hog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/hostconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/hostsaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/indent.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/kwt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/ld.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/lftp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/libao.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/limits.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/loginaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/logindefs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/m4.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/mailaliases.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/mailcap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/manconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/mma.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/modconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/mplayerconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/muttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/nanorc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/neomuttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/netrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/nsis.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/pamconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/passwd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/pinfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/plantuml.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/pony.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/postscr.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/procmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/prolog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/protocols.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/quake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/readline.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/rmd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/rnc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/rnoweb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/rrst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/screen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/sensors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/services.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/setserial.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/sieve.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/slpconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/slpreg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/slpspi.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/spec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/sshconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/sudoers.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/sysctl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/systemd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/tcl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/terminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/terraform.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/tidy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/treetop.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/udevconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/udevperm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/updatedb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/vb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/verilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/vhdl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/vroom.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/xdefaults.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/xf86conf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/xinetd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/xmodmap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/yaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/ftplugin/zimbu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/applescript.vim	/^let s:cpo_save=&cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/dosbatch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/dtd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/eelixir.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/falcon.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/gitolite.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/go.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/gohtmltmpl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/graphql.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/hog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/json.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/nix.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/perl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/pony.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/raku.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/rmd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/sas.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/sdl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/solidity.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/swift.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/systemverilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/terraform.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/verilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/vlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/vroom.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/indent/zimbu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/8th.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/a2ps.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/aap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/abel.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/alsaconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/aptconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/arch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/art.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/asn.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/autodoc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/awk.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/basic.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/bib.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/blank.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/c.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/cabal-2.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/calendar.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/cdrdaoconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/cdrtoc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/cf.vim	/^let s:cpo_save=&cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/chordpro.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/clean.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/cmod.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/cmusrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/crm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/csc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/css.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/csv.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/cupl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/cvsrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/d.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/ddoc.vim	/^    let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/debcopyright.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/denyhosts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/desktop.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/dictconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/dictdconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/dircolors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/dnsmasq.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/eelixir.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/elinks.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/elixir.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/eterm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/fetchmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/forth.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/fortran.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/framescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/fstab.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/gdb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/gitolite.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/gp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/gpg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/groovy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/group.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/grub.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/gsp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/hb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/help.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/hollywood.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/hostconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/indent.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/ist.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/jam.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/java.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/javacc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/ld.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/lftp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/libao.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/limits.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/litestep.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/log.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/loginaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/logindefs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/logtalk.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/lout.vim	/^let s:cpo_save=&cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/lpc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/lynx.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/mail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/mailaliases.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/make.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/manconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/meson.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/messages.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/mix.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/mma.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/modconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/monk.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/mplayerconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/mrxvtrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/msidl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/muttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/nanorc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/natural.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/neomuttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/netrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/ninja.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/nroff.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/nsis.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/opl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/pamconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/passwd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/perl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/pike.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/pinfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/pod.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/pony.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/privoxy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/protocols.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/quake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/raml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/readline.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/reva.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/rmd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/rnc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/rpl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/sas.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/screen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/sd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/sensors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/services.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/setserial.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/sieve.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/sisu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/slpconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/slpreg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/slpspi.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/spup.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/st.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/sudoers.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/sysctl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/terminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/terraform.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/tidy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/treetop.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/tsalt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/tt2.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/udevconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/udevperm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/updatedb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/vhdl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/viminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/vroom.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/wast.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/wget.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/xinetd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/xmodmap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/xpm2.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/plugged/vim-polyglot/syntax/zig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpoptions	autoload/plugged/vim-polyglot/ftplugin/ada.vim	/^let s:cpoptions = &cpoptions$/;"	v
s:cpoptions	autoload/plugged/vim-signify/plugin/signify.vim	/^let s:cpoptions = &cpoptions$/;"	v
s:cpoptions_save	autoload/plugged/vim-polyglot/ftplugin/qml.vim	/^let s:cpoptions_save = &cpoptions$/;"	v
s:cposet	autoload/plugged/vim-polyglot/ftplugin/fortran.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	autoload/plugged/vim-polyglot/indent/fortran.vim	/^let s:cposet=&cpoptions$/;"	v
s:create	autoload/plugged/vim-airline/autoload/airline/section.vim	/^function! s:create(parts, append)$/;"	f
s:create_btns_buffer	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:create_btns_buffer(bufnr, width, buttons, borderbottom) abort$/;"	f
s:create_cterm_hlgroup	autoload/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! s:create_cterm_hlgroup(group, fg, bg, attr) abort$/;"	f
s:create_gui_hlgroup	autoload/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! s:create_gui_hlgroup(group, fg, bg, attr)$/;"	f
s:create_namespace	autoload/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! s:create_namespace(key) abort$/;"	f
s:create_popup	autoload/plugged/fzf/plugin/fzf.vim	/^  function s:create_popup(hl, opts) abort$/;"	f
s:create_popup	autoload/plugged/fzf/plugin/fzf.vim	/^  function! s:create_popup(hl, opts) abort$/;"	f
s:credentials	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:credentials() abort$/;"	f
s:csi	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:csi(color, fg)$/;"	f
s:csv_numeric_sort	autoload/plugged/vim-polyglot/autoload/csv.vim	/^let s:csv_numeric_sort = v:version > 704 || v:version == 704 && has("patch341")$/;"	v
s:ctagmap	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:ctagmap = {}$/;"	v
s:ctagmap	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:ctagmap = v:version >= 704 ? maparg('<Plug><ctag>', 'c', 0, 1) : {}$/;"	v
s:ctags_is_uctags	autoload/plugged/vim-polyglot/autoload/rust/tags.vim	/^let s:ctags_is_uctags = 0$/;"	v
s:ctags_options_dir	autoload/plugged/vim-polyglot/autoload/puppet/ctags.vim	/^let s:ctags_options_dir = expand('<sfile>:p:h:h:h') . '\/ctags\/'$/;"	v
s:ctags_type	autoload/plugged/vim-polyglot/autoload/puppet/ctags.vim	/^  let s:ctags_type = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm00 = "234"$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm00 = 233$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm00 = 17$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm00 = 233$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm00 = 233$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm00 = 236$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm00 = 23$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm00 = 233$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm00 = 234$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm00 = 53$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm00 = 58$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm00 = 23$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm00 = 00$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm00 = 235$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm00 = 17$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm00 = 233$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm00 = 234$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm00 = "233"$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm00 = "234"$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm00 = "236"$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm01 = "138"$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm01 = 59$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm01 = 59$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm01 = 22$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm01 = 59$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm01 = 0$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm01 = 0$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm01 = 0$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm01 = 0$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm01 = 0$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm01 = 58$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm01 = 17$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm01 = 236$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm01 = 234$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm01 = 18$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm01 = 23$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm01 = 236$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm01 = 235$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm01 = 237$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm01 = 0$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm01 = 59$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm01 = 0$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm01 = 235$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm01 = 22$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm01 = 235$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm01 = 23$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm01 = 59$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm01 = 237$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm01 = 24$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm01 = 52$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm01 = 59$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm01 = 59$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm01 = 0$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm01 = 59$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm01 = 10$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm01 = 18$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm01 = 59$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm01 = 234$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm01 = 17$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm01 = 18$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm01 = 0$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm01 = 23$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm01 = 18$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm01 = 234$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm01 = 10$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm01 = 18$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm01 = 59$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm01 = "235"$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm01 = "235"$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm01 = 0$/;"	v
s:cterm01	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm01 = "131"$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm02 = "180"$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm02 = 23$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm02 = 60$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm02 = 239$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm02 = 236$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm02 = 19$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm02 = 23$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm02 = 240$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm02 = 237$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm02 = 239$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm02 = 102$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm02 = 238$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm02 = 22$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm02 = 236$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm02 = 60$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm02 = 241$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm02 = 58$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm02 = 11$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm02 = 19$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm02 = 236$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm02 = 19$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm02 = 0$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm02 = 60$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm02 = 19$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm02 = 236$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm02 = 11$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm02 = 19$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm02 = "59"$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm02 = "239"$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm02 = "167"$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm03 = "102"$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm03 = 59$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm03 = 102$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm03 = 23$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm03 = 102$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm03 = 101$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm03 = 95$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm03 = 96$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm03 = 66$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm03 = 65$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm03 = 241$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm03 = 66$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm03 = 249$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm03 = 239$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm03 = 8$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm03 = 59$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm03 = 243$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm03 = 240$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm03 = 95$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm03 = 59$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm03 = 109$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm03 = 102$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm03 = 239$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm03 = 28$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm03 = 240$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm03 = 66$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm03 = 96$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm03 = 244$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm03 = 59$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm03 = 58$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm03 = 95$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm03 = 95$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm03 = 102$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm03 = 60$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm03 = 08$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm03 = 95$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm03 = 239$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm03 = 60$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm03 = 8$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm03 = 236$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm03 = 66$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm03 = 8$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm03 = 239$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm03 = 8$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm03 = 59$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm03          = "66"$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm03 = "66"$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm03 = "59"$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm03 = 102$/;"	v
s:cterm03	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm03 = "152"$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm04 = "131"$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm04 = 145$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm04 = 72$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm04 = 145$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm04 = 138$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm04 = 139$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm04 = 67$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm04 = 252$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm04 = 249$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm04 = 20$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm04 = 246$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm04 = 249$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm04 = 144$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm04 = 146$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm04 = 145$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm04 = 248$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm04 = 28$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm04 = 143$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm04 = 146$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm04 = 250$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm04 = 109$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm04 = 101$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm04 = 145$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm04 = 144$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm04 = 145$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm04 = 145$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm04 = 12$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm04 = 20$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm04 = 249$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm04 = 188$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm04 = 20$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm04 = 240$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm04 = 20$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm04 = 249$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm04 = 12$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm04 = 20$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm04          = "145"$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm04 = "145"$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm04 = "145"$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm04 = 145$/;"	v
s:cterm04	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm04 = "138"$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm05 = "95"$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm05 = 145$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm05 = 188$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm05 = 109$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm05 = 188$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm05 = 144$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm05 = 145$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm05 = 139$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm05 = 109$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm05 = 108$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm05 = 102$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm05 = 145$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm05 = 253$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm05 = 252$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm05 = 7$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm05 = 145$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm05 = 250$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm05 = 253$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm05 = 188$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm05 = 138$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm05 = 253$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm05 = 188$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm05 = 250$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm05 = 34$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm05 = 187$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm05 = 188$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm05 = 145$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm05 = 252$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm05 = 188$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm05 = 101$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm05 = 188$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm05 = 15$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm05 = 188$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm05 = 152$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm05 = 07$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm05 = 144$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm05 = 252$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm05 = 188$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm05 = 7$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm05 = 248$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm05 = 109$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm05 = 7$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm05 = 252$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm05 = 7$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm05 = 248$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm05          = "152"$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm05 = "152"$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm05 = "152"$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm05 = 188$/;"	v
s:cterm05	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm05 = "180"$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm06 = "109"$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm06 = 152$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm06 = 153$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm06 = 138$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm06 = 15$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm06 = 253$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm06 = 21$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm06 = 151$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm06 = 253$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm06 = 254$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm06 = 145$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm06 = 15$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm06 = 253$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm06 = 254$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm06 = 40$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm06 = 223$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm06 = 189$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm06 = 253$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm06 = 180$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm06 = 15$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm06 = 253$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm06 = 13$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm06 = 21$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm06 = 145$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm06 = 253$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm06 = 15$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm06 = 21$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm06 = 253$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm06 = 224$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm06 = 21$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm06 = 253$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm06 = 13$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm06 = 21$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm06 = 251$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm06          = "188"$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm06 = "188"$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm06 = "188"$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm06 = 253$/;"	v
s:cterm06	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm06 = "217"$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm07 = "222"$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm07 = 188$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm07 = 195$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm07 = 145$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm07 = 153$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm07 = 188$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm07 = 10$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm07 = 230$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm07 = 229$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm07 = 230$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm07 = 188$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm07 = 230$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm07 = "189"$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm07 = "222"$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm08 = "101"$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm08 = 1$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm08 = 180$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm08 = 66$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm08 = 180$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm08 = 167$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm08 = 197$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm08 = 166$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm08 = 161$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm08 = 161$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm08 = 167$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm08 = 1$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm08 = 9$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm08 = 217$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm08 = 1$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm08 = 24$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm08 = 203$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm08 = 131$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm08 = 210$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm08 = 95$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm08 = 167$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm08 = 166$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm08 = 243$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm08 = 28$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm08 = 203$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm08 = 137$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm08 = 167$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm08 = 9$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm08 = 1$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm08 = 131$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm08 = 168$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm08 = 197$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm08 = 166$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm08 = 131$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm08 = 01$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm08 = 203$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm08 = 162$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm08 = 167$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm08 = 1$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm08 = 1$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm08 = 166$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm08 = 1$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm08 = 198$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm08 = 1$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm08 = 167$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm08 = "88"$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm08 = "88"$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm08 = 166$/;"	v
s:cterm08	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm08 = "242"$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm09 = "138"$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm09 = 182$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm09 = 186$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm09 = 66$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm09 = 186$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm09 = 182$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm09 = 166$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm09 = 130$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm09 = 94$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm09 = 94$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm09 = 173$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm09 = 166$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm09 = 202$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm09 = 216$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm09 = 16$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm09 = 64$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm09 = 208$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm09 = 173$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm09 = 209$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm09 = 101$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm09 = 172$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm09 = 203$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm09 = 246$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm09 = 28$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm09 = 208$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm09 = 143$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm09 = 208$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm09 = 208$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm09 = 211$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm09 = 131$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm09 = 173$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm09 = 208$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm09 = 203$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm09 = 173$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm09 = 09$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm09 = 16$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm09 = 208$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm09 = 209$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm09 = 173$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm09 = 16$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm09 = 173$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm09 = 166$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm09 = 16$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm09 = 208$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm09 = 16$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm09 = 9$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm09 = 179$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm09          = "209"$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm09 = "209"$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm09 = "209"$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm09 = 203$/;"	v
s:cterm09	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm09 = "131"$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm0A = "180"$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm0A = 11$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm0A = 150$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm0A = 60$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm0A = 150$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm0A = 178$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm0A = 172$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm0A = 137$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm0A = 100$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm0A = 3$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm0A = 228$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm0A = 179$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm0A = 215$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm0A = 179$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm0A = 3$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm0A = 130$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm0A = 220$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm0A = 222$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm0A = 221$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm0A = 65$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm0A = 220$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm0A = 214$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm0A = 247$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm0A = 28$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm0A = 214$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm0A = 107$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm0A = 221$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm0A = 198$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm0A = 220$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm0A = 137$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm0A = 216$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm0A = 216$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm0A = 214$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm0A = 186$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm0A = 03$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm0A = 220$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm0A = 220$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm0A = 221$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm0A = 3$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm0A = 3$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm0A = 136$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm0A = 3$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm0A = 142$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm0A = 3$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm0A = 228$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm0A          = "221"$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm0A = "221"$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm0A = "221"$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm0A = 214$/;"	v
s:cterm0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm0A = "167"$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm0B = "102"$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm0B = 35$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm0B = 115$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm0B = 96$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm0B = 115$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm0B = 71$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm0B = 71$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm0B = 65$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm0B = 65$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm0B = 2$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm0B = 70$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm0B = 71$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm0B = 149$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm0B = 143$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm0B = 2$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm0B = 30$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm0B = 41$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm0B = 143$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm0B = 114$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm0B = 65$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm0B = 41$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm0B = 29$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm0B = 245$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm0B = 34$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm0B = 142$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm0B = 72$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm0B = 107$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm0B = 82$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm0B = 29$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm0B = 29$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm0B = 143$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm0B = 3$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm0B = 29$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm0B = 144$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm0B = 02$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm0B = 72$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm0B = 71$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm0B = 143$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm0B = 2$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm0B = 41$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm0B = 100$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm0B = 2$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm0B = 2$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm0B = 2$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm0B = 107$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm0B = "22"$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm0B = "28"$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm0B = 29$/;"	v
s:cterm0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm0B = "152"$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm0C = "130"$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm0C = 153$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm0C = 110$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm0C = 95$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm0C = 110$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm0C = 36$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm0C = 37$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm0C = 30$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm0C = 29$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm0C = 31$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm0C = 152$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm0C = 110$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm0C = 115$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm0C = 6$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm0C = 6$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm0C = 125$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm0C = 117$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm0C = 109$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm0C = 80$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm0C = 60$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm0C = 37$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm0C = 12$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm0C = 244$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm0C = 22$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm0C = 108$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm0C = 67$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm0C = 30$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm0C = 14$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm0C = 115$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm0C = 107$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm0C = 109$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm0C = 158$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm0C = 12$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm0C = 109$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm0C = 06$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm0C = 79$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm0C = 37$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm0C = 71$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm0C = 6$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm0C = 50$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm0C = 36$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm0C = 6$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm0C = 37$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm0C = 6$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm0C = 152$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm0C          = "73"$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm0C = "73"$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm0C = "73"$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm0C = 12$/;"	v
s:cterm0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm0C = "138"$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm0D = "60"$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm0D = 38$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm0D = 140$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm0D = 101$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm0D = 140$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm0D = 68$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm0D = 68$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm0D = 12$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm0D = 31$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm0D = 12$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm0D = 74$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm0D = 67$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm0D = 74$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm0D = 75$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm0D = 4$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm0D = 60$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm0D = 32$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm0D = 109$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm0D = 68$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm0D = 60$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm0D = 68$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm0D = 12$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm0D = 241$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm0D = 28$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm0D = 108$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm0D = 97$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm0D = 31$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm0D = 27$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm0D = 38$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm0D = 67$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm0D = 109$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm0D = 81$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm0D = 12$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm0D = 109$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm0D = 04$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm0D = 39$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm0D = 24$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm0D = 73$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm0D = 4$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm0D = 12$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm0D = 32$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm0D = 4$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm0D = 68$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm0D = 4$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm0D = 103$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm0D = "25"$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm0D = 12$/;"	v
s:cterm0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm0D = "180"$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm0E = "152"$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm0E = 132$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm0E = 175$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm0E = 65$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm0E = 175$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm0E = 134$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm0E = 62$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm0E = 97$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm0E = 61$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm0E = 129$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm0E = 103$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm0E = 97$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm0E = 175$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm0E = 183$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm0E = 5$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm0E = 172$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm0E = 128$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm0E = 139$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm0E = 176$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm0E = 95$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm0E = 97$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm0E = 134$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm0E = 243$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm0E = 34$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm0E = 175$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm0E = 132$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm0E = 168$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm0E = 165$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm0E = 89$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm0E = 97$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm0E = 139$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm0E = 141$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm0E = 134$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm0E = 139$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm0E = 05$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm0E = 97$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm0E = 126$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm0E = 146$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm0E = 5$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm0E = 212$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm0E = 12$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm0E = 5$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm0E = 127$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm0E = 5$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm0E = 103$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm0E          = "176"$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm0E = "176"$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm0E = "176"$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm0E = 134$/;"	v
s:cterm0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm0E = "217"$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm0F = "187"$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm0F = 179$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm0F = 174$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm0F = 65$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm0F = 174$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm0F = 167$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm0F = 135$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm0F = 170$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm0F = 5$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm0F = 5$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm0F = 94$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm0F = 130$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm0F = 131$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm0F = 180$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm0F = 17$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm0F = 173$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm0F = 89$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm0F = 131$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm0F = 173$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm0F = 95$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm0F = 131$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm0F = 12$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm0F = 240$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm0F = 22$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm0F = 166$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm0F = 131$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm0F = 130$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm0F = 57$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm0F = 130$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm0F = 132$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm0F = 138$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm0F = 167$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm0F = 12$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm0F = 137$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm0F = 14$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm0F = 17$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm0F = 169$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm0F = 88$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm0F = 137$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm0F = 17$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm0F = 58$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm0F = 168$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm0F = 17$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm0F = 167$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm0F = 14$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm0F = 17$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm0F = 95$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm0F          = "137"$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm0F = "137"$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm0F = "137"$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm0F = 12$/;"	v
s:cterm0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm0F = "231"$/;"	v
s:ctermAlmostBlack	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:ctermAlmostBlack = "235"$/;"	v
s:ctermAlmostBlack	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:ctermAlmostBlack = "235"$/;"	v
s:ctermAsh	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermAsh = "234"$/;"	v
s:ctermBgPurple	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermBgPurple    = "59"$/;"	v
s:ctermBlack	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermBlack = "00"$/;"	v
s:ctermBlood	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermBlood = "88"$/;"	v
s:ctermBrightRed	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermBrightRed = "09"$/;"	v
s:ctermBrown	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermBrown = "94"$/;"	v
s:ctermBruise	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermBruise = "53"$/;"	v
s:ctermCongealing	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermCongealing = "52"$/;"	v
s:ctermDarkGray	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:ctermDarkGray = "240"$/;"	v
s:ctermDarkGray	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermDarkGray    = "235"$/;"	v
s:ctermDarkGray	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:ctermDarkGray = "240"$/;"	v
s:ctermDarkSeafoam	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermDarkSeafoam = "22"$/;"	v
s:ctermFuschia	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermFuschia     = "88"$/;"	v
s:ctermGray	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:ctermGray = "243"$/;"	v
s:ctermGray	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermGray = "243"$/;"	v
s:ctermGray	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:ctermGray = "243"$/;"	v
s:ctermGray	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:ctermGray = "243"$/;"	v
s:ctermGreen	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermGreen = "02"$/;"	v
s:ctermGrey	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermGrey = "08"$/;"	v
s:ctermIron	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermIron = "242"$/;"	v
s:ctermLavender	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermLavender    = "25"$/;"	v
s:ctermOrange	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermOrange = "166"$/;"	v
s:ctermPoison	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermPoison = "58"$/;"	v
s:ctermPurple	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermPurple = "05"$/;"	v
s:ctermRed	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermRed = "01"$/;"	v
s:ctermShadow	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermShadow      = "233"$/;"	v
s:ctermSilver	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermSilver      = "189"$/;"	v
s:ctermWhite	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:ctermWhite = "231"$/;"	v
s:ctermWhite	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermWhite = "231"$/;"	v
s:ctermWhite	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:ctermWhite = "231"$/;"	v
s:ctermWhite	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermWhite = "15"$/;"	v
s:ctermWhite	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:ctermWhite = "231"$/;"	v
s:ctermWinter	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermWinter = "30"$/;"	v
s:cterm_alert	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_alert     = 88   " Modified file alert color$/;"	v
s:cterm_alert	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_alert     = 124         " Modified file alert color$/;"	v
s:cterm_black	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_black = 16$/;"	v
s:cterm_blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_blue = 110$/;"	v
s:cterm_blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_blue = 67$/;"	v
s:cterm_blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_blue = 110$/;"	v
s:cterm_blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_blue = 111$/;"	v
s:cterm_blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_blue = 110$/;"	v
s:cterm_blue_offset	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_blue_offset = 68$/;"	v
s:cterm_cyan	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_cyan = 116$/;"	v
s:cterm_cyan_offset	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_cyan_offset = 73$/;"	v
s:cterm_dark_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_dark_gray = 236$/;"	v
s:cterm_dark_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_dark_gray = 234$/;"	v
s:cterm_dark_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_dark_gray = 236$/;"	v
s:cterm_dark_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_dark_gray = 236$/;"	v
s:cterm_deep_green	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_deep_green = 70$/;"	v
s:cterm_errorbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_errorbg   = 160         " Background for error blocks$/;"	v
s:cterm_errorfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_errorfg   = 15          " Foreground for error blocks$/;"	v
s:cterm_green	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_green = 150$/;"	v
s:cterm_green	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_green = 151$/;"	v
s:cterm_green	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_green = 150$/;"	v
s:cterm_green	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_green = 149$/;"	v
s:cterm_green	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_green = 150$/;"	v
s:cterm_green_offset	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_green_offset = 107$/;"	v
s:cterm_inactivebg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_inactivebg = s:cterm02$/;"	v
s:cterm_inactivebg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_inactivebg = 234 " Background for inactive mode$/;"	v
s:cterm_inactivebg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_inactivebg = 234        " Background for inactive mode$/;"	v
s:cterm_inactivefg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_inactivefg = s:cterm04$/;"	v
s:cterm_inactivefg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_inactivefg = 239 " Foreground for inactive mode$/;"	v
s:cterm_inactivefg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_inactivefg = 239        " Foreground for inactive mode$/;"	v
s:cterm_insertbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_insertbg  = s:cterm0B$/;"	v
s:cterm_insertbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_insertbg  = 70   " Background for insert mode and file position blocks$/;"	v
s:cterm_insertbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_insertbg  = 70          " Background for insert mode and file position blocks$/;"	v
s:cterm_insertfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_insertfg  = s:cterm07$/;"	v
s:cterm_insertfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_insertfg  = 15   " Foreground for insert mode and file position blocks$/;"	v
s:cterm_insertfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_insertfg  = 15          " Foreground for insert mode and file position blocks$/;"	v
s:cterm_light_blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_light_blue = 39$/;"	v
s:cterm_light_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_light_gray = 249$/;"	v
s:cterm_light_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_light_gray = 239$/;"	v
s:cterm_light_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_light_gray = 249$/;"	v
s:cterm_light_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_light_gray = 249$/;"	v
s:cterm_lightlight_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_lightlight_gray = 245$/;"	v
s:cterm_med_gray_hi	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_med_gray_hi = 238$/;"	v
s:cterm_med_gray_hi	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_med_gray_hi = 236$/;"	v
s:cterm_med_gray_hi	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_med_gray_hi = 238$/;"	v
s:cterm_med_gray_hi	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_med_gray_hi = 238$/;"	v
s:cterm_med_gray_lo	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_med_gray_lo = 237$/;"	v
s:cterm_med_gray_lo	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_med_gray_lo = 237$/;"	v
s:cterm_med_gray_lo	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_med_gray_lo = 237$/;"	v
s:cterm_med_gray_lo	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_med_gray_lo = 237$/;"	v
s:cterm_normalbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_normalbg  = s:cterm0D$/;"	v
s:cterm_normalbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_normalbg  = 27   " Background for normal mode and file position blocks$/;"	v
s:cterm_normalbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_normalbg  = 27          " Background for normal mode and file position blocks$/;"	v
s:cterm_normalfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_normalfg  = s:cterm07$/;"	v
s:cterm_normalfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_normalfg  = 15   " Foreground for normal mode and file position blocks$/;"	v
s:cterm_normalfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_normalfg  = 15          " Foreground for normal mode and file position blocks$/;"	v
s:cterm_orange	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_orange = 216$/;"	v
s:cterm_orange	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_orange = 173$/;"	v
s:cterm_orange	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_orange = 179$/;"	v
s:cterm_orange	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_orange = 179$/;"	v
s:cterm_pink	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_pink = 182$/;"	v
s:cterm_pink	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_pink = 182$/;"	v
s:cterm_pink	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_pink = 182$/;"	v
s:cterm_pink	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_pink = 182$/;"	v
s:cterm_purple	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_purple = 146$/;"	v
s:cterm_purple	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_purple = 139$/;"	v
s:cterm_purple	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_purple = 146$/;"	v
s:cterm_purple	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_purple = 176$/;"	v
s:cterm_purple	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_purple = 146$/;"	v
s:cterm_purple_offset	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_purple_offset = 139$/;"	v
s:cterm_red	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_red = 174$/;"	v
s:cterm_red	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_red = 131$/;"	v
s:cterm_red	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_red = 174$/;"	v
s:cterm_red	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_red = 174$/;"	v
s:cterm_replacebg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_replacebg = s:cterm08$/;"	v
s:cterm_replacebg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_replacebg = 88   " Background for replace mode and file position blocks$/;"	v
s:cterm_replacebg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_replacebg = 160         " Background for replace mode and file position blocks$/;"	v
s:cterm_replacefg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_replacefg = s:cterm07$/;"	v
s:cterm_replacefg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_replacefg = 15   " Foreground for replace mode and file position blocks$/;"	v
s:cterm_replacefg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_replacefg = 15          " Foreground for replace mode and file position blocks$/;"	v
s:cterm_sky_blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_sky_blue = 111$/;"	v
s:cterm_termbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_termbg    = s:cterm02$/;"	v
s:cterm_termbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_termbg    = 237  " Background for branch and file format blocks$/;"	v
s:cterm_termbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_termbg    = 237         " Background for branch and file format blocks$/;"	v
s:cterm_termbg2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_termbg2   = s:cterm00$/;"	v
s:cterm_termbg2	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_termbg2   = 234  " Background for middle block$/;"	v
s:cterm_termbg2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_termbg2   = 234         " Background for middle block$/;"	v
s:cterm_termfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_termfg    = s:cterm06$/;"	v
s:cterm_termfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_termfg    = 144  " Foreground for branch and file format blocks$/;"	v
s:cterm_termfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_termfg    = 144         " Foreground for branch and file format blocks$/;"	v
s:cterm_termfg2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_termfg2   = s:cterm06$/;"	v
s:cterm_termfg2	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_termfg2   = 39   " Foreground for middle block$/;"	v
s:cterm_termfg2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_termfg2   = 39          " Foreground for middle block$/;"	v
s:cterm_visualbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_visualbg  = s:cterm09$/;"	v
s:cterm_visualbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_visualbg  = 166  " Background for visual mode and file position blocks$/;"	v
s:cterm_visualbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_visualbg  = 166         " Background for visual mode and file position blocks$/;"	v
s:cterm_visualfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_visualfg  = s:cterm07$/;"	v
s:cterm_visualfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_visualfg  = 15   " Foreground for visual mode and file position blocks$/;"	v
s:cterm_visualfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_visualfg  = 15          " Foreground for visual mode and file position blocks$/;"	v
s:cterm_warningbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_warningbg = 166         " Background for warning blocks$/;"	v
s:cterm_warningfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_warningfg = 15          " Foreground for warning blocks$/;"	v
s:cterm_white	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_white = 255$/;"	v
s:cterm_yellow	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_yellow = 222$/;"	v
s:cterm_yellow_offset	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_yellow_offset = 179$/;"	v
s:ctrlspace	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:ctrlspace = get(g:, 'CtrlSpaceLoaded', 0)$/;"	v
s:curl_arguments	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:curl_arguments(path, ...) abort$/;"	f
s:current	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:current()$/;"	f
s:currentQueryObject	autoload/plugged/vim-polyglot/ftplugin/idris.vim	/^function! s:currentQueryObject()$/;"	f
s:currentQueryObject	autoload/plugged/vim-polyglot/ftplugin/idris2.vim	/^function! s:currentQueryObject()$/;"	f
s:current_bufnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_bufnr = -1$/;"	v
s:current_char	autoload/plugged/vim-polyglot/indent/clojure.vim	/^	function! s:current_char()$/;"	f
s:current_char	autoload/plugged/vim-polyglot/indent/fennel.vim	/^	function! s:current_char()$/;"	f
s:current_modified	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_modified = 0$/;"	v
s:current_session	autoload/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:current_session() abort$/;"	f
s:current_syntax	autoload/plugged/vim-polyglot/after/syntax/coffee.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
s:current_syntax	autoload/plugged/vim-polyglot/after/syntax/javascript/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	autoload/plugged/vim-polyglot/after/syntax/javascript/sql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	autoload/plugged/vim-polyglot/after/syntax/jsx.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	autoload/plugged/vim-polyglot/after/syntax/mdx.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
s:current_syntax	autoload/plugged/vim-polyglot/after/syntax/php/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	autoload/plugged/vim-polyglot/after/syntax/reason/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	autoload/plugged/vim-polyglot/after/syntax/tsx.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	autoload/plugged/vim-polyglot/after/syntax/typescript/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	autoload/plugged/vim-polyglot/syntax/ansible.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
s:current_syntax	autoload/plugged/vim-polyglot/syntax/mint.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_tabcnt	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_tabcnt = -1$/;"	v
s:current_tabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabnr = -1$/;"	v
s:current_tabnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_tabnr = -1$/;"	v
s:current_tabnr	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_tabnr = -1$/;"	v
s:current_visible_buffers	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_visible_buffers = []$/;"	v
s:current_word	autoload/plugged/vim-polyglot/indent/clojure.vim	/^	function! s:current_word()$/;"	f
s:current_word	autoload/plugged/vim-polyglot/indent/fennel.vim	/^	function! s:current_word()$/;"	f
s:cursor_grey	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:cursor_grey = s:colors.cursor_grey$/;"	v
s:cursor_moved	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:cursor_moved(...)$/;"	f
s:customOpenBookmark	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenBookmark(node) abort$/;"	f
s:customOpenDir	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenDir(node) abort$/;"	f
s:customOpenFile	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenFile(node) abort$/;"	f
s:cyan	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:cyan = s:colors.cyan$/;"	v
s:cyan	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:cyan    = {'hex': '#2AA198', 'term':  36}  "  42, 161, 152 *$/;"	v
s:cycle	autoload/plugged/vim-polyglot/ftplugin/gitrebase.vim	/^function! s:cycle(count) abort$/;"	f
s:cycle_until_end	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:cycle_until_end()$/;"	f
s:d	autoload/plugged/vim-polyglot/syntax/julia.vim	/^  function! s:d(x)$/;"	f
s:dark_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:dark_gray       = ['#303030', 236]$/;"	v
s:dark_red	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:dark_red = s:colors.dark_red$/;"	v
s:dark_yellow	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:dark_yellow = s:colors.dark_yellow$/;"	v
s:darker_grey	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:darker_grey  = [ '#262626', 235 ]$/;"	v
s:darkgray	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:darkgray = [245, '#1d1f21']$/;"	v
s:debug	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:debug(str)$/;"	f
s:debug	autoload/plugged/vim-polyglot/autoload/svelte.vim	/^let s:debug = exists("g:vim_svelte_plugin_debug")$/;"	v
s:debug	autoload/plugged/vim-polyglot/indent/svelte.vim	/^let s:debug = svelte#GetConfig('debug', 0)$/;"	v
s:decIndent	autoload/plugged/vim-polyglot/indent/plantuml.vim	/^let s:decIndent = '^\\s*\\%(end\\|else\\|}\\)'$/;"	v
s:dec_num	autoload/plugged/vim-polyglot/syntax/nim.vim	/^  let s:dec_num = '\\d%(_?\\d)*'$/;"	v
s:dec_regex	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:dec_regex = '\\d\\%(_\\?\\d\\)*\\%(\\>\\|im\\>\\|\\ze\\D\\)'$/;"	v
s:decimal_group	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = ''$/;"	v
s:decimal_group	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = ','$/;"	v
s:decimal_group	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = '.'$/;"	v
s:decimal_group	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = ''$/;"	v
s:decimal_group	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = ','$/;"	v
s:decimal_group	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = '.'$/;"	v
s:decimalpos	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! s:decimalpos(expr) abort$/;"	f
s:decode	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:decode(json, ...) abort$/;"	f
s:decode_json	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^  function! s:decode_json(text) abort$/;"	f
s:decrease	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:decrease(...)$/;"	f
s:defArgMatcher	autoload/plugged/vim-polyglot/indent/scala.vim	/^let s:defArgMatcher = '\\%((\\_.\\{-})\\)'$/;"	v
s:defMatcher	autoload/plugged/vim-polyglot/indent/scala.vim	/^let s:defMatcher = '\\%(' . s:modifierMatcher . '\\)*\\<def\\>'$/;"	v
s:def_comment	autoload/plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_comment(name, nextgroup)$/;"	f
s:def_keyword	autoload/plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_keyword(name, nextgroup, keyword)$/;"	f
s:def_keywords	autoload/plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_keywords(name, nextgroup, keywords)$/;"	f
s:def_match	autoload/plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_match(name, nextgroup, pattern)$/;"	f
s:def_region	autoload/plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_region(name, nextgroup, start, skip, end, matchgroup, contains)$/;"	f
s:default_action	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:default_action = {$/;"	v
s:default_action	autoload/plugged/fzf/plugin/fzf.vim	/^let s:default_action = {$/;"	v
s:default_checks	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:default_checks = ['indent', 'trailing', 'mixed-indent-file', 'conflicts']$/;"	v
s:default_layout	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:default_layout()$/;"	f
s:default_mappings	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^let s:default_mappings = {$/;"	v
s:default_metalinter	autoload/plugged/vim-polyglot/autoload/go/config.vim	/^let s:default_metalinter = 'staticcheck'$/;"	v
s:default_shiftwidth	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^  let s:default_shiftwidth = &shiftwidth$/;"	v
s:default_vcs_cmds	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^let s:default_vcs_cmds = {$/;"	v
s:default_vcs_cmds_diffmode	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^let s:default_vcs_cmds_diffmode = {$/;"	v
s:defaults	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:defaults()$/;"	f
s:define_commands	autoload/plug.vim	/^function! s:define_commands()$/;"	f
s:defs	autoload/plugged/fzf.vim/plugin/fzf.vim	/^function! s:defs(commands)$/;"	f
s:delete	autoload/plug.vim	/^function! s:delete(range, force)$/;"	f
s:delete	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:delete(s)$/;"	f
s:deleteBookmark	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bookmark) abort$/;"	f
s:delete_highlight	autoload/plugged/vim-signify/autoload/sy/sign.vim	/^let s:delete_highlight = ['', 'SignifyLineDelete']$/;"	v
s:delete_op	autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	f
s:delimitMate_extra_excluded_regions	autoload/plugged/vim-polyglot/autoload/rust/delimitmate.vim	/^let s:delimitMate_extra_excluded_regions = ',rustLifetimeCandidate,rustGenericLifetimeCandidate'$/;"	v
s:delimiter	autoload/plugged/vim-polyglot/syntax/ruby.vim	/^    let s:delimiter = '\\' . s:delimiter$/;"	v
s:delimiters	autoload/plugged/vim-polyglot/ftplugin/caddyfile.vim	/^let s:delimiters = {'left': '#'}$/;"	v
s:delims	autoload/plugged/vim-polyglot/ftplugin/hcl.vim	/^let s:delims = { 'left': '#' }$/;"	v
s:denite_ver	autoload/plugged/vim-airline/autoload/airline/extensions/denite.vim	/^let s:denite_ver = (exists('*denite#get_status_mode') ? 2 : 3)$/;"	v
s:desktop_enable_kde	autoload/plugged/vim-polyglot/syntax/desktop.vim	/^  let s:desktop_enable_kde = v:false$/;"	v
s:desktop_enable_kde	autoload/plugged/vim-polyglot/syntax/desktop.vim	/^  let s:desktop_enable_kde = v:true$/;"	v
s:desktop_enable_nonstd	autoload/plugged/vim-polyglot/syntax/desktop.vim	/^  let s:desktop_enable_nonstd = v:false$/;"	v
s:desktop_enable_nonstd	autoload/plugged/vim-polyglot/syntax/desktop.vim	/^  let s:desktop_enable_nonstd = v:true$/;"	v
s:detect_indent	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^  func! s:detect_indent() abort$/;"	f
s:devnull	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^let s:devnull  = has('win32') || has ('win64') ? 'NUL' : '\/dev\/null'$/;"	v
s:diagnostics	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:diagnostics = {}$/;"	v
s:diagnostics_for_buffer	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:diagnostics_for_buffer()$/;"	f
s:dictionary_entry	autoload/plugged/vim-polyglot/indent/ansible.vim	/^let s:dictionary_entry = '\\v^\\s*[^:-]+:\\s*$' " with_items:$/;"	v
s:did_indent	autoload/plugged/vim-polyglot/after/indent/jsx.vim	/^  let s:did_indent = b:did_indent$/;"	v
s:did_indent	autoload/plugged/vim-polyglot/after/indent/tsx.vim	/^  let s:did_indent = b:did_indent$/;"	v
s:did_indent	autoload/plugged/vim-polyglot/indent/typescriptreact.vim	/^  let s:did_indent=b:did_indent$/;"	v
s:did_setup_color_schemes	autoload/plugged/vim-polyglot/extras/menu.vim	/^let s:did_setup_color_schemes = 0$/;"	v
s:did_setup_compilers	autoload/plugged/vim-polyglot/extras/menu.vim	/^let s:did_setup_compilers = 0$/;"	v
s:did_setup_keymaps	autoload/plugged/vim-polyglot/extras/menu.vim	/^  let s:did_setup_keymaps = 0$/;"	v
s:diff	autoload/plug.vim	/^function! s:diff()$/;"	f
s:diff_hunk	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:diff_hunk(_sy, vcs, diff) abort$/;"	f
s:diff_modifier	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
s:diff_restore	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
s:diff_window_count	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
s:diffcomplete	autoload/plugged/vim-polyglot/ftplugin/gitcommit.vim	/^function! s:diffcomplete(A,L,P)$/;"	f
s:diffidx	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
s:diffoff	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff() abort$/;"	f
s:diffoff_all	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
s:diffthis	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffthis() abort$/;"	f
s:difftool	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^let s:difftool = sy#util#escape(get(g:, 'signify_difftool', 'diff'))$/;"	v
s:dirArrows	autoload/plugged/NERDTree/syntax/nerdtree.vim	/^    let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~]\\-').escape(g:NERDTreeDirArrowEx/;"	v
s:dir_for_worktree	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:directives_end	autoload/plugged/vim-polyglot/indent/blade.vim	/^    let s:directives_end .= '\\|' . join(values(g:blade_custom_directives_pairs), '\\|')$/;"	v
s:directives_end	autoload/plugged/vim-polyglot/indent/blade.vim	/^let s:directives_end = 'else\\|end\\|empty\\|show\\|stop\\|append\\|overwrite'$/;"	v
s:directives_start	autoload/plugged/vim-polyglot/indent/blade.vim	/^    let s:directives_start .= '\\|' . join(keys(g:blade_custom_directives_pairs), '\\|')$/;"	v
s:directives_start	autoload/plugged/vim-polyglot/indent/blade.vim	/^let s:directives_start = 'if\\|else\\|unless\\|for\\|while\\|empty\\|push\\|section\\|can\\|hasS/;"	v
s:dirpath	autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
s:disable_colors	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:disable_colors = []$/;"	v
s:displayHelp	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp() abort$/;"	f
s:display_git_branch	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:display_git_branch()$/;"	f
s:display_hg_branch	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:display_hg_branch()$/;"	f
s:do	autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
s:do_handle_pattern_match_block	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:do_handle_pattern_match_block(relative_line, context)$/;"	f
s:doautocmd	autoload/plug.vim	/^function! s:doautocmd(...)$/;"	f
s:dobufread	autoload/plug.vim	/^function! s:dobufread(names)$/;"	f
s:documentationSymbol	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:documentationSymbol(xmlSig, assembly, cont)$/;"	f
s:dodigits	autoload/plugged/vim-polyglot/ftplugin/pdf.vim	/^function! s:dodigits(digits)$/;"	f
s:doesOrderConnect	autoload/plugged/vim-polyglot/indent/applescript.vim	/^func! s:doesOrderConnect(text)$/;"	f
s:done	autoload/plugged/vim-rooter/test/runner.vim	/^  let s:done += 1$/;"	v
s:done	autoload/plugged/vim-rooter/test/runner.vim	/^let s:done = 0$/;"	v
s:doobject	autoload/plugged/vim-polyglot/ftplugin/pdf.vim	/^function! s:doobject(string)$/;"	f
s:dopopd	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:dopopd()$/;"	f
s:dot	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:dot()$/;"	f
s:dot_continuation_regex	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:dot_continuation_regex = '%\\@<!\\.\\s*\\%(#.*\\)\\=$'$/;"	v
s:doubleArrow	autoload/plugged/vim-polyglot/after/syntax/idris.vim	/^let s:doubleArrow = 1$/;"	v
s:doubleArrow	autoload/plugged/vim-polyglot/after/syntax/idris2.vim	/^let s:doubleArrow = 1$/;"	v
s:download	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:download(branch)$/;"	f
s:dprint	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
s:drop_while	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:drop_while(f, xs) abort$/;"	f
s:dstring	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
s:dtd_cpo_save	autoload/plugged/vim-polyglot/syntax/dtd.vim	/^let s:dtd_cpo_save = &cpo$/;"	v
s:echo	autoload/plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:echo(str) abort$/;"	f
s:echo_error	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:echo_error(msg, ...) abort$/;"	f
s:echo_signature	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:echo_signature(parts)$/;"	f
s:echorizer	autoload/plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^let s:echorizer = {$/;"	v
s:echorizer.eat	autoload/plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.eat() abort$/;"	f
s:echorizer.echo	autoload/plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.echo() abort$/;"	f
s:echorizer.echo_ansi	autoload/plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.echo_ansi(code) abort$/;"	f
s:ecr_close	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_close = '%>'$/;"	v
s:ecr_comment_open	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_comment_open = '<%%\\@!-\\=#'$/;"	v
s:ecr_control_open	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_control_open = '<%%\\@!-\\=[=#]\\@!'$/;"	v
s:ecr_dedent_regex	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_dedent_regex =$/;"	v
s:ecr_indent_regex	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_indent_regex =$/;"	v
s:ecr_open	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_open = '<%%\\@!'$/;"	v
s:ecrystal_extensions	autoload/plugged/vim-polyglot/autoload/ecrystal.vim	/^let s:ecrystal_extensions = {$/;"	v
s:ed	autoload/plugged/vim-polyglot/syntax/tt2.vim	/^        let s:ed = strpart(s:str,0,stridx(s:str,' '))$/;"	v
s:edit_jobs	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:edit_jobs = {}$/;"	v
s:eglobal_working	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:eglobal_working=0$/;"	v
s:empty_border	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:empty_border(border) abort$/;"	f
s:empty_line	autoload/plugged/vim-polyglot/ftplugin/svelte/fold.vim	/^let s:empty_line = '\\v^\\s*$'$/;"	v
s:empty_tag	autoload/plugged/vim-polyglot/indent/svelte.vim	/^let s:empty_tag = '\\v\\C\\<'.s:empty_tagname.'[^\/]*\\>' $/;"	v
s:empty_tag_end	autoload/plugged/vim-polyglot/indent/svelte.vim	/^let s:empty_tag_end = '\\v^\\s*[^\\<\\>\\\/]*\\>\\s*' $/;"	v
s:empty_tag_start	autoload/plugged/vim-polyglot/indent/svelte.vim	/^let s:empty_tag_start = '\\v\\<'.s:empty_tagname.'[^\\>]*$' $/;"	v
s:empty_tagname	autoload/plugged/vim-polyglot/indent/svelte.vim	/^let s:empty_tagname = '(area|base|br|col|embed|hr|input|img|keygen|link|meta|param|source|track|/;"	v
s:enable	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:enable = 0$/;"	v
s:enable_tagged_jsx	autoload/plugged/vim-polyglot/after/syntax/jsx_pretty.vim	/^let s:enable_tagged_jsx = !empty(s:tags)$/;"	v
s:enabled	autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let s:enabled = get(g:, 'airline#extensions#localsearch#enabled', 1)$/;"	v
s:enabled	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:enabled = get(g:, 'airline#extensions#whitespace#enabled', 1)$/;"	v
s:enc_to_cp	autoload/plugged/fzf/plugin/fzf.vim	/^  function! s:enc_to_cp(str)$/;"	f
s:encode	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:encode(val, ...) abort$/;"	f
s:endBlock	autoload/plugged/vim-polyglot/indent/octave.vim	/^let s:endBlock = ['end', 'endfor', 'endparfor', 'endfunction', 'endif',$/;"	v
s:end_conditional_directive_rx	autoload/plugged/vim-polyglot/indent/make.vim	/^let s:end_conditional_directive_rx = '^\\s*\\%(else\\|endif\\)\\>'$/;"	v
s:end_conditional_directive_rx	autoload/plugged/vim-polyglot/indent/omake.vim	/^let s:end_conditional_directive_rx = '^\\s*\\%(else\\|endif\\)\\>'$/;"	v
s:end_end_regex	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_end_regex	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_middle_regex	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\/;"	v
s:end_middle_regex	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\/;"	v
s:end_skip_expr	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_start_regex	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:end_start_regex =$/;"	v
s:end_start_regex	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:end_start_regex =$/;"	v
s:end_tag	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^let s:end_tag = '\\%(<\\_s*\/\\_s*\\%(\\<[-:._$A-Za-z0-9]\\+\\>\\)\\_s*>\\|\/\\_s*>\\)'$/;"	v
s:ends_with	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:ends_with(str, suffix) abort$/;"	f
s:ends_with_backslash	autoload/plugged/vim-polyglot/indent/tcl.vim	/^function s:ends_with_backslash(lnum)$/;"	f
s:endtag	autoload/plugged/vim-polyglot/indent/typescriptreact.vim	/^let s:endtag = '^\\s*\\\/\\?>\\s*;\\='$/;"	v
s:endtags	autoload/plugged/vim-polyglot/after/indent/html.vim	/^let s:endtags = [0,0,0,0,0,0,0]   " long enough for the highest index$/;"	v
s:endtags	autoload/plugged/vim-polyglot/indent/html.vim	/^let s:endtags = [0,0,0,0,0,0,0]   " long enough for the highest index$/;"	v
s:enumeration_pattern	autoload/plugged/vim-polyglot/indent/rst.vim	/^let s:enumeration_pattern = '^\\s*\\%(\\d\\+\\|#\\)\\.\\s\\+'$/;"	v
s:eol	autoload/plugged/vim-polyglot/indent/mp.vim	/^let s:eol = '\\s*\\%($\\|%\\)'$/;"	v
s:eol	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:eol = '\\s*\\%(\\%(\\%(#=\\%(=#\\@!\\|[^=]\\|\\n\\)\\{-}=#\\)\\s*\\)\\+\\)\\?\\%(#=\\@!.*\\/;"	v
s:eregex_replacement	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^    let s:eregex_replacement=eregex_replacement$/;"	v
s:eregex_replacement	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:eregex_replacement=0$/;"	v
s:erlang_fun_begin	autoload/plugged/vim-polyglot/ftplugin/erlang.vim	/^let s:erlang_fun_begin = '^\\a\\w*(.*$'$/;"	v
s:erlang_fun_end	autoload/plugged/vim-polyglot/ftplugin/erlang.vim	/^let s:erlang_fun_end   = '^[^%]*\\.\\s*\\(%.*\\)\\?$'$/;"	v
s:err	autoload/plug.vim	/^function! s:err(msg)$/;"	f
s:err_remain_text	autoload/plugged/coc.nvim/autoload/coc/task.vim	/^let s:err_remain_text = {}$/;"	v
s:error	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:error(msg)$/;"	f
s:error	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:error = s:color_list(s:darker_grey, s:red)$/;"	v
s:error	autoload/plugged/vim-polyglot/autoload/dart.vim	/^function! s:error(text) abort$/;"	f
s:error_message	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! s:error_message(msg) abort$/;"	f
s:error_sign	autoload/plugged/coc.nvim/autoload/coc.vim	/^let s:error_sign = get(g:, 'coc_status_error_sign', has('mac') ? '❌ ' : 'E')$/;"	v
s:error_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^let s:error_symbol = get(g:, 'airline#extensions#coc#error_symbol', 'E:')$/;"	v
s:error_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:error_symbol = get(g:, 'airline#extensions#languageclient#error_symbol', 'E:')$/;"	v
s:error_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^let s:error_symbol = get(g:, 'airline#extensions#neomake#error_symbol', 'E:')$/;"	v
s:error_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^let s:error_symbol = get(g:, 'airline#extensions#syntastic#error_symbol', 'E:')$/;"	v
s:error_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:error_symbol = get(g:, 'airline#extensions#ycm#error_symbol', 'E:')$/;"	v
s:errored	autoload/plugged/vim-rooter/test/runner.vim	/^      let s:errored = 0$/;"	v
s:errored	autoload/plugged/vim-rooter/test/runner.vim	/^let s:errored = 0$/;"	v
s:errors	autoload/plugged/vim-rooter/test/runner.vim	/^      let s:errors += 1$/;"	v
s:errors	autoload/plugged/vim-rooter/test/runner.vim	/^  let s:errors += 1$/;"	v
s:errors	autoload/plugged/vim-rooter/test/runner.vim	/^let s:errors = 0$/;"	v
s:esc	autoload/plug.vim	/^function! s:esc(path)$/;"	f
s:escape	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:escape(path)$/;"	f
s:escape	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:escape(path)$/;"	f
s:escape	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:escape(chars)$/;"	f
s:escape_pattern	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:escape_pattern(str) abort$/;"	f
s:escapesConditionals	autoload/plugged/vim-polyglot/syntax/neomuttrc.vim	/^function! s:escapesConditionals(baseName, sequence, padding, conditional)$/;"	f
s:escrtp	autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
s:eval	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:eval(dict, key, arg)$/;"	f
s:evaluate_opts	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:evaluate_opts(options)$/;"	f
s:evaluate_tabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:evaluate_tabline(tabline)$/;"	f
s:excmds	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:excmds()$/;"	f
s:exec_paths	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:exec_paths = {}$/;"	v
s:exec_separator	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  def s:exec_separator(dict: dict<any>, from_arg: string, to_arg: string, inverse: bool, suffix:/;"	f
s:exec_separator	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  function! s:exec_separator(dict, from, to, inverse, suffix) abort$/;"	f
s:executable	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:executable(binary) abort$/;"	f
s:executables	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:executables = {}$/;"	v
s:execute	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:execute(cmd)$/;"	f
s:execute	autoload/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! s:execute(winid, cmd) abort$/;"	f
s:execute	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:execute(dict, command, use_height, temps) abort$/;"	f
s:execute_term	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:execute_term(dict, command, temps) abort$/;"	f
s:execute_tmux	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:execute_tmux(dict, command, temps) abort$/;"	f
s:exists	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:exists(name) abort dict$/;"	f
s:exit_handler	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:exit_handler(code, command, ...)$/;"	f
s:exp	autoload/plugged/vim-polyglot/syntax/nim.vim	/^  let s:exp = '%([eE][+-]?'.s:dec_num.')'$/;"	v
s:expand	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:expand = '\\%(\\(' . s:var . '\\)\\(' . s:flag . '*\\)\\(:S\\)\\=\\)'$/;"	v
s:exs_re	autoload/plugged/vim-polyglot/syntax/python.vim	/^        let s:exs_re .= '|BlockingIOError|ChildProcessError|ConnectionError|BrokenPipeError|Conn/;"	v
s:exs_re	autoload/plugged/vim-polyglot/syntax/python.vim	/^        let s:exs_re .= '|StandardError'$/;"	v
s:exs_re	autoload/plugged/vim-polyglot/syntax/python.vim	/^    let s:exs_re = 'BaseException|Exception|ArithmeticError|LookupError|EnvironmentError|Asserti/;"	v
s:ext	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^let s:ext = {}$/;"	v
s:ext	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^let s:ext._theme_funcrefs = []$/;"	v
s:ext.add_inactive_statusline_func	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_inactive_statusline_func(name) dict$/;"	f
s:ext.add_statusline_func	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_func(name) dict$/;"	f
s:ext.add_statusline_funcref	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_funcref(function) dict$/;"	f
s:ext.add_theme_func	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_theme_func(name) dict$/;"	f
s:extend	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:extend(base, extra)$/;"	f
s:extend	autoload/plugged/vim-polyglot/indent/sass.vim	/^let s:extend = '^\\s*\\%(@extend\\|@include\\|+\\)'$/;"	v
s:extend_opts	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:extend_opts(dict, eopts, prepend)$/;"	f
s:extended_complements	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:extended_complements=0$/;"	v
s:extended_dots	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:extended_dots=0$/;"	v
s:extended_spaces	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:extended_spaces=0$/;"	v
s:external_sign_present	autoload/plugged/vim-signify/autoload/sy/sign.vim	/^function! s:external_sign_present(sy, line) abort$/;"	f
s:extfname	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^let s:extfname=expand("%:e")$/;"	v
s:extraConceal	autoload/plugged/vim-polyglot/after/syntax/idris.vim	/^            let s:extraConceal = 0$/;"	v
s:extraConceal	autoload/plugged/vim-polyglot/after/syntax/idris.vim	/^let s:extraConceal = 1$/;"	v
s:extraConceal	autoload/plugged/vim-polyglot/after/syntax/idris2.vim	/^            let s:extraConceal = 0$/;"	v
s:extraConceal	autoload/plugged/vim-polyglot/after/syntax/idris2.vim	/^let s:extraConceal = 1$/;"	v
s:extract_current_hunk	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:extract_current_hunk(diff) abort$/;"	f
s:extract_identifier	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:extract_identifier(word) abort$/;"	f
s:extract_name	autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
s:f1Help	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:f1Help(filePath, line, character, cont)$/;"	f
s:faded_red	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:faded_red       = ['#f97070', 203]$/;"	v
s:fail	autoload/plugged/vim-rooter/test/runner.vim	/^      let s:fail += 1$/;"	v
s:fail	autoload/plugged/vim-rooter/test/runner.vim	/^let s:fail = 0$/;"	v
s:falcon_deindent_keywords	autoload/plugged/vim-polyglot/indent/falcon.vim	/^let s:falcon_deindent_keywords = '^\\s*\\(case\\|catch\\|default\\|elif\\|else\\|end\\)'$/;"	v
s:falcon_indent_keywords	autoload/plugged/vim-polyglot/indent/falcon.vim	/^let s:falcon_indent_keywords = '^\\s*\\(case\\|catch\\|class\\|enum\\|default\\|elif\\|else' .$/;"	v
s:fb	autoload/plugged/vim-polyglot/syntax/ledger.vim	/^let s:fb = get(g:, 'ledger_fold_blanks', 0)$/;"	v
s:fennel_check_for_string_worker	autoload/plugged/vim-polyglot/indent/fennel.vim	/^	function! s:fennel_check_for_string_worker()$/;"	f
s:fennel_indent_pos	autoload/plugged/vim-polyglot/indent/fennel.vim	/^	function! s:fennel_indent_pos()$/;"	f
s:fg	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:fg  = ['#6C6C6C', 242] "       other fg$/;"	v
s:fg0	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg0 = s:gb.dark0$/;"	v
s:fg0	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg0 = s:gb.light0$/;"	v
s:fg1	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:fg1  = s:getGruvColor('GruvboxFg1')$/;"	v
s:fg1	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg1 = s:gb.dark1$/;"	v
s:fg1	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg1 = s:gb.light1$/;"	v
s:fg1	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg1[1]    = 15$/;"	v
s:fg2	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg2 = s:gb.dark2$/;"	v
s:fg2	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg2 = s:gb.light2$/;"	v
s:fg3	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg3 = s:gb.dark3$/;"	v
s:fg3	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg3 = s:gb.light3$/;"	v
s:fg4	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:fg4  = s:getGruvColor('GruvboxFg4')$/;"	v
s:fg4	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4 = s:gb.dark4$/;"	v
s:fg4	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4 = s:gb.light4$/;"	v
s:fg4	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4[1]    = 7$/;"	v
s:fg4_256	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4_256 = s:gb.dark4_256$/;"	v
s:fg4_256	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4_256 = s:gb.light4_256$/;"	v
s:file_commit_pattern	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:file_commit_pattern = s:file_pattern . '\\|^\\%(\\l\\{3,\\} \\)\\=[0-9a-f]\\{4,\\} '$/;"	v
s:file_name	autoload/plugged/vim-polyglot/indent/erlang.vim	/^let s:file_name = ''$/;"	v
s:file_options	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_options(prefix)$/;"	f
s:file_pattern	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:file_pattern = '^[A-Z?] .\\|^diff --'$/;"	v
s:file_source	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_source(prefix)$/;"	f
s:file_split_prefix	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_split_prefix(prefix)$/;"	f
s:filename	autoload/plugged/vim-polyglot/after/ftplugin/requirements.vim	/^    let s:filename = expand("%:p")$/;"	v
s:filename_case_checks	autoload/plugged/vim-polyglot/tests/native.vim	/^let s:filename_case_checks = {$/;"	v
s:filename_checks	autoload/plugged/vim-polyglot/tests/native.vim	/^let s:filename_checks = {$/;"	v
s:filetype_dict	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^        let s:filetype_dict[key] = val$/;"	v
s:filetype_dict	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^    let s:filetype_dict = {$/;"	v
s:filetype_dict	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^    let s:filetype_dict = {}$/;"	v
s:filetype_map	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^let s:filetype_map = {$/;"	v
s:filetype_overrides	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^  let s:filetype_overrides['nerdtree'] = [ get(g:, 'NERDTreeStatusline', 'NERD'), '' ]$/;"	v
s:filetype_overrides	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^  let s:filetype_overrides['nerdtree'] = ['NERDTree', '']$/;"	v
s:filetype_overrides	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_overrides = {$/;"	v
s:filetype_regex_overrides	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_regex_overrides = {}$/;"	v
s:fill	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:fill(cmd)$/;"	f
s:fill_quickfix	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fill_quickfix(list, ...)$/;"	f
s:filter	autoload/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:filter(list, id) abort$/;"	f
s:find	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
s:findAndRevealPath	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath(pathStr) abort$/;"	f
s:findWorkspace	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:findWorkspace(dir, cont)$/;"	f
s:find_block	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:find_block(current_mode)$/;"	f
s:find_completion_start	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:find_completion_start() abort$/;"	f
s:find_following_block	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:find_following_block(linum) abort$/;"	f
s:find_index	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
s:find_indices	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
s:find_last_index	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
s:find_last_pos	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:find_last_pos(lnum, text, match)$/;"	f
s:find_name	autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
s:find_open_window	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:find_open_window(b)$/;"	f
s:find_opening_paren	autoload/plugged/vim-polyglot/indent/cython.vim	/^function! s:find_opening_paren(lnum, col)$/;"	f
s:find_opening_paren	autoload/plugged/vim-polyglot/indent/python.vim	/^function! s:find_opening_paren(lnum, col)$/;"	f
s:find_pred_block	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:find_pred_block(linum) abort$/;"	f
s:find_root_by	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:find_root_by(search_dir, d) abort$/;"	f
s:find_root_by_spec_and_src	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:find_root_by_spec_and_src(d) abort$/;"	f
s:find_start_of_block	autoload/plugged/vim-polyglot/indent/cython.vim	/^function! s:find_start_of_block(lnum, types, skip, multiple) abort$/;"	f
s:find_start_of_block	autoload/plugged/vim-polyglot/indent/python.vim	/^function! s:find_start_of_block(lnum, types, skip, multiple) abort$/;"	f
s:find_start_of_multiline_statement	autoload/plugged/vim-polyglot/indent/cython.vim	/^function! s:find_start_of_multiline_statement(lnum)$/;"	f
s:find_start_of_multiline_statement	autoload/plugged/vim-polyglot/indent/python.vim	/^function! s:find_start_of_multiline_statement(lnum)$/;"	f
s:findall	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! s:findall(text, rx) abort$/;"	f
s:finish	autoload/plug.vim	/^function! s:finish(pull)$/;"	f
s:finish_bindings	autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
s:finish_reconciling	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! s:finish_reconciling() abort$/;"	f
s:first_line	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:first_line(lines)$/;"	f
s:fix_beginfigs	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^  function! s:fix_beginfigs()$/;"	f
s:flag	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:flag = '\\%(:[p8~.htre]\\|:g\\=s\\(.\\).\\{-\\}\\1.\\{-\\}\\1\\)'$/;"	v
s:flags	autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:flags = get(g:, 'airline#extensions#tagbar#flags', '')$/;"	v
s:flatten	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
s:float_regex	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex = '\\%(' . s:float_regex3 .$/;"	v
s:float_regex1	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex1 = '\\.\\d\\%(_\\?\\d\\)*\\%([eEf][-+]\\?\\d\\+\\)\\?\\%(\\>\\|im\\>\\|\\ze\\D/;"	v
s:float_regex2	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex2 = '\\d\\%(_\\?\\d\\)*\\.\\%(\\d\\%(_\\?\\d\\)*\\)\\?\\%([eEf][-+]\\?\\d\\+\\)/;"	v
s:float_regex3	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex3 = '\\d\\%(_\\?\\d\\)*[eEf][-+]\\?\\d\\+\\%(\\>\\|im\\>\\|\\ze\\D\\)'$/;"	v
s:float_suf	autoload/plugged/vim-polyglot/syntax/nim.vim	/^  let s:float_suf = '%(''%(%(f|F)%(32|64|128)?|d|D))'$/;"	v
s:float_supported	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^let s:float_supported = exists('*nvim_open_win') || has('patch-8.1.1719')$/;"	v
s:fmt_excmd	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:fmt_excmd = '   '.s:blue('%-38s', 'Statement').'%s'$/;"	v
s:fname_prefix	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:fname_prefix(str)$/;"	f
s:fnamecollapse	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/short_path.vim	/^let s:fnamecollapse = get(g:, 'airline#extensions#tabline#fnamecollapse', 1)$/;"	v
s:fnameescape	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
s:fnameescape	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:fnameescape = " \\t\\n*?[{`$\\\\%#'\\"|!<"$/;"	v
s:focusgained_ignore_time	autoload/plugged/vim-airline/autoload/airline/util.vim	/^let s:focusgained_ignore_time = 0$/;"	v
s:fold_arg	autoload/plugged/vim-polyglot/syntax/crystal.vim	/^let s:fold_arg      = s:foldable('string') ? ' fold' : ''$/;"	v
s:fold_arg	autoload/plugged/vim-polyglot/syntax/ruby.vim	/^let s:fold_arg	    = s:foldable('string')		? ' fold'   : ''$/;"	v
s:foldable	autoload/plugged/vim-polyglot/syntax/crystal.vim	/^function! s:foldable(...) abort$/;"	f
s:foldable	autoload/plugged/vim-polyglot/syntax/ruby.vim	/^function! s:foldable(...) abort$/;"	f
s:foldable_groups	autoload/plugged/vim-polyglot/syntax/crystal.vim	/^let s:foldable_groups = split($/;"	v
s:foldable_groups	autoload/plugged/vim-polyglot/syntax/ruby.vim	/^let s:foldable_groups = split($/;"	v
s:folded_assignment_rx	autoload/plugged/vim-polyglot/indent/make.vim	/^let s:folded_assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\=='$/;"	v
s:folded_assignment_rx	autoload/plugged/vim-polyglot/indent/omake.vim	/^let s:folded_assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\=='$/;"	v
s:foldl	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
s:foldl1	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
s:foldr	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
s:foldr1	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
s:format_cmd	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_cmd(line)$/;"	f
s:format_excmd	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_excmd(ex)$/;"	f
s:format_git_log	autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
s:format_mark	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_mark(line)$/;"	f
s:format_message	autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
s:format_name	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^  function! s:format_name(name)$/;"	f
s:format_win	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_win(tab, win, buf)$/;"	f
s:format_wordcount	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^      function! s:format_wordcount(_)$/;"	f
s:format_wordcount	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! s:format_wordcount(wordcount)$/;"	f
s:formatter	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^      let s:formatter = 'default'$/;"	v
s:formatter	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^let s:formatter = get(g:, 'airline#extensions#wordcount#formatter', 'default')$/;"	v
s:fsac	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^let s:fsac = fnamemodify(s:script_root_dir . "fsac\/fsautocomplete.dll", ":p")$/;"	v
s:fsdn	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:fsdn(signature, cont)$/;"	f
s:fsi_buffer	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^let s:fsi_buffer = -1$/;"	v
s:fsi_height	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^let s:fsi_height = 0$/;"	v
s:fsi_job	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^let s:fsi_job    = -1$/;"	v
s:fsi_width	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^let s:fsi_width  = 0$/;"	v
s:ft	autoload/plugged/vim-polyglot/syntax/c.vim	/^let s:ft = matchstr(&ft, '^\\([^.]\\)\\+')$/;"	v
s:ft	autoload/plugged/vim-polyglot/syntax/rmd.vim	/^    let s:ft = s:type$/;"	v
s:ft	autoload/plugged/vim-polyglot/syntax/rmd.vim	/^    let s:ft = substitute(s:type, '.*=', '', '')$/;"	v
s:ft_pascal_comments	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^let s:ft_pascal_comments = '^\\s*\\%({\\|(\\*\\|\/\/\\)'$/;"	v
s:ft_pascal_keywords	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^let s:ft_pascal_keywords = '^\\s*\\%(program\\|unit\\|library\\|uses\\|begin\\|procedure\\|funct/;"	v
s:ft_rules_udev_rules_pattern	autoload/plugged/vim-polyglot/autoload/polyglot/ft.vim	/^let s:ft_rules_udev_rules_pattern = '^\\s*\\cudev_rules\\s*=\\s*"\\([^"]\\{-1,}\\)\/*".*'$/;"	v
s:ftplugin_sql_objects	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^let s:ftplugin_sql_objects =$/;"	v
s:funcNameMatcher	autoload/plugged/vim-polyglot/indent/scala.vim	/^let s:funcNameMatcher = '\\w\\+'$/;"	v
s:funcs	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^let s:funcs = {}$/;"	v
s:funcs.buf_add_highlight	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_add_highlight(bufnr, srcId, hlGroup, line, colStart, colEnd) abort$/;"	f
s:funcs.buf_attach	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_attach(...)$/;"	f
s:funcs.buf_clear_namespace	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_clear_namespace(bufnr, srcId, startLine, endLine) abort$/;"	f
s:funcs.buf_del_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_del_var(bufnr, name)$/;"	f
s:funcs.buf_detach	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_detach()$/;"	f
s:funcs.buf_get_changedtick	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_changedtick(bufnr)$/;"	f
s:funcs.buf_get_lines	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_lines(bufnr, start, end, strict) abort$/;"	f
s:funcs.buf_get_mark	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_mark(bufnr, name)$/;"	f
s:funcs.buf_get_name	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_name(bufnr)$/;"	f
s:funcs.buf_get_option	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_option(bufnr, name)$/;"	f
s:funcs.buf_get_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_var(bufnr, name)$/;"	f
s:funcs.buf_is_valid	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_is_valid(bufnr)$/;"	f
s:funcs.buf_line_count	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_line_count(bufnr) abort$/;"	f
s:funcs.buf_set_lines	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_lines(bufnr, start, end, strict, ...) abort$/;"	f
s:funcs.buf_set_name	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_name(bufnr, name) abort$/;"	f
s:funcs.buf_set_option	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_option(bufnr, name, val)$/;"	f
s:funcs.buf_set_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_var(bufnr, name, val)$/;"	f
s:funcs.call_atomic	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.call_atomic(calls)$/;"	f
s:funcs.call_dict_function	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.call_dict_function(dict, method, args) abort$/;"	f
s:funcs.call_function	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.call_function(method, args) abort$/;"	f
s:funcs.command	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.command(command) abort$/;"	f
s:funcs.command_output	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.command_output(cmd)$/;"	f
s:funcs.create_namespace	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.create_namespace(name) abort$/;"	f
s:funcs.del_current_line	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.del_current_line(line)$/;"	f
s:funcs.del_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.del_var(name) abort$/;"	f
s:funcs.err_write	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.err_write(str)$/;"	f
s:funcs.err_writeln	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.err_writeln(str)$/;"	f
s:funcs.eval	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.eval(expr) abort$/;"	f
s:funcs.feedkeys	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.feedkeys(keys, mode, escape_csi)$/;"	f
s:funcs.get_api_info	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_api_info()$/;"	f
s:funcs.get_current_buf	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_buf()$/;"	f
s:funcs.get_current_line	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_line()$/;"	f
s:funcs.get_current_tabpage	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_tabpage()$/;"	f
s:funcs.get_current_win	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_win()$/;"	f
s:funcs.get_mode	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_mode()$/;"	f
s:funcs.get_option	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_option(name)$/;"	f
s:funcs.get_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_var(var)$/;"	f
s:funcs.get_vvar	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_vvar(var)$/;"	f
s:funcs.list_bufs	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_bufs()$/;"	f
s:funcs.list_runtime_paths	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_runtime_paths()$/;"	f
s:funcs.list_tabpages	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_tabpages()$/;"	f
s:funcs.list_wins	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_wins() abort$/;"	f
s:funcs.out_write	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.out_write(str)$/;"	f
s:funcs.set_client_info	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_client_info(...) abort$/;"	f
s:funcs.set_current_buf	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_buf(bufnr) abort$/;"	f
s:funcs.set_current_dir	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_dir(dir) abort$/;"	f
s:funcs.set_current_line	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_line(line)$/;"	f
s:funcs.set_current_tabpage	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_tabpage(tabnr) abort$/;"	f
s:funcs.set_current_win	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_win(win_id) abort$/;"	f
s:funcs.set_option	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_option(name, value) abort$/;"	f
s:funcs.set_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_var(name, value) abort$/;"	f
s:funcs.strwidth	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.strwidth(str)$/;"	f
s:funcs.subscribe	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.subscribe(...) abort$/;"	f
s:funcs.tabpage_del_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_del_var(tabnr, name)$/;"	f
s:funcs.tabpage_get_number	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_get_number(id)$/;"	f
s:funcs.tabpage_get_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_get_var(tabnr, name)$/;"	f
s:funcs.tabpage_get_win	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_get_win(tabnr)$/;"	f
s:funcs.tabpage_is_valid	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_is_valid(tabnr)$/;"	f
s:funcs.tabpage_list_wins	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_list_wins(tabnr)$/;"	f
s:funcs.tabpage_set_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_set_var(tabnr, name, value)$/;"	f
s:funcs.unsubscribe	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.unsubscribe(...) abort$/;"	f
s:funcs.win_close	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_close(win_id, ...) abort$/;"	f
s:funcs.win_del_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_del_var(win_id, name) abort$/;"	f
s:funcs.win_get_buf	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_buf(winid)$/;"	f
s:funcs.win_get_cursor	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_cursor(win_id) abort$/;"	f
s:funcs.win_get_height	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_height(win_id) abort$/;"	f
s:funcs.win_get_number	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_number(win_id) abort$/;"	f
s:funcs.win_get_option	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_option(win_id, name) abort$/;"	f
s:funcs.win_get_position	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_position(win_id) abort$/;"	f
s:funcs.win_get_tabpage	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_tabpage(win_id) abort$/;"	f
s:funcs.win_get_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_var(win_id, name) abort$/;"	f
s:funcs.win_get_width	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_width(win_id) abort$/;"	f
s:funcs.win_is_valid	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_is_valid(win_id) abort$/;"	f
s:funcs.win_set_buf	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_buf(win_id, buf_id) abort$/;"	f
s:funcs.win_set_cursor	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_cursor(win_id, pos) abort$/;"	f
s:funcs.win_set_height	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_height(win_id, height) abort$/;"	f
s:funcs.win_set_option	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_option(win_id, name, value) abort$/;"	f
s:funcs.win_set_var	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_var(win_id, name, value) abort$/;"	f
s:funcs.win_set_width	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_width(win_id, width) abort$/;"	f
s:funcs_re	autoload/plugged/vim-polyglot/syntax/python.vim	/^            let s:funcs_re .= '|print'$/;"	v
s:funcs_re	autoload/plugged/vim-polyglot/syntax/python.vim	/^        let s:funcs_re .= '\\=@!'$/;"	v
s:funcs_re	autoload/plugged/vim-polyglot/syntax/python.vim	/^        let s:funcs_re .= '|apply|basestring|buffer|cmp|coerce|execfile|file|intern|long|raw_inp/;"	v
s:funcs_re	autoload/plugged/vim-polyglot/syntax/python.vim	/^        let s:funcs_re .= '|ascii|breakpoint|exec|print'$/;"	v
s:funcs_re	autoload/plugged/vim-polyglot/syntax/python.vim	/^    let s:funcs_re = '__import__|abs|all|any|bin|callable|chr|classmethod|compile|complex|delatt/;"	v
s:funcs_re	autoload/plugged/vim-polyglot/syntax/python.vim	/^    let s:funcs_re = 'syn match pythonBuiltinFunc ''\\v\\.@<!\\zs<%(' . s:funcs_re . ')>'$/;"	v
s:function	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! s:function(name)$/;"	f
s:function	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^  function! s:function(name)$/;"	f
s:function	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:function(name) abort$/;"	f
s:function_range_at	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:function_range_at(linum) abort$/;"	f
s:fzf	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fzf(name, opts, extra)$/;"	f
s:fzf_call	autoload/plugged/fzf/plugin/fzf.vim	/^  function! s:fzf_call(fn, ...)$/;"	f
s:fzf_expand	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:fzf_expand(fmt)$/;"	f
s:fzf_fnamemodify	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:fzf_fnamemodify(fname, mods)$/;"	f
s:fzf_getcwd	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:fzf_getcwd()$/;"	f
s:fzf_go	autoload/plugged/fzf/plugin/fzf.vim	/^let s:fzf_go = s:base_dir.'\/bin\/fzf'$/;"	v
s:fzf_restore_colors	autoload/plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_restore_colors()$/;"	f
s:fzf_tempname	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:fzf_tempname()$/;"	f
s:fzf_tmux	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:fzf_tmux(dict)$/;"	f
s:fzf_tmux	autoload/plugged/fzf/plugin/fzf.vim	/^let s:fzf_tmux = s:base_dir.'\/bin\/fzf-tmux'$/;"	v
s:fzf_vim_term	autoload/plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_vim_term()$/;"	f
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb = {}$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.aqua   = s:aqua$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg0 = s:bg0$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg1 = s:bg1$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg2 = s:bg2$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg3 = s:bg3$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg4 = s:bg4$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.blue   = s:blue$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_aqua    = ['#8ec07c', 108]     " 142-192-124$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_blue    = ['#83a598', 109]     " 131-165-152$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_green   = ['#b8bb26', 142]     " 184-187-38$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_orange  = ['#fe8019', 208]     " 254-128-25$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_purple  = ['#d3869b', 175]     " 211-134-155$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_red     = ['#fb4934', 167]     " 251-73-52$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_yellow  = ['#fabd2f', 214]     " 250-189-47$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark0       = ['#282828', 235]     " 40-40-40$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark0_hard  = ['#1d2021', 234]     " 29-32-33$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark0_soft  = ['#32302f', 236]     " 50-48-47$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark1       = ['#3c3836', 237]     " 60-56-54$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark2       = ['#504945', 239]     " 80-73-69$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark3       = ['#665c54', 241]     " 102-92-84$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark4       = ['#7c6f64', 243]     " 124-111-100$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark4_256   = ['#7c6f64', 243]     " 124-111-100$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_aqua     = ['#427b58', 66]      " 66-123-88$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_blue     = ['#076678', 24]      " 7-102-120$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_green    = ['#79740e', 100]     " 121-116-14$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_orange   = ['#af3a03', 130]     " 175-58-3$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_purple   = ['#8f3f71', 96]      " 143-63-113$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_red      = ['#9d0006', 88]      " 157-0-6$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_yellow   = ['#b57614', 136]     " 181-118-20$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg0 = s:fg0$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg1 = s:fg1$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg2 = s:fg2$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg3 = s:fg3$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg4 = s:fg4$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg4_256 = s:fg4_256$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.gray = s:gray$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.gray_244    = ['#928374', 244]     " 146-131-116$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.gray_245    = ['#928374', 245]     " 146-131-116$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.green  = s:green$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light0      = ['#fbf1c7', 229]     " 253-244-193$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light0_hard = ['#f9f5d7', 230]     " 249-245-215$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light0_soft = ['#f2e5bc', 228]     " 242-229-188$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light1      = ['#ebdbb2', 223]     " 235-219-178$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light2      = ['#d5c4a1', 250]     " 213-196-161$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light3      = ['#bdae93', 248]     " 189-174-147$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light4      = ['#a89984', 246]     " 168-153-132$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light4_256  = ['#a89984', 246]     " 168-153-132$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_aqua   = ['#689d6a', 72]      " 104-157-106$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_blue   = ['#458588', 66]      " 69-133-136$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_green  = ['#98971a', 106]     " 152-151-26$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_orange = ['#d65d0e', 166]     " 214-93-14$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_purple = ['#b16286', 132]     " 177-98-134$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_red    = ['#cc241d', 124]     " 204-36-29$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_yellow = ['#d79921', 172]     " 215-153-33$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.orange = s:orange$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.purple = s:purple$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.red    = s:red$/;"	v
s:gb	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.yellow = s:yellow$/;"	v
s:gbrowse	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:gbrowse()$/;"	f
s:genFunctions	autoload/plugged/vim-polyglot/syntax/neomuttrc.vim	/^function! s:genFunctions(functions)$/;"	f
s:gen_def	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^fun! s:gen_def(fg, bg)$/;"	f
s:gen_filter_keys	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:gen_filter_keys(line) abort$/;"	f
s:generate_suffix_groups	autoload/plugged/vim-polyglot/syntax/hostconf.vim	/^function s:generate_suffix_groups(list_of_order_of_orders, context, trailing_context)$/;"	f
s:getAuthor	autoload/plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function! s:getAuthor(zonestart, zoneend)$/;"	f
s:getField	autoload/plugged/vim-polyglot/ftplugin/debcontrol.vim	/^function! s:getField(f, lnum)$/;"	f
s:getGruvColor	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^function! s:getGruvColor(group)$/;"	f
s:getHLStack	autoload/plugged/vim-polyglot/indent/haskell.vim	/^function! s:getHLStack(line, col)$/;"	f
s:getIncIndent	autoload/plugged/vim-polyglot/indent/plantuml.vim	/^function! s:getIncIndent() abort$/;"	f
s:getNesting	autoload/plugged/vim-polyglot/indent/haskell.vim	/^function! s:getNesting(hlstack)$/;"	f
s:get_256color	autoload/plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:get_256color(colors) abort$/;"	f
s:get_accented_line	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_accented_line(self, group, contents)$/;"	f
s:get_airline_themes	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:get_airline_themes(a, l, p)$/;"	f
s:get_array	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  def s:get_array(guifg: string, guibg: string, ctermfg: string, ctermbg: string, opts: list<str/;"	f
s:get_array	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  function! s:get_array(guifg, guibg, ctermfg, ctermbg, opts) abort$/;"	f
s:get_base	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:get_base(bufnr, vcs) abort$/;"	f
s:get_base_cmd	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:get_base_cmd(bufnr, vcs, vcs_cmds) abort$/;"	f
s:get_base_indent	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:get_base_indent(lnum, text)$/;"	f
s:get_color	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_color(attr, ...)$/;"	f
s:get_color	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:get_color(attr, ...)$/;"	f
s:get_color_map	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:get_color_map()$/;"	f
s:get_complete_buffer	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:get_complete_buffer()$/;"	f
s:get_counts	autoload/plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! s:get_counts()$/;"	f
s:get_cursorline	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:get_cursorline(topline, lines, scrolloff, width, height) abort$/;"	f
s:get_diagnostics	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:get_diagnostics()$/;"	f
s:get_echorizer	autoload/plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:get_echorizer(str) abort$/;"	f
s:get_fsi_command	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:get_fsi_command()$/;"	f
s:get_func_identifiers	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:get_func_identifiers(line) abort$/;"	f
s:get_git_root	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_git_root()$/;"	f
s:get_height	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! s:get_height(lines, config) abort$/;"	f
s:get_hi_str	autoload/plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:get_hi_str(color, place) abort$/;"	f
s:get_hunks_changes	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_changes() abort$/;"	f
s:get_hunks_coc	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_coc() abort$/;"	f
s:get_hunks_empty	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_empty() abort$/;"	f
s:get_hunks_gitgutter	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_gitgutter() abort$/;"	f
s:get_hunks_signify	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_signify() abort$/;"	f
s:get_identifiers	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:get_identifiers(line) abort$/;"	f
s:get_indentexpr	autoload/plugged/vim-polyglot/indent/vue.vim	/^function! s:get_indentexpr(language)$/;"	f
s:get_last_status	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:get_last_status() abort$/;"	f
s:get_levels	autoload/plugged/vim-signify/autoload/sy/fold.vim	/^function! s:get_levels(lines) abort$/;"	f
s:get_line_trimmed	autoload/plugged/vim-polyglot/indent/reason.vim	/^function! s:get_line_trimmed(lnum)$/;"	f
s:get_line_trimmed	autoload/plugged/vim-polyglot/indent/rust.vim	/^function! s:get_line_trimmed(lnum)$/;"	f
s:get_lines	autoload/plugged/vim-signify/autoload/sy/fold.vim	/^function! s:get_lines() abort$/;"	f
s:get_mode	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:get_mode()$/;"	f
s:get_number	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:get_number(index)$/;"	f
s:get_options	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:get_options(winid) abort$/;"	f
s:get_paragraph_start	autoload/plugged/vim-polyglot/indent/rst.vim	/^function! s:get_paragraph_start()$/;"	f
s:get_path	autoload/plugged/vim-signify/autoload/sy.vim	/^function! s:get_path(bufnr)$/;"	f
s:get_save_pos	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:get_save_pos(...)$/;"	f
s:get_section	autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! s:get_section(winnr, key, ...)$/;"	f
s:get_separator_change	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:get_separator_change(new_group, old_group, end_group, sep_size, alt_sep_size)$/;"	f
s:get_separator_change_with_end	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:get_separator_change_with_end(new_group, old_group, new_end_group, old_end_group, se/;"	f
s:get_seperator	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_seperator(self, prev_group, group, side)$/;"	f
s:get_shiftwidth	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^  func! s:get_shiftwidth(indents) abort$/;"	f
s:get_syn	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  def s:get_syn(group: string, what: string, mode: string): string$/;"	f
s:get_syn	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  function! s:get_syn(group, what, mode) abort$/;"	f
s:get_tag	autoload/plugged/vim-polyglot/after/indent/html.vim	/^func! s:get_tag(tagname)$/;"	f
s:get_tag	autoload/plugged/vim-polyglot/indent/html.vim	/^func! s:get_tag(tagname)$/;"	f
s:get_topline	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:get_topline(topline, lines, forward, height, width) abort$/;"	f
s:get_transaction_extents	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! s:get_transaction_extents(lnum) abort$/;"	f
s:get_transitioned_seperator	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_transitioned_seperator(self, prev_group, group, side)$/;"	f
s:get_vcs_path	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:get_vcs_path(bufnr, vcs) abort$/;"	f
s:get_version	autoload/plugged/fzf/plugin/fzf.vim	/^function s:get_version(bin)$/;"	f
s:get_visual_selection	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:get_visual_selection()$/;"	f
s:get_win_opts	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:get_win_opts(winid) abort$/;"	f
s:get_wordcount	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^  function! s:get_wordcount(visual_mode_active)$/;"	f
s:getline	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:getline()$/;"	f
s:getmapchars	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:getmapchars(function)$/;"	f
s:getpos	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:getpos()$/;"	f
s:git_dir	autoload/plug.vim	/^function! s:git_dir(dir) abort$/;"	f
s:git_local_branch	autoload/plug.vim	/^function! s:git_local_branch(dir) abort$/;"	f
s:git_origin_branch	autoload/plug.vim	/^function! s:git_origin_branch(spec)$/;"	f
s:git_origin_url	autoload/plug.vim	/^function! s:git_origin_url(dir) abort$/;"	f
s:git_revision	autoload/plug.vim	/^function! s:git_revision(dir) abort$/;"	f
s:git_validate	autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
s:git_version_requirement	autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
s:git_versions	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:gitdiffcached	autoload/plugged/vim-polyglot/ftplugin/gitcommit.vim	/^function! s:gitdiffcached(bang,gitdir,...)$/;"	f
s:gl	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:gl(buf, visual)$/;"	f
s:gld	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:gld() range$/;"	f
s:glob	autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
s:glob_dir	autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
s:global_variable_list	autoload/plugged/vim-polyglot/autoload/rust/debugging.vim	/^let s:global_variable_list = [$/;"	v
s:globs	autoload/plugged/vim-polyglot/autoload/polyglot/sleuth.vim	/^let s:globs = {$/;"	v
s:globsubs	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:globsubs = {$/;"	v
s:golden	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:golden  = [143, '#afaf5f']$/;"	v
s:golden	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:golden   = [143, '#BBE67E']$/;"	v
s:got_fmt_error	autoload/plugged/vim-polyglot/autoload/rustfmt.vim	/^let s:got_fmt_error = 0$/;"	v
s:goto_col	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! s:goto_col(pos, min_spaces) abort$/;"	f
s:goto_definition	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:goto_definition() abort$/;"	f
s:gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:gray    = [245, '#8a8a8a']$/;"	v
s:gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:gray     = [245, '#3f4b59']$/;"	v
s:gray	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:gray = s:gb.gray_244$/;"	v
s:gray	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:gray = s:gb.gray_245$/;"	v
s:gray	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:gray[1]   = 8$/;"	v
s:green	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:green = s:colors.green$/;"	v
s:green	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:green        = [ '#5f875f',  65 ]$/;"	v
s:green	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:green   = {'hex': '#859900', 'term': 106}  " 133, 153,   0 #$/;"	v
s:green	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:green = s:getGruvColor('GruvboxGreen')$/;"	v
s:green	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:green  = s:gb.bright_green$/;"	v
s:green	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:green  = s:gb.faded_green$/;"	v
s:green	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:green[1]  = 10$/;"	v
s:grey_colour	autoload/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:grey_colour(n)$/;"	f
s:grey_level	autoload/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:grey_level(n)$/;"	f
s:grey_number	autoload/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:grey_number(x)$/;"	f
s:group	autoload/plugged/vim-polyglot/syntax/ruby.vim	/^  let s:group = 'ruby' . s:names[s:delimiter] . 'Escape'$/;"	v
s:group_by	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
s:group_not_done	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  def s:group_not_done(list: list<string>, name: string): bool$/;"	f
s:group_not_done	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  function! s:group_not_done(list, name) abort$/;"	f
s:gsub	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
s:guess	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^  func! s:guess(lines) abort$/;"	f
s:gui	autoload/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:gui = has('gui_running') || has('nvim')$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui00 = "#1c1c1c" " ANSI Black$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui00 = "#090300"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui00 = "#2D3234"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui00 = "#031A16"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui00 = "#1C2023"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui00 = "#20201d"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui00 = "#1b1918"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui00 = "#1b181b"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui00 = "#161b1d"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui00 = "#131513"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui00 = "#28211c"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui00 = "#0c0d0e"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui00 = "#000000"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui00 = "#151515"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui00 = "#151515"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui00 = "#232c31"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui00 = "#111111"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui00 = "#181818"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui00 = "#2d2d2d"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui00 = "#16130F"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui00 = "#2C3E50"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui00 = "#1d1f21"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui00 = "#101010"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui00 = "#001100"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui00 = "#1d2021"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui00 = "#0b1c2c"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui00 = "#322931"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui00 = "#000000"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui00 = "#231f20"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui00 = "#201602"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui00 = "#3B3228"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui00 = "#272822"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui00 = "#2e3440"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui00 = "#2b303b"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui00 = "#1b2b34"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui00 = "#2f1e2e"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui00 = "#000000"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui00 = "#2b2b2b"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui00 = "#151718"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui00 = "#000000"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui00 = "#002b36"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui00 = "#1f2022"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui00 = "#151515"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui00 = "#1d1f21"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui00 = "#1e1e1e"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui00 = "#151515"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui00 = "#151515"$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui00 = '#2e3440'$/;"	v
s:gui00	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui00 = "#303030" " ANSI Black$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui01 = "#af8787" " ANSI Red$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui01 = "#3a3432"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui01 = "#33393B"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui01 = "#0B342D"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui01 = "#393F45"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui01 = "#292824"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui01 = "#2c2421"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui01 = "#292329"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui01 = "#1f292e"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui01 = "#242924"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui01 = "#36312e"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui01 = "#2e2f30"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui01 = "#303030"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui01 = "#202020"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui01 = "#202020"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui01 = "#1c3657"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui01 = "#333333"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui01 = "#282828"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui01 = "#393939"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui01 = "#2C2620"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui01 = "#34495E"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui01 = "#282a2e"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui01 = "#252525"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui01 = "#003300"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui01 = "#3c3836"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui01 = "#223b54"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui01 = "#433b42"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui01 = "#404040"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui01 = "#1c3f95"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui01 = "#302e00"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui01 = "#534636"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui01 = "#383830"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui01 = "#3b4252"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui01 = "#343d46"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui01 = "#343d46"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui01 = "#41323f"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui01 = "#202020"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui01 = "#272935"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui01 = "#282a2b"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui01 = "#040404"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui01 = "#073642"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui01 = "#282828"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui01 = "#202020"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui01 = "#282a2e"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui01 = "#323537"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui01 = "#262626"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui01 = "#262626"$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui01 = '#3b4252'$/;"	v
s:gui01	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui01 = "#af5f5f" " ANSI Red$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui02 = "#dfaf87" " ANSI Green$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui02 = "#4a4543"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui02 = "#4B5356"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui02 = "#184E45"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui02 = "#565E65"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui02 = "#6e6b5e"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui02 = "#68615e"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui02 = "#695d69"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui02 = "#516d7b"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui02 = "#5e6e5e"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui02 = "#5e5d5c"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui02 = "#515253"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui02 = "#505050"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui02 = "#303030"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui02 = "#303030"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui02 = "#2a343a"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui02 = "#555555"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui02 = "#383838"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui02 = "#515151"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui02 = "#433B32"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui02 = "#7F8C8D"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui02 = "#373b41"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui02 = "#464646"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui02 = "#005500"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui02 = "#504945"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui02 = "#405c79"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui02 = "#5c545b"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui02 = "#606060"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui02 = "#5a5758"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui02 = "#5f5b17"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui02 = "#645240"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui02 = "#49483e"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui02 = "#434c5e"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui02 = "#4f5b66"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui02 = "#4f5b66"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui02 = "#4f424c"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui02 = "#303030"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui02 = "#3a4055"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui02 = "#3B758C"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui02 = "#102015"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui02 = "#586e75"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui02 = "#444155"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui02 = "#303030"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui02 = "#373b41"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui02 = "#464b50"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui02 = "#4f5b66"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui02 = "#4f5b66"$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui02 = '#434c5e'$/;"	v
s:gui02	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui02 = "#d75f5f" " ANSI Green$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui03 = "#878787" " ANSI Yellow$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui03 = "#5c5855"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui03 = "#566164"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui03 = "#2B685E"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui03 = "#747C84"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui03 = "#7d7a68"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui03 = "#766e6b"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui03 = "#776977"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui03 = "#5a7b8c"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui03 = "#687d68"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui03 = "#666666"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui03 = "#737475"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui03 = "#b0b0b0"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui03 = "#505050"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui03 = "#505050"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui03 = "#3f4944"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui03 = "#777777"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui03 = "#585858"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui03 = "#747369"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui03 = "#5A5047"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui03 = "#95A5A6"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui03 = "#969896"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui03 = "#525252"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui03 = "#007700"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui03 = "#665c54"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui03 = "#627e99"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui03 = "#797379"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui03 = "#808080"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui03 = "#737171"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui03 = "#6c6823"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui03 = "#7e705a"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui03 = "#75715e"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui03 = "#4c566a"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui03 = "#65737e"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui03 = "#65737e"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui03 = "#776e71"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui03 = "#505050"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui03 = "#5a647e"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui03 = "#41535B"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui03 = "#343434"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui03 = "#657b83"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui03 = "#585858"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui03 = "#505050"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui03 = "#969896"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui03 = "#5f5a60"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui03 = "#65737e"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui03 = "#65737e"$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui03 = '#4c566a'$/;"	v
s:gui03	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui03 = "#afd7d7" " ANSI Yellow$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui04 = "#af5f5f" " ANSI Blue$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui04 = "#807d7c"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui04 = "#919494"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui04 = "#5F9C92"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui04 = "#ADB3BA"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui04 = "#999580"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui04 = "#9c9491"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui04 = "#9e8f9e"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui04 = "#7195a8"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui04 = "#809980"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui04 = "#797977"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui04 = "#959697"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui04 = "#d0d0d0"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui04 = "#b0b0b0"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui04 = "#B0B0B0"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui04 = "#84898c"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui04 = "#999999"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui04 = "#b8b8b8"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui04 = "#a09f93"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui04 = "#8A8075"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui04 = "#BDC3C7"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui04 = "#b4b7b4"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui04 = "#ababab"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui04 = "#009900"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui04 = "#bdae93"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui04 = "#aabcce"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui04 = "#989498"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui04 = "#c0c0c0"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui04 = "#959ca1"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui04 = "#86813b"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui04 = "#b8afad"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui04 = "#a59f85"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui04 = "#d8dee9"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui04 = "#a7adba"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui04 = "#a7adba"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui04 = "#8d8687"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui04 = "#b0b0b0"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui04 = "#d4cfc9"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui04 = "#43a5d5"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui04 = "#555555"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui04 = "#839496"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui04 = "#b8b8b8"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui04 = "#B0B0B0"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui04 = "#b4b7b4"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui04 = "#838184"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui04 = "#a7adba"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui04 = "#a7adba"$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui04 = '#d8dee9'$/;"	v
s:gui04	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui04 = "#af8787" " ANSI Blue$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui05 = "#875f5f" " ANSI Magenta$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui05 = "#a5a2a2"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui05 = "#C5C6C5"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui05 = "#81B5AC"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui05 = "#C7CCD1"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui05 = "#a6a28c"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui05 = "#a8a19f"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui05 = "#ab9bab"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui05 = "#7ea2b4"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui05 = "#8ca68c"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui05 = "#8a8986"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui05 = "#b7b8b9"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui05 = "#e0e0e0"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui05 = "#d0d0d0"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui05 = "#D0D0D0"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui05 = "#9ea7a6"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui05 = "#bbbbbb"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui05 = "#d8d8d8"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui05 = "#d3d0c8"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui05 = "#A39A90"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui05 = "#e0e0e0"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui05 = "#c5c8c6"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui05 = "#b9b9b9"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui05 = "#00bb00"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui05 = "#d5c4a1"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui05 = "#cbd6e2"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui05 = "#b9b5b8"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui05 = "#d0d0d0"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui05 = "#d9d8d8"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui05 = "#948e48"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui05 = "#d0c8c6"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui05 = "#f8f8f2"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui05 = "#e5e9f0"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui05 = "#c0c5ce"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui05 = "#c0c5ce"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui05 = "#a39e9b"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui05 = "#d0d0d0"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui05 = "#e6e1dc"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui05 = "#d6d6d6"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui05 = "#ababab"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui05 = "#93a1a1"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui05 = "#a3a3a3"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui05 = "#D0D0D0"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui05 = "#c5c8c6"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui05 = "#a7a7a7"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui05 = "#c0c5ce"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui05 = "#c0c5ce"$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui05 = '#e5e9f0'$/;"	v
s:gui05	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui05 = "#dfaf87" " ANSI Magenta$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui06 = "#87afaf" " ANSI Cyan$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui06 = "#d6d5d4"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui06 = "#D3D4D5"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui06 = "#A7CEC8"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui06 = "#DFE2E5"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui06 = "#e8e4cf"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui06 = "#e6e2e0"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui06 = "#d8cad8"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui06 = "#c1e4f6"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui06 = "#cfe8cf"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui06 = "#9d9b97"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui06 = "#dadbdc"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui06 = "#f5f5f5"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui06 = "#e0e0e0"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui06 = "#E0E0E0"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui06 = "#a7cfa3"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui06 = "#dddddd"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui06 = "#e8e8e8"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui06 = "#e8e6df"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui06 = "#BEB6AE"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui06 = "#f5f5f5"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui06 = "#e0e0e0"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui06 = "#e3e3e3"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui06 = "#00dd00"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui06 = "#ebdbb2"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui06 = "#e5ebf1"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui06 = "#d5d3d5"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui06 = "#e0e0e0"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui06 = "#e7e7e8"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui06 = "#ccc37a"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui06 = "#e9e1dd"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui06 = "#f5f4f1"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui06 = "#eceff4"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui06 = "#dfe1e8"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui06 = "#cdd3de"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui06 = "#b9b6b0"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui06 = "#e0e0e0"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui06 = "#f4f1ed"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui06 = "#eeeeee"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui06 = "#e0e0e0"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui06 = "#eee8d5"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui06 = "#e8e8e8"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui06 = "#E0E0E0"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui06 = "#e0e0e0"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui06 = "#c3c3c3"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui06 = "#cdd3de"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui06 = "#cdd3de"$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui06 = '#eceff4'$/;"	v
s:gui06	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui06 = "#ffafaf" " ANSI Cyan$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui07 = "#ffdf87" " ANSI White$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui07 = "#f7f7f7"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui07 = "#EEEEEC"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui07 = "#D2E7E4"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui07 = "#F3F4F5"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui07 = "#fefbec"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui07 = "#f1efee"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui07 = "#f7f3f7"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui07 = "#ebf8ff"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui07 = "#f0fff0"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui07 = "#baae9e"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui07 = "#fcfdfe"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui07 = "#f5f5f5"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui07 = "#F5F5F5"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui07 = "#b5d8f6"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui07 = "#f8f8f8"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui07 = "#f2f0ec"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui07 = "#DBD6D1"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui07 = "#ECF0F1"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui07 = "#f7f7f7"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui07 = "#00ff00"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui07 = "#fbf1c7"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui07 = "#f7f9fb"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui07 = "#faf0a5"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui07 = "#f5eeeb"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui07 = "#f9f8f5"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui07 = "#8fbcbb"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui07 = "#eff1f5"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui07 = "#d8dee9"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui07 = "#e7e9db"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui07 = "#f9f7f3"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui07 = "#f9f9f9"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui07 = "#fdf6e3"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui07 = "#f8f8f8"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui07 = "#FFFFFF"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui07 = "#d8dee9"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui07 = "#d8dee9"$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui07 = '#8fbcbb'$/;"	v
s:gui07	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui07 = "#f7e4c0" " ANSI White$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui08 = "#87875f"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui08 = "#db2d20"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui08 = "#FFA500"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui08 = "#3E9688"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui08 = "#C7AE95"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui08 = "#d73737"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui08 = "#f22c40"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui08 = "#ca402b"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui08 = "#d22d72"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui08 = "#e6193c"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui08 = "#cf6a4c"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui08 = "#e31a1c"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui08 = "#fb0120"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui08 = "#fb9fb1"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui08 = "#AC4142"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui08 = "#2a5491"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui08 = "#ff4136"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui08 = "#ab4642"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui08 = "#f2777a"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui08 = "#826D57"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui08 = "#E74C3C"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui08 = "#CC342B"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui08 = "#7c7c7c"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui08 = "#007700"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui08 = "#fb4934"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui08 = "#bf8b56"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui08 = "#dd464c"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui08 = "#ff0000"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui08 = "#ee2e24"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui08 = "#c35359"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui08 = "#cb6077"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui08 = "#f92672"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui08 = "#88c0d0"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui08 = "#bf616a"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui08 = "#ec5f67"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui08 = "#ef6155"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui08 = "#eb008a"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui08 = "#da4939"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui08 = "#Cd3f45"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui08 = "#e92f2f"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui08 = "#dc322f"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui08 = "#f2241f"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui08 = "#FF0086"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui08 = "#cc6666"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui08 = "#cf6a4c"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui08 = "#870000"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui08 = "#870000"$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui08 = '#88c0d0'$/;"	v
s:gui08	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui08 = "#686868"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui09 = "#af1600"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui09 = "#e8bbd0"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui09 = "#FFFF60"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui09 = "#3E7996"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui09 = "#C7C795"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui09 = "#b65611"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui09 = "#df5320"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui09 = "#a65926"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui09 = "#935c25"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui09 = "#87711d"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui09 = "#cf7d34"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui09 = "#e6550d"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui09 = "#fc6d24"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui09 = "#eda987"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui09 = "#D28445"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui09 = "#43820d"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui09 = "#ff851b"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui09 = "#dc9656"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui09 = "#f99157"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui09 = "#828257"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui09 = "#E67E22"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui09 = "#F96A38"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui09 = "#999999"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui09 = "#009900"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui09 = "#fe8019"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui09 = "#bfbf56"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui09 = "#fd8b19"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui09 = "#ff9900"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui09 = "#f386a1"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui09 = "#b36144"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui09 = "#d28b71"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui09 = "#fd971f"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui09 = "#81a1c1"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui09 = "#d08770"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui09 = "#f99157"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui09 = "#f99b15"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui09 = "#f29333"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui09 = "#cc7833"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui09 = "#db7b55"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui09 = "#e09448"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui09 = "#cb4b16"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui09 = "#ffa500"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui09 = "#FD8900"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui09 = "#de935f"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui09 = "#cda869"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui09 = "#f99157"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui09 = "#f99157"$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui09 = '#81a1c1'$/;"	v
s:gui09	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui09 = "#af5f5f"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui0A = "#af875f"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui0A = "#fded02"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui0A = "#91EE6F"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui0A = "#3E4C96"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui0A = "#AEC795"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui0A = "#cfb017"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui0A = "#d5911a"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui0A = "#bb8a35"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui0A = "#8a8a0f"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui0A = "#c3c322"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui0A = "#f9ee98"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui0A = "#dca060"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui0A = "#fda331"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui0A = "#ddb26f"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui0A = "#F4BF75"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui0A = "#a03b1e"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui0A = "#ffdc00"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui0A = "#f7ca88"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui0A = "#ffcc66"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui0A = "#6D8257"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui0A = "#F1C40F"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui0A = "#FBA922"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui0A = "#a0a0a0"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui0A = "#007700"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui0A = "#fabd2f"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui0A = "#8bbf56"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui0A = "#fdcc59"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui0A = "#ff0099"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui0A = "#ffd204"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui0A = "#a88339"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui0A = "#f4bc87"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui0A = "#f4bf75"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui0A = "#5e81ac"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui0A = "#ebcb8b"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui0A = "#fac863"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui0A = "#fec418"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui0A = "#f8ca12"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui0A = "#ffc66d"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui0A = "#e6cd69"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui0A = "#dddd13"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui0A = "#b58900"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui0A = "#b1951d"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui0A = "#ABA800"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui0A = "#f0c674"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui0A = "#f9ee98"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui0A = "#fac863"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui0A = "#fac863"$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui0A = '#5e81ac'$/;"	v
s:gui0A	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui0A = "#d75f5f"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui0B = "#878787"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui0B = "#01a252"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui0B = "#6FEE91"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui0B = "#883E96"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui0B = "#95C7AE"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui0B = "#60ac39"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui0B = "#5ab738"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui0B = "#379a37"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui0B = "#568c3b"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui0B = "#29a329"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui0B = "#54be0d"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui0B = "#31a354"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui0B = "#a1c659"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui0B = "#acc267"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui0B = "#90A959"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui0B = "#237986"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui0B = "#2ecc40"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui0B = "#a1b56c"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui0B = "#99cc99"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui0B = "#57826D"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui0B = "#2ECC71"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui0B = "#198844"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui0B = "#8e8e8e"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui0B = "#00bb00"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui0B = "#b8bb26"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui0B = "#56bf8b"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui0B = "#8fc13e"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui0B = "#33ff00"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui0B = "#00853e"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui0B = "#18974e"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui0B = "#beb55b"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui0B = "#a6e22e"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui0B = "#bf616a"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui0B = "#a3be8c"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui0B = "#99c794"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui0B = "#48b685"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui0B = "#37b349"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui0B = "#a5c261"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui0B = "#9fca56"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui0B = "#0ed839"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui0B = "#859900"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui0B = "#67b11d"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui0B = "#00C918"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui0B = "#b5bd68"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui0B = "#8f9d6a"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui0B = "#437019"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui0B = "#437019"$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui0B = '#bf616a'$/;"	v
s:gui0B	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui0B = "#afd7d7"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui0C = "#af5f00"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui0C = "#b5e4f4"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui0C = "#6F91B4"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui0C = "#963E4C"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui0C = "#95AEC7"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui0C = "#1fad83"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui0C = "#00ad9c"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui0C = "#159393"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui0C = "#2d8f6f"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui0C = "#1999b3"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui0C = "#afc4db"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui0C = "#80b1d3"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui0C = "#76c7b7"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui0C = "#12cfc0"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui0C = "#75B5AA"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui0C = "#b02f30"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui0C = "#7fdbff"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui0C = "#86c1b9"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui0C = "#66cccc"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui0C = "#576D82"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui0C = "#1ABC9C"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui0C = "#3971ED"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui0C = "#868686"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui0C = "#005500"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui0C = "#8ec07c"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui0C = "#568bbf"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui0C = "#149b93"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui0C = "#00ffff"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui0C = "#85cebc"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui0C = "#75a738"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui0C = "#7bbda4"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui0C = "#a1efe4"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui0C = "#d08770"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui0C = "#96b5b4"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui0C = "#5fb3b3"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui0C = "#5bc4bf"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui0C = "#00aabb"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui0C = "#519f50"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui0C = "#55dbbe"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui0C = "#23edda"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui0C = "#2aa198"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui0C = "#2d9574"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui0C = "#1faaaa"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui0C = "#8abeb7"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui0C = "#afc4db"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui0C = "#5fb3b3"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui0C = "#5fb3b3"$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui0C = '#d08770'$/;"	v
s:gui0C	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui0C = "#af8787"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui0D = "#5f5f87"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui0D = "#01a0e4"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui0D = "#916FB4"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui0D = "#96883E"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui0D = "#AE95C7"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui0D = "#6684e1"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui0D = "#407ee7"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui0D = "#516aec"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui0D = "#257fad"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui0D = "#3d62f5"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui0D = "#5ea6ea"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui0D = "#3182bd"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui0D = "#6fb3d2"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui0D = "#6fc2ef"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui0D = "#6A9FB5"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui0D = "#484d79"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui0D = "#0074d9"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui0D = "#7cafc2"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui0D = "#6699cc"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui0D = "#6D5782"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui0D = "#3498DB"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui0D = "#3971ED"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui0D = "#686868"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui0D = "#009900"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui0D = "#83a598"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui0D = "#8b56bf"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui0D = "#1290bf"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui0D = "#0066ff"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui0D = "#009ddc"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui0D = "#477ca1"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui0D = "#8ab3b5"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui0D = "#66d9ef"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui0D = "#ebcb8b"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui0D = "#8fa1b3"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui0D = "#6699cc"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui0D = "#06b6ef"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui0D = "#0e5a94"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui0D = "#6d9cbe"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui0D = "#55b5db"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui0D = "#3b48e3"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui0D = "#268bd2"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui0D = "#4f97d7"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui0D = "#3777E6"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui0D = "#81a2be"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui0D = "#7587a6"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui0D = "#0d61ac"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui0D = "#0d61ac"$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui0D = '#ebcb8b'$/;"	v
s:gui0D	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui0D = "#dfaf87"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui0E = "#afd7d7"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui0E = "#a16a94"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui0E = "#EE6F91"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui0E = "#4C963E"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui0E = "#C795AE"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui0E = "#b854d4"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui0E = "#6666ea"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui0E = "#7b59c0"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui0E = "#5d5db1"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui0E = "#ad2bee"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui0E = "#9b859d"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui0E = "#756bb1"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui0E = "#d381c3"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui0E = "#e1a3ee"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui0E = "#AA759F"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui0E = "#c59820"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui0E = "#b10dc9"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui0E = "#ba8baf"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui0E = "#cc99cc"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui0E = "#82576D"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui0E = "#9B59B6"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui0E = "#A36AC7"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui0E = "#747474"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui0E = "#00bb00"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui0E = "#d3869b"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui0E = "#bf568b"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui0E = "#c85e7c"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui0E = "#cc00ff"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui0E = "#98005d"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui0E = "#8868b3"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui0E = "#a89bb9"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui0E = "#ae81ff"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui0E = "#a3be8c"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui0E = "#b48ead"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui0E = "#c594c5"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui0E = "#815ba4"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui0E = "#b31e8d"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui0E = "#b6b3eb"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui0E = "#a074c4"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui0E = "#f996e2"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui0E = "#6c71c4"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui0E = "#a31db1"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui0E = "#AD00A1"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui0E = "#b294bb"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui0E = "#9b859d"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui0E = "#c594c5"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui0E = "#c594c5"$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui0E = '#a3be8c'$/;"	v
s:gui0E	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui0E = "#ffb2af"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui0F = "#dfdfaf"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui0F = "#cdab53"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui0F = "#EE6F6F"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui0F = "#3E965B"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui0F = "#C79595"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui0F = "#d43552"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui0F = "#c33ff3"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui0F = "#cc33cc"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui0F = "#b72dd2"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui0F = "#e619c3"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui0F = "#937121"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui0F = "#b15928"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui0F = "#be643c"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui0F = "#deaf8f"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui0F = "#8F5536"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui0F = "#c98344"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui0F = "#85144b"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui0F = "#a16946"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui0F = "#d27b53"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui0F = "#825757"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui0F = "#be643c"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui0F = "#3971ED"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui0F = "#5e5e5e"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui0F = "#005500"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui0F = "#d65d0e"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui0F = "#bf5656"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui0F = "#b33508"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui0F = "#3300ff"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui0F = "#b06110"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui0F = "#b3588e"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui0F = "#bb9584"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui0F = "#cc6633"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui0F = "#b48ead"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui0F = "#ab7967"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui0F = "#ab7967"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui0F = "#e96ba8"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui0F = "#7a2d00"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui0F = "#bc9458"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui0F = "#8a553f"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui0F = "#69542d"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui0F = "#d33682"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui0F = "#b03060"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui0F = "#cc6633"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui0F = "#a3685a"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui0F = "#9b703f"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui0F = "#ab7967"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui0F = "#ab7967"$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui0F = '#b48ead'$/;"	v
s:gui0F	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui0F = "#ffffff"$/;"	v
s:gui2cui	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  def s:gui2cui(rgb: string, fallback: string): string$/;"	f
s:gui2cui	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  function! s:gui2cui(rgb, fallback) abort$/;"	f
s:guiAlmostBlack	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:guiAlmostBlack = "#2a2a2a"$/;"	v
s:guiAlmostBlack	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:guiAlmostBlack = "#2a2a2a"$/;"	v
s:guiBgPurple	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiBgPurple    = "#8076aa" " background purple$/;"	v
s:guiDarkGray	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:guiDarkGray = "#545454"$/;"	v
s:guiDarkGray	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiDarkGray    = "#49483e" " dark gray$/;"	v
s:guiDarkGray	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:guiDarkGray = "#545454"$/;"	v
s:guiDarkSeafoam	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiDarkSeafoam = "#80ffbd" "dark-seafoam$/;"	v
s:guiDustyLilac	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiDustyLilac  = "#efe6ff" "dusty-lilac$/;"	v
s:guiFuschia	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiFuschia     = "#f92672" "fuschia$/;"	v
s:guiGold	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiGold        = "#e6c000" "gold$/;"	v
s:guiGoldenrod	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiGoldenrod   = "#fffea0" "goldenrod$/;"	v
s:guiGray	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:guiGray = "#666666"$/;"	v
s:guiGray	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiGray        = "#49483e" " gray$/;"	v
s:guiGray	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiGray = "#8076aa"$/;"	v
s:guiGray	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:guiGray = "#666666"$/;"	v
s:guiGray	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:guiGray = "#666666"$/;"	v
s:guiLavender	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiLavender    = "#ae81ff" "lavender$/;"	v
s:guiLilac	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiLilac       = "#c5a3ff" "lilac$/;"	v
s:guiPeach	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiPeach       = "#ff857f" "peach$/;"	v
s:guiRose	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiRose        = "#ffb8d1" "rose$/;"	v
s:guiSeafoam	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiSeafoam     = "#c2ffdf" "seafoam$/;"	v
s:guiShadow	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiShadow      = "#3b3a32" " shadow$/;"	v
s:guiSilver	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiSilver      = "#f8f8f0" "silver$/;"	v
s:guiViolet	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiViolet      = "#63588d" " violet$/;"	v
s:guiWhite	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:guiWhite = "#ffffff"$/;"	v
s:guiWhite	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiWhite = "#f8f8f0"$/;"	v
s:guiWhite	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:guiWhite = "#ffffff"$/;"	v
s:guiWhite	autoload/plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:guiWhite = "#ffffff"$/;"	v
s:guiWhite	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:guiWhite = "#ffffff"$/;"	v
s:gui_alert	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_alert       = '#870000'$/;"	v
s:gui_alert	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_alert       = '#AF0000'$/;"	v
s:gui_black	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_black = "#282C34"$/;"	v
s:gui_blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_blue = '#87afd7'$/;"	v
s:gui_blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_blue = '#6a9fb5'$/;"	v
s:gui_blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_blue = '#87afd7'$/;"	v
s:gui_blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_blue = "#81AAFF"$/;"	v
s:gui_blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_blue = '#87afd7'$/;"	v
s:gui_blue_offset	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_blue_offset = "#6788cc"$/;"	v
s:gui_cyan	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_cyan = "#83DCC8"$/;"	v
s:gui_cyan_offset	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_cyan_offset = "#68b0a0"$/;"	v
s:gui_dark_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_dark_gray = '#303030'$/;"	v
s:gui_dark_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_dark_gray = '#202020'$/;"	v
s:gui_dark_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_dark_gray = '#303030'$/;"	v
s:gui_dark_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_dark_gray = '#303030'$/;"	v
s:gui_deep_green	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_deep_green = '#5faf00'$/;"	v
s:gui_errorbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_errorbg     = '#D70000'$/;"	v
s:gui_errorfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_errorfg     = '#FFFFFF'$/;"	v
s:gui_green	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_green = '#005f87'$/;"	v
s:gui_green	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_green = '#99cc99'$/;"	v
s:gui_green	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_green = '#afd787'$/;"	v
s:gui_green	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_green = "#AFD75F"$/;"	v
s:gui_green	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_green = '#afd787'$/;"	v
s:gui_green_offset	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_green_offset = "#8cac4c"$/;"	v
s:gui_inactivebg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_inactivebg   = s:gui02$/;"	v
s:gui_inactivebg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_inactivebg   = '#1C1C1C'$/;"	v
s:gui_inactivebg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_inactivebg   = '#1C1C1C'$/;"	v
s:gui_inactivefg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_inactivefg   = s:gui04$/;"	v
s:gui_inactivefg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_inactivefg   = '#4E4E4E'$/;"	v
s:gui_inactivefg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_inactivefg   = '#4E4E4E'$/;"	v
s:gui_insertbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_insertbg    = s:gui0B$/;"	v
s:gui_insertbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_insertbg    = '#87AF5F'$/;"	v
s:gui_insertbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_insertbg    = '#5FAF00'$/;"	v
s:gui_insertfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_insertfg    = s:gui07$/;"	v
s:gui_insertfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_insertfg    = '#FFFFFF'$/;"	v
s:gui_insertfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_insertfg    = '#FFFFFF'$/;"	v
s:gui_light_blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_light_blue = '#00afff'$/;"	v
s:gui_light_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_light_gray = '#b2b2b2'$/;"	v
s:gui_light_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_light_gray = '#505050'$/;"	v
s:gui_light_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_light_gray = '#b2b2b2'$/;"	v
s:gui_light_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_light_gray = '#b2b2b2'$/;"	v
s:gui_lightlight_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_lightlight_gray = '#8A8A8A'$/;"	v
s:gui_med_gray_hi	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_med_gray_hi = '#444444'$/;"	v
s:gui_med_gray_hi	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_med_gray_hi = '#303030'$/;"	v
s:gui_med_gray_hi	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_med_gray_hi = '#444444'$/;"	v
s:gui_med_gray_hi	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_med_gray_hi = '#444444'$/;"	v
s:gui_med_gray_lo	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_med_gray_lo = '#3a3a3a'$/;"	v
s:gui_med_gray_lo	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_med_gray_lo = '#3a3a3a'$/;"	v
s:gui_med_gray_lo	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_med_gray_lo = '#3a3a3a'$/;"	v
s:gui_med_gray_lo	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_med_gray_lo = '#3a3a3a'$/;"	v
s:gui_normalbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_normalbg    = s:gui0D$/;"	v
s:gui_normalbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_normalbg    = '#5F87FF'$/;"	v
s:gui_normalbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_normalbg    = '#005FFF'$/;"	v
s:gui_normalfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_normalfg    = s:gui07$/;"	v
s:gui_normalfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_normalfg    = '#FFFFFF'$/;"	v
s:gui_normalfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_normalfg    = '#FFFFFF'$/;"	v
s:gui_orange	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_orange = '#ffaf87'$/;"	v
s:gui_orange	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_orange = '#d28445'$/;"	v
s:gui_orange	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_orange = '#d7af5f'$/;"	v
s:gui_orange	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_orange = '#d7af5f'$/;"	v
s:gui_pink	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_pink = '#d7afd7'$/;"	v
s:gui_pink	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_pink = '#d7afd7'$/;"	v
s:gui_pink	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_pink = '#d7afd7'$/;"	v
s:gui_pink	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_pink = '#d7afd7'$/;"	v
s:gui_purple	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_purple = '#afafd7'$/;"	v
s:gui_purple	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_purple = '#aa759f'$/;"	v
s:gui_purple	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_purple = '#afafd7'$/;"	v
s:gui_purple	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_purple = "#C792EA"$/;"	v
s:gui_purple	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_purple = '#afafd7'$/;"	v
s:gui_purple_offset	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_purple_offset = "#9f74bb"$/;"	v
s:gui_red	autoload/plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_red = '#d78787'$/;"	v
s:gui_red	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_red = '#ac4142'$/;"	v
s:gui_red	autoload/plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_red = '#d78787'$/;"	v
s:gui_red	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_red = '#d78787'$/;"	v
s:gui_replacebg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_replacebg   = s:gui08$/;"	v
s:gui_replacebg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_replacebg   = '#870000'$/;"	v
s:gui_replacebg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_replacebg   = '#D70000'$/;"	v
s:gui_replacefg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_replacefg   = s:gui07$/;"	v
s:gui_replacefg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_replacefg   = '#FFFFFF'$/;"	v
s:gui_replacefg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_replacefg   = '#FFFFFF'$/;"	v
s:gui_sky_blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_sky_blue = '#87afff'$/;"	v
s:gui_termbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_termbg      = s:gui02$/;"	v
s:gui_termbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_termbg      = '#5F5F5F'$/;"	v
s:gui_termbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_termbg      = '#3A3A3A'$/;"	v
s:gui_termbg2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_termbg2     = s:gui00$/;"	v
s:gui_termbg2	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_termbg2     = '#1C1C1C'$/;"	v
s:gui_termbg2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_termbg2     = '#1C1C1C'$/;"	v
s:gui_termfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_termfg      = s:gui06$/;"	v
s:gui_termfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_termfg      = '#AFAF87'$/;"	v
s:gui_termfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_termfg      = '#AFAF87'$/;"	v
s:gui_termfg2	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_termfg2     = s:gui06$/;"	v
s:gui_termfg2	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_termfg2     = '#F5F5F5'$/;"	v
s:gui_termfg2	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_termfg2     = '#00AFFF'$/;"	v
s:gui_visualbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_visualbg    = s:gui09$/;"	v
s:gui_visualbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_visualbg    = '#ff8c00'$/;"	v
s:gui_visualbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_visualbg    = '#D75F00'$/;"	v
s:gui_visualfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_visualfg    = s:gui07$/;"	v
s:gui_visualfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_visualfg    = '#FFFFFF'$/;"	v
s:gui_visualfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_visualfg    = '#FFFFFF'$/;"	v
s:gui_warningbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_warningbg   = '#D75F00'$/;"	v
s:gui_warningfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_warningfg   = '#FFFFFF'$/;"	v
s:gui_white	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_white = "#FFFFFF"$/;"	v
s:gui_yellow	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_yellow = "#FFD787"$/;"	v
s:gui_yellow_offset	autoload/plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_yellow_offset = "#ccac6c"$/;"	v
s:guibg	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:guibg = '#080808'$/;"	v
s:guibg	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:guibg = '#080808'$/;"	v
s:guibg2	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:guibg2 = '#1c1c1c'$/;"	v
s:guisep	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:guisep = '#303030'$/;"	v
s:gutter_fg_grey	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:gutter_fg_grey = s:colors.gutter_fg_grey$/;"	v
s:gv	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:gv(bang, visual, line1, line2, args) abort$/;"	f
s:gvcomplete	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:gvcomplete(a, l, p) abort$/;"	f
s:h	autoload/plugged/palenight.vim/colors/palenight.vim	/^function! s:h(group, style)$/;"	f
s:handleLeftClick	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick() abort$/;"	f
s:handleMiddleMouse	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse() abort$/;"	f
s:handle_diff	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:handle_diff(options, exitval) abort$/;"	f
s:handle_with	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:handle_with(start_lnum, start_col, context)$/;"	f
s:has	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
s:has	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:has(dir, identifier)$/;"	f
s:has_any	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:has_any(dict, keys)$/;"	f
s:has_common_items	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
s:has_index	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
s:has_init_indent	autoload/plugged/vim-polyglot/indent/svelte.vim	/^let s:has_init_indent = svelte#GetConfig('has_init_indent', 1)$/;"	v
s:has_service_field	autoload/plugged/vim-polyglot/syntax/pamconf.vim	/^let s:has_service_field = exists("b:pamconf_has_service_field")$/;"	v
s:has_strcharpart	autoload/plugged/vim-airline/autoload/airline/util.vim	/^let s:has_strcharpart = exists('*strcharpart')$/;"	v
s:has_strchars	autoload/plugged/vim-airline/autoload/airline/util.vim	/^let s:has_strchars = exists('*strchars')$/;"	v
s:has_vimproc	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:has_vimproc() abort$/;"	f
s:has_webapi	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! s:has_webapi()$/;"	f
s:hash	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:hash(str) abort$/;"	f
s:hash_colors	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:hash_match	autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
s:head_cache	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:head_cache = {}$/;"	v
s:head_format	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:head_format = get(g:, 'airline#extensions#branch#format', 0)$/;"	v
s:headersRegexp	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^let s:headersRegexp = '\\v^(#|.+\\n(\\=+|-+)$)'$/;"	v
s:helptag_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:helptag_sink(line)$/;"	f
s:hex_regex	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:hex_regex = '0x\\x\\%(_\\?\\x\\)*\\%(\\>\\|im\\>\\|\\ze\\X\\)'$/;"	v
s:hexfloat_regex1	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:hexfloat_regex1 = '0x\\.\\%\\(\\x\\%(_\\?\\x\\)*\\)\\?[pP][-+]\\?\\d\\+\\%(\\>\\|im\\>\\|\\/;"	v
s:hexfloat_regex2	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:hexfloat_regex2 = '0x\\x\\%(_\\?\\x\\)*\\%\\(\\.\\%\\(\\x\\%(_\\?\\x\\)*\\)\\?\\)\\?[pP][-/;"	v
s:hi	autoload/plugged/vim-polyglot/syntax/go.vim	/^function! s:hi()$/;"	f
s:highlight_close_tag	autoload/plugged/vim-polyglot/after/syntax/jsx_pretty.vim	/^let s:highlight_close_tag = get(g:, 'vim_jsx_pretty_highlight_close_tag', 0)$/;"	v
s:highlight_groups	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:highlight_groups = ['hid', 0, '', 'sel', 'mod_unsel', 0, 'mod_unsel', 'mod']$/;"	v
s:highlight_groups	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:highlight_groups = ['hid', 0, '', 'sel', 'mod_unsel', 0, 'mod_unsel', 'mod']$/;"	v
s:highlight_keys	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:highlight_keys(str)$/;"	f
s:highlight_svelte_attr	autoload/plugged/vim-polyglot/syntax/svelte-html.vim	/^let s:highlight_svelte_attr = svelte#GetConfig('highlight_svelte_attr', 0)$/;"	v
s:history	autoload/plugged/fzf.vim/plugin/fzf.vim	/^function! s:history(arg, extra, bang)$/;"	f
s:history_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_sink(type, lines)$/;"	f
s:history_source	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_source(type)$/;"	f
s:hl_group_exists	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  def s:hl_group_exists(group: string): bool$/;"	f
s:hl_group_exists	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^  function! s:hl_group_exists(group) abort$/;"	f
s:hl_groups	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:hl_groups = {}$/;"	v
s:hls_cursor	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:hls_cursor = get(s:gb, g:gruvbox_hls_cursor)$/;"	v
s:hls_cursor	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:hls_cursor = s:orange$/;"	v
s:hog_keyword_match	autoload/plugged/vim-polyglot/ftplugin/hog.vim	/^let s:hog_keyword_match = '\\c^\\s*\\<\\(preprocessor\\\\|config\\\\|output\\\\|include\\\\|ipva/;"	v
s:html_indent	autoload/plugged/vim-polyglot/indent/vue.vim	/^let s:html_indent = s:get_indentexpr('html')$/;"	v
s:htmlindent	autoload/plugged/vim-polyglot/indent/blade.vim	/^let s:htmlindent = &indentexpr$/;"	v
s:hunk_symbols	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:hunk_symbols = get(g:, 'airline#extensions#hunks#hunk_symbols', ['+', '~', '-'])$/;"	v
s:i	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = g:omlet_indent_struct$/;"	v
s:i	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = matchstr(s:m,'\\d\\+')$/;"	v
s:i	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = s:idef$/;"	v
s:i	autoload/plugged/vim-polyglot/syntax/help.vim	/^let s:i = match(expand("%"), '\\.\\a\\ax$')$/;"	v
s:iTerm_escape_template	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:iTerm_escape_template = '\\033]Pl%s\\033\\\\'$/;"	v
s:ibg	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:ibg = ['#FFAFD7', 218] "      insert bg; for   a section$/;"	v
s:iconv	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
s:iconv	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
s:icy_sky	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:icy_sky         = ['#79e5e0', 116]$/;"	v
s:idef	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = 2$/;"	v
s:idef	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = g:omlet_indent$/;"	v
s:idef	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = matchstr(s:m,'\\d\\+')$/;"	v
s:idregex	autoload/plugged/vim-polyglot/autoload/julia.vim	/^let s:idregex = '[^' . s:nonidS_chars . '0-9!' . s:uniop_chars . s:binop_chars . '][^' . s:nonid/;"	v
s:idregex	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:idregex = '\\%([^' . s:nonidS_chars . '0-9!' . s:uniop_chars . s:binop_chars . '][^' . s:n/;"	v
s:if	autoload/plugged/vim-polyglot/ftplugin/fish.vim	/^    let s:if = '%(else\\s\\+)\\@15<!if'$/;"	v
s:if	autoload/plugged/vim-polyglot/ftplugin/fish.vim	/^    let s:if = '%(else\\s\\+)\\@<!if'$/;"	v
s:ifg	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:ifg = s:nfg            "      insert fg; for   a section$/;"	v
s:ignore_time	autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^let s:ignore_time = 0$/;"	v
s:ignorecase	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:ignorecase=0$/;"	v
s:ignored_region	autoload/plugged/vim-polyglot/indent/clojure.vim	/^	function! s:ignored_region()$/;"	f
s:ignored_region	autoload/plugged/vim-polyglot/indent/fennel.vim	/^	function! s:ignored_region()$/;"	f
s:import	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:import(name, ...) abort dict$/;"	f
s:improved_contrast	autoload/plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:improved_contrast = get(g:, 'airline_base16_improved_contrast', 0)$/;"	v
s:in_comm	autoload/plugged/vim-polyglot/indent/javascript.vim	/^let s:in_comm = s:skip_expr[:-14] . "'comment\\\\|doc'"$/;"	v
s:in_cpp_family	autoload/plugged/vim-polyglot/syntax/c.vim	/^let s:in_cpp_family = exists("b:filetype_in_cpp_family")$/;"	v
s:inactive_funcrefs	autoload/plugged/vim-airline/autoload/airline.vim	/^let s:inactive_funcrefs = []$/;"	v
s:include	autoload/plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:include = &l:include$/;"	v
s:include	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:include = &l:include$/;"	v
s:incompleteFont	autoload/plugged/vim-polyglot/after/syntax/idris.vim	/^    let s:incompleteFont = [ 'Consolas'$/;"	v
s:incompleteFont	autoload/plugged/vim-polyglot/after/syntax/idris2.vim	/^    let s:incompleteFont = [ 'Consolas'$/;"	v
s:increase	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:increase(...)$/;"	f
s:indentGuard	autoload/plugged/vim-polyglot/indent/haskell.vim	/^function! s:indentGuard(pos, prevline)$/;"	f
s:indentMatching	autoload/plugged/vim-polyglot/indent/haskell.vim	/^function! s:indentMatching(char)$/;"	f
s:indent_access_modifier_regex	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:indent_access_modifier_regex = '\\C^\\s*\\%(protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:indent_like_block	autoload/plugged/vim-polyglot/indent/cython.vim	/^function! s:indent_like_block(lnum)$/;"	f
s:indent_like_block	autoload/plugged/vim-polyglot/indent/python.vim	/^function! s:indent_like_block(lnum)$/;"	f
s:indent_like_opening_paren	autoload/plugged/vim-polyglot/indent/cython.vim	/^function! s:indent_like_opening_paren(lnum)$/;"	f
s:indent_like_opening_paren	autoload/plugged/vim-polyglot/indent/python.vim	/^function! s:indent_like_opening_paren(lnum)$/;"	f
s:indent_like_previous_line	autoload/plugged/vim-polyglot/indent/cython.vim	/^function! s:indent_like_previous_line(lnum)$/;"	f
s:indent_like_previous_line	autoload/plugged/vim-polyglot/indent/python.vim	/^function! s:indent_like_previous_line(lnum)$/;"	f
s:indent_tags	autoload/plugged/vim-polyglot/after/indent/html.vim	/^let s:indent_tags = {}$/;"	v
s:indent_tags	autoload/plugged/vim-polyglot/indent/html.vim	/^let s:indent_tags = {}$/;"	v
s:indent_to_innermost_parentheses	autoload/plugged/vim-polyglot/indent/dtd.vim	/^function s:indent_to_innermost_parentheses(line, end)$/;"	f
s:indexes	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:indexes = {}$/;"	v
s:infer_properties	autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
s:init	autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:init=0$/;"	v
s:init	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:init()$/;"	f
s:initCustomOpenArgs	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:initCustomOpenArgs() abort$/;"	f
s:init_buffer	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:init_buffer()$/;"	f
s:initialize_buffer_job	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:initialize_buffer_job(bufnr, vcs) abort$/;"	f
s:initialize_job	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:initialize_job(bufnr, vcs) abort$/;"	f
s:inject_snippet	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:inject_snippet(line)$/;"	f
s:innerbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:innerbg = [234, '#1c1c1c']$/;"	v
s:innerbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:innerbg  = [234, 'NONE']$/;"	v
s:inputPrompt	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^function! s:inputPrompt(action)$/;"	f
s:insidePlantUMLTags	autoload/plugged/vim-polyglot/indent/plantuml.vim	/^function! s:insidePlantUMLTags(lnum) abort$/;"	f
s:install	autoload/plug.vim	/^function! s:install(force, names)$/;"	f
s:int_regex	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:int_regex = '\\%(' . s:hex_regex .$/;"	v
s:int_suf	autoload/plugged/vim-polyglot/syntax/nim.vim	/^  let s:int_suf = '%(''%(%(i|I|u|U)%(8|16|32|64)|u|U))'$/;"	v
s:interp_dollar	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:interp_dollar = '\\([' . s:nonidS_chars . s:uniop_chars . s:binop_chars . '!]\\|^\\)\\@'.s/;"	v
s:interpreters	autoload/plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:interpreters = {$/;"	v
s:intersect	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
s:inverse	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:inverse = ''$/;"	v
s:inverse	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:inverse = 'inverse,'$/;"	v
s:invert	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:invert=0$/;"	v
s:invert_selection	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^    let s:invert_selection = ''$/;"	v
s:invert_selection	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:invert_selection = s:inverse$/;"	v
s:invert_signs	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^    let s:invert_signs = s:inverse$/;"	v
s:invert_signs	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:invert_signs = ''$/;"	v
s:invert_tabline	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^    let s:invert_tabline = s:inverse$/;"	v
s:invert_tabline	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:invert_tabline = ''$/;"	v
s:invoke_funcrefs	autoload/plugged/vim-airline/autoload/airline.vim	/^function! s:invoke_funcrefs(context, funcrefs)$/;"	f
s:is	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:is(dir, identifier)$/;"	f
s:isInBlock	autoload/plugged/vim-polyglot/indent/haskell.vim	/^function! s:isInBlock(hlstack)$/;"	f
s:isSYN	autoload/plugged/vim-polyglot/indent/haskell.vim	/^function! s:isSYN(grp, line, col)$/;"	f
s:is_AppleTerminal	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_AppleTerminal = exists('$TERM_PROGRAM') && $TERM_PROGRAM =~# 'Apple_Terminal'$/;"	v
s:is_available	autoload/plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:is_available() abort$/;"	f
s:is_blocking	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:is_blocking() abort$/;"	f
s:is_branch_empty	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:is_branch_empty() abort$/;"	f
s:is_closing_tag	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_closing_tag(syntax)$/;"	f
s:is_comment	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_comment(syntax)$/;"	f
s:is_concealed	autoload/plugged/vim-polyglot/indent/cython.vim	/^    function! s:is_concealed(line, col)$/;"	f
s:is_concealed	autoload/plugged/vim-polyglot/indent/python.vim	/^    function! s:is_concealed(line, col)$/;"	f
s:is_cur_line_in_hunk	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:is_cur_line_in_hunk(hunkline) abort$/;"	f
s:is_dark	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:is_dedented_already	autoload/plugged/vim-polyglot/indent/cython.vim	/^function! s:is_dedented_already(current, base)$/;"	f
s:is_dedented_already	autoload/plugged/vim-polyglot/indent/python.vim	/^function! s:is_dedented_already(current, base)$/;"	f
s:is_excluded_window	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:is_excluded_window()$/;"	f
s:is_good	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_good = !has('gui_running') && !s:is_win && !s:is_AppleTerminal$/;"	v
s:is_gvim	autoload/plugged/coc.nvim/plugin/coc.vim	/^let s:is_gvim = get(v:, 'progname', '') ==# 'gvim'$/;"	v
s:is_iTerm	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_iTerm = exists('$TERM_PROGRAM') && $TERM_PROGRAM =~# 'iTerm.app'$/;"	v
s:is_jsx_backticks	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_backticks(syntax)$/;"	f
s:is_jsx_brace	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_brace(syntax)$/;"	f
s:is_jsx_comment	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_comment(syntax)$/;"	f
s:is_jsx_element	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_element(syntax)$/;"	f
s:is_jsx_expression	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_expression(syntax)$/;"	f
s:is_jsx_region	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_region(syntax)$/;"	f
s:is_local_plug	autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
s:is_managed	autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
s:is_method_special_case	autoload/plugged/vim-polyglot/indent/clojure.vim	/^	function! s:is_method_special_case(position)$/;"	f
s:is_opening_tag	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_opening_tag(syntax)$/;"	f
s:is_paren	autoload/plugged/vim-polyglot/indent/clojure.vim	/^	function! s:is_paren()$/;"	f
s:is_paren	autoload/plugged/vim-polyglot/indent/fennel.vim	/^	function! s:is_paren()$/;"	f
s:is_parent_element	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_parent_element(pos, element_count)$/;"	f
s:is_powershell	autoload/plug.vim	/^function! s:is_powershell(shell)$/;"	f
s:is_preview_window_open	autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
s:is_python_string	autoload/plugged/vim-polyglot/indent/cython.vim	/^function! s:is_python_string(lnum, ...)$/;"	f
s:is_python_string	autoload/plugged/vim-polyglot/indent/python.vim	/^function! s:is_python_string(lnum, ...)$/;"	f
s:is_reader_conditional_special_case	autoload/plugged/vim-polyglot/indent/clojure.vim	/^	function! s:is_reader_conditional_special_case(position)$/;"	f
s:is_section_delim	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:is_section_delim(line, func_delim) abort$/;"	f
s:is_string_comment	autoload/plugged/vim-polyglot/indent/reason.vim	/^function! s:is_string_comment(lnum, col)$/;"	f
s:is_string_comment	autoload/plugged/vim-polyglot/indent/rust.vim	/^function! s:is_string_comment(lnum, col)$/;"	f
s:is_string_or_comment	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:is_string_or_comment(line, col)$/;"	f
s:is_unix	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_updated	autoload/plug.vim	/^function! s:is_updated(dir)$/;"	f
s:is_vim	autoload/plugged/coc.nvim/autoload/coc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/autoload/coc/compat.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/autoload/coc/snippet.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/autoload/coc/task.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/autoload/coc/terminal.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	autoload/plugged/coc.nvim/plugin/coc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vital_vim	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_win	autoload/plug.vim	/^let s:is_win = has('win32')$/;"	v
s:is_win	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^let s:is_win = has("win32") || has("win64")$/;"	v
s:is_win	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:is_win = has("win32") || has("win64")$/;"	v
s:is_win	autoload/plugged/coc.nvim/autoload/coc/terminal.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	autoload/plugged/coc.nvim/plugin/coc.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	autoload/plugged/fzf.vim/plugin/fzf.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	autoload/plugged/fzf/plugin/fzf.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win32term	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:is_win32term = (has('win32') || has('win64')) &&$/;"	v
s:is_windows	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:isabsolute	autoload/plug.vim	/^function! s:isabsolute(dir) abort$/;"	f
s:iskeyword_save	autoload/plugged/vim-polyglot/syntax/php.vim	/^let s:iskeyword_save = &iskeyword$/;"	v
s:italic	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:italic = ''$/;"	v
s:italic	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:italic = 'italic,'$/;"	v
s:italicize_comments	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^    let s:italicize_comments = ''$/;"	v
s:italicize_comments	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:italicize_comments = s:italic$/;"	v
s:italicize_strings	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^    let s:italicize_strings = s:italic$/;"	v
s:italicize_strings	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:italicize_strings = ''$/;"	v
s:item_pattern	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:item_pattern = s:file_commit_pattern . '\\|^@@'$/;"	v
s:itemization_pattern	autoload/plugged/vim-polyglot/indent/rst.vim	/^let s:itemization_pattern = '^\\s*[-*+]\\s'$/;"	v
s:job_abort	autoload/plug.vim	/^function! s:job_abort()$/;"	f
s:job_cb	autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	f
s:job_exit_cb	autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	f
s:job_out_cb	autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	f
s:join_posix_lines	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:join_posix_lines(lines, ...) abort$/;"	f
s:js_keywords	autoload/plugged/vim-polyglot/indent/solidity.vim	/^let s:js_keywords = '^\\s*\\(break\\|case\\|catch\\|continue\\|debugger\\|default\\|delete\\|do\\/;"	v
s:js_keywords	autoload/plugged/vim-polyglot/indent/typescript.vim	/^let s:js_keywords = '^\\s*\\(break\\|case\\|catch\\|continue\\|debugger\\|default\\|delete\\|do\\/;"	v
s:jsx_cpo	autoload/plugged/vim-polyglot/after/syntax/jsx.vim	/^let s:jsx_cpo = &cpo$/;"	v
s:jsx_cpo	autoload/plugged/vim-polyglot/after/syntax/tsx.vim	/^let s:jsx_cpo = &cpo$/;"	v
s:jsx_indent_backticks	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_backticks(lnum)$/;"	f
s:jsx_indent_closing_tag	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_closing_tag(lnum)$/;"	f
s:jsx_indent_comment	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_comment(lnum)$/;"	f
s:jsx_indent_element	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_element(lnum)$/;"	f
s:jsx_indent_trail_punct	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_trail_punct(lnum)$/;"	f
s:julia_blocks_functions	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^let s:julia_blocks_functions = {$/;"	v
s:julia_highlight_operators	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_highlight_operators = get(g:, "julia_highlight_operators", 1)$/;"	v
s:julia_spellcheck_comments	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_spellcheck_comments = get(g:, "julia_spellcheck_comments", 1)$/;"	v
s:julia_spellcheck_docstrings	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_spellcheck_docstrings = get(g:, "julia_spellcheck_docstrings", 1)$/;"	v
s:julia_spellcheck_strings	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_spellcheck_strings = get(g:, "julia_spellcheck_strings", 0)$/;"	v
s:jump	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:jump(t, w)$/;"	f
s:jump	autoload/plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:jump(command,count)$/;"	f
s:jumpToChild	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(node, last) abort$/;"	f
s:jumpToFirstChild	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node) abort$/;"	f
s:jumpToLastChild	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node) abort$/;"	f
s:jumpToNextSibling	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node) abort$/;"	f
s:jumpToParent	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node) abort$/;"	f
s:jumpToPrevSibling	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node) abort$/;"	f
s:jumpToRoot	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot() abort$/;"	f
s:jumpToSibling	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(node, forward) abort$/;"	f
s:jump_to_identifier_at	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:jump_to_identifier_at(linum, ident) abort$/;"	f
s:jump_to_impl	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:jump_to_impl(impl) abort$/;"	f
s:jump_to_tab	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:jump_to_tab(offset)$/;"	f
s:just_inserted_rule_rx	autoload/plugged/vim-polyglot/indent/make.vim	/^let s:just_inserted_rule_rx = '^\\s*[^#:]\\+:\\{1,2}$'$/;"	v
s:just_inserted_rule_rx	autoload/plugged/vim-polyglot/indent/omake.vim	/^let s:just_inserted_rule_rx = '^\\s*[^#:]\\+:\\{1,2}$'$/;"	v
s:justify_equal_spacing	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
s:keepcpo	autoload/plugged/vim-polyglot/after/compiler/tex.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/after/indent/jsx.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/after/indent/tsx.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/autoload/ada.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/compiler/cs.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/ftplugin/cs.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/ftplugin/cucumber.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/ftplugin/meson.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/ftplugin/occam.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/ftplugin/pyrex.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/indent/ada.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/indent/cmake.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/indent/css.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/indent/gdscript3.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/indent/java.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/indent/meson.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/indent/mp.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/indent/occam.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/indent/pgsql.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/indent/scss.vim	/^let s:keepcpo= &cpoptions$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/indent/svg.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/indent/xinetd.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/syntax/ada.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/syntax/autoit.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/syntax/cmake.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/syntax/cucumber.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/syntax/datascript.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/syntax/dot.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/syntax/fvwm.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/syntax/lsl.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/syntax/ocaml.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/syntax/po.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/syntax/raku.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/syntax/sil.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/syntax/taskdata.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	autoload/plugged/vim-polyglot/syntax/taskedit.vim	/^let s:keepcpo= &cpo$/;"	v
s:kernels	autoload/plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:kernels = ['linux', 'hurd', 'kfreebsd', 'knetbsd', 'kopensolaris', 'netbsd']$/;"	v
s:keyMaps	autoload/plugged/NERDTree/lib/nerdtree/key_map.vim	/^let s:keyMaps = {}$/;"	v
s:key_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:key_sink(line)$/;"	f
s:key_value	autoload/plugged/vim-polyglot/indent/ansible.vim	/^let s:key_value = '\\v^\\s*[^:-]+:\\s*\\S' " apt: name=package$/;"	v
s:keyword	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:keyword(expr)$/;"	f
s:keywords	autoload/plugged/vim-polyglot/syntax/raku.vim	/^let s:keywords = {$/;"	v
s:lang	autoload/plugged/vim-polyglot/extras/menu.vim	/^      let s:lang = ""$/;"	v
s:lang	autoload/plugged/vim-polyglot/extras/menu.vim	/^      let s:lang = &langmenu$/;"	v
s:lang	autoload/plugged/vim-polyglot/extras/menu.vim	/^      let s:lang = s:lang . '.' . &enc$/;"	v
s:lang	autoload/plugged/vim-polyglot/extras/menu.vim	/^      let s:lang = substitute(s:lang, '\\.[^.]*', "", "")$/;"	v
s:lang	autoload/plugged/vim-polyglot/extras/menu.vim	/^    let s:lang = substitute(s:lang, " ", "_", "g")$/;"	v
s:lang	autoload/plugged/vim-polyglot/extras/menu.vim	/^    let s:lang = substitute(s:lang, "@euro", "", "")$/;"	v
s:lang	autoload/plugged/vim-polyglot/extras/menu.vim	/^    let s:lang = substitute(s:lang, '\\.iso8859', ".iso_8859", "")$/;"	v
s:lang	autoload/plugged/vim-polyglot/extras/menu.vim	/^    let s:lang = substitute(s:lang, 'iso_8859-15\\=$', "latin1", "")$/;"	v
s:lang	autoload/plugged/vim-polyglot/extras/menu.vim	/^    let s:lang = substitute(tolower(s:lang), '\\.iso-', ".iso_", "")$/;"	v
s:lang	autoload/plugged/vim-polyglot/extras/menu.vim	/^    let s:lang = v:lang$/;"	v
s:language	autoload/plugged/vim-polyglot/indent/vue.vim	/^    let s:language.indentexpr = s:get_indentexpr(s:language.name)$/;"	v
s:languageclient_refresh	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:languageclient_refresh()$/;"	f
s:languages	autoload/plugged/vim-polyglot/indent/vue.vim	/^let s:languages = [$/;"	v
s:languages	autoload/plugged/vim-polyglot/syntax/vue.vim	/^let s:languages = [$/;"	v
s:last_changedtick	autoload/plugged/vim-polyglot/indent/erlang.vim	/^let s:last_changedtick = -1$/;"	v
s:last_mode	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:last_mode = ''$/;"	v
s:last_non_empty_line	autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	f
s:last_time	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:last_time = reltime()$/;"	v
s:last_times	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:last_times = {}$/;"	v
s:lastline	autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
s:launcher	autoload/plugged/fzf/plugin/fzf.vim	/^  let s:launcher = '%s'$/;"	v
s:launcher	autoload/plugged/fzf/plugin/fzf.vim	/^  let s:launcher = function('s:xterm_launcher')$/;"	v
s:layout	autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:layout = get(g:, 'airline#extensions#default#layout', [$/;"	v
s:layout_keys	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:layout_keys = ['window', 'up', 'down', 'left', 'right']$/;"	v
s:layout_keys	autoload/plugged/fzf/plugin/fzf.vim	/^let s:layout_keys = ['window', 'tmux', 'up', 'down', 'left', 'right']$/;"	v
s:lazy	autoload/plug.vim	/^function! s:lazy(plug, opt)$/;"	f
s:lb1	autoload/plugged/vim-polyglot/syntax/ledger.vim	/^let s:lb1 = '\\@1<='$/;"	v
s:leading_operator_regex	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:leading_operator_regex = '^\\s*\\%(&\\=\\.\\)'$/;"	v
s:ledgerAmount_contains	autoload/plugged/vim-polyglot/syntax/ledger.vim	/^    let s:ledgerAmount_contains .= '@NoSpell'$/;"	v
s:ledgerAmount_contains	autoload/plugged/vim-polyglot/syntax/ledger.vim	/^let s:ledgerAmount_contains = ''$/;"	v
s:ledger_cmd	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! s:ledger_cmd(file, args) abort$/;"	f
s:left	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:left(s)$/;"	f
s:legacy_airline_ale_get_line_number	autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:legacy_airline_ale_get_line_number(cnt, type) abort$/;"	f
s:length_pattern	autoload/plugged/vim-polyglot/syntax/cdrtoc.vim	/^let s:length_pattern = '\\%(\\%([0-5]\\d\\|\\d\\):\\%([0-5]\\d\\|\\d\\):\\%([0-6]\\d\\|7[0-5]\\|/;"	v
s:letlim	autoload/plugged/vim-polyglot/indent/ocaml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:letlim	autoload/plugged/vim-polyglot/indent/sml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:letpat	autoload/plugged/vim-polyglot/indent/ocaml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|externa/;"	v
s:letpat	autoload/plugged/vim-polyglot/indent/sml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|externa/;"	v
s:levelRegexpDict	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^let s:levelRegexpDict = {$/;"	v
s:levenshtein_distance	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
s:lex	autoload/plugged/vim-polyglot/indent/dtd.vim	/^function s:lex(input, start, ...)$/;"	f
s:lex1	autoload/plugged/vim-polyglot/indent/dtd.vim	/^function s:lex1(input, start, ...)$/;"	f
s:lh_cterm1	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm1='234'$/;"	v
s:lh_cterm10	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm10='175'$/;"	v
s:lh_cterm11	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm11='166'$/;"	v
s:lh_cterm12	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm12='202'$/;"	v
s:lh_cterm13	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm13='226'$/;"	v
s:lh_cterm2	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm2='43'$/;"	v
s:lh_cterm3	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm3='230'$/;"	v
s:lh_cterm4	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm4='233'$/;"	v
s:lh_cterm5	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm5='71'$/;"	v
s:lh_cterm6	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm6='208'$/;"	v
s:lh_cterm7	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm7='203'$/;"	v
s:lh_cterm8	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm8='188'$/;"	v
s:lh_cterm9	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm9='196'$/;"	v
s:lh_gui1	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui1='#21252D'$/;"	v
s:lh_gui10	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui10='#D68EB2'$/;"	v
s:lh_gui11	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui11='#E25600'$/;"	v
s:lh_gui12	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui12='#FF4D00'$/;"	v
s:lh_gui13	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui13='#FFFF00'$/;"	v
s:lh_gui2	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui2='#00BFA4'$/;"	v
s:lh_gui3	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui3='#FFFADE'$/;"	v
s:lh_gui4	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui4='#090B26'$/;"	v
s:lh_gui5	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui5='#50C16E'$/;"	v
s:lh_gui6	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui6='#ED722E'$/;"	v
s:lh_gui7	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui7='#FF5050'$/;"	v
s:lh_gui8	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui8='#CCCCCC'$/;"	v
s:lh_gui9	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui9='#FC2929'$/;"	v
s:light_blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:light_blue   = [ '#87afd7', 110 ]$/;"	v
s:light_gray	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:light_gray      = ['#b2b2b2', 249]$/;"	v
s:light_green	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:light_green  = [ '#87af87', 108 ]$/;"	v
s:light_purple	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:light_purple = [ '#8787af', 103 ]$/;"	v
s:light_red	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:light_red = s:colors.light_red$/;"	v
s:lighter_grey	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:lighter_grey = [ '#bcbcbc', 250 ]$/;"	v
s:lighthaus_vim_v	autoload/plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lighthaus_vim_v='1.0.2'$/;"	v
s:likely	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:likely(str) abort$/;"	f
s:lim	autoload/plugged/vim-polyglot/indent/ocaml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:lim	autoload/plugged/vim-polyglot/indent/sml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:lineLens	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:lineLens(projectPath, cont)$/;"	f
s:line_comment_chars	autoload/plugged/vim-polyglot/syntax/ledger.vim	/^let s:line_comment_chars = b:is_hledger ? ';*#' : ';|*#%'$/;"	v
s:line_handler	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:line_handler(lines)$/;"	f
s:line_term	autoload/plugged/vim-polyglot/indent/json.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:line_term	autoload/plugged/vim-polyglot/indent/solidity.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:line_term	autoload/plugged/vim-polyglot/indent/typescript.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:linechars	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
s:lines	autoload/plug.vim	/^function! s:lines(msg)$/;"	f
s:lines	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:lines(str) abort$/;"	f
s:lines	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:lines = join(getline(1, 5) + [getline('$')], "\\n")$/;"	v
s:lines	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	autoload/plugged/vim-polyglot/ftplugin/liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	autoload/plugged/vim-polyglot/syntax/eelixir.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	autoload/plugged/vim-polyglot/syntax/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	autoload/plugged/vim-polyglot/syntax/jst.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	autoload/plugged/vim-polyglot/syntax/liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	autoload/plugged/vim-polyglot/syntax/ragel.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:list	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:list(fugitive_repo, log_opts)$/;"	f
s:listSyntax	autoload/plugged/vim-polyglot/indent/plantuml.vim	/^function! s:listSyntax(syntaxKeyword) abort$/;"	f
s:liststartregex	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let s:liststartregex='\\v^\\s*%(\\-%(\\ |$))'$/;"	v
s:lmax	autoload/plugged/vim-polyglot/ftplugin/fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	autoload/plugged/vim-polyglot/ftplugin/fortran.vim	/^    let s:lmax = 500$/;"	v
s:lmax	autoload/plugged/vim-polyglot/indent/fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	autoload/plugged/vim-polyglot/indent/fortran.vim	/^    let s:lmax = 500$/;"	v
s:lmax	autoload/plugged/vim-polyglot/syntax/fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	autoload/plugged/vim-polyglot/syntax/fortran.vim	/^    let s:lmax = 500$/;"	v
s:ln	autoload/plugged/vim-polyglot/ftplugin/fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	autoload/plugged/vim-polyglot/ftplugin/fortran.vim	/^    let s:ln=1$/;"	v
s:ln	autoload/plugged/vim-polyglot/indent/fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	autoload/plugged/vim-polyglot/indent/fortran.vim	/^    let s:ln=1$/;"	v
s:ln	autoload/plugged/vim-polyglot/syntax/fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	autoload/plugged/vim-polyglot/syntax/fortran.vim	/^    let s:ln=1$/;"	v
s:load	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:load(arg)$/;"	f
s:load	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:load(...) abort dict$/;"	f
s:load_buffer	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^function! s:load_buffer(name) abort$/;"	f
s:load_full_syntax	autoload/plugged/vim-polyglot/syntax/svelte.vim	/^let s:load_full_syntax = svelte#GetConfig('load_full_syntax', 0)$/;"	v
s:load_plugin	autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	f
s:loaded	autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:loaded	autoload/plugged/vim-airline/autoload/airline/init.vim	/^let s:loaded = 0$/;"	v
s:loaded	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:loaded = {}$/;"	v
s:loaded_ext	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^let s:loaded_ext = []$/;"	v
s:loaded_names	autoload/plug.vim	/^function! s:loaded_names()$/;"	f
s:lod	autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
s:lod_cmd	autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
s:lod_ft	autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
s:lod_map	autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	f
s:log	autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
s:log4	autoload/plug.vim	/^function! s:log4(name, msg)$/;"	f
s:log_diff_context	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:log_diff_context = '{"filename": fugitive#Find(v:val . from, a:dir), "lnum": get(offsets, /;"	v
s:log_opts	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:log_opts(fugitive_repo, bang, visual, line1, line2)$/;"	f
s:logfile	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^    let s:logfile = resolve($NODE_CLIENT_LOG_FILE)$/;"	v
s:logfile	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^    let s:logfile = tempname()$/;"	v
s:logpos	autoload/plug.vim	/^function! s:logpos(name)$/;"	f
s:lpad	autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
s:lsp_progress	autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^let s:lsp_progress = []$/;"	v
s:m	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:m = matchstr(s:modeline,'default\\s*=\\s*\\d\\+')$/;"	v
s:m	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:m = matchstr(s:modeline,'struct\\s*=\\s*\\d\\+')$/;"	v
s:mac_gui	autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:macro_end	autoload/plugged/vim-polyglot/indent/sas.vim	/^let s:macro_end = '\\v%(^|;)\\s*\\%mend\\s*;'$/;"	v
s:macro_regex	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^  let s:macro_regex = '\\%(@\\%([#(]\\@!\\S\\)\\+\\|\\<\\%(local\\|global\\)\\)\\s\\+'$/;"	v
s:macro_str	autoload/plugged/vim-polyglot/indent/sas.vim	/^let s:macro_str = '\\v%(^|;)\\s*\\%macro>'$/;"	v
s:magenta	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:magenta = {'hex': '#D33682', 'term': 168}  " 211,  54, 130 *$/;"	v
s:mainfont	autoload/plugged/vim-polyglot/after/syntax/idris.vim	/^    let s:mainfont = substitute( &guifont, '^\\([^:,]\\+\\).*', '\\1', '')$/;"	v
s:mainfont	autoload/plugged/vim-polyglot/after/syntax/idris2.vim	/^    let s:mainfont = substitute( &guifont, '^\\([^:,]\\+\\).*', '\\1', '')$/;"	v
s:maj	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:maj=matchstr(s:tmp, '\\d\\+') * 100$/;"	v
s:map	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:map(mode, flags, map) abort$/;"	f
s:map_accum	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
s:map_aux	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:map_aux(function)$/;"	f
s:map_keys	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:map_keys()$/;"	f
s:map_move	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:map_move(function, toend, backwards)$/;"	f
s:map_next	autoload/plugged/coc.nvim/autoload/coc/snippet.vim	/^let s:map_next = 1$/;"	v
s:map_select	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:map_select(function)$/;"	f
s:mapkeyregex	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let s:mapkeyregex='\\v^\\s*\\#@!\\S@=%(\\''%([^'']|\\''\\'')*\\'''.$/;"	v
s:mapkeys	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        fun! s:mapkeys(keys, plug)$/;"	f
s:maps	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:maps()$/;"	f
s:mark_complements	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:mark_complements=s:mark_left . 'cOmPLemEnTs' . s:mark_right$/;"	v
s:mark_left	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:mark_left="\\<Esc>" . strftime("%X") . ":" . strftime("%d") . "\\<C-f>"$/;"	v
s:mark_right	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:mark_right="\\<C-l>" . strftime("%X") . ":" . strftime("%d") . "\\<Esc>"$/;"	v
s:mark_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:mark_sink(lines)$/;"	f
s:match	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function s:match(dir, pattern)$/;"	f
s:match_expr_on_line	autoload/plugged/vim-polyglot/indent/cython.vim	/^function! s:match_expr_on_line(expr, lnum, start, ...)$/;"	f
s:match_expr_on_line	autoload/plugged/vim-polyglot/indent/python.vim	/^function! s:match_expr_on_line(expr, lnum, start, ...)$/;"	f
s:match_one	autoload/plugged/vim-polyglot/indent/clojure.vim	/^	function! s:match_one(patterns, string)$/;"	f
s:match_one	autoload/plugged/vim-polyglot/indent/fennel.vim	/^	function! s:match_one(patterns, string)$/;"	f
s:match_pairs	autoload/plugged/vim-polyglot/indent/clojure.vim	/^	function! s:match_pairs(open, close, stopat)$/;"	f
s:match_pairs	autoload/plugged/vim-polyglot/indent/fennel.vim	/^	function! s:match_pairs(open, close, stopat)$/;"	f
s:match_words	autoload/plugged/vim-polyglot/ftplugin/aspvbs.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let s:match_words = ""$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/config.vim	/^let s:match_words = ""$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/ecrystal.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:match_words = ''$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:match_words = ""$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:match_words = ""$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:match_words = ""$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/haml.vim	/^let s:match_words = ""$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/jsp.vim	/^let s:match_words = ""$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/pug.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/pug.vim	/^let s:match_words = ""$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/stylus.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:match_words = ""$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:match_words = b:match_words . "," . s:match_words$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	autoload/plugged/vim-polyglot/ftplugin/xhtml.vim	/^let s:match_words = ""$/;"	v
s:matchbegin	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:matchbegin(text, close)$/;"	f
s:matchend	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:matchend(text, open)$/;"	f
s:matchit	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:matchit()$/;"	f
s:max_by	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
s:max_firstline	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:max_firstline(lines, height, width) abort$/;"	f
s:maxoff	autoload/plugged/vim-polyglot/indent/bzl.vim	/^let s:maxoff = 50$/;"	v
s:maxoff	autoload/plugged/vim-polyglot/indent/gdscript3.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
s:maxoff	autoload/plugged/vim-polyglot/indent/meson.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
s:maxoff	autoload/plugged/vim-polyglot/indent/zimbu.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
s:me	autoload/plug.vim	/^  let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:med_gray_hi	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:med_gray_hi     = ['#444444', 238]$/;"	v
s:med_gray_lo	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:med_gray_lo     = ['#3a3a3a', 237]$/;"	v
s:medium_grey	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:medium_grey  = [ '#585858', 240 ]$/;"	v
s:menu_grey	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:menu_grey = s:colors.menu_grey$/;"	v
s:merge_heads	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:merge_heads = ['MERGE_HEAD', 'REBASE_HEAD', 'CHERRY_PICK_HEAD', 'REVERT_HEAD']$/;"	v
s:merge_opts	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:merge_opts(dict, eopts)$/;"	f
s:messages	autoload/plugged/vim-rooter/test/runner.vim	/^let s:messages = []$/;"	v
s:meta_chars	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:meta_chars='$*.[\\]^~'$/;"	v
s:midBlock	autoload/plugged/vim-polyglot/indent/octave.vim	/^let s:midBlock = ['case', 'catch', 'else', 'elseif', 'otherwise',$/;"	v
s:middle	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:middle  = ['#bcbcbc', '#444444', 250, 238]$/;"	v
s:middle_patt	autoload/plugged/vim-polyglot/indent/lua.vim	/^let s:middle_patt = '\\C\\<\\%(else\\|elseif\\)\\>'$/;"	v
s:min	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:min=matchstr(s:tmp, '\\.\\zs\\d\\+') + 0$/;"	v
s:min_btns_width	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:min_btns_width(buttons) abort$/;"	f
s:min_by	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
s:min_version	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:min_version = '0.23.0'$/;"	v
s:mindmapHilightLinks	autoload/plugged/vim-polyglot/syntax/plantuml.vim	/^let s:mindmapHilightLinks = [$/;"	v
s:mmssff_pattern	autoload/plugged/vim-polyglot/syntax/cdrtoc.vim	/^let s:mmssff_pattern = '\\%([0-5]\\d\\|\\d\\):\\%([0-5]\\d\\|\\d\\):\\%([0-6]\\d\\|7[0-5]\\|\\d\\/;"	v
s:modeline	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:modeline = lnum? getline(lnum): ""$/;"	v
s:modified	autoload/plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:modified = { 'airline_c': [s:gui07, '', s:cterm07, '', ''] }$/;"	v
s:modified	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:modified = {$/;"	v
s:modified	autoload/plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:modified = { 'airline_c': [ s:guiRose, '', 215, '', '' ] }$/;"	v
s:modified	autoload/plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:modified = { 'airline_c': [ '#ffb964', '', 215, '', '' ] }$/;"	v
s:modified	autoload/plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:modified = { 'airline_c': [s:gui07, '', s:cterm07, '', ''] }$/;"	v
s:modifierMatcher	autoload/plugged/vim-polyglot/indent/scala.vim	/^let s:modifierMatcher = s:annotationMatcher . '\\|\\%(private\\|protected\\)\\%(\\[[^\\]]*\\]\\)/;"	v
s:module	autoload/plugged/vim-polyglot/indent/ocaml.vim	/^let s:module = '\\<\\%(begin\\|sig\\|struct\\|object\\)\\>'$/;"	v
s:module	autoload/plugged/vim-polyglot/indent/sml.vim	/^let s:module = '\\<\\%(let\\|sig\\|struct\\)\\>'$/;"	v
s:move	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:move(flag)$/;"	f
s:move_around	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^function! s:move_around(count, what, flags, visual)$/;"	f
s:move_around	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^function! s:move_around(count, what, flags, visual)$/;"	f
s:move_before_begin	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:move_before_begin()$/;"	f
s:move_to_following_block	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:move_to_following_block() abort$/;"	f
s:move_to_pred_block	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:move_to_pred_block() abort$/;"	f
s:moveto_block_delim	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:moveto_block_delim(toend, backwards, ...)$/;"	f
s:moveto_currentblock_end	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:moveto_currentblock_end()$/;"	f
s:mp_regex	autoload/plugged/vim-polyglot/ftplugin/mf.vim	/^let s:mp_regex = {$/;"	v
s:mp_regex	autoload/plugged/vim-polyglot/ftplugin/mp.vim	/^let s:mp_regex = {$/;"	v
s:mq_jobs	autoload/plugged/vim-airline/autoload/airline/async.vim	/^let s:mq_jobs        = {}$/;"	v
s:msl_regex	autoload/plugged/vim-polyglot/indent/solidity.vim	/^let s:msl_regex = '\\%([\\\\*+\/.:([]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:line_ter/;"	v
s:msl_regex	autoload/plugged/vim-polyglot/indent/typescript.vim	/^let s:msl_regex = s:continuation_regex$/;"	v
s:multiline	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:multiline=0$/;"	v
s:name	autoload/plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:name = 'coc'$/;"	v
s:name	autoload/plugged/vim-polyglot/autoload/svelte.vim	/^let s:name = 'vim-svelte-plugin'$/;"	v
s:name	autoload/plugged/vim-polyglot/indent/svelte.vim	/^let s:name = 'vim-svelte-plugin'$/;"	v
s:named_module_entry	autoload/plugged/vim-polyglot/indent/ansible.vim	/^let s:named_module_entry = '\\v^\\s*-\\s*(name|hosts|role):\\s*\\S' " - name: 'do stuff'$/;"	v
s:names	autoload/plug.vim	/^function! s:names(...)$/;"	f
s:names	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:names = {'0': 'index', '1': 'orig', '2':'fetch', '3':'merge'}$/;"	v
s:names	autoload/plugged/vim-polyglot/syntax/ruby.vim	/^let s:names = { '~': 'Tilde', '`': 'BackQuote', '!': 'Bang', '@': 'At', '#': 'Hash', '$': 'Dolla/;"	v
s:namespace_cache	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^let s:namespace_cache = {}$/;"	v
s:namespace_id	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^let s:namespace_id = 1$/;"	v
s:namespace_map	autoload/plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:namespace_map = {}$/;"	v
s:nbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:nbg = ['#AFFFFF', 159] "      normal bg; for   a section$/;"	v
s:nbs	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:nbs = nr2char(0x2007)$/;"	v
s:nearest_cargo	autoload/plugged/vim-polyglot/autoload/cargo.vim	/^function! s:nearest_cargo(...) abort$/;"	f
s:need_trans	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:neoterm_id	autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! s:neoterm_id(bufnr) abort$/;"	f
s:new	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:new(plugin_name) abort$/;"	f
s:new_airline_ale_get_line_number	autoload/plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:new_airline_ale_get_line_number(cnt, type) abort$/;"	f
s:new_polyglot_disabled	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^let s:new_polyglot_disabled = []$/;"	v
s:new_window	autoload/plug.vim	/^function! s:new_window()$/;"	f
s:next_section	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:next_section(stop_func_begin) abort$/;"	f
s:nfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:nfg = ['#121212', 233] "      normal fg; for   a section$/;"	v
s:nm	autoload/plugged/vim-polyglot/syntax/rmd.vim	/^    let s:nm  = s:type$/;"	v
s:nm	autoload/plugged/vim-polyglot/syntax/rmd.vim	/^    let s:nm = substitute(s:type, '=.*', '', '')$/;"	v
s:nodot	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:nodot = '\\%(\\.\\)\\@'.s:d(1).'<!'$/;"	v
s:nomacro	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^  let s:nomacro = '\\%(' . s:macro_regex . '\\)\\@<!'$/;"	v
s:nomodeline	autoload/plugged/vim-airline/autoload/airline/util.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has("patch438"))) ? '<nomodeline>' :/;"	v
s:nomodeline	autoload/plugged/vim-rooter/plugin/rooter.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' :/;"	v
s:non_bracket_continuation_regex	autoload/plugged/vim-polyglot/indent/falcon.vim	/^let s:non_bracket_continuation_regex = '\\%([\\\\.,:*\/%+]\\|\\<and\\|\\<or\\|\\%(<%\\)\\@<![=-]/;"	v
s:non_bracket_continuation_regex	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:non_bracket_continuation_regex =$/;"	v
s:non_zero_only	autoload/plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:non_zero_only = get(g:, 'airline#extensions#hunks#non_zero_only', 0)$/;"	v
s:none	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:none = ['NONE', 'NONE']$/;"	v
s:nonidS_chars	autoload/plugged/vim-polyglot/autoload/julia.vim	/^let s:nonidS_chars = "[:space:])\\\\U5D}" . s:nonid_chars$/;"	v
s:nonidS_chars	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:nonidS_chars = "[:space:])\\\\U5D}" . s:nonid_chars$/;"	v
s:nonid_chars	autoload/plugged/vim-polyglot/autoload/julia.vim	/^let s:nonid_chars = "\\U01-\\U07" . "\\U0E-\\U1F" .$/;"	v
s:nonid_chars	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:nonid_chars = "\\U01-\\U07" . "\\U0E-\\U1F" .$/;"	v
s:not_end	autoload/plugged/vim-polyglot/ftplugin/framescript.vim	/^  let s:not_end = '\\c\\%(\\<End\\)\\@<!'$/;"	v
s:notag	autoload/plugged/vim-polyglot/ftplugin/pdf.vim	/^function! s:notag()$/;"	f
s:note_pattern	autoload/plugged/vim-polyglot/indent/rst.vim	/^let s:note_pattern = '^\\.\\. '$/;"	v
s:notelse	autoload/plugged/vim-polyglot/ftplugin/fortran.vim	/^  let s:notelse = '\\%(\\<end\\s\\+\\|\\<else\\s\\+\\)\\@<!'$/;"	v
s:notend	autoload/plugged/vim-polyglot/ftplugin/ada.vim	/^   let s:notend      = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	autoload/plugged/vim-polyglot/ftplugin/aspvbs.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	autoload/plugged/vim-polyglot/ftplugin/fortran.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	autoload/plugged/vim-polyglot/ftplugin/vhdl.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notify	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:notify(method, args) dict$/;"	f
s:notprocedure	autoload/plugged/vim-polyglot/ftplugin/fortran.vim	/^  let s:notprocedure = '\\%(\\s\\+procedure\\>\\)\\@!'$/;"	v
s:notselect	autoload/plugged/vim-polyglot/ftplugin/fortran.vim	/^  let s:notselect = '\\%(\\<select\\s\\+\\)\\@<!'$/;"	v
s:nowait	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:nowait = v:version >= 704 ? '<nowait>' : ''$/;"	v
s:nowait	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:nowait = v:version >= 704 ? '<nowait>' : ''$/;"	v
s:nr2byte	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
s:nr2enc_char	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
s:nr2hex	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
s:ns_char	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_char = '\\%([\\n\\r\\uFEFF \\t]\\@!\\p\\)'$/;"	v
s:ns_char	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_char = s:SimplifyToAssumeAllPrintable(s:ns_char)$/;"	v
s:ns_char_without_c_indicator	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_char_without_c_indicator = s:SimplifyToAssumeAllPrintable(s:ns_char_without_c_indicator/;"	v
s:ns_char_without_c_indicator	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_char_without_c_indicator = substitute(s:ns_char, '\\v\\C[\\zs', '\\=s:c_indicator[1:-2]/;"	v
s:ns_directive_name	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_directive_name = s:ns_char.'\\+'$/;"	v
s:ns_global_tag_prefix	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_global_tag_prefix = s:ns_tag_char.s:ns_uri_char.'*'$/;"	v
s:ns_id	autoload/plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:ns_id = 1$/;"	v
s:ns_local_tag_prefix	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_local_tag_prefix  = '!'.s:ns_uri_char.'*'$/;"	v
s:ns_plain_char_in	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_char_in  = '\\%('.s:ns_char.'#\\|:'.s:ns_plain_safe_in.'\\|'.s:ns_plain_safe_in_w/;"	v
s:ns_plain_char_out	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_char_out = '\\%('.s:ns_char.'#\\|:'.s:ns_plain_safe_out.'\\|'.s:ns_plain_safe_out/;"	v
s:ns_plain_first_in	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_first_in  = '\\%('.s:ns_char_without_c_indicator.'\\|[?:\\-]\\%('.s:ns_plain_safe/;"	v
s:ns_plain_first_out	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_first_out = '\\%('.s:ns_char_without_c_indicator.'\\|[?:\\-]\\%('.s:ns_plain_safe/;"	v
s:ns_plain_in	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_in  = s:ns_plain_first_in  . s:ns_plain_char_in.'*'$/;"	v
s:ns_plain_out	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_out = s:ns_plain_first_out . s:ns_plain_char_out.'*'$/;"	v
s:ns_plain_safe_in	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_in  = '\\%('.s:c_flow_indicator.'\\@!'.s:ns_char.'\\)'$/;"	v
s:ns_plain_safe_in	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_in = substitute(s:ns_plain_safe_in, '\\V\\C\\\\%('.s:_collection.'\\\\@!'.s:/;"	v
s:ns_plain_safe_in_without_colhash	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_in_without_colhash = substitute(s:ns_plain_safe_in, '\\V\\C'.s:_neg_collecti/;"	v
s:ns_plain_safe_out	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_out = s:ns_char$/;"	v
s:ns_plain_safe_out_without_colhash	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_out_without_colhash = substitute(s:ns_plain_safe_out, '\\V\\C'.s:_neg_collec/;"	v
s:ns_tag_char	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let s:ns_tag_char  = '\\v%(%\\x\\x|'.s:ns_word_char.'|[#\/;?:@&=+$.~*''()])'$/;"	v
s:ns_tag_char	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_tag_char  = '\\%(%\\x\\x\\|'.s:ns_word_char.'\\|[#\/;?:@&=+$.~*''()]\\)'$/;"	v
s:ns_tag_char	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_tag_char = s:SimplifyAdjacentCollections(s:ns_tag_char)$/;"	v
s:ns_tag_prefix	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_tag_prefix = s:ns_local_tag_prefix.$/;"	v
s:ns_uri_char	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let s:ns_uri_char  = '\\v%(%\\x\\x|'.s:ns_word_char.'\\v|[#\/;?:@&=+$,.!~*''()[\\]])'$/;"	v
s:ns_uri_char	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_uri_char  = '\\%(%\\x\\x\\|'.s:ns_word_char.'\\|[#\/;?:@&=+$,.!~*''()[\\]]\\)'$/;"	v
s:ns_uri_char	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_uri_char = s:SimplifyAdjacentCollections(s:ns_uri_char)$/;"	v
s:ns_word_char	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let s:ns_word_char = '\\v[[:alnum:]_\\-]'$/;"	v
s:ns_word_char	autoload/plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_word_char = '[[:alnum:]_\\-]'$/;"	v
s:nsplit	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
s:number_column	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:number_column = get(s:gb, g:gruvbox_number_column)$/;"	v
s:number_column	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:number_column = s:none$/;"	v
s:number_map	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = &encoding == 'utf-8'$/;"	v
s:number_map	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = {$/;"	v
s:nvim	autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	v
s:nvim_cb	autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	f
s:nvim_create_keymap	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:nvim_create_keymap(winid) abort$/;"	f
s:nvim_get_botline	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:nvim_get_botline(topline, height, width, bufnr) abort$/;"	f
s:nvim_mq_job_handler	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_mq_job_handler(job_id, data, event) dict$/;"	f
s:nvim_output_handler	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_output_handler(job_id, data, event) dict$/;"	f
s:nvim_po_job_handler	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_po_job_handler(job_id, data, event) dict$/;"	f
s:nvim_untracked_job_handler	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_untracked_job_handler(job_id, data, event) dict$/;"	f
s:obj	autoload/plugged/vim-polyglot/indent/ocaml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|ob/;"	v
s:obj	autoload/plugged/vim-polyglot/indent/sml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|ob/;"	v
s:ocaml_word_char	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^    let s:ocaml_word_char = '\\w|[\\xc0-\\xff]|'''$/;"	v
s:ocre	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:ocre         = [ '#87875f', 101 ]$/;"	v
s:oct_regex	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:oct_regex = '0o\\o\\%(_\\?\\o\\)*\\%(\\>\\|im\\>\\|\\ze\\O\\)'$/;"	v
s:oe	autoload/plugged/vim-polyglot/syntax/ledger.vim	/^let s:oe = '\\%#=1'$/;"	v
s:offset	autoload/plugged/vim-signify/autoload/sy/util.vim	/^function! s:offset() abort$/;"	f
s:old_cpo	autoload/plugged/NERDTree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpoptions$/;"	v
s:old_spec	autoload/plugged/vim-polyglot/syntax/rst.vim	/^    let s:old_spec = g:rst_syntax_code_list$/;"	v
s:old_style	autoload/plugged/vim-polyglot/syntax/erlang.vim	/^let s:old_style = (exists("g:erlang_old_style_highlight") &&$/;"	v
s:oldcolumn	autoload/plugged/vim-polyglot/syntax/lhaskell.vim	/^let s:oldcolumn=col(".")$/;"	v
s:oldline	autoload/plugged/vim-polyglot/syntax/lhaskell.vim	/^let s:oldline=line(".")$/;"	v
s:on_async_response	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:on_async_response(id, resp, isErr) dict$/;"	f
s:on_begin	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:on_begin()$/;"	f
s:on_colorscheme_changed	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:on_colorscheme_changed()$/;"	f
s:on_cursor_moved	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:on_cursor_moved()$/;"	f
s:on_end	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:on_end()$/;"	f
s:on_exit	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:on_exit(name, code) abort$/;"	f
s:on_exit	autoload/plugged/coc.nvim/autoload/coc/task.vim	/^function! s:on_exit(id, code) abort$/;"	f
s:on_exit_clean	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! s:on_exit_clean(...) dict abort$/;"	f
s:on_exit_mq	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_mq(channel) dict abort$/;"	f
s:on_exit_po	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_po(channel) dict abort$/;"	f
s:on_exit_untracked	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_untracked(channel) dict abort$/;"	f
s:on_focus_gained	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:on_focus_gained()$/;"	f
s:on_stderr	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:on_stderr(name, msgs)$/;"	f
s:on_stderr	autoload/plugged/coc.nvim/autoload/coc/task.vim	/^function! s:on_stderr(id, msgs)$/;"	f
s:on_stdout	autoload/plugged/coc.nvim/autoload/coc/task.vim	/^function! s:on_stdout(id, msgs)$/;"	f
s:on_stdout	autoload/plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_stdout(channel, msg) dict abort$/;"	f
s:on_window_changed	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:on_window_changed(event)$/;"	f
s:one_line_scope_regex	autoload/plugged/vim-polyglot/indent/solidity.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:one_line_scope_regex	autoload/plugged/vim-polyglot/indent/typescript.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:oneline	autoload/plugged/vim-polyglot/syntax/markdown.vim	/^    let s:oneline = ' oneline'$/;"	v
s:oneline	autoload/plugged/vim-polyglot/syntax/markdown.vim	/^    let s:oneline = ''$/;"	v
s:oneline_block	autoload/plugged/vim-polyglot/indent/svelte.vim	/^let s:oneline_block = '^\\s*{#.*{\/.*}\\s*$'$/;"	v
s:open	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:open(cmd, target)$/;"	f
s:open	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:open(cmd, target)$/;"	f
s:open	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:open(visual, ...)$/;"	f
s:openBlock	autoload/plugged/vim-polyglot/indent/octave.vim	/^let s:openBlock = s:beginBlock + s:midBlock$/;"	v
s:openExplorer	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node) abort$/;"	f
s:openHSplit	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target) abort$/;"	f
s:openHSplitBookmark	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplitBookmark(bm) abort$/;"	f
s:openInNewTab	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target) abort$/;"	f
s:openInNewTabSilent	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target) abort$/;"	f
s:openNodeRecursively	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node) abort$/;"	f
s:openVSplit	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target) abort$/;"	f
s:openVSplitBookmark	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplitBookmark(bm) abort$/;"	f
s:open_browser	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:open_browser(url) abort$/;"	f
s:open_patt	autoload/plugged/vim-polyglot/indent/lua.vim	/^let s:open_patt = '\\C\\%(\\<\\%(function\\|if\\|repeat\\|do\\)\\>\\|(\\|{\\)'$/;"	v
s:operators	autoload/plugged/vim-polyglot/autoload/julia.vim	/^let s:operators = '\\%(' . '\\.\\%([-+*\/^÷%|&!]\\|\/\/\\|\\\\\\|<<\\|>>>\\?\\)\\?=' .$/;"	v
s:operators	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:operators = '\\%(' . '\\.\\%([-+*\/^÷%|&!]\\|\/\/\\|\\\\\\|<<\\|>>>\\?\\)\\?=' .$/;"	v
s:opfirst	autoload/plugged/vim-polyglot/indent/javascript.vim	/^let s:opfirst = '^' . get(g:,'javascript_opfirst',$/;"	v
s:optionalblock	autoload/plugged/vim-polyglot/indent/cobol.vim	/^function! s:optionalblock(lnum,ind,blocks,clauses)$/;"	f
s:or	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:or(xs) abort$/;"	f
s:or_replace	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^let s:or_replace = '\\%(or\\s\\+replace\\s\\+\\)\\?'$/;"	v
s:orangarine	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:orangarine      = ['#e8a15a', 179]$/;"	v
s:orange	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:orange       = [ '#ff8700', 208 ]$/;"	v
s:orange	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:orange  = [166, '#d75f00']$/;"	v
s:orange	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:orange  = {'hex': '#CB4B16', 'term': 166}  " 203,  75,  22$/;"	v
s:orange	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:orange   = [166, '#ffae57']$/;"	v
s:orange	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:orange = s:getGruvColor('GruvboxOrange')$/;"	v
s:orange	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:orange = s:gb.bright_orange$/;"	v
s:orange	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:orange = s:gb.faded_orange$/;"	v
s:orders	autoload/plugged/vim-polyglot/syntax/hostconf.vim	/^let s:orders = ['bind', 'hosts', 'nis']$/;"	v
s:ordot	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^    let s:ordot = '\\|\\ze\\.\\%( \\@=\\|$\\)'$/;"	v
s:original_cpo	autoload/plugged/vim-polyglot/syntax/tmux.vim	/^let s:original_cpo = &cpo$/;"	v
s:osascript	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:osascript(...) abort$/;"	f
s:other_mf_macros	autoload/plugged/vim-polyglot/syntax/mp.vim	/^  let s:other_mf_macros = g:other_mf_macros$/;"	v
s:out_remain_text	autoload/plugged/coc.nvim/autoload/coc/task.vim	/^let s:out_remain_text = {}$/;"	v
s:outerbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:outerbg  = [ 16, 'NONE']$/;"	v
s:outerfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:outerfg = [ 16, '#000000']$/;"	v
s:outerfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:outerfg  = [ 16, '#8d96a1']$/;"	v
s:outerfgi	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:outerfgi = [ 16, '#2f3d4d']$/;"	v
s:overrides	autoload/plugged/palenight.vim/autoload/palenight.vim	/^let s:overrides = get(g:, "palenight_color_overrides", {})$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.inactive.left   = [ [ s:p_black, s:p_menu_grey ], [ s:p_black, s:p_menu_grey ] ]$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.inactive.middle = [ [ s:p_black, s:p_menu_grey ] ]$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.inactive.right  = copy(s:p.inactive.left)$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.insert.left     = [ [ s:p_black, s:p_blue ], [ s:p_blue, s:p_menu_grey ] ]$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.insert.middle   = copy(s:p.normal.middle)$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.insert.right    = copy(s:p.insert.left)$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.normal.error    = [ [ s:p_black, s:p_red ] ]$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.normal.left     = [ [ s:p_black, s:p_purple ], [ s:p_purple, s:p_menu_grey ] ]$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.normal.middle   = [ [ s:p_comment_grey, s:p_black ] ]$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.normal.right    = copy(s:p.normal.left)$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.normal.warning  = [ [ s:p_black, s:p_yellow ] ]$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.replace.left    = [ [ s:p_black, s:p_green ], [ s:p_green, s:p_menu_grey ] ]$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.replace.middle  = copy(s:p.normal.middle)$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.replace.right   = copy(s:p.replace.left)$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.tabline.left    = [ [ s:p_yellow, s:p_menu_grey ] ]$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.tabline.middle  = [ [ s:p_black, s:p_menu_grey ] ]$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.tabline.right   = [ [ s:p_black, s:p_yellow ] ]$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.tabline.tabsel  = copy(s:p.tabline.right)$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.visual.left     = [ [ s:p_black, s:p_cyan ], [ s:p_cyan, s:p_menu_grey ] ]$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.visual.middle   = copy(s:p.normal.middle)$/;"	v
s:p	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p.visual.right    = copy(s:p.visual.left)$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p = {'normal':{}, 'inactive':{}, 'insert':{}, 'replace':{}, 'visual':{}, 'tabline':{}, '/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.inactive.left =  [ [ s:bg4, s:bg1 ], [ s:bg4, s:bg1 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.inactive.middle = [ [ s:bg4, s:bg1 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.inactive.right = [ [ s:bg4, s:bg1 ], [ s:bg4, s:bg1 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.insert.left = [ [ s:bg0, s:blue, 'bold' ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.insert.middle = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.insert.right = [ [ s:bg0, s:blue ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.error = [ [ s:bg0, s:orange ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.left = [ [ s:bg0, s:fg4, 'bold' ], [ s:fg4, s:bg2 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.middle = [ [ s:fg4, s:bg1 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.right = [ [ s:bg0, s:fg4 ], [ s:fg4, s:bg2 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.warning = [ [ s:bg2, s:yellow ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.replace.left = [ [ s:bg0, s:aqua, 'bold' ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.replace.middle = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.replace.right = [ [ s:bg0, s:aqua ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.left = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.middle = [ [ s:bg0, s:bg0 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.right = [ [ s:bg0, s:orange ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.tabsel = [ [ s:bg0, s:fg4 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.terminal.left = [ [ s:bg0, s:green, 'bold' ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.terminal.middle = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.terminal.right = [ [ s:bg0, s:green ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.visual.left = [ [ s:bg0, s:orange, 'bold' ], [ s:bg0, s:bg4 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.visual.middle = [ [ s:fg4, s:bg1 ] ]$/;"	v
s:p	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.visual.right = [ [ s:bg0, s:orange ], [ s:bg0, s:bg4 ] ]$/;"	v
s:p_black	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_black = ["#292D3E", 235, 0]$/;"	v
s:p_blue	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_blue = ["#82b1ff", 39, 4]$/;"	v
s:p_comment_grey	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_comment_grey = ["#697098", 59, 15]$/;"	v
s:p_cursor_grey	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_cursor_grey = ["#2C323C", 236, 8]$/;"	v
s:p_cyan	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_cyan = ["#89DDFF", 38, 6]$/;"	v
s:p_dark_red	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_dark_red = ["#BE5046", 196, 9]$/;"	v
s:p_dark_yellow	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_dark_yellow = ["#F78C6C", 173, 11]$/;"	v
s:p_green	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_green = ["#C3E88D", 114, 2]$/;"	v
s:p_gutter_fg_grey	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_gutter_fg_grey = ["#4B5263", 238, 15]$/;"	v
s:p_light_red	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_light_red = ["#ff869a", 204, 1]$/;"	v
s:p_menu_grey	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_menu_grey = ["#3E4452", 237, 8]$/;"	v
s:p_purple	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_purple = ["#c792ea", 170, 5]$/;"	v
s:p_red	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_red = ["#ff5370", 204, 1]$/;"	v
s:p_special_grey	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_special_grey = ["#3B4048", 238, 15]$/;"	v
s:p_vertsplit	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_vertsplit = ["#181A1F", 59, 15]$/;"	v
s:p_white	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_white = ["#bfc7d5", 145, 7]$/;"	v
s:p_yellow	autoload/plugged/palenight.vim/autoload/lightline/colorscheme/palenight.vim	/^let s:p_yellow = ["#ffcb6b", 180, 3]$/;"	v
s:pad_between_letters	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
s:pad_both_sides	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
s:pad_left	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
s:pad_right	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
s:padding_by_displaywidth	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
s:pair_skip_expr	autoload/plugged/vim-polyglot/indent/graphql.vim	/^let s:pair_skip_expr =$/;"	v
s:pairs	autoload/plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:pairs = [$/;"	v
s:palt	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^    let s:palt.airline_y[0] = s:bg[0]$/;"	v
s:palt	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^    let s:palt.airline_y[2] = s:bg[1]$/;"	v
s:palt	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt = {$/;"	v
s:palt_c	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^    let s:palt_c.airline_b[0] = s:cbg[0]$/;"	v
s:palt_c	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^    let s:palt_c.airline_b[2] = s:cbg[1]$/;"	v
s:palt_c	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^    let s:palt_c.airline_y[0] = s:cbg[0]$/;"	v
s:palt_c	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^    let s:palt_c.airline_y[2] = s:cbg[1]$/;"	v
s:palt_c	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^  let s:palt_c[pk][0] = s:cfg[0]$/;"	v
s:palt_c	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^  let s:palt_c[pk][1] = s:cbg[0]$/;"	v
s:palt_c	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^  let s:palt_c[pk][2] = s:cfg[1]$/;"	v
s:palt_c	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^  let s:palt_c[pk][3] = s:cbg[1]$/;"	v
s:palt_c	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_c   = deepcopy(s:palt)$/;"	v
s:palt_d	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d   = deepcopy(s:palt)$/;"	v
s:palt_d	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d.airline_a[0] = s:fg[0]$/;"	v
s:palt_d	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d.airline_a[1] = s:bg[0]$/;"	v
s:palt_d	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d.airline_a[2] = s:fg[1]$/;"	v
s:palt_d	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d.airline_a[3] = s:bg[1]$/;"	v
s:palt_d	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d.airline_b[0] = s:fg[0]$/;"	v
s:palt_d	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d.airline_b[2] = s:fg[1]$/;"	v
s:palt_d	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d.airline_c[0] = s:fg[0]$/;"	v
s:palt_d	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d.airline_c[2] = s:fg[1]$/;"	v
s:palt_d	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d.airline_c[4] = 'NONE'$/;"	v
s:palt_d_m	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d_m = deepcopy(s:palt_m)$/;"	v
s:palt_i	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_i   = deepcopy(s:palt)$/;"	v
s:palt_i	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_i.airline_a[0] = s:ifg[0]$/;"	v
s:palt_i	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_i.airline_a[1] = s:ibg[0]$/;"	v
s:palt_i	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_i.airline_a[2] = s:ifg[1]$/;"	v
s:palt_i	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_i.airline_a[3] = s:ibg[1]$/;"	v
s:palt_i_m	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_i_m = deepcopy(s:palt_m)$/;"	v
s:palt_m	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_m = {$/;"	v
s:palt_r	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_r   = deepcopy(s:palt)$/;"	v
s:palt_r	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_r.airline_a[0] = s:rfg[0]$/;"	v
s:palt_r	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_r.airline_a[1] = s:rbg[0]$/;"	v
s:palt_r	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_r.airline_a[2] = s:rfg[1]$/;"	v
s:palt_r	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_r.airline_a[3] = s:rbg[1]$/;"	v
s:palt_r_m	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_r_m = deepcopy(s:palt_m)$/;"	v
s:palt_v	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v   = deepcopy(s:palt)$/;"	v
s:palt_v	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v.airline_a[0] = s:vfg[0]$/;"	v
s:palt_v	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v.airline_a[1] = s:vbg[0]$/;"	v
s:palt_v	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v.airline_a[2] = s:vfg[1]$/;"	v
s:palt_v	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v.airline_a[3] = s:vbg[1]$/;"	v
s:palt_v	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v.airline_z[0] = s:vfg[0]$/;"	v
s:palt_v	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v.airline_z[1] = s:vbg[0]$/;"	v
s:palt_v	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v.airline_z[2] = s:vfg[1]$/;"	v
s:palt_v	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v.airline_z[3] = s:vbg[1]$/;"	v
s:palt_v_m	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v_m = deepcopy(s:palt_m)$/;"	v
s:paren_pairs	autoload/plugged/vim-polyglot/indent/cython.vim	/^let s:paren_pairs = {'()': 50, '[]': 100, '{}': 1000}$/;"	v
s:paren_pairs	autoload/plugged/vim-polyglot/indent/python.vim	/^let s:paren_pairs = {'()': 50, '[]': 100, '{}': 1000}$/;"	v
s:parent	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:parent(dir)$/;"	f
s:parse_errors	autoload/plugged/vim-polyglot/autoload/zig/fmt.vim	/^function! s:parse_errors(filename, lines) abort$/;"	f
s:parse_options	autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
s:partition	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
s:parts	autoload/plugged/vim-airline/autoload/airline/parts.vim	/^let s:parts = {}$/;"	v
s:pat	autoload/plugged/vim-polyglot/compiler/coffee.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:pat	autoload/plugged/vim-polyglot/compiler/ls.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:path	autoload/plug.vim	/^  function! s:path(path)$/;"	f
s:path	autoload/plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^let s:path = expand('<sfile>:h')$/;"	v
s:path	autoload/plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:path = &l:path$/;"	v
s:path	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:path = &l:path$/;"	v
s:path_subcommands	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:path_subcommands = {}$/;"	v
s:pattern	autoload/plugged/vim-polyglot/ftplugin/twig.vim	/^                let s:pattern .= ':'$/;"	v
s:pattern	autoload/plugged/vim-polyglot/ftplugin/twig.vim	/^            let s:pattern .= '{%\\s*\\<' . s:tag . '\\>\\s*\\%(.*=\\)\\@![^}]\\{-}%}'$/;"	v
s:pattern	autoload/plugged/vim-polyglot/ftplugin/twig.vim	/^        let s:pattern .= ':{%\\s*\\<' . s:element[-1:][0] . '\\>\\s*.\\{-}%}'$/;"	v
s:pattern	autoload/plugged/vim-polyglot/ftplugin/twig.vim	/^        let s:pattern = ''$/;"	v
s:pattern	autoload/plugged/vim-polyglot/syntax/cucumber.vim	/^function! s:pattern(key)$/;"	f
s:permutations	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
s:permute_suffixes	autoload/plugged/vim-polyglot/syntax/hostconf.vim	/^function s:permute_suffixes(list)$/;"	f
s:phpindent	autoload/plugged/vim-polyglot/indent/blade.vim	/^let s:phpindent = &indentexpr$/;"	v
s:pink	autoload/plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:pink    = [131, '#af5f5f']$/;"	v
s:pink	autoload/plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:pink     = [131, '#F07178']$/;"	v
s:plain_delims	autoload/plugged/vim-polyglot/syntax/raku.vim	/^let s:plain_delims = [$/;"	v
s:plain_mf_macros	autoload/plugged/vim-polyglot/syntax/mp.vim	/^  let s:plain_mf_macros = g:plain_mf_macros$/;"	v
s:plain_mf_modes	autoload/plugged/vim-polyglot/syntax/mp.vim	/^  let s:plain_mf_modes = g:plain_mf_modes$/;"	v
s:plgroups	autoload/plugged/vim-polyglot/syntax/pgsql.vim	/^let s:plgroups = 'plpgsql'$/;"	v
s:pluck	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:pluck(dict, key, default)$/;"	f
s:plug_buf	autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_call	autoload/plug.vim	/^  function! s:plug_call(fn, ...)$/;"	f
s:plug_expand	autoload/plug.vim	/^function! s:plug_expand(fmt)$/;"	f
s:plug_fnamemodify	autoload/plug.vim	/^function! s:plug_fnamemodify(fname, mods)$/;"	f
s:plug_getcwd	autoload/plug.vim	/^function! s:plug_getcwd()$/;"	f
s:plug_src	autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:plug_tempname	autoload/plug.vim	/^function! s:plug_tempname()$/;"	f
s:plug_window_exists	autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
s:plugin_name	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:plugin_name() abort dict$/;"	f
s:plugin_name	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:plugin_path	autoload/plugged/vim-polyglot/autoload/nim.vim	/^let s:plugin_path = escape(expand('<sfile>:p:h'), '\\')$/;"	v
s:po_jobs	autoload/plugged/vim-airline/autoload/airline/async.vim	/^let s:po_jobs        = {}$/;"	v
s:po_output	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! s:po_output(buf, file)$/;"	f
s:pop	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:pop(list) abort$/;"	f
s:popup	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:popup(opts) abort$/;"	f
s:popup_cursor	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:popup_cursor(n) abort$/;"	f
s:popup_position	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:popup_position(config) abort$/;"	f
s:popup_support	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:popup_support()$/;"	f
s:popup_visible	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:popup_visible(id) abort$/;"	f
s:popup_window	autoload/plugged/vim-signify/autoload/sy/util.vim	/^let s:popup_window = 0$/;"	v
s:prefix	autoload/plugged/coc.nvim/autoload/coc/list.vim	/^let s:prefix = '[List Preview]'$/;"	v
s:prepare	autoload/plug.vim	/^function! s:prepare(...)$/;"	f
s:prepare_env	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:prepare_env = {$/;"	v
s:prepend_opts	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:prepend_opts(dict, eopts)$/;"	f
s:present	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:present(dict, ...)$/;"	f
s:pretty_pink	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:pretty_pink     = ['#f29db4', 217]$/;"	v
s:prev_ends_with	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:prev_ends_with(context, expr)$/;"	f
s:prev_lnum	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:prev_lnum(lnum)$/;"	f
s:prev_non_connected_line	autoload/plugged/vim-polyglot/indent/applescript.vim	/^func! s:prev_non_connected_line(line)$/;"	f
s:prev_section	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:prev_section(stop_func_begin) abort$/;"	f
s:prev_starts_with	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:prev_starts_with(context, expr)$/;"	f
s:prevgood	autoload/plugged/vim-polyglot/indent/bst.vim	/^function! s:prevgood(lnum)$/;"	f
s:prevgood	autoload/plugged/vim-polyglot/indent/cobol.vim	/^function! s:prevgood(lnum)$/;"	f
s:previewBookmark	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:previewBookmark(bookmark) abort$/;"	f
s:previewNodeCurrent	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node) abort$/;"	f
s:previewNodeHSplit	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node) abort$/;"	f
s:previewNodeHSplitBookmark	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplitBookmark(bookmark) abort$/;"	f
s:previewNodeVSplit	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node) abort$/;"	f
s:previewNodeVSplitBookmark	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplitBookmark(bookmark) abort$/;"	f
s:preview_color	autoload/plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:preview_color(linenr) abort$/;"	f
s:preview_commit	autoload/plug.vim	/^function! s:preview_commit()$/;"	f
s:prevnonblanknoncomment	autoload/plugged/vim-polyglot/indent/css.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
s:prevnonblanknoncomment	autoload/plugged/vim-polyglot/indent/ld.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
s:prevnonblanknoncomment	autoload/plugged/vim-polyglot/indent/scss.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
s:prevnonblanknoncomment	autoload/plugged/vim-polyglot/indent/stylus.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
s:prevnonblanknoncomment	autoload/plugged/vim-polyglot/indent/tcl.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
s:process_rtp	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! s:process_rtp(rtp)$/;"	f
s:product	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:product(lists) abort$/;"	f
s:program_end	autoload/plugged/vim-polyglot/indent/sas.vim	/^let s:program_end = '\\v%(^|;)\\s*endsas\\s*;'$/;"	v
s:progress_bar	autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
s:progress_opt	autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
s:progresschars	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^let s:progresschars = get(g:, 'coc_progress_chars', ['░', '▇'])$/;"	v
s:project	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:project(projectPath, cont)$/;"	f
s:project_root	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:prompt	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:prompt(msg)$/;"	f
s:promptToDelBuffer	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
s:prompt_snapshot_file	autoload/plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:prompt_snapshot_file = get(g:, 'airline#extensions#promptline#snapshot_file', '')$/;"	v
s:prompt_win_bufnr	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^let s:prompt_win_bufnr = 0$/;"	v
s:prompt_win_width	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^let s:prompt_win_width = get(g:, 'coc_prompt_win_width', 32)$/;"	v
s:prop_offset	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^let s:prop_offset = get(g:, 'coc_text_prop_offset', 1000)$/;"	v
s:property	autoload/plugged/vim-polyglot/indent/sass.vim	/^let s:property = '^\\s*:\\|^\\s*[[:alnum:]#{}-]\\+\\%(:\\|\\s*=\\)'$/;"	v
s:prototype	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^let s:prototype = {}$/;"	v
s:prototype	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^let s:prototype = {}$/;"	v
s:prototype	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^let s:prototype.overflow_group = 'airline_tab'$/;"	v
s:prototype.add_raw	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_raw(text) dict$/;"	f
s:prototype.add_section	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section(group, contents) dict$/;"	f
s:prototype.add_section_spaced	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section_spaced(group, contents) dict$/;"	f
s:prototype.build	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.build() dict$/;"	f
s:prototype.build	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.build() dict$/;"	f
s:prototype.get_position	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.get_position() dict$/;"	f
s:prototype.insert_raw	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.insert_raw(text, position) dict$/;"	f
s:prototype.insert_section	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.insert_section(group, contents, position) dict$/;"	f
s:prototype.insert_titles	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.insert_titles(current, first, last) dict$/;"	f
s:prototype.split	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.split(...) dict$/;"	f
s:prototype.try_insert_title	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.try_insert_title(index, group, pos, sep_size, force) dict$/;"	f
s:ps1xml_cpo_save	autoload/plugged/vim-polyglot/syntax/ps1xml.vim	/^let s:ps1xml_cpo_save = &cpo$/;"	v
s:purple	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:purple = s:colors.purple$/;"	v
s:purple	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:purple = s:gb.bright_purple$/;"	v
s:purple	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:purple = s:gb.faded_purple$/;"	v
s:purple	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:purple[1] = 13$/;"	v
s:push	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
s:pushd	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:pushd(dict)$/;"	f
s:query_path	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:query_path(root) abort$/;"	f
s:quickfix_populate	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! s:quickfix_populate(data) abort$/;"	f
s:quickfix_toggle	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! s:quickfix_toggle(...) abort$/;"	f
s:quit	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^  let s:quit = "quit"$/;"	v
s:quit	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^let s:quit = ""$/;"	v
s:quotable	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:quotable = '\\%(' . s:idregex . '\\|?\\|' . s:operators . '\\|' . s:float_regex . '\\|' . /;"	v
s:quoting_colon	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:quoting_colon = '\\%(\\%(^\\s*\\|\\s\\{6,\\}\\|[' . s:nonid_chars . s:uniop_chars . s:bino/;"	v
s:quoting_colonS	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:quoting_colonS = '\\s\\@'.s:d(1).'<=:'$/;"	v
s:r_env	autoload/plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:r_env = '^\\%(\\' . s:r_envflag . '\\s\\+\\)*\\(\\S\\+\\)'$/;"	v
s:r_envflag	autoload/plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:r_envflag = '%(\\S\\+=\\S\\+\\|-[iS]\\|--ignore-environment\\|--split-string\\)'$/;"	v
s:r_hashbang	autoload/plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:r_hashbang = '^#!\\s*\\(\\S\\+\\)\\s*\\(.*\\)\\s*'$/;"	v
s:rac	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:rac = ['#D75F5F', 167] "  red accent fg$/;"	v
s:rand	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:rand(max) abort$/;"	f
s:random_theme	autoload/plugged/vim-airline/plugin/airline.vim	/^function! s:random_theme() abort$/;"	f
s:rbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:rbg = ['#FF5F5F', 203] "     replace bg; for   a section$/;"	v
s:re_escaped	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_escaped='\\%(\\\\\\)\\@<!\\%(\\\\\\\\\\)*\\zs\\\\'$/;"	v
s:re_factor	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{0}='\\\\\\%([^x_]\\|x\\x\\{0,2}\\|_[.$^]\\=\\)'$/;"	v
s:re_factor	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{1}= '\\[:\\%(alnum\\|alpha\\|blank\\|cntrl\\|digit\\|graph\\|lower\\|print\\|pun/;"	v
s:re_factor	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{2}='\\[\\%([^^][^]]*\\|\\^.[^]]*\\)\\]'$/;"	v
s:re_factor	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{3}='{[0-9,]\\+}?\\='$/;"	v
s:re_factor	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{4}='(?[iImM]\\{1,2})'$/;"	v
s:re_factor	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{5}='(\\(?:\\|?=\\|?!\\|?<=\\|?<!\\|?>\\|?[-#ixm]\\)\\=[^()]*)'$/;"	v
s:re_factor_size	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor_size=6$/;"	v
s:re_unescaped	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_unescaped='\\%(\\\\\\)\\@<!\\%(\\\\\\\\\\)*\\zs'$/;"	v
s:reap	autoload/plug.vim	/^function! s:reap(name)$/;"	f
s:rebase_abbrevs	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:rebase_abbrevs = {$/;"	v
s:record_diagnostics	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:record_diagnostics(state)$/;"	f
s:red	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:red = s:colors.red$/;"	v
s:red	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:red          = [ '#af5f5f', 131 ]$/;"	v
s:red	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:red     = {'hex': '#DC322F', 'term': 160}  " 220,  50,  47 *$/;"	v
s:red	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:red    = s:gb.bright_red$/;"	v
s:red	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:red    = s:gb.faded_red$/;"	v
s:red	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:red[1]    = 9$/;"	v
s:redirects	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:redirects = {}$/;"	v
s:reduce_line	autoload/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:reduce_line(lines)$/;"	f
s:ref_header	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:ref_header = '\\%(Merge\\|Rebase\\|Upstream\\|Pull\\|Push\\)'$/;"	v
s:reference	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^let s:reference = '\\<\\%(\\c\\%(clos\\|resolv\\|referenc\\)e[sd]\\=\\|\\cfix\\%(e[sd]\\)\\=\\)\\/;"	v
s:refreshCurrent	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node) abort$/;"	f
s:refreshRoot	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot() abort$/;"	f
s:regress_bar	autoload/plug.vim	/^function! s:regress_bar()$/;"	f
s:rel	autoload/plugged/vim-polyglot/indent/javascript.vim	/^let s:rel = has('reltime')$/;"	v
s:reload_plugins	autoload/plug.vim	/^function! s:reload_plugins()$/;"	f
s:remove_ansi_sequences	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:remove_ansi_sequences(text) abort$/;"	f
s:remove_continuation	autoload/plugged/vim-polyglot/indent/make.vim	/^function s:remove_continuation(line)$/;"	f
s:remove_continuation	autoload/plugged/vim-polyglot/indent/omake.vim	/^function s:remove_continuation(line)$/;"	f
s:remove_layout	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:remove_layout(opts)$/;"	f
s:remove_rtp	autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
s:remove_triggers	autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
s:renameBuffer	autoload/plugged/NERDTree/nerdtree_plugin/fs_menu.vim	/^function! s:renameBuffer(bufNum, newNodeName, isDirectory)$/;"	f
s:reorg_rtp	autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
s:repair_posix_text	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:repair_posix_text(text, ...) abort$/;"	f
s:repeat	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:repeat(str,count)$/;"	f
s:repeated_find	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:repeated_find(ai_mode)$/;"	f
s:replace	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
s:replace	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:replace(cmd, pat, sub)$/;"	f
s:replace_first	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
s:repo_bare	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
s:repo_config	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_config(name) dict abort$/;"	f
s:repo_dir	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
s:repo_find	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_find(object) dict abort$/;"	f
s:repo_git_chomp	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
s:repo_git_chomp_in_tree	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
s:repo_git_command	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
s:repo_head	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
s:repo_homepage	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:repo_homepage() abort$/;"	f
s:repo_list	autoload/plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^function! s:repo_list() abort$/;"	f
s:repo_prepare	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_prepare(...) dict abort$/;"	f
s:repo_prototype	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repo_rev_parse	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
s:repo_superglob	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
s:repo_translate	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_translate(rev) dict abort$/;"	f
s:repo_tree	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
s:repo_user	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
s:repos	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:repos = {}$/;"	v
s:request	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:request(method, args) dict$/;"	f
s:request_async	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:request_async(method, args, cb) dict$/;"	f
s:reset	autoload/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:reset() abort$/;"	f
s:reset_colors	autoload/plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:reset_colors() abort$/;"	f
s:reset_untracked_cache	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:reset_untracked_cache(shellcmdpost)$/;"	f
s:restore_view	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:restore_view()$/;"	f
s:restorehistory	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:restorehistory(name, history) abort$/;"	f
s:resume_queue	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:resume_queue = []$/;"	v
s:retry	autoload/plug.vim	/^function! s:retry()$/;"	f
s:returnAppleScriptIndent	autoload/plugged/vim-polyglot/indent/applescript.vim	/^func! s:returnAppleScriptIndent()$/;"	f
s:returnTypeMatcher	autoload/plugged/vim-polyglot/indent/scala.vim	/^let s:returnTypeMatcher = '\\%(:\\s*\\w\\+' . s:typeSpecMatcher . '\\?\\)'$/;"	v
s:reuseWin	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^function! s:reuseWin(dir) abort$/;"	f
s:reverse	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
s:reverse_list	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:reverse_list(opts)$/;"	f
s:revert	autoload/plug.vim	/^function! s:revert()$/;"	f
s:rfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:rfg = s:nfg            "     replace fg; for   a section$/;"	v
s:rgb_colour	autoload/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:rgb_colour(x, y, z)$/;"	f
s:rgb_level	autoload/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:rgb_level(n)$/;"	f
s:rgb_number	autoload/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:rgb_number(x)$/;"	f
s:right	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:right(s)$/;"	f
s:rm_rf	autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
s:root	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	autoload/plugged/coc.nvim/autoload/health/coc.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	autoload/plugged/coc.nvim/plugin/coc.vim	/^let s:root = expand('<sfile>:h:h')$/;"	v
s:root	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:root()$/;"	f
s:rootNERDTreePath	autoload/plugged/NERDTree/autoload/nerdtree.vim	/^let s:rootNERDTreePath = resolve(expand('<sfile>:p:h:h'))$/;"	v
s:rooter	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:rooter()$/;"	f
s:rootless	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:rootless()$/;"	f
s:rtp	autoload/plug.vim	/^function! s:rtp(spec)$/;"	f
s:ruby_deindent_keywords	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_indent_keywords	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:ruby_indent_keywords =$/;"	v
s:ruby_path	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_path = s:build_path(s:ruby_paths)$/;"	v
s:ruby_path	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_path = type(g:ruby_path) == type([]) ? join(g:ruby_path, ',') : g:ruby_path$/;"	v
s:ruby_paths	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_default_path$/;"	v
s:ruby_paths	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_version_paths[b:ruby_version]$/;"	v
s:rubycomplete_debug	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rule_rx	autoload/plugged/vim-polyglot/indent/make.vim	/^let s:rule_rx = '^[^ \\t#:][^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:rule_rx	autoload/plugged/vim-polyglot/indent/omake.vim	/^let s:rule_rx = '^[^ \\t#:][^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:run	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:run(vcs)$/;"	f
s:run_cmd	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:run_cmd(cmd) abort$/;"	f
s:run_lli	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:run_lli(...) abort$/;"	f
s:run_processing_procs	autoload/plugged/vim-polyglot/indent/sas.vim	/^let s:run_processing_procs = [$/;"	v
s:run_spec	autoload/plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:run_spec(root, path, ...) abort$/;"	f
s:run_syntax_fold	autoload/plugged/vim-polyglot/syntax/crystal.vim	/^function! s:run_syntax_fold(args) abort$/;"	f
s:run_syntax_fold	autoload/plugged/vim-polyglot/syntax/ruby.vim	/^function! s:run_syntax_fold(args) abort$/;"	f
s:running_task	autoload/plugged/coc.nvim/autoload/coc/task.vim	/^let s:running_task = {}$/;"	v
s:runtime	autoload/plugged/vim-polyglot/autoload/polyglot/init.vim	/^let s:runtime = resolve($VIMRUNTIME)$/;"	v
s:save_cpo	autoload/plugged/vim-airline-themes/plugin/airline-themes.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-airline/plugin/airline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/after/ftplugin/tex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/after/indent/objc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/autoload/requirements.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/compiler/cargo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/compiler/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/compiler/rustc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/compiler/swift.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/compiler/zig.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/compiler/zig_build.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/compiler/zig_build_exe.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/compiler/zig_test.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/ant.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/config.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/csc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/dtd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/fish.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/hcl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/html.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/java.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/jsp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/pug.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/raku.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/rust.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/rust/tagbar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/toml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/xhtml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/ftplugin/xsd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/indent/ansible.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/indent/bzl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/indent/clojure.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/indent/cs.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/indent/fennel.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/indent/rust.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/indent/yaml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/syntax/cs.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/syntax/gdscript3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/syntax/gsl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/syntax/j.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/syntax/named.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	autoload/plugged/vim-polyglot/syntax/teraterm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_expandtab	autoload/plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_expandtab = &l:expandtab$/;"	v
s:save_formatoptions	autoload/plugged/vim-polyglot/indent/svelte.vim	/^  let s:save_formatoptions = &formatoptions$/;"	v
s:save_shiftwidth	autoload/plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_shiftwidth = &l:shiftwidth$/;"	v
s:save_softtabstop	autoload/plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_softtabstop = &l:softtabstop$/;"	v
s:save_tabstop	autoload/plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_tabstop = &l:tabstop$/;"	v
s:saved_cursor	autoload/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:saved_cursor = &guicursor$/;"	v
s:saved_ve	autoload/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:saved_ve = &t_ve$/;"	v
s:savehistory	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:savehistory(name) abort$/;"	f
s:scalar_value	autoload/plugged/vim-polyglot/indent/ansible.vim	/^let s:scalar_value = '\\v:\\s*[>|\\|]\\s*$' " shell: >$/;"	v
s:scan	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
s:scratch	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:scratch()$/;"	f
s:script_checks	autoload/plugged/vim-polyglot/tests/native.vim	/^let s:script_checks = {$/;"	v
s:script_env_checks	autoload/plugged/vim-polyglot/tests/native.vim	/^let s:script_env_checks = {$/;"	v
s:script_path	autoload/plugged/vim-airline/autoload/airline/extensions.vim	/^let s:script_path = tolower(resolve(expand('<sfile>:p:h')))$/;"	v
s:script_root_dir	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^let s:script_root_dir = expand('<sfile>:p:h') . "\/..\/"$/;"	v
s:search	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:search(pattern) abort dict$/;"	f
s:search_history_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:search_history_sink(lines)$/;"	f
s:search_term	autoload/plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! s:search_term()$/;"	f
s:searchsyn	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:searchsyn(pattern, syn, flags, mode) abort$/;"	f
s:section	autoload/plug.vim	/^function! s:section(flags)$/;"	f
s:section_a	autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^let s:section_a = airline#section#create_left(['terminal', 'tmode'])$/;"	v
s:section_commit_pattern	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:section_commit_pattern = s:section_pattern . '\\|^commit '$/;"	v
s:section_delim_at	autoload/plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:section_delim_at(lnum) abort$/;"	f
s:section_end	autoload/plugged/vim-polyglot/indent/sas.vim	/^let s:section_end = '\\v%(^|;)\\s*%(quit|enddata)\\s*;'$/;"	v
s:section_is_empty	autoload/plugged/vim-airline/autoload/airline/builder.vim	/^function! s:section_is_empty(self, content)$/;"	f
s:section_pattern	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:section_pattern = '^[A-Z][a-z][^:]*$'$/;"	v
s:section_run	autoload/plugged/vim-polyglot/indent/sas.vim	/^let s:section_run = '\\v%(^|;)\\s*run\\s*;'$/;"	v
s:section_str	autoload/plugged/vim-polyglot/indent/sas.vim	/^let s:section_str = '\\v%(^|;)\\s*%(data|proc)>'$/;"	v
s:section_truncate_width	autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_truncate_width = get(g:, 'airline#extensions#default#section_truncate_width', {$/;"	v
s:section_use_groups	autoload/plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_use_groups     = get(g:, 'airline#extensions#default#section_use_groupitems', 1)$/;"	v
s:section_z	autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^let s:section_z = airline#section#create(['linenr', 'maxlinenr'])$/;"	v
s:sectionend	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^let s:sectionend = '\\s*)\\s*'$/;"	v
s:sectionmovement	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^function! s:sectionmovement(pattern,flags,mode,count)$/;"	f
s:sections	autoload/plugged/vim-airline/autoload/airline.vim	/^let s:sections = ['a','b','c','gutter','x','y','z', 'error', 'warning']$/;"	v
s:sections	autoload/plugged/vim-airline/t/init.vim	/^let s:sections = ['a', 'b', 'c', 'gutter', 'x', 'y', 'z', 'warning']$/;"	v
s:sections	autoload/plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:sections = [$/;"	v
s:sectionstart	autoload/plugged/vim-polyglot/ftplugin/j.vim	/^let s:sectionstart = '\\%(\\s*Note\\|.\\{-}\\<\\%([0-4]\\|13\\|noun\\|adverb\\|conjunction\\|ver/;"	v
s:select_api	autoload/plugged/coc.nvim/autoload/coc.vim	/^let s:select_api = exists('*nvim_select_popupmenu_item')$/;"	v
s:select_tab	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:select_tab(buf_index)$/;"	f
s:separators	autoload/plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:separators = {}$/;"	v
s:session_names	autoload/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:session_names = []$/;"	v
s:set_clean_jobs_variable	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! s:set_clean_jobs_variable(vcs, file, id)$/;"	f
s:set_clean_variables	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! s:set_clean_variables(file, vcs, val)$/;"	f
s:set_cursor_color_for	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:set_cursor_color_for(mode)$/;"	f
s:set_guicolors	autoload/plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:set_guicolors() abort$/;"	f
s:set_mark_tick	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:set_mark_tick(...)$/;"	f
s:setup	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:setup(git_dir, git_origin)$/;"	f
s:severity_error	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_error = 1$/;"	v
s:severity_hint	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_hint = 4$/;"	v
s:severity_info	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_info = 3$/;"	v
s:severity_warning	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_warning = 2$/;"	v
s:sh_autocmd_handler	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:sh_autocmd_handler()$/;"	f
s:sh_autocmd_handler	autoload/plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! s:sh_autocmd_handler()$/;"	f
s:sha1size	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:sha1size = get(g:, 'airline#extensions#branch#sha1_len', 7)$/;"	v
s:shellesc	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
s:shellesc	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:shellesc(arg) abort$/;"	f
s:shellesc_cmd	autoload/plug.vim	/^function! s:shellesc_cmd(arg, script)$/;"	f
s:shellesc_cmd	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:shellesc_cmd(arg)$/;"	f
s:shellesc_ps1	autoload/plug.vim	/^function! s:shellesc_ps1(arg)$/;"	f
s:shellesc_sh	autoload/plug.vim	/^function! s:shellesc_sh(arg)$/;"	f
s:shellescape	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
s:shift	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:shift(list) abort$/;"	f
s:shiftwidth	autoload/plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:shiftwidth = &shiftwidth$/;"	v
s:shiftwidth	autoload/plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:shiftwidth = ''$/;"	v
s:shiftwidth	autoload/plugged/vim-polyglot/indent/pgsql.vim	/^    fun! s:shiftwidth()$/;"	f
s:shiftwidth	autoload/plugged/vim-polyglot/indent/rust.vim	/^    function! s:shiftwidth()$/;"	f
s:shortpath	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:shortpath()$/;"	f
s:shortpath	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:shortpath()$/;"	f
s:should_register	autoload/plugged/vim-polyglot/syntax/vue.vim	/^function! s:should_register(language, start_pattern)$/;"	f
s:showMenu	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node) abort$/;"	f
s:show_buffers	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:show_buffers = get(g:, 'airline#extensions#tabline#show_buffers', 1)$/;"	v
s:show_documentation	plug-config/coc.vim	/^function! s:show_documentation()$/;"	f
s:show_line_numbers	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:show_line_numbers = get(g:, 'airline#extensions#languageclient#show_line_numbers', 1)$/;"	v
s:show_message	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:show_message = get(g:, 'airline#extensions#whitespace#show_message', 1)$/;"	v
s:show_tabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! s:show_tabline(min_count, total_count)$/;"	f
s:show_toc	autoload/plugged/vim-polyglot/ftplugin/help.vim	/^  function! s:show_toc() abort$/;"	f
s:shrug	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:shrug()$/;"	f
s:sid2sfuncs	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
s:sign_add	autoload/plugged/vim-signify/autoload/sy/highlight.vim	/^let s:sign_add               = get(g:, 'signify_sign_add',               '+')$/;"	v
s:sign_change	autoload/plugged/vim-signify/autoload/sy/highlight.vim	/^let s:sign_change            = get(g:, 'signify_sign_change',            '!')$/;"	v
s:sign_change_delete	autoload/plugged/vim-signify/autoload/sy/highlight.vim	/^  let s:sign_change_delete = '!-'$/;"	v
s:sign_change_delete	autoload/plugged/vim-signify/autoload/sy/highlight.vim	/^let s:sign_change_delete     = get(g:, 'signify_sign_change_delete', s:sign_change . s:sign_dele/;"	v
s:sign_column	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^    let s:sign_column = get(s:gb, g:gruvbox_sign_column)$/;"	v
s:sign_column	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:sign_column = s:number_column$/;"	v
s:sign_column	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:sign_column = s:bg1$/;"	v
s:sign_delete	autoload/plugged/vim-signify/autoload/sy/sign.vim	/^let s:sign_delete = get(g:, 'signify_sign_delete', '_')$/;"	v
s:sign_delete_first_line	autoload/plugged/vim-signify/autoload/sy/highlight.vim	/^let s:sign_delete_first_line = get(g:, 'signify_sign_delete_first_line', '‾')$/;"	v
s:sign_priority	autoload/plugged/vim-signify/autoload/sy/sign.vim	/^  let s:sign_priority = ''$/;"	v
s:sign_priority	autoload/plugged/vim-signify/autoload/sy/sign.vim	/^  let s:sign_priority = printf('priority=%d', get(g:, 'signify_priority', 10))$/;"	v
s:sign_show_count	autoload/plugged/vim-signify/autoload/sy/highlight.vim	/^let s:sign_show_count = get(g:, 'signify_sign_show_count', 1)$/;"	v
s:sign_show_count	autoload/plugged/vim-signify/autoload/sy/sign.vim	/^let s:sign_show_count  = get(g:, 'signify_sign_show_count', 1)$/;"	v
s:signature	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:signature(filePath, line, character, cont)$/;"	f
s:signatureData	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:signatureData(filePath, line, character, cont)$/;"	f
s:skip	autoload/plugged/vim-polyglot/indent/cobol.vim	/^let s:skip = 'getline(".") =~ "^.\\\\{6\\\\}[*\/$-]\\\\|\\"[^\\"]*\\""'$/;"	v
s:skip	autoload/plugged/vim-polyglot/syntax/ledger.vim	/^  let s:skip .= '\\n\\@!'$/;"	v
s:skip	autoload/plugged/vim-polyglot/syntax/ledger.vim	/^let s:skip = s:fb > 0 ? '\\|^\\n' : ''$/;"	v
s:skip	autoload/plugged/vim-signify/autoload/sy.vim	/^function! s:skip(bufnr, path)$/;"	f
s:skip2	autoload/plugged/vim-polyglot/autoload/pony.vim	/^let s:skip2 = '<SID>InLiteral(line("."), col(".")) || <SID>InComment(line("."), col(".")) == 1'$/;"	v
s:skip3	autoload/plugged/vim-polyglot/autoload/pony.vim	/^let s:skip3 = '!<SID>InKeyword(line("."), col("."))'$/;"	v
s:skip4	autoload/plugged/vim-polyglot/autoload/pony.vim	/^let s:skip4 = '!<SID>InBracket(line("."), col("."))'$/;"	v
s:skipPatterns	autoload/plugged/vim-polyglot/indent/julia.vim	/^let s:skipPatterns = '\\<julia\\%(Comprehension\\%(For\\|If\\)\\|RangeKeyword\\|Comment\\%([LM]\\/;"	v
s:skip_after_opening_paren	autoload/plugged/vim-polyglot/indent/cython.vim	/^let s:skip_after_opening_paren = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:skip_after_opening_paren	autoload/plugged/vim-polyglot/indent/python.vim	/^let s:skip_after_opening_paren = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:skip_check_ft	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:skip_check_ft = {'make': ['indent', 'mixed-indent-file'],$/;"	v
s:skip_expr	autoload/plugged/vim-polyglot/indent/javascript.vim	/^let s:skip_expr = "s:SynAt(line('.'),col('.')) =~? b:syng_strcom"$/;"	v
s:skip_expr	autoload/plugged/vim-polyglot/indent/lua.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~# 'luaComment\\\\|luaString'"$/;"	v
s:skip_expr	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:skip_expr =$/;"	v
s:skip_expr	autoload/plugged/vim-polyglot/indent/solidity.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:skip_expr	autoload/plugged/vim-polyglot/indent/typescript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:skip_if_not	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:skip_if_not(current_lnum, ...)$/;"	f
s:skip_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^let s:skip_symbol = '…'$/;"	v
s:skip_syntax	autoload/plugged/vim-polyglot/indent/nix.vim	/^let s:skip_syntax = '\\%(Comment\\|String\\)$'$/;"	v
s:snapshot	autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
s:sort	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
s:sortByLength	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:sortByLength(i1, i2)$/;"	f
s:sort_buffers	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:sort_buffers(...)$/;"	f
s:sort_by	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
s:source	autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
s:span	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
s:spawn	autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	f
s:spawn	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/dirvish.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/example.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/section.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	autoload/plugged/vim-airline/autoload/airline/util.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:special_chars_syn_pattern	autoload/plugged/vim-polyglot/indent/cython.vim	/^let s:special_chars_syn_pattern = "\\\\vstring|comment|^pythonbytes%(contents)=$|pythonTodo|jedi/;"	v
s:special_chars_syn_pattern	autoload/plugged/vim-polyglot/indent/python.vim	/^let s:special_chars_syn_pattern = "\\\\vstring|comment|^pythonbytes%(contents)=$|pythonTodo|jedi/;"	v
s:special_grey	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:special_grey = s:colors.special_grey$/;"	v
s:spell_cluster	autoload/plugged/vim-polyglot/syntax/crystal.vim	/^let s:spell_cluster = exists('crystal_spellcheck_strings') ? ',@Spell' : ''$/;"	v
s:spell_cluster	autoload/plugged/vim-polyglot/syntax/ruby.vim	/^let s:spell_cluster = exists('ruby_spellcheck_strings') ? ',@Spell' : ''$/;"	v
s:splat_regex	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:splat_regex = '[[,(]\\s*\\*\\s*\\%(#.*\\)\\=$'$/;"	v
s:split	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:split(dict)$/;"	f
s:split	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:split(tab)$/;"	f
s:split3	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
s:split_by_displaywidth	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
s:split_leftright	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
s:split_pathspec	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:split_pathspec(args)$/;"	f
s:split_posix_text	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split_posix_text(text, ...) abort$/;"	f
s:split_rtp	autoload/plug.vim	/^function! s:split_rtp()$/;"	f
s:splittable	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:splittable(dict)$/;"	f
s:st	autoload/plugged/vim-polyglot/syntax/tt2.vim	/^        let s:st = strpart(s:str,0,stridx(s:str,' '))$/;"	v
s:stack_size	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:stack_size=0$/;"	v
s:start	autoload/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:start() dict$/;"	f
s:start_col	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:start_col(lnum)$/;"	f
s:start_pattern	autoload/plugged/vim-polyglot/syntax/vue.vim	/^  let s:start_pattern = '<' . s:language.tag . '\\>\\_[^>]*' . s:attr_pattern . '\\_[^>]*>'$/;"	v
s:start_prompt	autoload/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:start_prompt()$/;"	f
s:start_prompt_vim	autoload/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:start_prompt_vim() abort$/;"	f
s:start_syntax	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:start_syntax(lnum)$/;"	f
s:start_tag	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^let s:start_tag = '<\\_s*\\%(>\\|\\${\\|\\%(\\<[-:._$A-Za-z0-9]\\+\\>\\)\\)'$/;"	v
s:startexp	autoload/plugged/vim-polyglot/indent/typescriptreact.vim	/^let s:startexp = '[\\{\\(]\\s*$'$/;"	v
s:starts_with	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:starts_with(context, expr)$/;"	f
s:starts_with	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:starts_with(str, prefix) abort$/;"	f
s:status	autoload/plug.vim	/^function! s:status()$/;"	f
s:status_load	autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
s:status_update	autoload/plug.vim	/^function! s:status_update() range$/;"	f
s:stepmatch	autoload/plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:stepmatch(receiver,target)$/;"	f
s:steps	autoload/plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:steps(lnum)$/;"	f
s:stop_statement	autoload/plugged/vim-polyglot/indent/cython.vim	/^let s:stop_statement = '^\\s*\\(break\\|continue\\|raise\\|return\\|pass\\)\\>'$/;"	v
s:stop_statement	autoload/plugged/vim-polyglot/indent/python.vim	/^let s:stop_statement = '^\\s*\\(break\\|continue\\|raise\\|return\\|pass\\)\\>'$/;"	v
s:str	autoload/plugged/vim-polyglot/syntax/tt2.vim	/^        let s:str = substitute(s:str,'[^ ]* ','',"")$/;"	v
s:str	autoload/plugged/vim-polyglot/syntax/tt2.vim	/^    let s:str = b:tt2_syn_tags . ' '$/;"	v
s:str	autoload/plugged/vim-polyglot/syntax/tt2.vim	/^    let s:str = substitute(s:str,' \\+',' ','g')$/;"	v
s:str	autoload/plugged/vim-polyglot/syntax/tt2.vim	/^    let s:str = substitute(s:str,'^ \\+','','g')$/;"	v
s:str_compose	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:str_compose(line, idx, text) abort$/;"	f
s:str_modifiers	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:str_modifiers='iISCDMm'$/;"	v
s:strchars	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
s:strchars	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  let s:strchars = function('strchars')$/;"	v
s:strip	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:strip(str)$/;"	f
s:strip	autoload/plugged/vim-polyglot/indent/bst.vim	/^function! s:strip(lnum)$/;"	f
s:stripComment	autoload/plugged/vim-polyglot/indent/haskell.vim	/^function! s:stripComment(line)$/;"	f
s:strip_context	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:strip_context(context)$/;"	f
s:strip_namespace_and_macro_chars	autoload/plugged/vim-polyglot/indent/clojure.vim	/^	function! s:strip_namespace_and_macro_chars(word)$/;"	f
s:stripped	autoload/plugged/vim-polyglot/indent/cobol.vim	/^function! s:stripped(lnum)$/;"	f
s:strwidthpart	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
s:strwidthpart_reverse	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
s:sub	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
s:sub	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:sub(dir, identifier)$/;"	f
s:subcommands_before_2_5	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:subcommands_before_2_5 = [$/;"	v
s:substitute_last	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
s:subtype	autoload/plugged/vim-polyglot/autoload/svelte.vim	/^  let s:subtype = ''$/;"	v
s:subtype	autoload/plugged/vim-polyglot/syntax/liquid.vim	/^  let s:subtype = exists('b:liquid_subtype') ? b:liquid_subtype : ''$/;"	v
s:suffixesadd	autoload/plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:suffixesadd = &l:suffixesadd$/;"	v
s:suffixesadd	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:suffixesadd = &l:suffixesadd$/;"	v
s:supported	autoload/plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:supported = [$/;"	v
s:supported	autoload/plugged/vim-polyglot/syntax/debsources.vim	/^let s:supported = [$/;"	v
s:svelte_internal_blocks	autoload/plugged/vim-polyglot/ftplugin/svelte/fold.vim	/^let s:svelte_internal_blocks = '\\v:(else|then|catch)'$/;"	v
s:svelte_tag_end	autoload/plugged/vim-polyglot/ftplugin/svelte/fold.vim	/^let s:svelte_tag_end = '\\v^\\<\\\/\\w+' $/;"	v
s:svelte_tag_end	autoload/plugged/vim-polyglot/indent/svelte.vim	/^let s:svelte_tag_end = '\\v^\\<\\\/(script|style)'$/;"	v
s:svelte_tag_start	autoload/plugged/vim-polyglot/ftplugin/svelte/fold.vim	/^let s:svelte_tag_start = '\\v^\\<\\w+' $/;"	v
s:svelte_tag_start	autoload/plugged/vim-polyglot/indent/svelte.vim	/^let s:svelte_tag_start = '\\v^\\<(script|style)' $/;"	v
s:sw	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:sw()$/;"	f
s:sw	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^  function! s:sw()$/;"	f
s:sw	autoload/plugged/vim-polyglot/indent/caddyfile.vim	/^	function! s:sw()$/;"	f
s:sw	autoload/plugged/vim-polyglot/indent/crystal.vim	/^  function! s:sw()$/;"	f
s:sw	autoload/plugged/vim-polyglot/indent/crystal.vim	/^  let s:sw = function('shiftwidth')$/;"	v
s:sw	autoload/plugged/vim-polyglot/indent/cython.vim	/^    function! s:sw()$/;"	f
s:sw	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^  function s:sw()$/;"	f
s:sw	autoload/plugged/vim-polyglot/indent/ecrystal.vim	/^  let s:sw = function('shiftwidth')$/;"	v
s:sw	autoload/plugged/vim-polyglot/indent/javascript.vim	/^  function s:sw()$/;"	f
s:sw	autoload/plugged/vim-polyglot/indent/python.vim	/^    function! s:sw()$/;"	f
s:sw	autoload/plugged/vim-polyglot/indent/svelte.vim	/^let s:sw = &sw$/;"	v
s:switch_in	autoload/plug.vim	/^function! s:switch_in()$/;"	f
s:switch_out	autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
s:symbol	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:symbol = get(g:, 'airline#extensions#whitespace#symbol', g:airline_symbols.whitespace)$/;"	v
s:symchar	autoload/plugged/vim-polyglot/syntax/fennel.vim	/^let s:symchar = '0-9' . s:symcharnodig$/;"	v
s:symcharnodig	autoload/plugged/vim-polyglot/syntax/fennel.vim	/^let s:symcharnodig = '\\!\\$%\\&\\#\\*\\+\\-.\/:<=>?A-Z^_a-z|\\x80-\\U10FFFF'$/;"	v
s:syn	autoload/plugged/vim-polyglot/indent/cucumber.vim	/^function! s:syn(lnum)$/;"	f
s:syn_blocks	autoload/plugged/vim-polyglot/indent/hog.vim	/^let s:syn_blocks = '\\<SnortRuleTypeBody\\>'$/;"	v
s:syn_contains	autoload/plugged/vim-polyglot/autoload/jsx_pretty/comment.vim	/^function! s:syn_contains(lnum, cnum, syn_name)$/;"	f
s:syn_id_name	autoload/plugged/vim-polyglot/indent/clojure.vim	/^	function! s:syn_id_name()$/;"	f
s:syn_id_name	autoload/plugged/vim-polyglot/indent/fennel.vim	/^	function! s:syn_id_name()$/;"	f
s:syn_name	autoload/plugged/vim-polyglot/autoload/jsx_pretty/comment.vim	/^function! s:syn_name(lnum, cnum)$/;"	f
s:syng_linecom	autoload/plugged/vim-polyglot/autoload/yats.vim	/^let s:syng_linecom = 'linecomment\\c'$/;"	v
s:syng_linecom	autoload/plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_linecom = 'linecomment\\c'$/;"	v
s:syng_multiline	autoload/plugged/vim-polyglot/autoload/yats.vim	/^let s:syng_multiline = 'comment\\c'$/;"	v
s:syng_multiline	autoload/plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_multiline = 'comment\\c'$/;"	v
s:syng_strcom	autoload/plugged/vim-polyglot/indent/falcon.vim	/^let s:syng_strcom = '\\<falcon\\%(String\\|StringEscape\\|Comment\\)\\>'$/;"	v
s:syng_strcom	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:syng_strcom = s:syng_stringdoc + [$/;"	v
s:syng_strcom	autoload/plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_strcom = 'string\\|regex\\|comment\\c'$/;"	v
s:syng_strcom	autoload/plugged/vim-polyglot/indent/typescript.vim	/^let s:syng_strcom = 'string\\|regex\\|comment\\c'$/;"	v
s:syng_string	autoload/plugged/vim-polyglot/indent/falcon.vim	/^let s:syng_string = '\\<falcon\\%(String\\|StringEscape\\)\\>'$/;"	v
s:syng_string	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:syng_string =$/;"	v
s:syng_string	autoload/plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_string = 'regex\\c'$/;"	v
s:syng_string	autoload/plugged/vim-polyglot/indent/typescript.vim	/^let s:syng_string = 'regex\\c'$/;"	v
s:syng_stringdoc	autoload/plugged/vim-polyglot/indent/ruby.vim	/^let s:syng_stringdoc = s:syng_string + ['Documentation']$/;"	v
s:synid	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:synid() abort$/;"	f
s:syntax	autoload/plug.vim	/^function! s:syntax()$/;"	f
s:syntax	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:syntax()$/;"	f
s:syntax_at	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:syntax_at(lnum, col)$/;"	f
s:syntax_context	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:syntax_context(lnum)$/;"	f
s:syntax_keyword	autoload/plugged/vim-polyglot/syntax/clojure.vim	/^function! s:syntax_keyword(dict)$/;"	f
s:syntax_keyword	autoload/plugged/vim-polyglot/syntax/zig.vim	/^function! s:syntax_keyword(dict)$/;"	f
s:syntax_name	autoload/plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:syntax_name(line, col)$/;"	f
s:syntax_stack_at	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:syntax_stack_at(lnum, col)$/;"	f
s:system	autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
s:system	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:system(cmd)$/;"	f
s:system	autoload/plugged/vim-polyglot/autoload/rust.vim	/^function! s:system(pwd, cmd)$/;"	f
s:system	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:system(str, ...) abort$/;"	f
s:system_chomp	autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
s:system_in_dir	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:system_in_dir(cmd) abort$/;"	f
s:tab_min_count	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:tab_min_count = get(g:, 'airline#extensions#tabline#tab_min_count', 0)$/;"	v
s:tabline_evaluated_length	autoload/plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:tabline_evaluated_length(tabline)$/;"	f
s:tabnew	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:tabnew()$/;"	f
s:taboo	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:taboo = get(g:, 'airline#extensions#taboo#enabled', 1) && get(g:, 'loaded_taboo', 0)$/;"	v
s:tabws	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:tabws = get(g:, 'tabws_loaded', 0)$/;"	v
s:tag	autoload/plugged/vim-polyglot/indent/haml.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	autoload/plugged/vim-polyglot/indent/pug.vim	/^let s:tag = '\\([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	autoload/plugged/vim-polyglot/indent/slim.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	autoload/plugged/vim-polyglot/indent/slime.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag_end	autoload/plugged/vim-polyglot/indent/svelte.vim	/^let s:tag_end = '\\v^\\s*\\\/?\\>\\s*'$/;"	v
s:tagname	autoload/plugged/vim-polyglot/indent/html.vim	/^let s:tagname = '\\w\\+\\(-\\w\\+\\)*'$/;"	v
s:tags	autoload/plugged/vim-polyglot/after/syntax/javascript/graphql.vim	/^let s:tags = '\\%(' . join(graphql#javascript_tags(), '\\|') . '\\)'$/;"	v
s:tags	autoload/plugged/vim-polyglot/after/syntax/jsx_pretty.vim	/^let s:tags = get(g:, 'vim_jsx_pretty_template_tags', ['html', 'jsx'])$/;"	v
s:tags	autoload/plugged/vim-polyglot/after/syntax/typescript/graphql.vim	/^let s:tags = '\\%(' . join(graphql#javascript_tags(), '\\|') . '\\)'$/;"	v
s:tags_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:tags_sink(lines)$/;"	f
s:take_while	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
s:temp	autoload/plugged/vim-polyglot/syntax/raku.vim	/^    let s:temp = split(s:words_space)$/;"	v
s:temp	autoload/plugged/vim-polyglot/syntax/raku.vim	/^let s:temp = split(s:words_space)$/;"	v
s:temp_files	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:temp_scripts	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:temp_scripts = {}$/;"	v
s:template_sink	autoload/plugged/vim-polyglot/autoload/fzf_gitignore.vim	/^function! s:template_sink(templates) abort$/;"	f
s:template_tag	autoload/plugged/vim-polyglot/indent/svelte.vim	/^let s:template_tag = '\\v^\\s*\\<\\\/?template'$/;"	v
s:term_black	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_black = 0$/;"	v
s:term_black	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_black = 235$/;"	v
s:term_blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_blue = 39$/;"	v
s:term_blue	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_blue = 4$/;"	v
s:term_green	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_green = 114$/;"	v
s:term_green	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_green = 2$/;"	v
s:term_grey	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_grey = 236$/;"	v
s:term_grey	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_grey = 8$/;"	v
s:term_marker	autoload/plugged/fzf/plugin/fzf.vim	/^  let s:term_marker = ";#FZF"$/;"	v
s:term_marker	autoload/plugged/fzf/plugin/fzf.vim	/^  let s:term_marker = '&::FZF'$/;"	v
s:term_purple	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_purple = 170$/;"	v
s:term_purple	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_purple = 5$/;"	v
s:term_red	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_red = 1$/;"	v
s:term_red	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_red = 204$/;"	v
s:term_white	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_white = 145$/;"	v
s:term_white	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_white = 7$/;"	v
s:term_yellow	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_yellow = 180$/;"	v
s:term_yellow	autoload/plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_yellow = 3$/;"	v
s:termbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:termbg = 232$/;"	v
s:termbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:termbg = 232$/;"	v
s:termbg2	autoload/plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:termbg2= 234$/;"	v
s:termname	autoload/plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! s:termname(bufnr) abort$/;"	f
s:termsep	autoload/plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:termsep = 236$/;"	v
s:ternary	autoload/plugged/vim-polyglot/indent/solidity.vim	/^let s:ternary = '^\\s\\+[?|:]'$/;"	v
s:ternary	autoload/plugged/vim-polyglot/indent/typescript.vim	/^let s:ternary = '^\\s\\+[?:]'$/;"	v
s:ternary_q	autoload/plugged/vim-polyglot/indent/solidity.vim	/^let s:ternary_q = '^\\s\\+?'$/;"	v
s:ternary_q	autoload/plugged/vim-polyglot/indent/typescript.vim	/^let s:ternary_q = '^\\s\\+?[.?]\\@!'$/;"	v
s:test	autoload/plugged/vim-polyglot/ftplugin/fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:test	autoload/plugged/vim-polyglot/indent/fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:test	autoload/plugged/vim-polyglot/syntax/fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:tests	autoload/plugged/vim-rooter/test/runner.vim	/^  let s:tests = filter(s:tests, 'v:val =~ argv(1)')$/;"	v
s:tests	autoload/plugged/vim-rooter/test/runner.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:texMathDelimList	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^    let s:texMathDelimList= s:texMathDelimList + [$/;"	v
s:texMathDelimList	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^  let s:texMathDelimList=[$/;"	v
s:texMathList	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^    let s:texMathList= s:texMathList + [$/;"	v
s:texMathList	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^  let s:texMathList=[$/;"	v
s:tex_comment_nospell	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_comment_nospell= 0$/;"	v
s:tex_comment_nospell	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_comment_nospell= 1$/;"	v
s:tex_conceal	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_conceal= 'abdmgsS'$/;"	v
s:tex_conceal	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_conceal= g:tex_conceal$/;"	v
s:tex_excludematcher	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_excludematcher= 0$/;"	v
s:tex_excludematcher	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_excludematcher= g:tex_excludematcher$/;"	v
s:tex_fast	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^  let s:tex_fast= ""$/;"	v
s:tex_fast	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^  let s:tex_fast= g:tex_fast$/;"	v
s:tex_fast	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^let s:tex_fast= "bcmMprsSvV"$/;"	v
s:tex_fold_enabled	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_fold_enabled= 0$/;"	v
s:tex_fold_enabled	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_fold_enabled= 1$/;"	v
s:tex_matchcheck	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_matchcheck= '[({[]'$/;"	v
s:tex_matchcheck	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_matchcheck= g:tex_matchcheck$/;"	v
s:tex_no_error	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_no_error= 0$/;"	v
s:tex_no_error	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_no_error= 1$/;"	v
s:tex_nospell	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_nospell = 0$/;"	v
s:tex_nospell	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_nospell = 1$/;"	v
s:tex_subscripts	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_subscripts= '[0-9aehijklmnoprstuvx,+-\/().]'$/;"	v
s:tex_subscripts	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_subscripts= g:tex_subscripts$/;"	v
s:tex_superscripts	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_superscripts= '[0-9a-zA-W.,:;+-<>\/()=]'$/;"	v
s:tex_superscripts	autoload/plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_superscripts= g:tex_superscripts$/;"	v
s:theme	autoload/plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:theme = 'minimalist'$/;"	v
s:throw	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:throw(string) abort$/;"	f
s:throw	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:throw(string) abort$/;"	f
s:tick	autoload/plug.vim	/^function! s:tick()$/;"	f
s:timer	autoload/plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^let s:timer = 0$/;"	v
s:tmp	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^  let s:tmp[mode]['airline_c'] = s:airline_c_insert$/;"	v
s:tmp	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:tmp = {'normal_modified': {}, 'insert_modified': {}$/;"	v
s:tmp	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:tmp=matchstr("$Revision: 2.60 $", '[0-9.]\\+')$/;"	v
s:tmux_enabled	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:tmux_enabled()$/;"	f
s:tmuxline_snapshot_file	autoload/plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:tmuxline_snapshot_file = get(g:, 'airline#extensions#tmuxline#snapshot_file', '')$/;"	v
s:to_a	autoload/plug.vim	/^function! s:to_a(v)$/;"	f
s:to_s	autoload/plug.vim	/^function! s:to_s(v)$/;"	f
s:toend	autoload/plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:toend(direction)$/;"	f
s:toggle	autoload/plugged/vim-rooter/plugin/rooter.vim	/^function! s:toggle()$/;"	f
s:toggleIgnoreFilter	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter() abort$/;"	f
s:toggleShowBookmarks	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks() abort$/;"	f
s:toggleShowFiles	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles() abort$/;"	f
s:toggleShowHidden	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden() abort$/;"	f
s:toggleZoom	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom() abort$/;"	f
s:toggle_off	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  def s:toggle_off(): void$/;"	f
s:toggle_off	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  function! s:toggle_off()$/;"	f
s:toggle_on	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  def s:toggle_on(): void$/;"	f
s:toggle_on	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  function! s:toggle_on()$/;"	f
s:token_pattern	autoload/plugged/vim-polyglot/indent/dtd.vim	/^let s:token_pattern = '^[^[:space:]]\\+'$/;"	v
s:topLev	autoload/plugged/vim-polyglot/after/indent/objc.vim	/^let s:topLev = '^\\s*@\\%(class\\|end\\|implementation\\|interface\\|protocol\\|\\)\\>'$/;"	v
s:topindent	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^function s:topindent(lnum)$/;"	f
s:tracked	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:tracked(fugitive_repo, file)$/;"	f
s:transaction	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^let s:transaction = {} "{{{1$/;"	v
s:transaction.format_head	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.format_head() abort dict "{{{2$/;"	f
s:transaction.from_lnum	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.from_lnum(lnum) abort dict "{{{2$/;"	f
s:transaction.new	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.new() abort dict$/;"	f
s:transaction.parse_body	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.parse_body(...) abort dict "{{{2$/;"	f
s:transaction.set_state	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.set_state(char) abort dict "{{{2$/;"	f
s:tree_up_dir_line	autoload/plugged/NERDTree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:trees	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:trees = {}$/;"	v
s:triggers	autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:trim	autoload/plug.vim	/^function! s:trim(str)$/;"	f
s:trim	autoload/plugged/coc.nvim/autoload/coc.vim	/^function! s:trim(str)$/;"	f
s:trim	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:trim(arg)$/;"	f
s:trim	autoload/plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:trim(line)$/;"	f
s:trim	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim(str) abort$/;"	f
s:trim_end	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim_end(str) abort$/;"	f
s:trim_start	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim_start(str) abort$/;"	f
s:truncate	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
s:truncate_skipping	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
s:type	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:type(visual)$/;"	f
s:type	autoload/plugged/vim-polyglot/indent/ocaml.vim	/^let s:type = '^\\s*\\%(class\\|let\\|type\\)\\>.*='$/;"	v
s:type	autoload/plugged/vim-polyglot/indent/sml.vim	/^let s:type = '^\\s*\\%(let\\|type\\)\\>.*='$/;"	v
s:typeKeywordIncPattern	autoload/plugged/vim-polyglot/indent/plantuml.vim	/^function! s:typeKeywordIncPattern() abort$/;"	f
s:typeSpecMatcher	autoload/plugged/vim-polyglot/indent/scala.vim	/^let s:typeSpecMatcher = '\\%(\\s*\\[\\_[^\\]]*\\]\\)'$/;"	v
s:types	autoload/plugged/vim-polyglot/syntax/raku.vim	/^let s:types = [$/;"	v
s:ulen	autoload/plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:ulen(s)$/;"	f
s:undercurl	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:undercurl = ''$/;"	v
s:undercurl	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:undercurl = 'undercurl,'$/;"	v
s:underline	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:underline = ''$/;"	v
s:underline	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:underline = 'underline,'$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ant.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ant.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/aspvbs.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/config.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/config.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ecrystal.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . ' | ' . s:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:undo_ftplugin = ''$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/haml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/hog.vim	/^let s:undo_ftplugin = "setl fo< com< cms< def< inc<"$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/jsp.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/pug.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/pug.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/slim.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/slim.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/slim.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/stylus.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/xhtml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/xsd.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	autoload/plugged/vim-polyglot/ftplugin/xsd.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_hunk	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:undo_hunk(sy, vcs, diff) abort$/;"	f
s:undo_spelllang	autoload/plugged/vim-polyglot/extras/menu.vim	/^  let s:undo_spelllang = ['aun &Tools.&Spelling.&Find\\ More\\ Languages']$/;"	v
s:unescape	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:unescape(str, chars) abort$/;"	f
s:unescape_pattern	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:unescape_pattern(str) abort$/;"	f
s:unfnameescape	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:unfnameescape(str) abort$/;"	f
s:unformat_ocaml_type	autoload/plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function s:unformat_ocaml_type(res)$/;"	f
s:uniop_chars	autoload/plugged/vim-polyglot/autoload/julia.vim	/^let s:uniop_chars = "+\\\\U2D~¬√∛∜"$/;"	v
s:uniop_chars	autoload/plugged/vim-polyglot/syntax/julia.vim	/^let s:uniop_chars = "+\\\\U2D~¬√∛∜⋆"$/;"	v
s:uniq	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
s:uniq_by	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
s:unload	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:unload() abort dict$/;"	f
s:unmap	autoload/plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:unmap(function)$/;"	f
s:unshift	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
s:unsupported	autoload/plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:unsupported = [$/;"	v
s:unsupported	autoload/plugged/vim-polyglot/syntax/debsources.vim	/^let s:unsupported = [$/;"	v
s:untracked_jobs	autoload/plugged/vim-airline/autoload/airline/async.vim	/^let s:untracked_jobs = {}$/;"	v
s:untracked_output	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! s:untracked_output(dict, buf)$/;"	f
s:upDirCurrentRootClosed	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed() abort$/;"	f
s:upDirCurrentRootOpen	autoload/plugged/NERDTree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen() abort$/;"	f
s:update	autoload/plug.vim	/^function! s:update(force, names)$/;"	f
s:update_branch	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_branch()$/;"	f
s:update_finish	autoload/plug.vim	/^function! s:update_finish()$/;"	f
s:update_git_branch	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_git_branch()$/;"	f
s:update_hg_branch	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_hg_branch()$/;"	f
s:update_impl	autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
s:update_progress	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:update_progress(bufnr, width, ts) abort$/;"	f
s:update_python	autoload/plug.vim	/^function! s:update_python()$/;"	f
s:update_ruby	autoload/plug.vim	/^function! s:update_ruby()$/;"	f
s:update_tabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  def s:update_tabline(forceit: number): void$/;"	f
s:update_tabline	autoload/plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  function! s:update_tabline(forceit)$/;"	f
s:update_untracked	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_untracked()$/;"	f
s:update_vim	autoload/plug.vim	/^function! s:update_vim()$/;"	f
s:update_wordcount	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! s:update_wordcount(force_update)$/;"	f
s:upgrade	autoload/plug.vim	/^function! s:upgrade()$/;"	f
s:upgrade_specs	autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
s:urgency	autoload/plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:urgency='urgency=\\(low\\|medium\\|high\\|emergency\\|critical\\)\\( [^[:space:],][^,]*\\)/;"	v
s:url_encode	autoload/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:url_encode(str) abort$/;"	f
s:use_coffee	autoload/plugged/vim-polyglot/indent/svelte.vim	/^let s:use_coffee = svelte#GetConfig('use_coffee', 0)$/;"	v
s:use_coffee	autoload/plugged/vim-polyglot/syntax/svelte.vim	/^let s:use_coffee = svelte#GetConfig('use_coffee', 0)$/;"	v
s:use_foldexpr	autoload/plugged/vim-polyglot/ftplugin/svelte/fold.vim	/^let s:use_foldexpr = exists("g:vim_svelte_plugin_use_foldexpr") $/;"	v
s:use_less	autoload/plugged/vim-polyglot/syntax/svelte.vim	/^let s:use_less = svelte#GetConfig('use_less', 0)$/;"	v
s:use_pug	autoload/plugged/vim-polyglot/indent/svelte.vim	/^let s:use_pug = svelte#GetConfig('use_pug', 0)$/;"	v
s:use_pug	autoload/plugged/vim-polyglot/syntax/svelte.vim	/^let s:use_pug = svelte#GetConfig('use_pug', 0)$/;"	v
s:use_sass	autoload/plugged/vim-polyglot/indent/svelte.vim	/^let s:use_sass = svelte#GetConfig('use_sass', 0)$/;"	v
s:use_sass	autoload/plugged/vim-polyglot/syntax/svelte.vim	/^let s:use_sass = svelte#GetConfig('use_sass', 0)$/;"	v
s:use_sh	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:use_sh()$/;"	f
s:use_typescript	autoload/plugged/vim-polyglot/indent/svelte.vim	/^let s:use_typescript = svelte#GetConfig('use_typescript', 0)$/;"	v
s:use_typescript	autoload/plugged/vim-polyglot/syntax/svelte.vim	/^let s:use_typescript = svelte#GetConfig('use_typescript', 0)$/;"	v
s:val	autoload/plugged/vim-polyglot/indent/sml.vim	/^let s:val = '^\\s*\\(val\\|external\\)\\>.*:'$/;"	v
s:valMatcher	autoload/plugged/vim-polyglot/indent/scala.vim	/^let s:valMatcher = '\\%(' . s:modifierMatcher . '\\|lazy\\s\\+\\)*\\<va[lr]\\>'$/;"	v
s:vala_cpo_save	autoload/plugged/vim-polyglot/syntax/vala.vim	/^let s:vala_cpo_save = &cpo$/;"	v
s:valid_dir	autoload/plugged/vim-airline/autoload/airline/async.vim	/^function! s:valid_dir(dir)$/;"	f
s:validate_layout	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:validate_layout(layout)$/;"	f
s:var	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:var = '\\%(<\\%(cword\\|cWORD\\|cexpr\\|cfile\\|sfile\\|slnum\\|afile\\|abuf\\|amatch' . (/;"	v
s:var_stmt	autoload/plugged/vim-polyglot/indent/solidity.vim	/^let s:var_stmt = '^\\s*var'$/;"	v
s:var_stmt	autoload/plugged/vim-polyglot/indent/typescript.vim	/^let s:var_stmt = '^\\s*var'$/;"	v
s:variables	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:variables(bufnr) abort$/;"	f
s:vbg	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:vbg = ['#FFFFAF', 229] "      visual bg; for a&z sections$/;"	v
s:vcs_config	autoload/plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:vcs_config = {$/;"	v
s:vcs_dict	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^let s:vcs_dict = map(copy(g:signify_vcs_cmds), 'split(v:val)[0]')$/;"	v
s:vcs_list	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^    let s:vcs_list = filter(copy(g:signify_skip.vcs.allow), 'executable(s:vcs_dict[v:val])')$/;"	v
s:vcs_list	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^    let s:vcs_list = keys(filter(s:vcs_dict, 'executable(v:val)'))$/;"	v
s:vcs_list	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^  let s:vcs_list = keys(filter(s:vcs_dict, 'executable(v:val)'))$/;"	v
s:version	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:version() abort$/;"	f
s:version	autoload/plugged/vim-polyglot/scripts/eregex.vim	/^let s:version = s:maj + s:min$/;"	v
s:version_file	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:version_file = findfile('.ruby-version', '.;')$/;"	v
s:version_requirement	autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
s:version_requirement	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:version_requirement(val, min)$/;"	f
s:versions	autoload/plugged/fzf/plugin/fzf.vim	/^let s:versions = {}$/;"	v
s:vert_split	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:vert_split = get(s:gb, g:gruvbox_vert_split)$/;"	v
s:vert_split	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:vert_split = s:bg0$/;"	v
s:vertsplit	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:vertsplit = s:colors.vertsplit$/;"	v
s:vfg	autoload/plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:vfg = s:nfg            "      visual fg; for a&z sections$/;"	v
s:vim8	autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:vimReturnFocus	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^    function! s:vimReturnFocus(window)$/;"	f
s:vim_api_version	autoload/plugged/coc.nvim/autoload/coc/util.vim	/^let s:vim_api_version = 8$/;"	v
s:vim_bg	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:vim_bg = ['bg', 'bg']$/;"	v
s:vim_fg	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^let s:vim_fg = ['fg', 'fg']$/;"	v
s:vim_jsx_pretty_colorful_config	autoload/plugged/vim-polyglot/after/syntax/jsx_pretty.vim	/^let s:vim_jsx_pretty_colorful_config = get(g:, 'vim_jsx_pretty_colorful_config', 0)$/;"	v
s:violet	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:violet  = {'hex': '#6C71C4', 'term':  62}  " 108, 113, 196 *$/;"	v
s:visual_black	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:visual_black = s:colors.visual_black " Black out selected text in 16-color visual mode$/;"	v
s:visual_grey	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:visual_grey = s:colors.visual_grey$/;"	v
s:vital_base_dir	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_files	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:vital_files() abort$/;"	f
s:want_showmod	autoload/plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:want_showmod = get(g:, 'airline_minimalist_showmod', 0)$/;"	v
s:warn	autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	f
s:warn	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:warn(message)$/;"	f
s:warn	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:warn(msg)$/;"	f
s:warn	autoload/plugged/gv.vim/plugin/gv.vim	/^function! s:warn(message)$/;"	f
s:warn	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:warn(...) abort$/;"	f
s:warned	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:warned = 0$/;"	v
s:warning	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:warning = s:color_list(s:darker_grey, s:orange)$/;"	v
s:warning	autoload/plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:warning = s:gen_def(s:dark_gray, s:orangarine)$/;"	v
s:warning_message	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^function! s:warning_message(msg) abort$/;"	f
s:warning_sign	autoload/plugged/coc.nvim/autoload/coc.vim	/^let s:warning_sign = get(g:, 'coc_status_warning_sign', has('mac') ? '⚠️ ' : 'W')$/;"	v
s:warning_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/coc.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#coc#warning_symbol', 'W:')$/;"	v
s:warning_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#languageclient#warning_symbol', 'W:')$/;"	v
s:warning_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#neomake#warning_symbol', 'W:')$/;"	v
s:warning_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#syntastic#warning_symbol', 'W:')$/;"	v
s:warning_symbol	autoload/plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#ycm#warning_symbol', 'W:')$/;"	v
s:watched_keys	autoload/plugged/coc.nvim/autoload/coc.vim	/^let s:watched_keys = []$/;"	v
s:wcswidth	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
s:wcswidth	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  let s:wcswidth = function('strwidth')$/;"	v
s:when_no_matched_or_others	autoload/plugged/vim-polyglot/ftplugin/sql.vim	/^let s:when_no_matched_or_others = '\\%(\\<when\\>\\%(\\s\\+\\%(\\%(\\<not\\>\\s\\+\\)\\?<matched/;"	v
s:white	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:white = s:colors.white$/;"	v
s:white_mask_3	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:white_mask_3 = s:colors.white_mask_3$/;"	v
s:wide	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:wide = 120$/;"	v
s:win_execute	autoload/plugged/coc.nvim/autoload/coc/api.vim	/^  function! s:win_execute(win_id, cmd, ...) abort$/;"	f
s:win_gotoid_safe	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:win_gotoid_safe(winid)$/;"	f
s:win_sep	autoload/plugged/vim-polyglot/ftplugin/dart.vim	/^let s:win_sep = (has('win32') || has('win64')) ? '\/' : ''$/;"	v
s:win_setview	autoload/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:win_setview(winid, topline, lnum) abort$/;"	f
s:windows_sink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:windows_sink(line)$/;"	f
s:winpos_map	autoload/plugged/vim-polyglot/autoload/ledger.vim	/^let s:winpos_map = {$/;"	v
s:winshell	autoload/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:winshell() abort$/;"	f
s:with_cd	autoload/plug.vim	/^function! s:with_cd(cmd, dir, ...)$/;"	f
s:with_index	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
s:wordcount_cache	autoload/plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^let s:wordcount_cache = 0  " cache wordcount for performance when force_update=0$/;"	v
s:words	autoload/plugged/vim-polyglot/autoload/clojurecomplete.vim	/^let s:words = ["*","*'","*1","*2","*3","*agent*","*allow-unresolved-vars*","*assert*","*clojure-/;"	v
s:words	autoload/plugged/vim-polyglot/syntax/raku.vim	/^    let s:words = join(s:temp, "\\\\|")$/;"	v
s:words	autoload/plugged/vim-polyglot/syntax/raku.vim	/^let s:words = join(s:temp, "\\\\|")$/;"	v
s:words_space	autoload/plugged/vim-polyglot/syntax/raku.vim	/^    let s:words_space = join(s:words_list, " ")$/;"	v
s:words_space	autoload/plugged/vim-polyglot/syntax/raku.vim	/^let s:words_space = join(s:alpha_metaops, " ")$/;"	v
s:words_space	autoload/plugged/vim-polyglot/syntax/raku.vim	/^let s:words_space = join(s:types, " ")$/;"	v
s:workspace	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^let s:workspace = []$/;"	v
s:workspaceLoad	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:workspaceLoad(files, cont)$/;"	f
s:workspacePeek	autoload/plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:workspacePeek(directory, depth, excludedDirs, cont)$/;"	f
s:worktree_for_dir	autoload/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
s:wrap	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:wrap(name, opts, bang)$/;"	f
s:wrap	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
s:wrap_a	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:wrap_a(back,forward) abort$/;"	f
s:wrap_accent	autoload/plugged/vim-airline/autoload/airline/section.vim	/^function! s:wrap_accent(part, value)$/;"	f
s:wrap_around	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^function! s:wrap_around()$/;"	f
s:wrap_cmd	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:wrap_cmd(bufnr, vcs, cmd) abort$/;"	f
s:wrap_cmds	autoload/plug.vim	/^  function! s:wrap_cmds(cmds)$/;"	f
s:wrap_cmds	autoload/plugged/fzf/plugin/fzf.vim	/^  function! s:wrap_cmds(cmds)$/;"	f
s:wrap_i	autoload/plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:wrap_i(back,forward) abort$/;"	f
s:wrap_inside	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^function! s:wrap_inside()$/;"	f
s:wrap_opts	autoload/plugged/palenight.vim/autoload/airline/themes/palenight.vim	/^function! s:wrap_opts(opts)$/;"	f
s:write_buffer	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! s:write_buffer(bufnr, file)$/;"	f
s:write_to_preview_window	autoload/plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:write_to_preview_window(content, ftype, buffername)$/;"	f
s:ws_refresh	autoload/plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:ws_refresh()$/;"	f
s:wsh_cpo_save	autoload/plugged/vim-polyglot/syntax/wsh.vim	/^let s:wsh_cpo_save = &cpo$/;"	v
s:xml_cpo_save	autoload/plugged/vim-polyglot/syntax/xml.vim	/^let s:xml_cpo_save = &cpo$/;"	v
s:xterm_escape_template	autoload/plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:xterm_escape_template = '\\033]12;%s\\007'$/;"	v
s:xterm_launcher	autoload/plugged/fzf/plugin/fzf.vim	/^function! s:xterm_launcher()$/;"	f
s:yamlKey	autoload/plugged/vim-polyglot/syntax/ansible.vim	/^  let s:yamlKey = "yamlBlockMappingKey"$/;"	v
s:yamlKey	autoload/plugged/vim-polyglot/syntax/ansible.vim	/^  let s:yamlKey = g:ansible_yamlKeyName$/;"	v
s:yank_to_register	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:yank_to_register(data)$/;"	f
s:yellow	autoload/plugged/palenight.vim/colors/palenight.vim	/^let s:yellow = s:colors.yellow$/;"	v
s:yellow	autoload/plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:yellow       = [ '#ffffaf', 229 ]$/;"	v
s:yellow	autoload/plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:yellow  = {'hex': '#B58900', 'term': 136}  " 181, 137,   0$/;"	v
s:yellow	~./config/nvim/plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:yellow = s:getGruvColor('GruvboxYellow')$/;"	v
s:yellow	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:yellow = s:gb.bright_yellow$/;"	v
s:yellow	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:yellow = s:gb.faded_yellow$/;"	v
s:yellow	~./config/nvim/plugged/gruvbox/colors/gruvbox.vim	/^  let s:yellow[1] = 11$/;"	v
s:yesmacro	autoload/plugged/vim-polyglot/ftplugin/julia.vim	/^  let s:yesmacro = s:nomacro . '\\%('. s:macro_regex . '\\)\\+'$/;"	v
s:z	autoload/plugged/vim-polyglot/indent/javascript.vim	/^let s:z = has('patch-7.4.984') ? 'z' : ''$/;"	v
s:zig_syntax_keywords	autoload/plugged/vim-polyglot/syntax/zig.vim	/^let s:zig_syntax_keywords = {$/;"	v
s:zip	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:zip(...) abort$/;"	f
s:zip_fill	autoload/plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
s:zoomwintab_status_zoomed_in	autoload/plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^let s:zoomwintab_status_zoomed_in =$/;"	v
s:zoomwintab_status_zoomed_out	autoload/plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^let s:zoomwintab_status_zoomed_out =$/;"	v
sA	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	v
sB	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	v
sD	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	v
sE	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
sF	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
sI	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
sK	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
sM	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
sN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
sO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
sQ	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
sR	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
sS	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
sU	autoload/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(o):i+=Ql(o)+n+Ql(l)+F0}),e.section&&i.length&&(i="["+Ql(e.secti/;"	f
sZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
s_	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	v
scala	autoload/plugged/vim-polyglot/ctags/scala.ctags	/^--langdef=scala$/;"	l
scala#ConditionalConfirm	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#ConditionalConfirm(msg)$/;"	f
scala#CountBrackets	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#CountBrackets(line, openBracket, closedBracket)$/;"	f
scala#CountCurlies	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#CountCurlies(line)$/;"	f
scala#CountParens	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#CountParens(line)$/;"	f
scala#CurlyMatcher	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#CurlyMatcher()$/;"	f
scala#GetDirForFuzzyFinder	autoload/plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetDirForFuzzyFinder(from, addon)$/;"	f
scala#GetLine	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLine(lnum)$/;"	f
scala#GetLineAndColumnThatMatchesBracket	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesBracket(openBracket, closedBracket)$/;"	f
scala#GetLineAndColumnThatMatchesCurly	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesCurly()$/;"	f
scala#GetLineAndColumnThatMatchesParen	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesParen()$/;"	f
scala#GetLineThatMatchesBracket	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesBracket(openBracket, closedBracket)$/;"	f
scala#GetLineThatMatchesCurly	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesCurly()$/;"	f
scala#GetLineThatMatchesParen	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesParen()$/;"	f
scala#GetMainDirForFuzzyFinder	autoload/plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetMainDirForFuzzyFinder(from)$/;"	f
scala#GetPrevCodeLine	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetPrevCodeLine(lnum)$/;"	f
scala#GetRootDirForFuzzyFinder	autoload/plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetRootDirForFuzzyFinder(from)$/;"	f
scala#GetTestDirForFuzzyFinder	autoload/plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetTestDirForFuzzyFinder(from)$/;"	f
scala#InvertBracketType	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#InvertBracketType(openBracket, closedBracket)$/;"	f
scala#IsParentCase	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#IsParentCase()$/;"	f
scala#LineCompletesBrackets	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesBrackets(openBracket, closedBracket)$/;"	f
scala#LineCompletesDefValr	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesDefValr(lnum, line)$/;"	f
scala#LineCompletesIfElse	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesIfElse(lnum, line)$/;"	f
scala#LineCompletesXML	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesXML(lnum, line)$/;"	f
scala#LineEndsInIncomplete	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineEndsInIncomplete(line)$/;"	f
scala#LineIsAClosingXML	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineIsAClosingXML(line)$/;"	f
scala#LineIsCompleteIf	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineIsCompleteIf(line)$/;"	f
scala#MatchesIncompleteDefValr	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#MatchesIncompleteDefValr(line)$/;"	f
scala#NumberOfBraceGroups	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#NumberOfBraceGroups(line)$/;"	f
scala#SanitizeDirForFuzzyFinder	autoload/plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#SanitizeDirForFuzzyFinder(dir)$/;"	f
scala#SpecificLineCompletesBrackets	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#SpecificLineCompletesBrackets(lnum, openBracket, closedBracket)$/;"	f
scala#Test	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#Test(lnum, line, openBracket, closedBracket)$/;"	f
scala#Testhelper	autoload/plugged/vim-polyglot/indent/scala.vim	/^function! scala#Testhelper(lnum, line, openBracket, closedBracket, iteration)$/;"	f
scan	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:d
scan	autoload/plugged/fzf/src/matcher.go	/^func (m *Matcher) scan(request MatchRequest) (*Merger, bool) {$/;"	f	struct:fzf.Matcher	typeref:typename:(*Merger, bool)
sched	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	m	class:ar
schema	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	G	class:o0
scoreGapExtention	autoload/plugged/fzf/src/algo/algo.go	/^	scoreGapExtention = -1$/;"	c	package:algo
scoreGapStart	autoload/plugged/fzf/src/algo/algo.go	/^	scoreGapStart     = -3$/;"	c	package:algo
scoreMatch	autoload/plugged/fzf/src/algo/algo.go	/^	scoreMatch        = 16$/;"	c	package:algo
screen shot (if possible)	autoload/plugged/vim-airline-themes/.github/ISSUE_TEMPLATE.md	/^#### screen shot (if possible)$/;"	t
screen shot (if possible)	autoload/plugged/vim-airline/.github/ISSUE_TEMPLATE.md	/^#### screen shot (if possible)$/;"	t
scripts	autoload/plugged/coc.nvim/package.json	/^  "scripts": {},$/;"	o
scroll	autoload/plugged/fzf/src/options.go	/^	scroll      string$/;"	m	struct:fzf.previewOpts	typeref:typename:string
scrollForward	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:DD
scrollable	autoload/plugged/fzf/src/terminal.go	/^	scrollable bool$/;"	m	struct:fzf.previewer	typeref:typename:bool
sde	autoload/plugged/coc.nvim/build/index.js	/^`),a++,u=i,s=14;switch(x){case 123:return i++,s=1;case 125:return i++,s=2;case 91:return i++,s=3/;"	f
search	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	p	class:jU.e
searchRequest	autoload/plugged/fzf/src/terminal.go	/^type searchRequest struct {$/;"	s	package:fzf
sed_delimiter	autoload/plugged/vim-polyglot/syntax/sed.vim	/^    let __sed_delimiter = escape(nr2char(__sed_i), __sed_metacharacters)$/;"	v
sed_i	autoload/plugged/vim-polyglot/syntax/sed.vim	/^    let __sed_i = __sed_i + 1$/;"	v
sed_i	autoload/plugged/vim-polyglot/syntax/sed.vim	/^let __sed_i = __sed_i + 1$/;"	v
sed_i	autoload/plugged/vim-polyglot/syntax/sed.vim	/^let __sed_i = char2nr(" ") " ASCII: 32, EBCDIC: 64$/;"	v
sed_last	autoload/plugged/vim-polyglot/syntax/sed.vim	/^    let __sed_last = 126$/;"	v
sed_last	autoload/plugged/vim-polyglot/syntax/sed.vim	/^    let __sed_last = 255$/;"	v
sed_metacharacters	autoload/plugged/vim-polyglot/syntax/sed.vim	/^let __sed_metacharacters = '$*.\\^[~'$/;"	v
selectItem	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) selectItem(item *Item) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
selectItemChanged	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) selectItemChanged(item *Item) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
select_count	autoload/plugged/fzf/test/test_go.rb	/^          def select_count$/;"	f	method:Tmux.until
selected	autoload/plugged/fzf/src/terminal.go	/^	selected     map[int32]selectedItem$/;"	m	struct:fzf.Terminal	typeref:typename:map[int32]selectedItem
selected	autoload/plugged/fzf/src/terminal.go	/^	selected bool$/;"	m	struct:fzf.itemLine	typeref:typename:bool
selectedItem	autoload/plugged/fzf/src/terminal.go	/^type selectedItem struct {$/;"	s	package:fzf
selectionRange	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892ff00.e.u
self.get_completions	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^  def self.get_completions(base)$/;"	f
self.preload_rails	autoload/plugged/vim-polyglot/autoload/rubycomplete.vim	/^  def self.preload_rails$/;"	f
sendText	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:p0
send_keys	autoload/plugged/fzf/test/test_go.rb	/^  def send_keys(*args)$/;"	f	class:Tmux
setBg	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) setBg() {$/;"	f	struct:tui.LightWindow
setCursor	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:SD
setFiletype	autoload/plugged/coc.nvim/build/index.js	/^`:e}getVar(e,t){let i=this.variables[`coc_${e}`];return i===void 0?t:i}getPosition(e,t){let i=th/;"	m	class:o0
setIskeyword	autoload/plugged/coc.nvim/build/index.js	/^`:e}getVar(e,t){let i=this.variables[`coc_${e}`];return i===void 0?t:i}getPosition(e,t){let i=th/;"	m	class:o0
setKeywordOption	autoload/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:s}}function oj(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	m	class:Qf
setStatusText	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:ID
setValue	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:Fr
set_var	autoload/plugged/fzf/test/test_go.rb	/^  def set_var(name, val)$/;"	f	class:TestFish
set_var	autoload/plugged/fzf/test/test_go.rb	/^  def set_var(name, val)$/;"	f	module:TestShell
settings	autoload/plugged/coc.nvim/data/schema.json	/^        "settings": {$/;"	o	object:definitions.languageServerBase.properties
settings	autoload/plugged/coc.nvim/data/schema.json	/^        "settings": {},$/;"	o	object:definitions.languageServerCommand.properties
settings	autoload/plugged/coc.nvim/data/schema.json	/^        "settings": {},$/;"	o	object:definitions.languageServerModule.properties
settings	autoload/plugged/coc.nvim/data/schema.json	/^        "settings": {},$/;"	o	object:definitions.languageServerSocket.properties
setup	autoload/plugged/fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestGoFZF
setup	autoload/plugged/fzf/test/test_go.rb	/^  def setup$/;"	f	module:TestShell
setupTerminal	autoload/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) setupTerminal() {$/;"	f	unknown:tui.LightRenderer
setupTerminal	autoload/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) setupTerminal() error {$/;"	f	unknown:tui.LightRenderer	typeref:typename:error
sh	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
shape	autoload/plugged/fzf/src/tui/tui.go	/^	shape       BorderShape$/;"	m	struct:tui.BorderStyle	typeref:typename:BorderShape
she	autoload/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(o):i+=Ql(o)+n+Ql(l)+F0}),e.section&&i.length&&(i="["+Ql(e.secti/;"	f
shell	autoload/plugged/coc.nvim/data/schema.json	/^        "shell": {$/;"	o	object:definitions.languageServerCommand.properties
shell	autoload/plugged/fzf/test/test_go.rb	/^  def shell$/;"	f	class:TestBash
shell	autoload/plugged/fzf/test/test_go.rb	/^  def shell$/;"	f	class:TestFish
shell	autoload/plugged/fzf/test/test_go.rb	/^  def shell$/;"	f	class:TestZsh
shouldAttach	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	G	class:o0
show	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	m	class:yD
show	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:p0
show	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:CD
show	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:ED
show	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:SD
show	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:wD
show	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:xD
show	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:zB
show	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:_D
show	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	p	class:ID.createStatusBarItem.n
showDialog	autoload/plugged/coc.nvim/build/index.js	/^`)],!0)}async runTerminalCommand(e,t,i=!1){return t=t||b.cwd,await this.nvim.callAsync("coc#util/;"	m	class:Vj
showMenuPicker	autoload/plugged/coc.nvim/build/index.js	/^`)],!0)}async runTerminalCommand(e,t,i=!1){return t=t||b.cwd,await this.nvim.callAsync("coc#util/;"	m	class:Vj
showMessage	autoload/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[c],!0),await e./;"	m	class:Vj
showOutputChannel	autoload/plugged/coc.nvim/build/index.js	/^`)],!0)}async runTerminalCommand(e,t,i=!1){return t=t||b.cwd,await this.nvim.callAsync("coc#util/;"	m	class:Vj
showPickerDialog	autoload/plugged/coc.nvim/build/index.js	/^`)],!0)}async runTerminalCommand(e,t,i=!1){return t=t||b.cwd,await this.nvim.callAsync("coc#util/;"	m	class:Vj
showPrompt	autoload/plugged/coc.nvim/build/index.js	/^`)],!0)}async runTerminalCommand(e,t,i=!1){return t=t||b.cwd,await this.nvim.callAsync("coc#util/;"	m	class:Vj
showQuickpick	autoload/plugged/coc.nvim/build/index.js	/^`)],!0)}async runTerminalCommand(e,t,i=!1){return t=t||b.cwd,await this.nvim.callAsync("coc#util/;"	m	class:Vj
showSectionPrefix	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
show_warnings	autoload/plugged/vim-polyglot/scripts/build	/^def show_warnings(all_filetypes, expected_filetypes)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
shutdown	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f	function:s
sie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
signature.enable	autoload/plugged/coc.nvim/data/schema.json	/^    "signature.enable": {$/;"	o	object:properties
signature.hideOnTextChange	autoload/plugged/coc.nvim/data/schema.json	/^    "signature.hideOnTextChange": {$/;"	o	object:properties
signature.maxWindowHeight	autoload/plugged/coc.nvim/data/schema.json	/^    "signature.maxWindowHeight": {$/;"	o	object:properties
signature.maxWindowWidth	autoload/plugged/coc.nvim/data/schema.json	/^    "signature.maxWindowWidth": {$/;"	o	object:properties
signature.preferShownAbove	autoload/plugged/coc.nvim/data/schema.json	/^    "signature.preferShownAbove": {$/;"	o	object:properties
signature.target	autoload/plugged/coc.nvim/data/schema.json	/^    "signature.target": {$/;"	o	object:properties
signature.triggerSignatureWait	autoload/plugged/coc.nvim/data/schema.json	/^    "signature.triggerSignatureWait": {$/;"	o	object:properties
signify	autoload/plugged/vim-signify/autoload/sy.vim	/^  augroup signify$/;"	a
sigstop	autoload/plugged/fzf/src/terminal.go	/^	sigstop      bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
since	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	p	class:sp.subscribe.a
site	autoload/plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*site[[:space:]]*([a-zA-Z0-9_\\-]+)\/\\1\/s,site\/$/;"	k	langdef:puppet
size	autoload/plugged/fzf/src/options.go	/^	size        sizeSpec$/;"	m	struct:fzf.previewOpts	typeref:typename:sizeSpec
size	autoload/plugged/fzf/src/options.go	/^	size    float64$/;"	m	struct:fzf.sizeSpec	typeref:typename:float64
sizeSpec	autoload/plugged/fzf/src/options.go	/^type sizeSpec struct {$/;"	s	package:fzf
sj	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get lineCount(){return this.lines.length+(this.eol?1:0)}getText(e){if(e){let t=this.offset/;"	v
skip	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:d
skip	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:AnonymousFunctionb666889228a00.t.e
sl	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
slab	autoload/plugged/fzf/src/matcher.go	/^	slab           []*util.Slab$/;"	m	struct:fzf.Matcher	typeref:typename:[]*util.Slab
slab	autoload/plugged/fzf/src/pattern_test.go	/^var slab *util.Slab$/;"	v	package:fzf	typeref:typename:*util.Slab
slab	autoload/plugged/fzf/src/terminal.go	/^	slab         *util.Slab$/;"	m	struct:fzf.Terminal	typeref:typename:*util.Slab
slab16Size	autoload/plugged/fzf/src/constants.go	/^	slab16Size int = 100 * 1024 \/\/ 200KB * 32 = 12.8MB$/;"	c	package:fzf	typeref:typename:int
slab32Size	autoload/plugged/fzf/src/constants.go	/^	slab32Size int = 2048       \/\/ 8KB * 32 = 256KB$/;"	c	package:fzf	typeref:typename:int
slice	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	m	class:Array
slice	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	m	class:jc
slice	autoload/plugged/fzf/src/util/chars.go	/^	slice           []byte \/\/ or []rune$/;"	m	struct:util.Chars	typeref:typename:[]byte
sliceChunks	autoload/plugged/fzf/src/matcher.go	/^func (m *Matcher) sliceChunks(chunks []*Chunk) [][]*Chunk {$/;"	f	struct:fzf.Matcher	typeref:typename:[][]*Chunk
smcup	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) smcup() {$/;"	f	struct:tui.LightRenderer
smt2#PrintSolverVersion	autoload/plugged/vim-polyglot/autoload/smt2.vim	/^function! smt2#PrintSolverVersion()$/;"	f
smt2#RunSolver	autoload/plugged/vim-polyglot/autoload/smt2.vim	/^function! smt2#RunSolver()$/;"	f
smt2#RunSolverAndShowResult	autoload/plugged/vim-polyglot/autoload/smt2.vim	/^function! smt2#RunSolverAndShowResult()$/;"	f
sne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
snippet	autoload/plugged/coc.nvim/data/schema.json	/^        "snippet": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
snippets.ultisnips.directories	coc-settings.json	/^  "snippets.ultisnips.directories":$/;"	a
sort	autoload/plugged/fzf/src/matcher.go	/^	sort           bool$/;"	m	struct:fzf.Matcher	typeref:typename:bool
sort	autoload/plugged/fzf/src/matcher.go	/^	sort       bool$/;"	m	struct:fzf.MatchRequest	typeref:typename:bool
sort	autoload/plugged/fzf/src/terminal.go	/^	sort         bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
sort	autoload/plugged/fzf/src/terminal.go	/^	sort    bool$/;"	m	struct:fzf.searchRequest	typeref:typename:bool
sortCriteria	autoload/plugged/fzf/src/result.go	/^var sortCriteria []criterion$/;"	v	package:fzf	typeref:typename:[]criterion
sortSelected	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) sortSelected() []selectedItem {$/;"	f	struct:fzf.Terminal	typeref:typename:[]selectedItem
sort_packages	autoload/plugged/vim-polyglot/scripts/build	/^def sort_packages(packages)$/;"	f
sortable	autoload/plugged/fzf/src/pattern.go	/^	sortable      bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
sorted	autoload/plugged/fzf/src/merger.go	/^	sorted  bool$/;"	m	struct:fzf.Merger	typeref:typename:bool
sp	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	c
spellmenu	autoload/plugged/vim-polyglot/extras/menu.vim	/^    augroup spellmenu$/;"	a
spinner	autoload/plugged/fzf/src/terminal.go	/^	spinner      []string$/;"	m	struct:fzf.Terminal	typeref:typename:[]string
spinner	autoload/plugged/fzf/src/terminal.go	/^	spinner    string$/;"	m	struct:fzf.previewer	typeref:typename:string
spinner	autoload/plugged/fzf/src/terminal.go	/^	spinner string$/;"	m	struct:fzf.previewResult	typeref:typename:string
spinnerDuration	autoload/plugged/fzf/src/constants.go	/^	spinnerDuration   = 100 * time.Millisecond$/;"	c	package:fzf
splitNth	autoload/plugged/fzf/src/options.go	/^func splitNth(str string) []Range {$/;"	f	package:fzf	typeref:typename:[]Range
square_expansion	autoload/plugged/vim-polyglot/scripts/build	/^def square_expansion(s)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
square_expansion	autoload/plugged/vim-polyglot/scripts/import_vim	/^def square_expansion(s)$/;"	f
sse	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
start	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:f0
start	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:p0
start	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:fde.a
startChan	autoload/plugged/fzf/src/terminal.go	/^	startChan    chan bool$/;"	m	struct:fzf.Terminal	typeref:typename:chan bool
startEventPoller	autoload/plugged/fzf/src/reader.go	/^func (r *Reader) startEventPoller() {$/;"	f	struct:fzf.Reader
startLine	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892d900.e.l
state	autoload/plugged/fzf/src/util/atomicbool.go	/^	state int32 \/\/ "1" is true, "0" is false$/;"	m	struct:util.AtomicBool	typeref:typename:int32
statusline on top	autoload/plugged/vim-airline/README.md	/^### statusline on top$/;"	S	section:Features""Extras
stderr	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) stderr(str string) {$/;"	f	unknown:tui.LightRenderer
stderrInternal	autoload/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) stderrInternal(str string, allowNLCR bool) {$/;"	f	unknown:tui.LightRenderer
stderrInternal	autoload/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) stderrInternal(str string, allowNLCR bool) {$/;"	f	struct:tui.LightWindow
stdioEncoding	autoload/plugged/coc.nvim/data/schema.json	/^        "stdioEncoding": {$/;"	o	object:definitions.languageServerBase.properties
stdioEncoding	autoload/plugged/coc.nvim/data/schema.json	/^        "stdioEncoding": {},$/;"	o	object:definitions.languageServerCommand.properties
stdioEncoding	autoload/plugged/coc.nvim/data/schema.json	/^        "stdioEncoding": {},$/;"	o	object:definitions.languageServerModule.properties
stdioEncoding	autoload/plugged/coc.nvim/data/schema.json	/^        "stdioEncoding": {},$/;"	o	object:definitions.languageServerSocket.properties
ste	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
stl	autoload/plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	autoload/plugged/vim-airline/t/extensions_default.vim	/^    let stl = s:builder.build()$/;"	v
stop	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:f0
stop	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:OW.s.c
str	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:mne.n
str	autoload/plugged/fzf/src/tokenizer.go	/^	str   *string$/;"	m	struct:fzf.Delimiter	typeref:typename:*string
strLines	autoload/plugged/fzf/src/options.go	/^func strLines(str string) []string {$/;"	f	package:fzf	typeref:typename:[]string
strikethrough	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.modifier
strikethrough	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.modifier
stringify	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	m	class:AnonymousFunctionb66688923400.t
strings	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	p	class:AnonymousFunctionb666889221c00.t
strong	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
strong	autoload/plugged/coc.nvim/build/index.js	/^`}tablecell(e,t){return e+DB}strong(e){return this.o.strong(e)}em(e){return e=_B(e,this.o.reflow/;"	m	class:FB
strong	autoload/plugged/fzf/src/terminal.go	/^	strong       tui.Attr$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Attr
struct	autoload/plugged/coc.nvim/data/schema.json	/^        "struct": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
structure names	autoload/plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?struct[ \\t]+([a-zA-Z0-9_]+)\/\\2\/s,structure names\/$/;"	k	langdef:Rust
style	autoload/plugged/fzf/src/tui/tcell.go	/^func (p ColorPair) style() tcell.Style {$/;"	f	unknown:tui.ColorPair	typeref:typename:tcell.Style
subscribe	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:sp
suggest.acceptSuggestionOnCommitCharacter	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.acceptSuggestionOnCommitCharacter": {$/;"	o	object:properties
suggest.asciiCharactersOnly	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.asciiCharactersOnly": {$/;"	o	object:properties
suggest.autoTrigger	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.autoTrigger": {$/;"	o	object:properties
suggest.completionItemKindLabels	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.completionItemKindLabels": {$/;"	o	object:properties
suggest.defaultSortMethod	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.defaultSortMethod": {$/;"	o	object:properties
suggest.detailField	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.detailField": {$/;"	o	object:properties
suggest.detailMaxLength	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.detailMaxLength": {$/;"	o	object:properties
suggest.disableKind	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.disableKind": {$/;"	o	object:properties
suggest.disableMenu	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.disableMenu": {$/;"	o	object:properties
suggest.disableMenuShortcut	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.disableMenuShortcut": {$/;"	o	object:properties
suggest.echodocSupport	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.echodocSupport": {$/;"	o	object:properties
suggest.enablePreselect	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.enablePreselect": {$/;"	o	object:properties
suggest.enablePreview	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.enablePreview": {$/;"	o	object:properties
suggest.fixInsertedWord	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.fixInsertedWord": {$/;"	o	object:properties
suggest.floatEnable	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.floatEnable": {$/;"	o	object:properties
suggest.highPrioritySourceLimit	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.highPrioritySourceLimit": {$/;"	o	object:properties
suggest.invalidInsertCharacters	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.invalidInsertCharacters": {$/;"	o	object:properties
suggest.keepCompleteopt	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.keepCompleteopt": {$/;"	o	object:properties
suggest.labelMaxLength	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.labelMaxLength": {$/;"	o	object:properties
suggest.languageSourcePriority	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.languageSourcePriority": {$/;"	o	object:properties
suggest.localityBonus	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.localityBonus": {$/;"	o	object:properties
suggest.lowPrioritySourceLimit	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.lowPrioritySourceLimit": {$/;"	o	object:properties
suggest.maxCompleteItemCount	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.maxCompleteItemCount": {$/;"	o	object:properties
suggest.maxPreviewWidth	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.maxPreviewWidth": {$/;"	o	object:properties
suggest.minTriggerInputLength	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.minTriggerInputLength": {$/;"	o	object:properties
suggest.noselect	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.noselect": {$/;"	o	object:properties
suggest.numberSelect	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.numberSelect": {$/;"	o	object:properties
suggest.preferCompleteThanJumpPlaceholder	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.preferCompleteThanJumpPlaceholder": {$/;"	o	object:properties
suggest.removeDuplicateItems	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.removeDuplicateItems": {$/;"	o	object:properties
suggest.snippetIndicator	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.snippetIndicator": {$/;"	o	object:properties
suggest.timeout	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.timeout": {$/;"	o	object:properties
suggest.triggerAfterInsertEnter	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.triggerAfterInsertEnter": {$/;"	o	object:properties
suggest.triggerCompletionWait	autoload/plugged/coc.nvim/data/schema.json	/^    "suggest.triggerCompletionWait": {$/;"	o	object:properties
summary	autoload/plugged/vim-rooter/test/runner.vim	/^let summary = [$/;"	v
suppress	autoload/plugged/fzf/src/terminal.go	/^	suppress     bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
svelte#GetConfig	autoload/plugged/vim-polyglot/autoload/svelte.vim	/^function! svelte#GetConfig(name, default)$/;"	f
swe	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
sy	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
sy#buffer_is_active	autoload/plugged/vim-signify/autoload/sy.vim	/^function! sy#buffer_is_active(...)$/;"	f
sy#debug#list_active_buffers	autoload/plugged/vim-signify/autoload/sy/debug.vim	/^function! sy#debug#list_active_buffers() abort$/;"	f
sy#fold#disable	autoload/plugged/vim-signify/autoload/sy/fold.vim	/^function! sy#fold#disable() abort$/;"	f
sy#fold#dispatch	autoload/plugged/vim-signify/autoload/sy/fold.vim	/^function! sy#fold#dispatch(do_tab) abort$/;"	f
sy#fold#enable	autoload/plugged/vim-signify/autoload/sy/fold.vim	/^function! sy#fold#enable(do_tab) abort$/;"	f
sy#fold#toggle	autoload/plugged/vim-signify/autoload/sy/fold.vim	/^function! sy#fold#toggle() abort$/;"	f
sy#highlight#line_disable	autoload/plugged/vim-signify/autoload/sy/highlight.vim	/^function! sy#highlight#line_disable() abort$/;"	f
sy#highlight#line_enable	autoload/plugged/vim-signify/autoload/sy/highlight.vim	/^function! sy#highlight#line_enable() abort$/;"	f
sy#highlight#line_toggle	autoload/plugged/vim-signify/autoload/sy/highlight.vim	/^function! sy#highlight#line_toggle() abort$/;"	f
sy#highlight#setup	autoload/plugged/vim-signify/autoload/sy/highlight.vim	/^function! sy#highlight#setup() abort$/;"	f
sy#jump#next_hunk	autoload/plugged/vim-signify/autoload/sy/jump.vim	/^function! sy#jump#next_hunk(count)$/;"	f
sy#jump#prev_hunk	autoload/plugged/vim-signify/autoload/sy/jump.vim	/^function! sy#jump#prev_hunk(count)$/;"	f
sy#repo#debug_detection	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! sy#repo#debug_detection()$/;"	f
sy#repo#detect	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! sy#repo#detect(bufnr) abort$/;"	f
sy#repo#diff_hunk	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! sy#repo#diff_hunk() abort$/;"	f
sy#repo#diffmode	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! sy#repo#diffmode(do_tab) abort$/;"	f
sy#repo#get_diff	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! sy#repo#get_diff(bufnr, vcs, func) abort$/;"	f
sy#repo#get_stats	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! sy#repo#get_stats(...) abort$/;"	f
sy#repo#get_stats_decorated	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! sy#repo#get_stats_decorated(...)$/;"	f
sy#repo#undo_hunk	autoload/plugged/vim-signify/autoload/sy/repo.vim	/^function! sy#repo#undo_hunk() abort$/;"	f
sy#set_buflocal_autocmds	autoload/plugged/vim-signify/autoload/sy.vim	/^function! sy#set_buflocal_autocmds(bufnr) abort$/;"	f
sy#sign#get_current_signs	autoload/plugged/vim-signify/autoload/sy/sign.vim	/^function! sy#sign#get_current_signs(sy) abort$/;"	f
sy#sign#id_next	autoload/plugged/vim-signify/autoload/sy/sign.vim	/^function! sy#sign#id_next(sy) abort$/;"	f
sy#sign#parse_hunk	autoload/plugged/vim-signify/autoload/sy/sign.vim	/^function! sy#sign#parse_hunk(diffline) abort$/;"	f
sy#sign#process_diff	autoload/plugged/vim-signify/autoload/sy/sign.vim	/^function! sy#sign#process_diff(sy, vcs, diff) abort$/;"	f
sy#sign#remove_all_signs	autoload/plugged/vim-signify/autoload/sy/sign.vim	/^function! sy#sign#remove_all_signs(bufnr) abort$/;"	f
sy#sign#set_signs	autoload/plugged/vim-signify/autoload/sy/sign.vim	/^function! sy#sign#set_signs(sy, vcs, diff) abort$/;"	f
sy#start	autoload/plugged/vim-signify/autoload/sy.vim	/^function! sy#start(...) abort$/;"	f
sy#start_all	autoload/plugged/vim-signify/autoload/sy.vim	/^function! sy#start_all() abort$/;"	f
sy#stop	autoload/plugged/vim-signify/autoload/sy.vim	/^function! sy#stop(...) abort$/;"	f
sy#stop_all	autoload/plugged/vim-signify/autoload/sy.vim	/^function! sy#stop_all() abort$/;"	f
sy#toggle	autoload/plugged/vim-signify/autoload/sy.vim	/^function! sy#toggle() abort$/;"	f
sy#util#chdir	autoload/plugged/vim-signify/autoload/sy/util.vim	/^function! sy#util#chdir() abort$/;"	f
sy#util#escape	autoload/plugged/vim-signify/autoload/sy/util.vim	/^function! sy#util#escape(path) abort$/;"	f
sy#util#execute	autoload/plugged/vim-signify/autoload/sy/util.vim	/^function! sy#util#execute(cmd) abort$/;"	f
sy#util#get_hunk_stats	autoload/plugged/vim-signify/autoload/sy/util.vim	/^function! sy#util#get_hunk_stats() abort$/;"	f
sy#util#hunk_text_object	autoload/plugged/vim-signify/autoload/sy/util.vim	/^function! sy#util#hunk_text_object(emptylines) abort$/;"	f
sy#util#popup_close	autoload/plugged/vim-signify/autoload/sy/util.vim	/^function! sy#util#popup_close() abort$/;"	f
sy#util#popup_create	autoload/plugged/vim-signify/autoload/sy/util.vim	/^function! sy#util#popup_create(hunkdiff) abort$/;"	f
sy#util#refresh_windows	autoload/plugged/vim-signify/autoload/sy/util.vim	/^function! sy#util#refresh_windows() abort$/;"	f
sy#util#return_if_no_changes	autoload/plugged/vim-signify/autoload/sy/util.vim	/^function! sy#util#return_if_no_changes() abort$/;"	f
sy#util#shell_redirect	autoload/plugged/vim-signify/autoload/sy/util.vim	/^function! sy#util#shell_redirect(path) abort$/;"	f
sy#verbose	autoload/plugged/vim-signify/autoload/sy.vim	/^function! sy#verbose(msg, ...) abort$/;"	f
t	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f	function:Kte
t	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f	function:qZ
t	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f	function:cb
t	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	c	class:e.toJSON
t	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	c	class:pfe
t	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionb666889210e00
t	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionb666889212500
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb666889210100
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb666889210200
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb666889210300
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb666889210400
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb666889210500
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb666889210600
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892d100
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892d200
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892d300
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892d400
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892d500
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892d600
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892d700
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892d900
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892da00
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892dd00
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892de00
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892df00
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892e000
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892e100
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892e200
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892e300
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892eb00
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892ec00
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892ed00
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892f600
t	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	f	function:AnonymousFunctionb6668892ff00
t	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
t	autoload/plugged/coc.nvim/build/index.js	/^`),s=i.line==r.start.line?i.character-r.start.character:i.character,a=UB(o,i.line-r.start.line,s/;"	c	class:Bl
t	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c	class:AnonymousFunctionb66688922ae00
t	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889226500
t	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889227400
t	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb666889228a00
t	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb66688922c900
t	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	c	class:uwe
t	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
t	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	c
t	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	c	class:AnonymousFunctionb666889221c00
t	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f	function:bg
t	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f	function:AnonymousFunctionb66688921bc00
t	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	c	class:AnonymousFunctionb66688923400
t	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:GY
t	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	c	class:IX
t	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
t	autoload/plugged/coc.nvim/build/index.js	/^`,"\\r"],Dx;(function(r){function e(o,s,a,l){return new Lse(o,s,a,l)}r.create=e;function t(o){va/;"	f	function:AnonymousFunctionb666889210700
t	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c	class:AnonymousFunctionb66688929c00
t	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Gie
t	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Hne
t	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Qie
t	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:ine
t	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:zne
t	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f	function:AnonymousFunctionb6668892c900
t	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
t	autoload/plugged/coc.nvim/build/index.js	/^`}get document(){return new Promise((e,t)=>{this.nvim.buffer.then(i=>{let n=i.id;if(this.bufnr=n/;"	v
t	autoload/plugged/coc.nvim/build/index.js	/^augroup end`;try{let o=Fe.default.join(process.env.TMPDIR,`coc.nvim-${process.pid}`);St.default./;"	v
t	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:TY
t	autoload/plugged/fzf/src/terminal.go	/^	t actionType$/;"	m	struct:fzf.action	typeref:typename:actionType
t$	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
t0	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
t1	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	v
t3	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
tD	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
tG	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
tK	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
tM	autoload/plugged/coc.nvim/build/index.js	/^`)}catch(t){cl.error("Send error:",e)}}redraw(e=!1){this.send(["redraw",e?"force":""])}commmand(/;"	v
tN	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f
tQ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
tT	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
tV	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
tX	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
tZ	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
ta	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	c
tab	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
tabSize	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:e0.modifyConfiguration.a
table	autoload/plugged/coc.nvim/build/index.js	/^`+hD+t(e)}checkbox(e){return"["+(e?"X":" ")+"] "}paragraph(e){return e=this.compose(this.o.parag/;"	m	class:FB
table	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
tableOptions	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
tablecell	autoload/plugged/coc.nvim/build/index.js	/^`}tablecell(e,t){return e+DB}strong(e){return this.o.strong(e)}em(e){return e=_B(e,this.o.reflow/;"	m	class:FB
tablerow	autoload/plugged/coc.nvim/build/index.js	/^`+hD+t(e)}checkbox(e){return"["+(e?"X":" ")+"] "}paragraph(e){return e=this.compose(this.o.parag/;"	m	class:FB
tabstop	autoload/plugged/fzf/src/terminal.go	/^	tabstop      int$/;"	m	struct:fzf.Terminal	typeref:typename:int
tabstop	autoload/plugged/fzf/src/tui/light.go	/^	tabstop       int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
tabstop	autoload/plugged/fzf/src/tui/light.go	/^	tabstop  int$/;"	m	struct:tui.LightWindow	typeref:typename:int
tac	autoload/plugged/fzf/src/matcher.go	/^	tac            bool$/;"	m	struct:fzf.Matcher	typeref:typename:bool
tac	autoload/plugged/fzf/src/merger.go	/^	tac     bool$/;"	m	struct:fzf.Merger	typeref:typename:bool
tads_minlines	autoload/plugged/vim-polyglot/syntax/tads.vim	/^  let tads_minlines = 15$/;"	v
tads_sync_dist	autoload/plugged/vim-polyglot/syntax/tads.vim	/^  let tads_sync_dist = 100$/;"	v
tap	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:d
tap	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:t
target/$(BINARY32)	autoload/plugged/fzf/Makefile	/^target\/$(BINARY32): $(SOURCES)$/;"	t
target/$(BINARY64)	autoload/plugged/fzf/Makefile	/^target\/$(BINARY64): $(SOURCES)$/;"	t
target/$(BINARYARM5)	autoload/plugged/fzf/Makefile	/^target\/$(BINARYARM5): $(SOURCES)$/;"	t
target/$(BINARYARM6)	autoload/plugged/fzf/Makefile	/^target\/$(BINARYARM6): $(SOURCES)$/;"	t
target/$(BINARYARM7)	autoload/plugged/fzf/Makefile	/^target\/$(BINARYARM7): $(SOURCES)$/;"	t
target/$(BINARYARM8)	autoload/plugged/fzf/Makefile	/^target\/$(BINARYARM8): $(SOURCES)$/;"	t
target/$(BINARYPPC64LE)	autoload/plugged/fzf/Makefile	/^target\/$(BINARYPPC64LE): $(SOURCES)$/;"	t
tde	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
te	autoload/plugged/coc.nvim/build/index.js	/^`,gse;(function(r){function e(t){let i=t;return i&&ef.func(i.dispose)&&ef.func(i.onClose)&&ef.fu/;"	f	function:Ed
teardown	autoload/plugged/fzf/test/test_go.rb	/^  def teardown$/;"	f	class:TestGoFZF
teardown	autoload/plugged/fzf/test/test_go.rb	/^  def teardown$/;"	f	module:TestShell
template	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	f	function:e
template	autoload/plugged/fzf/src/terminal.go	/^	template string$/;"	m	struct:fzf.previewRequest	typeref:typename:string
tempname	autoload/plugged/fzf/test/test_go.rb	/^  def tempname$/;"	f	class:TestBase
term	autoload/plugged/fzf/src/pattern.go	/^type term struct {$/;"	s	package:fzf
termEqual	autoload/plugged/fzf/src/pattern.go	/^	termEqual$/;"	c	package:fzf
termExact	autoload/plugged/fzf/src/pattern.go	/^	termExact$/;"	c	package:fzf
termFuzzy	autoload/plugged/fzf/src/pattern.go	/^	termFuzzy termType = iota$/;"	c	package:fzf	typeref:type:termType
termPrefix	autoload/plugged/fzf/src/pattern.go	/^	termPrefix$/;"	c	package:fzf
termSet	autoload/plugged/fzf/src/pattern.go	/^type termSet []term$/;"	t	package:fzf	typeref:typename:[]term
termSets	autoload/plugged/fzf/src/pattern.go	/^	termSets      []termSet$/;"	m	struct:fzf.Pattern	typeref:typename:[]termSet
termSuffix	autoload/plugged/fzf/src/pattern.go	/^	termSuffix$/;"	c	package:fzf
termType	autoload/plugged/fzf/src/pattern.go	/^type termType int$/;"	t	package:fzf	typeref:typename:int
terminate	autoload/plugged/fzf/src/reader.go	/^func (r *Reader) terminate() {$/;"	f	struct:fzf.Reader
terminateTree	autoload/plugged/coc.nvim/bin/terminateProcess.sh	/^terminateTree() {$/;"	f
terraform#align	autoload/plugged/vim-polyglot/autoload/terraform.vim	/^function! terraform#align() abort$/;"	f
terraform#commands	autoload/plugged/vim-polyglot/autoload/terraform.vim	/^function! terraform#commands(ArgLead, CmdLine, CursorPos) abort$/;"	f
terraform#fmt	autoload/plugged/vim-polyglot/autoload/terraform.vim	/^function! terraform#fmt() abort$/;"	f
test	autoload/plugged/fzf/Makefile	/^test: $(SOURCES)$/;"	t
test	autoload/plugged/vim-polyglot/Makefile	/^test:$/;"	t
testEnvironment	autoload/plugged/coc.nvim/package.json	/^    "testEnvironment": "node",$/;"	s	object:jest
testParserReference	autoload/plugged/fzf/src/ansi_test.go	/^func testParserReference(t testing.TB, str string) {$/;"	f	package:fzf
testRegex	autoload/plugged/coc.nvim/package.json	/^    "testRegex": "src\/__tests__\/.*\\\\.(test|spec)\\\\.ts$",$/;"	s	object:jest
test_accept_non_empty	autoload/plugged/fzf/test/test_go.rb	/^  def test_accept_non_empty$/;"	f	class:TestGoFZF
test_accept_non_empty_with_empty_list	autoload/plugged/fzf/test/test_go.rb	/^  def test_accept_non_empty_with_empty_list$/;"	f	class:TestGoFZF
test_accept_non_empty_with_multi_selection	autoload/plugged/fzf/test/test_go.rb	/^  def test_accept_non_empty_with_multi_selection$/;"	f	class:TestGoFZF
test_alt_c	autoload/plugged/fzf/test/test_go.rb	/^  def test_alt_c$/;"	f	module:TestShell
test_alt_c_command	autoload/plugged/fzf/test/test_go.rb	/^  def test_alt_c_command$/;"	f	module:TestShell
test_backward_delete_char_eof	autoload/plugged/fzf/test/test_go.rb	/^  def test_backward_delete_char_eof$/;"	f	class:TestGoFZF
test_backward_eof	autoload/plugged/fzf/test/test_go.rb	/^  def test_backward_eof$/;"	f	class:TestGoFZF
test_bind	autoload/plugged/fzf/test/test_go.rb	/^  def test_bind$/;"	f	class:TestGoFZF
test_bind_print_query	autoload/plugged/fzf/test/test_go.rb	/^  def test_bind_print_query$/;"	f	class:TestGoFZF
test_bind_replace_query	autoload/plugged/fzf/test/test_go.rb	/^  def test_bind_replace_query$/;"	f	class:TestGoFZF
test_cancel	autoload/plugged/fzf/test/test_go.rb	/^  def test_cancel$/;"	f	class:TestGoFZF
test_change_first_last	autoload/plugged/fzf/test/test_go.rb	/^  def test_change_first_last$/;"	f	class:TestGoFZF
test_change_prompt	autoload/plugged/fzf/test/test_go.rb	/^  def test_change_prompt$/;"	f	class:TestGoFZF
test_clear_list_when_header_lines_changed_due_to_reload	autoload/plugged/fzf/test/test_go.rb	/^  def test_clear_list_when_header_lines_changed_due_to_reload$/;"	f	class:TestGoFZF
test_clear_query	autoload/plugged/fzf/test/test_go.rb	/^  def test_clear_query$/;"	f	class:TestGoFZF
test_clear_selection	autoload/plugged/fzf/test/test_go.rb	/^  def test_clear_selection$/;"	f	class:TestGoFZF
test_close	autoload/plugged/fzf/test/test_go.rb	/^  def test_close$/;"	f	class:TestGoFZF
test_complete_quoted_command	autoload/plugged/fzf/test/test_go.rb	/^  def test_complete_quoted_command$/;"	f	class:TestZsh
test_ctrl_r	autoload/plugged/fzf/test/test_go.rb	/^  def test_ctrl_r$/;"	f	module:TestShell
test_ctrl_r_abort	autoload/plugged/fzf/test/test_go.rb	/^  def test_ctrl_r_abort$/;"	f	module:TestShell
test_ctrl_r_multiline	autoload/plugged/fzf/test/test_go.rb	/^  def test_ctrl_r_multiline$/;"	f	module:TestShell
test_ctrl_t	autoload/plugged/fzf/test/test_go.rb	/^  def test_ctrl_t$/;"	f	module:TestShell
test_ctrl_t_unicode	autoload/plugged/fzf/test/test_go.rb	/^  def test_ctrl_t_unicode$/;"	f	module:TestShell
test_custom_completion	autoload/plugged/fzf/test/test_go.rb	/^  def test_custom_completion$/;"	f	module:CompletionTest
test_custom_completion_api	autoload/plugged/fzf/test/test_go.rb	/^  def test_custom_completion_api$/;"	f	module:CompletionTest
test_cycle	autoload/plugged/fzf/test/test_go.rb	/^  def test_cycle$/;"	f	class:TestGoFZF
test_default_extended	autoload/plugged/fzf/test/test_go.rb	/^  def test_default_extended$/;"	f	class:TestGoFZF
test_dir_completion	autoload/plugged/fzf/test/test_go.rb	/^  def test_dir_completion$/;"	f	module:CompletionTest
test_disabled	autoload/plugged/fzf/test/test_go.rb	/^  def test_disabled$/;"	f	class:TestGoFZF
test_dynamic_completion_loader	autoload/plugged/fzf/test/test_go.rb	/^  def test_dynamic_completion_loader$/;"	f	class:TestBash
test_escaped_meta_characters	autoload/plugged/fzf/test/test_go.rb	/^  def test_escaped_meta_characters$/;"	f	class:TestGoFZF
test_exact	autoload/plugged/fzf/test/test_go.rb	/^  def test_exact$/;"	f	class:TestGoFZF
test_execute	autoload/plugged/fzf/test/test_go.rb	/^  def test_execute$/;"	f	class:TestGoFZF
test_execute_multi	autoload/plugged/fzf/test/test_go.rb	/^  def test_execute_multi$/;"	f	class:TestGoFZF
test_execute_plus_flag	autoload/plugged/fzf/test/test_go.rb	/^  def test_execute_plus_flag$/;"	f	class:TestGoFZF
test_execute_shell	autoload/plugged/fzf/test/test_go.rb	/^  def test_execute_shell$/;"	f	class:TestGoFZF
test_exit_0	autoload/plugged/fzf/test/test_go.rb	/^  def test_exit_0$/;"	f	class:TestGoFZF
test_exit_0_exit_code	autoload/plugged/fzf/test/test_go.rb	/^  def test_exit_0_exit_code$/;"	f	class:TestGoFZF
test_exitstatus_empty	autoload/plugged/fzf/test/test_go.rb	/^  def test_exitstatus_empty$/;"	f	class:TestGoFZF
test_expect	autoload/plugged/fzf/test/test_go.rb	/^  def test_expect$/;"	f	class:TestGoFZF
test_expect_print_query	autoload/plugged/fzf/test/test_go.rb	/^  def test_expect_print_query$/;"	f	class:TestGoFZF
test_expect_print_query_select_1	autoload/plugged/fzf/test/test_go.rb	/^  def test_expect_print_query_select_1$/;"	f	class:TestGoFZF
test_expect_printable_character_print_query	autoload/plugged/fzf/test/test_go.rb	/^  def test_expect_printable_character_print_query$/;"	f	class:TestGoFZF
test_file_completion	autoload/plugged/fzf/test/test_go.rb	/^  def test_file_completion$/;"	f	module:CompletionTest
test_file_completion_root	autoload/plugged/fzf/test/test_go.rb	/^  def test_file_completion_root$/;"	f	module:CompletionTest
test_file_completion_unicode	autoload/plugged/fzf/test/test_go.rb	/^  def test_file_completion_unicode$/;"	f	module:CompletionTest
test_file_word	autoload/plugged/fzf/test/test_go.rb	/^  def test_file_word$/;"	f	class:TestGoFZF
test_filter_exitstatus	autoload/plugged/fzf/test/test_go.rb	/^  def test_filter_exitstatus$/;"	f	class:TestGoFZF
test_fzf_default_command	autoload/plugged/fzf/test/test_go.rb	/^  def test_fzf_default_command$/;"	f	class:TestGoFZF
test_fzf_default_command_failure	autoload/plugged/fzf/test/test_go.rb	/^  def test_fzf_default_command_failure$/;"	f	class:TestGoFZF
test_header	autoload/plugged/fzf/test/test_go.rb	/^  def test_header$/;"	f	class:TestGoFZF
test_header_and_header_lines	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_and_header_lines$/;"	f	class:TestGoFZF
test_header_and_header_lines_reverse	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_and_header_lines_reverse$/;"	f	class:TestGoFZF
test_header_and_header_lines_reverse_list	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_and_header_lines_reverse_list$/;"	f	class:TestGoFZF
test_header_lines	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_lines$/;"	f	class:TestGoFZF
test_header_lines_overflow	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_lines_overflow$/;"	f	class:TestGoFZF
test_header_lines_reverse	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_lines_reverse$/;"	f	class:TestGoFZF
test_header_lines_reverse_list	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_lines_reverse_list$/;"	f	class:TestGoFZF
test_header_lines_with_nth	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_lines_with_nth$/;"	f	class:TestGoFZF
test_header_reverse	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_reverse$/;"	f	class:TestGoFZF
test_header_reverse_list	autoload/plugged/fzf/test/test_go.rb	/^  def test_header_reverse_list$/;"	f	class:TestGoFZF
test_history	autoload/plugged/fzf/test/test_go.rb	/^  def test_history$/;"	f	class:TestGoFZF
test_hscroll_off	autoload/plugged/fzf/test/test_go.rb	/^  def test_hscroll_off$/;"	f	class:TestGoFZF
test_info_hidden	autoload/plugged/fzf/test/test_go.rb	/^  def test_info_hidden$/;"	f	class:TestGoFZF
test_interrupt_execute	autoload/plugged/fzf/test/test_go.rb	/^  def test_interrupt_execute$/;"	f	class:TestGoFZF
test_invalid_cache	autoload/plugged/fzf/test/test_go.rb	/^  def test_invalid_cache$/;"	f	class:TestGoFZF
test_invalid_cache_query_type	autoload/plugged/fzf/test/test_go.rb	/^  def test_invalid_cache_query_type$/;"	f	class:TestGoFZF
test_invalid_option	autoload/plugged/fzf/test/test_go.rb	/^  def test_invalid_option$/;"	f	class:TestGoFZF
test_inverse_only_search_should_not_sort_the_result	autoload/plugged/fzf/test/test_go.rb	/^  def test_inverse_only_search_should_not_sort_the_result$/;"	f	class:TestGoFZF
test_jump	autoload/plugged/fzf/test/test_go.rb	/^  def test_jump$/;"	f	class:TestGoFZF
test_jump_accept	autoload/plugged/fzf/test/test_go.rb	/^  def test_jump_accept$/;"	f	class:TestGoFZF
test_keep_right	autoload/plugged/fzf/test/test_go.rb	/^  def test_keep_right$/;"	f	class:TestGoFZF
test_key_bindings	autoload/plugged/fzf/test/test_go.rb	/^  def test_key_bindings$/;"	f	class:TestGoFZF
test_kill_default_command_on_abort	autoload/plugged/fzf/test/test_go.rb	/^  def test_kill_default_command_on_abort$/;"	f	class:TestGoFZF
test_kill_default_command_on_accept	autoload/plugged/fzf/test/test_go.rb	/^  def test_kill_default_command_on_accept$/;"	f	class:TestGoFZF
test_kill_reload_command_on_abort	autoload/plugged/fzf/test/test_go.rb	/^  def test_kill_reload_command_on_abort$/;"	f	class:TestGoFZF
test_kill_reload_command_on_accept	autoload/plugged/fzf/test/test_go.rb	/^  def test_kill_reload_command_on_accept$/;"	f	class:TestGoFZF
test_long_line	autoload/plugged/fzf/test/test_go.rb	/^  def test_long_line$/;"	f	class:TestGoFZF
test_margin	autoload/plugged/fzf/test/test_go.rb	/^  def test_margin$/;"	f	class:TestGoFZF
test_margin_reverse	autoload/plugged/fzf/test/test_go.rb	/^  def test_margin_reverse$/;"	f	class:TestGoFZF
test_margin_reverse_list	autoload/plugged/fzf/test/test_go.rb	/^  def test_margin_reverse_list$/;"	f	class:TestGoFZF
test_marker	autoload/plugged/fzf/test/test_go.rb	/^  def test_marker$/;"	f	class:TestGoFZF
test_multi_max	autoload/plugged/fzf/test/test_go.rb	/^  def test_multi_max$/;"	f	class:TestGoFZF
test_multi_order	autoload/plugged/fzf/test/test_go.rb	/^  def test_multi_order$/;"	f	class:TestGoFZF
test_no_clear	autoload/plugged/fzf/test/test_go.rb	/^  def test_no_clear$/;"	f	class:TestGoFZF
test_normalized_match	autoload/plugged/fzf/test/test_go.rb	/^  def test_normalized_match$/;"	f	class:TestGoFZF
test_or_operator	autoload/plugged/fzf/test/test_go.rb	/^  def test_or_operator$/;"	f	class:TestGoFZF
test_partial_caching	autoload/plugged/fzf/test/test_go.rb	/^  def test_partial_caching$/;"	f	class:TestGoFZF
test_pointer	autoload/plugged/fzf/test/test_go.rb	/^  def test_pointer$/;"	f	class:TestGoFZF
test_pointer_with_jump	autoload/plugged/fzf/test/test_go.rb	/^  def test_pointer_with_jump$/;"	f	class:TestGoFZF
test_preview	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview$/;"	f	class:TestGoFZF
test_preview_bindings_with_default_preview	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_bindings_with_default_preview$/;"	f	class:TestGoFZF
test_preview_bindings_without_default_preview	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_bindings_without_default_preview$/;"	f	class:TestGoFZF
test_preview_clear_screen	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_clear_screen$/;"	f	class:TestGoFZF
test_preview_correct_tab_width_after_ansi_reset_code	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_correct_tab_width_after_ansi_reset_code$/;"	f	class:TestGoFZF
test_preview_file	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_file$/;"	f	class:TestGoFZF
test_preview_flags	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_flags$/;"	f	class:TestGoFZF
test_preview_header	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_header$/;"	f	class:TestGoFZF
test_preview_hidden	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_hidden$/;"	f	class:TestGoFZF
test_preview_q_no_match	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_q_no_match$/;"	f	class:TestGoFZF
test_preview_q_no_match_with_initial_query	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_q_no_match_with_initial_query$/;"	f	class:TestGoFZF
test_preview_scroll_begin_and_offset	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_scroll_begin_and_offset$/;"	f	class:TestGoFZF
test_preview_scroll_begin_constant	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_scroll_begin_constant$/;"	f	class:TestGoFZF
test_preview_scroll_begin_expr	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_scroll_begin_expr$/;"	f	class:TestGoFZF
test_preview_size_0	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_size_0$/;"	f	class:TestGoFZF
test_preview_update_on_select	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_update_on_select$/;"	f	class:TestGoFZF
test_preview_window_follow	autoload/plugged/fzf/test/test_go.rb	/^  def test_preview_window_follow$/;"	f	class:TestGoFZF
test_process_completion	autoload/plugged/fzf/test/test_go.rb	/^  def test_process_completion$/;"	f	module:CompletionTest
test_query_unicode	autoload/plugged/fzf/test/test_go.rb	/^  def test_query_unicode$/;"	f	class:TestGoFZF
test_read0	autoload/plugged/fzf/test/test_go.rb	/^  def test_read0$/;"	f	class:TestGoFZF
test_reload	autoload/plugged/fzf/test/test_go.rb	/^  def test_reload$/;"	f	class:TestGoFZF
test_reload_even_when_theres_no_match	autoload/plugged/fzf/test/test_go.rb	/^  def test_reload_even_when_theres_no_match$/;"	f	class:TestGoFZF
test_scroll	autoload/plugged/fzf/test/test_go.rb	/^  def test_scroll$/;"	f	class:TestGoFZF
test_select_1	autoload/plugged/fzf/test/test_go.rb	/^  def test_select_1$/;"	f	class:TestGoFZF
test_select_1_exit_0_fail	autoload/plugged/fzf/test/test_go.rb	/^  def test_select_1_exit_0_fail$/;"	f	class:TestGoFZF
test_select_all_deselect_all_toggle_all	autoload/plugged/fzf/test/test_go.rb	/^  def test_select_all_deselect_all_toggle_all$/;"	f	class:TestGoFZF
test_select_deselect	autoload/plugged/fzf/test/test_go.rb	/^  def test_select_deselect$/;"	f	class:TestGoFZF
test_smart_case_for_each_term	autoload/plugged/fzf/test/test_go.rb	/^  def test_smart_case_for_each_term$/;"	f	class:TestGoFZF
test_strip_xterm_osc_sequence	autoload/plugged/fzf/test/test_go.rb	/^  def test_strip_xterm_osc_sequence$/;"	f	class:TestGoFZF
test_sync	autoload/plugged/fzf/test/test_go.rb	/^  def test_sync$/;"	f	class:TestGoFZF
test_tabstop	autoload/plugged/fzf/test/test_go.rb	/^  def test_tabstop$/;"	f	class:TestGoFZF
test_tac	autoload/plugged/fzf/test/test_go.rb	/^  def test_tac$/;"	f	class:TestGoFZF
test_tac_nosort	autoload/plugged/fzf/test/test_go.rb	/^  def test_tac_nosort$/;"	f	class:TestGoFZF
test_tac_sort	autoload/plugged/fzf/test/test_go.rb	/^  def test_tac_sort$/;"	f	class:TestGoFZF
test_tiebreak	autoload/plugged/fzf/test/test_go.rb	/^  def test_tiebreak$/;"	f	class:TestGoFZF
test_tiebreak_begin_algo_v2	autoload/plugged/fzf/test/test_go.rb	/^  def test_tiebreak_begin_algo_v2$/;"	f	class:TestGoFZF
test_tiebreak_end	autoload/plugged/fzf/test/test_go.rb	/^  def test_tiebreak_end$/;"	f	class:TestGoFZF
test_tiebreak_index_begin	autoload/plugged/fzf/test/test_go.rb	/^  def test_tiebreak_index_begin$/;"	f	class:TestGoFZF
test_tiebreak_length_with_nth	autoload/plugged/fzf/test/test_go.rb	/^  def test_tiebreak_length_with_nth$/;"	f	class:TestGoFZF
test_toggle_preview_wrap	autoload/plugged/fzf/test/test_go.rb	/^  def test_toggle_preview_wrap$/;"	f	class:TestGoFZF
test_toggle_sort	autoload/plugged/fzf/test/test_go.rb	/^  def test_toggle_sort$/;"	f	class:TestGoFZF
test_unicode_case	autoload/plugged/fzf/test/test_go.rb	/^  def test_unicode_case$/;"	f	class:TestGoFZF
test_unset_completion	autoload/plugged/fzf/test/test_go.rb	/^  def test_unset_completion$/;"	f	module:CompletionTest
test_vanilla	autoload/plugged/fzf/test/test_go.rb	/^  def test_vanilla$/;"	f	class:TestGoFZF
test_with_nth	autoload/plugged/fzf/test/test_go.rb	/^  def test_with_nth$/;"	f	class:TestGoFZF
test_with_nth_ansi	autoload/plugged/fzf/test/test_go.rb	/^  def test_with_nth_ansi$/;"	f	class:TestGoFZF
test_with_nth_basic	autoload/plugged/fzf/test/test_go.rb	/^  def test_with_nth_basic$/;"	f	class:TestGoFZF
test_with_nth_no_ansi	autoload/plugged/fzf/test/test_go.rb	/^  def test_with_nth_no_ansi$/;"	f	class:TestGoFZF
text	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	p	class:p
text	autoload/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let o=n.replace(Dpe,"").split(DB);i.push(o.spl/;"	m	class:FB
text	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
text	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	p	class:ID.createStatusBarItem.n
text	autoload/plugged/coc.nvim/data/schema.json	/^        "text": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
text	autoload/plugged/fzf/src/item.go	/^	text        util.Chars    \/\/ 32 = 24 + 1 + 1 + 2 + 4$/;"	m	struct:fzf.Item	typeref:typename:util.Chars
text	autoload/plugged/fzf/src/pattern.go	/^	text          []rune$/;"	m	struct:fzf.Pattern	typeref:typename:[]rune
text	autoload/plugged/fzf/src/pattern.go	/^	text          []rune$/;"	m	struct:fzf.term	typeref:typename:[]rune
text	autoload/plugged/fzf/src/tokenizer.go	/^	text         *util.Chars$/;"	m	struct:fzf.Token	typeref:typename:*util.Chars
text	autoload/plugged/fzf/src/tui/light.go	/^	text         string$/;"	m	struct:tui.wrappedLine	typeref:typename:string
textDocument	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:r.getTextEditChange.o
textDocument	autoload/plugged/coc.nvim/build/index.js	/^`),s=ij(this.lines,o),a=await this.mutex.acquire();try{let l=await this.nvim.call("coc#util#set_/;"	G	class:o0
textLength	autoload/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let o=n.replace(Dpe,"").split(DB);i.push(o.spl/;"	m	class:FB
th	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	c
th	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
the	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
theme	autoload/plugged/fzf/src/terminal.go	/^	theme        *tui.ColorTheme$/;"	m	struct:fzf.Terminal	typeref:typename:*tui.ColorTheme
theme	autoload/plugged/fzf/src/tui/light.go	/^	theme         *ColorTheme$/;"	m	struct:tui.LightRenderer	typeref:typename:*ColorTheme
theme	autoload/plugged/fzf/src/tui/tui.go	/^	theme        *ColorTheme$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:*ColorTheme
tie	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
timeoutInterval	autoload/plugged/fzf/src/tui/light_windows.go	/^	timeoutInterval = 10$/;"	c	package:tui
timestamp	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:Xt.V
title	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb666889210200.e.s
title	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892de00.e.a
title	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	p	class:yD.createPopup.l
tmux	autoload/plugged/fzf/test/test_go.rb	/^  attr_reader :tmux$/;"	A	class:TestBase
tmux_args=	autoload/plugged/fzf/bin/fzf-tmux	/^tmux_args=()$/;"	f
toActions	autoload/plugged/fzf/src/terminal.go	/^func toActions(types ...actionType) []action {$/;"	f	package:fzf	typeref:typename:[]action
toAnsiString	autoload/plugged/fzf/src/ansi.go	/^func toAnsiString(color tui.Color, offset int) string {$/;"	f	package:fzf	typeref:typename:string
toData	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	m	class:Ym
toJSON	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	m	class:e
toJSON	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	m	class:r
toString	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	m	class:r
toString	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	m	class:e
toString	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	m	class:r
toggleItem	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) toggleItem(item *Item) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
toggleSort	autoload/plugged/fzf/src/terminal.go	/^	toggleSort   bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
top	autoload/plugged/fzf/src/tui/light.go	/^	top      int$/;"	m	struct:tui.LightWindow	typeref:typename:int
top	autoload/plugged/fzf/src/tui/tcell.go	/^	top         int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
topLeft	autoload/plugged/fzf/src/tui/tui.go	/^	topLeft     rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
topRight	autoload/plugged/fzf/src/tui/tui.go	/^	topRight    rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
tp	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	c
tpe	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
trace.server	autoload/plugged/coc.nvim/data/schema.json	/^        "trace.server": {$/;"	o	object:definitions.languageServerBase.properties
trace.server	autoload/plugged/coc.nvim/data/schema.json	/^        "trace.server": {}$/;"	o	object:definitions.languageServerCommand.properties
trace.server	autoload/plugged/coc.nvim/data/schema.json	/^        "trace.server": {}$/;"	o	object:definitions.languageServerModule.properties
trace.server	autoload/plugged/coc.nvim/data/schema.json	/^        "trace.server": {}$/;"	o	object:definitions.languageServerSocket.properties
traits	autoload/plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy)[ \\t]*)*(private[^ ]*|protected)?/;"	k	langdef:scala
traits,traits	autoload/plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?trait[ \\t]+([a-zA-Z0-9_]+)\/\\2\/t,traits,traits\/$/;"	k	langdef:Rust
trans	autoload/plugged/fzf/src/chunklist.go	/^	trans  ItemBuilder$/;"	m	struct:fzf.ChunkList	typeref:typename:ItemBuilder
transform	autoload/plugged/coc.nvim/package.json	/^    "transform": {$/;"	o	object:jest
transformInput	autoload/plugged/fzf/src/pattern.go	/^func (p *Pattern) transformInput(item *Item) []Token {$/;"	f	struct:fzf.Pattern	typeref:typename:[]Token
transform_patterns	autoload/plugged/vim-polyglot/scripts/build	/^def transform_patterns(heuristics)$/;"	f
transformed	autoload/plugged/fzf/src/item.go	/^	transformed *[]Token      \/\/ 8$/;"	m	struct:fzf.Item	typeref:typename:*[]Token
transport	autoload/plugged/coc.nvim/data/schema.json	/^        "transport": {$/;"	o	object:definitions.languageServerModule.properties
transportPort	autoload/plugged/coc.nvim/data/schema.json	/^        "transportPort": {$/;"	o	object:definitions.languageServerModule.properties
tre	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	f
trimLeft	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) trimLeft(runes []rune, width int) ([]rune, int32) {$/;"	f	struct:fzf.Terminal	typeref:typename:([]rune, int32)
trimLength	autoload/plugged/fzf/src/util/chars.go	/^	trimLength      uint16$/;"	m	struct:util.Chars	typeref:typename:uint16
trimLengthKnown	autoload/plugged/fzf/src/util/chars.go	/^	trimLengthKnown bool$/;"	m	struct:util.Chars	typeref:typename:bool
trimMessage	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) trimMessage(message string, maxWidth int) string {$/;"	f	struct:fzf.Terminal	typeref:typename:string
trimQuery	autoload/plugged/fzf/src/terminal.go	/^func trimQuery(query string) []rune {$/;"	f	package:fzf	typeref:typename:[]rune
trimRight	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) trimRight(runes []rune, width int) ([]rune, int) {$/;"	f	struct:fzf.Terminal	typeref:typename:([]rune, int)
truncateQuery	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) truncateQuery() {$/;"	f	struct:fzf.Terminal
trySkip	autoload/plugged/fzf/src/algo/algo.go	/^func trySkip(input *util.Chars, caseSensitive bool, b byte, from int) int {$/;"	f	package:algo	typeref:typename:int
try_curl	autoload/plugged/fzf/install	/^try_curl() {$/;"	f
try_wget	autoload/plugged/fzf/install	/^try_wget() {$/;"	f
tte	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
ttyin	autoload/plugged/fzf/src/tui/light.go	/^	ttyin         *os.File$/;"	m	struct:tui.LightRenderer	typeref:typename:*os.File
ttyinChannel	autoload/plugged/fzf/src/tui/light.go	/^	ttyinChannel    chan byte$/;"	m	struct:tui.LightRenderer	typeref:typename:chan byte
ttyname	autoload/plugged/fzf/src/tui/ttyname_unix.go	/^func ttyname() string {$/;"	f	package:tui	typeref:typename:string
ttyname	autoload/plugged/fzf/src/tui/ttyname_windows.go	/^func ttyname() string {$/;"	f	package:tui	typeref:typename:string
tui	autoload/plugged/fzf/src/terminal.go	/^	tui          tui.Renderer$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Renderer
tui	autoload/plugged/fzf/src/tui/dummy.go	/^package tui$/;"	p
tui	autoload/plugged/fzf/src/tui/light.go	/^package tui$/;"	p
tui	autoload/plugged/fzf/src/tui/light_unix.go	/^package tui$/;"	p
tui	autoload/plugged/fzf/src/tui/light_windows.go	/^package tui$/;"	p
tui	autoload/plugged/fzf/src/tui/tcell.go	/^package tui$/;"	p
tui	autoload/plugged/fzf/src/tui/ttyname_unix.go	/^package tui$/;"	p
tui	autoload/plugged/fzf/src/tui/ttyname_windows.go	/^package tui$/;"	p
tui	autoload/plugged/fzf/src/tui/tui.go	/^package tui$/;"	p
tui	autoload/plugged/fzf/src/tui/tui_test.go	/^package tui$/;"	p
twe	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
typ	autoload/plugged/fzf/src/pattern.go	/^	typ           termType$/;"	m	struct:fzf.term	typeref:typename:termType
type	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:Xt.V
type	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:BD.i
type	autoload/plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.additionalSchemes.items
type	autoload/plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.filetypes.items
type	autoload/plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.ignoredRootPaths.items
type	autoload/plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.rootPatterns.items
type	autoload/plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerCommand.properties.args.items
type	autoload/plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerModule.properties.args.items
type	autoload/plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerModule.properties.execArgv.items
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.additionalSchemes
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.filetypes
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.ignoredRootPaths
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.rootPatterns
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerCommand.properties.args
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerModule.properties.args
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerModule.properties.execArgv
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.disableCompletion
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.disableDiagnostics
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.disableDynamicRegister
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.disableSnippetCompletion
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.disableWorkspaceFolders
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.enable
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.progressOnInitialization
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.requireRootPattern
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerCommand.properties.detached
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerCommand.properties.shell
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "integer",$/;"	s	object:definitions.languageServerModule.properties.transportPort
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "integer",$/;"	s	object:definitions.languageServerSocket.properties.port
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "number",$/;"	s	object:definitions.languageServerBase.properties.formatterPriority
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "object",$/;"	s	object:definitions.languageServerBase.properties.env
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "object",$/;"	s	object:definitions.languageServerBase.properties.initializationOptions
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "object",$/;"	s	object:definitions.languageServerBase.properties.settings
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.cwd
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.revealOutputChannelOn
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.stdioEncoding
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.trace.server
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerCommand.properties.command
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerModule.properties.module
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerModule.properties.runtime
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerModule.properties.transport
type	autoload/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerSocket.properties.host
type	autoload/plugged/coc.nvim/data/schema.json	/^        "class": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.class
type	autoload/plugged/coc.nvim/data/schema.json	/^        "color": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.color
type	autoload/plugged/coc.nvim/data/schema.json	/^        "constant": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.constant
type	autoload/plugged/coc.nvim/data/schema.json	/^        "constructor": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.constructor
type	autoload/plugged/coc.nvim/data/schema.json	/^        "default": { "type": "string" }$/;"	s	object:properties.suggest.completionItemKindLabels.properties.default
type	autoload/plugged/coc.nvim/data/schema.json	/^        "enum": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.enum
type	autoload/plugged/coc.nvim/data/schema.json	/^        "enumMember": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.enumMember
type	autoload/plugged/coc.nvim/data/schema.json	/^        "event": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.event
type	autoload/plugged/coc.nvim/data/schema.json	/^        "field": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.field
type	autoload/plugged/coc.nvim/data/schema.json	/^        "file": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.file
type	autoload/plugged/coc.nvim/data/schema.json	/^        "folder": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.folder
type	autoload/plugged/coc.nvim/data/schema.json	/^        "function": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.function
type	autoload/plugged/coc.nvim/data/schema.json	/^        "interface": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.interface
type	autoload/plugged/coc.nvim/data/schema.json	/^        "keyword": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.keyword
type	autoload/plugged/coc.nvim/data/schema.json	/^        "method": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.method
type	autoload/plugged/coc.nvim/data/schema.json	/^        "module": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.module
type	autoload/plugged/coc.nvim/data/schema.json	/^        "operator": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.operator
type	autoload/plugged/coc.nvim/data/schema.json	/^        "property": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.property
type	autoload/plugged/coc.nvim/data/schema.json	/^        "reference": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.reference
type	autoload/plugged/coc.nvim/data/schema.json	/^        "snippet": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.snippet
type	autoload/plugged/coc.nvim/data/schema.json	/^        "struct": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.struct
type	autoload/plugged/coc.nvim/data/schema.json	/^        "text": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.text
type	autoload/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.preferences.formatOnSaveFiletypes.items
type	autoload/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.preferences.formatOnTypeFiletypes.items
type	autoload/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.preferences.rootPatterns.items
type	autoload/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.around.disableSyntaxes.items
type	autoload/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.buffer.disableSyntaxes.items
type	autoload/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.disableSyntaxes.items
type	autoload/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.ignorePatterns.items
type	autoload/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.triggerCharacters.items
type	autoload/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.trimSameExts.items
type	autoload/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.list.source.outline.ctagsFilestypes.items
type	autoload/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.list.source.symbols.excludes.items
type	autoload/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.suggest.invalidInsertCharacters.items
type	autoload/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.workspace.bottomUpFiletypes.items
type	autoload/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.workspace.ignoredFiletypes.items
type	autoload/plugged/coc.nvim/data/schema.json	/^        "typeParameter": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.typeParameter
type	autoload/plugged/coc.nvim/data/schema.json	/^        "unit": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.unit
type	autoload/plugged/coc.nvim/data/schema.json	/^        "value": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.value
type	autoload/plugged/coc.nvim/data/schema.json	/^        "variable": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.variable
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.preferences.formatOnSaveFiletypes
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.preferences.formatOnTypeFiletypes
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.preferences.rootPatterns
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.around.disableSyntaxes
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.buffer.disableSyntaxes
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.disableSyntaxes
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.ignorePatterns
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.triggerCharacters
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.trimSameExts
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.list.source.outline.ctagsFilestypes
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.list.source.symbols.excludes
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.suggest.invalidInsertCharacters
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.workspace.bottomUpFiletypes
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.workspace.ignoredFiletypes
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.bracketEnterImprove
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.colorSupport
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.currentFunctionSymbolAutoUpdate
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.enableFloatHighlight
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.enableMarkdown
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.enableMessageDialog
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.floatActions
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.formatOnType
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.previewAutoClose
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.promptInput
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.promptWorkspaceEdit
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.silentAutoupdate
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.snippets.enable
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.useQuickfixForLocations
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.around.enable
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.around.firstMatch
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.buffer.enable
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.buffer.firstMatch
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.buffer.ignoreGitignore
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.file.enable
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.file.ignoreHidden
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.codeLens.enable
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.checkCurrentLine
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.displayByAle
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.enable
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.enableHighlightLineNumber
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.enableSign
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.locationlistUpdate
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.refreshOnInsertMode
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.separateRelatedInformationAsDiagnostics
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.showDeprecated
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.showUnused
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.virtualText
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.virtualTextCurrentLineOnly
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.dialog.pickerButtonShortcut
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.dialog.pickerButtons
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.hover.autoHide
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.http.proxyStrictSSL
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.list.alignColumns
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.list.extendedSearchMode
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.list.previewSplitRight
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.list.source.diagnostics.includeCode
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.refactor.saveToFile
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.signature.enable
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.signature.hideOnTextChange
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.signature.preferShownAbove
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.acceptSuggestionOnCommitCharacter
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.asciiCharactersOnly
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.disableKind
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.disableMenu
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.disableMenuShortcut
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.echodocSupport
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.enablePreselect
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.enablePreview
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.fixInsertedWord
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.floatEnable
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.keepCompleteopt
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.localityBonus
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.noselect
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.numberSelect
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.preferCompleteThanJumpPlaceholder
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.removeDuplicateItems
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.triggerAfterInsertEnter
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.workspace.workspaceFolderCheckCwd
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.coc.preferences.highlightTimeout
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.coc.preferences.willSaveHandlerTimeout
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.coc.source.around.priority
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.coc.source.buffer.priority
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.coc.source.file.priority
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.signature.maxWindowWidth
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.signature.triggerSignatureWait
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.highPrioritySourceLimit
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.lowPrioritySourceLimit
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.timeout
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.triggerCompletionWait
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.coc.preferences.previewMaxHeight
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.highlightOffset
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.maxWindowHeight
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.maxWindowWidth
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.messageDelay
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.signPriority
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.virtualTextLines
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.dialog.maxHeight
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.dialog.maxWidth
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.hover.floatMaxHeight
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.hover.floatMaxWidth
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.height
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.interactiveDebounceTime
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.limitLines
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.maxPreviewHeight
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.signOffset
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.notification.marginRight
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.notification.marginTop
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.notification.maxHeight
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.notification.maxWidth
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.notification.minProgressWidth
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.refactor.afterContext
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.refactor.beforeContext
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.signature.maxWindowHeight
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.detailMaxLength
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.labelMaxLength
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.languageSourcePriority
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.maxCompleteItemCount
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.maxPreviewWidth
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.minTriggerInputLength
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerBase
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerCommand
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerModule
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerSocket
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.diagnostic.filetypeMap
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.languageserver
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.list.insertMappings
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.list.normalMappings
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.suggest.completionItemKindLabels
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.extensionUpdateCheck
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.jumpCommand
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.listOfWorkspaceEdit
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.maxFileSize
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.messageLevel
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.snippetStatusText
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.watchmanPath
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.source.around.shortcut
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.source.buffer.shortcut
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.source.file.shortcut
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.codeLens.separator
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.codeLens.subseparator
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.cursors.cancelKey
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.cursors.nextKey
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.cursors.previousKey
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.enableMessage
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.errorSign
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.format
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.hintSign
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.infoSign
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.level
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.messageTarget
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.virtualTextLineSeparator
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.virtualTextPrefix
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.warningSign
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.dialog.confirmKey
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.hover.target
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.http.proxy
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.http.proxyCA
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.indicator
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.matchHighlightGroup
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.nextKeymap
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.previewHighlightGroup
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.previousKeymap
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.selectedSignText
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.source.diagnostics.pathFormat
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.notification.highlightGroup
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.npm.binPath
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.refactor.openCommand
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.signature.target
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.suggest.autoTrigger
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.suggest.defaultSortMethod
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.suggest.detailField
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.suggest.snippetIndicator
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": ["array", "null"],$/;"	a	object:properties.list.statusLineSegments
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": ["null", "string"],$/;"	a	object:properties.http.proxyAuthorization
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": ["string", "null"],$/;"	a	object:properties.dialog.floatBorderHighlight
type	autoload/plugged/coc.nvim/data/schema.json	/^      "type": ["string", "null"],$/;"	a	object:properties.dialog.floatHighlight
type	autoload/plugged/coc.nvim/package.json	/^    "type": "git",$/;"	s	object:repository
type	autoload/plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*type[[:space:]]*([A-Z][a-zA-Z0-9_:]*)[[:space:]]*=\/\\1\/t,type\/$/;"	k	langdef:puppet
typeParameter	autoload/plugged/coc.nvim/data/schema.json	/^        "typeParameter": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
typeof	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	c
types	autoload/plugged/coc.nvim/data/schema.json	/^        "types": "string"$/;"	s	object:properties.list.statusLineSegments.items
types	autoload/plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*type[ \\t]+([a-zA-Z0-9_]+)\/\\1\/T,types\/$/;"	k	langdef:scala
types	autoload/plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*type[ \\t]+([a-zA-Z0-9_]+)\/\\2\/t,types\/$/;"	k	langdef:typescript
types,type definitions	autoload/plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?type[ \\t]+([a-zA-Z0-9_]+)\/\\2\/T,types,type definitions\/$/;"	k	langdef:Rust
typescript	autoload/plugged/vim-polyglot/ctags/typescript.ctags	/^--langdef=typescript$/;"	l
typescript_props	autoload/plugged/vim-polyglot/syntax/yats.vim	/^let typescript_props = 1$/;"	v
u	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunctionb666889210e00
u	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:_x
u	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	c	class:AnonymousFunctionb6668892dd00.e
u	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	c	class:AnonymousFunctionb6668892ff00.e
u	autoload/plugged/coc.nvim/build/index.js	/^`)),m=+h.split(" ")[1];$p("got proxy server response: %o",h),e({statusCode:m,buffered:p})}r.on("/;"	f	function:AnonymousFunctionb66688922dc00
u	autoload/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),ss("Output buffer: %o",e.outputData[0].data))/;"	f	function:$ve
u	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
u	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c	class:AnonymousFunctionb66688922aa00
u	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunctionb66688922d100.e
u	autoload/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function fv(r,e){return /;"	f	function:AnonymousFunctionb66688922d500
u	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f	function:r
u	autoload/plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Nf.prototype.render;Nf.prototype.toString=function(){var r=""/;"	f	function:AnonymousFunctionb66688921aa00
u	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f	function:AnonymousFunctionb666889221c00
u	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
u	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
u	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:jie
u	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
u	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v	class:o
u	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	v
u	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	c
u	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:AnonymousFunctionb66688920100
u	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	f	function:TY
u0	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	f
u3	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
uA	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	v
uAe	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
uL	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
uO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
uSe	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
uZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
uc_minlines	autoload/plugged/vim-polyglot/syntax/uc.vim	/^  let uc_minlines = 10$/;"	v
ude	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	v
ue	autoload/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	f
uee	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
ufe	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
ug	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
uint16	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:mne.n
uint32	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:mne.n
uint64	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:mne.n
uint8	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:mne.n
uj	autoload/plugged/coc.nvim/build/index.js	/^`);e=Zi.Position.create(e.line-o,e.character),t=Zi.Position.create(t.line-o,t.character);let l=k/;"	v
um	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
un	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
underline	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.modifier
underline	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.modifier
une	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
unescape	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
unicode	autoload/plugged/fzf/src/terminal.go	/^	unicode      bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
unit	autoload/plugged/coc.nvim/data/schema.json	/^        "unit": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
unknownFn	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	p	class:AnonymousFunctionb666889221c00.t
unset_var	autoload/plugged/fzf/test/test_go.rb	/^  def unset_var(name)$/;"	f	module:TestShell
unsubscribe	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:sp
until	autoload/plugged/fzf/test/test_go.rb	/^  def until(refresh = false)$/;"	f	class:Tmux
uo	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	c
upOneLine	autoload/plugged/fzf/src/tui/light.go	/^	upOneLine     bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
update	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:OW.s.c
update	autoload/plugged/coc.nvim/build/index.js	/^`,"\\r"],Dx;(function(r){function e(o,s,a,l){return new Lse(o,s,a,l)}r.create=e;function t(o){va/;"	m	class:r
update	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:r
update	autoload/plugged/fzf/Makefile	/^update:$/;"	t
updateLocationList	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	m	class:_0
updatePromptOffset	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) updatePromptOffset() ([]rune, []rune) {$/;"	f	struct:fzf.Terminal	typeref:typename:([]rune, []rune)
updateTerminalSize	autoload/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) updateTerminalSize() {$/;"	f	unknown:tui.LightRenderer
updateTerminalSize	autoload/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) updateTerminalSize() {$/;"	f	unknown:tui.LightRenderer
uq	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
uri	autoload/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[c],!0),await e./;"	p	class:n
uri	autoload/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[c],!0),await e./;"	p	class:o
uri	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892e100.e.o
uri	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892e300.e.o
uri	autoload/plugged/coc.nvim/build/index.js	/^`)),j){let te=T.error?` Request failed: ${T.error.message} (${T.error.code}).`:"";x.log(`Receive/;"	p	class:AnonymousFunctionb6668892fe00.e.a.location
uri	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	p	class:p
uri	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	G	class:o0
url	autoload/plugged/coc.nvim/package.json	/^    "url": "git+https:\/\/github.com\/neoclide\/coc.nvim.git"$/;"	s	object:repository
url	autoload/plugged/coc.nvim/package.json	/^    "url": "https:\/\/github.com\/neoclide\/coc.nvim\/issues"$/;"	s	object:bugs
usage	autoload/plugged/fzf/src/options.go	/^const usage = `usage: fzf [options]$/;"	c	package:fzf
use	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	m	class:ar
use	autoload/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
use_mutt_sidebar	autoload/plugged/vim-polyglot/syntax/muttrc.vim	/^  let use_mutt_sidebar=0$/;"	v
user	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	G	class:Ym
user	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:l
user	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:ta.constructor.n
util	autoload/plugged/fzf/src/util/atomicbool.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/atomicbool_test.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/chars.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/chars_test.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/eventbox.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/eventbox_test.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/slab.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/util.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/util_test.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/util_unix.go	/^package util$/;"	p
util	autoload/plugged/fzf/src/util/util_windows.go	/^package util$/;"	p
uw	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
uwe	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
v	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
v$	autoload/plugged/coc.nvim/build/index.js	/^`}strong(e){return"<strong>"+e+"<\/strong>"}em(e){return"<em>"+e+"<\/em>"}codespan(e){return"<co/;"	v
v1e	autoload/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:s}}function oj(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	v
v3	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
vB	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	f
vD	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	v
vF	autoload/plugged/coc.nvim/build/index.js	/^`)}:null}var th=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
vL	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
vP	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
vR	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
vRe	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	v
vU	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
vX	autoload/plugged/coc.nvim/build/index.js	/^`)}}function vX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
v_fmt	autoload/plugged/vim-polyglot/ftplugin/vlang.vim	/^	augroup v_fmt$/;"	a
val	autoload/plugged/vim-polyglot/ftplugin/markdown.vim	/^        let val = matchstr(s:filetype, "[^=]*$")$/;"	v
valid	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	G	class:DD
validate	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	m	class:wD
validateSign	autoload/plugged/fzf/src/options.go	/^func validateSign(sign string, signOptName string) error {$/;"	f	package:fzf	typeref:typename:error
value	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	f	function:t
value	autoload/plugged/coc.nvim/data/schema.json	/^        "value": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
values	autoload/plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy|override|private[^ ]*|protected)[ /;"	k	langdef:scala
variable	autoload/plugged/coc.nvim/data/schema.json	/^        "variable": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
variable	autoload/plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*([\\$][a-zA-Z0-9_:]+)[[:space:]]*=\/\\1\/v,variable\/$/;"	k	langdef:puppet
variables	autoload/plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy|override|private[^ ]*|protected)[ /;"	k	langdef:scala
variables	autoload/plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*export[ \\t]+(var|const|let)[ \\t]+([a-zA-Z0-9_]+)\/\\1\/v,variable/;"	k	langdef:typescript
varlambdas	autoload/plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*var[ \\t]+([a-zA-Z0-9_]+)[ \\t]*=[ \\t]*function[ \\t]*\\(\\)\/\\1\//;"	k	langdef:typescript
vb	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
vde	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
ve	autoload/plugged/coc.nvim/build/index.js	/^`),x.log(`Sending request '${T.method} - (${T.id})'.`,j)}else Xt("send-request",T)}function ve(T/;"	f
vera_comment_strings	autoload/plugged/vim-polyglot/syntax/vera.vim	/^let vera_comment_strings = 1$/;"	v
verify	autoload/plugged/vim-polyglot/scripts/build	/^def verify(packages, heuristics)$/;"	f
version	autoload/plugged/coc.nvim/bin/check.js	/^let version = process.version.replace('v', '')$/;"	v
version	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	G	class:o0
version	autoload/plugged/coc.nvim/package.json	/^  "version": "0.0.80",$/;"	s
version	autoload/plugged/fzf/install.ps1	/^$version="0.27.0"$/;"	v
version	autoload/plugged/fzf/main.go	/^var version string = "0.27"$/;"	v	package:main	typeref:typename:string
version	autoload/plugged/fzf/src/terminal.go	/^	version      int64$/;"	m	struct:fzf.Terminal	typeref:typename:int64
version	autoload/plugged/fzf/src/terminal.go	/^	version    int64$/;"	m	struct:fzf.previewer	typeref:typename:int64
version	autoload/plugged/fzf/src/terminal.go	/^	version  int64$/;"	m	struct:fzf.previewed	typeref:typename:int64
version	autoload/plugged/fzf/src/terminal.go	/^	version int64$/;"	m	struct:fzf.previewResult	typeref:typename:int64
version	~./config/nvim/plugged/gruvbox/package.json	/^  "version": "2.0.0",$/;"	s
vertical	autoload/plugged/fzf/src/tui/tui.go	/^	vertical    rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
vg	autoload/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(o):i+=Ql(o)+n+Ql(l)+F0}),e.section&&i.length&&(i="["+Ql(e.secti/;"	f
vim	autoload/plugged/vim-polyglot/ftplugin/terraform.vim	/^  augroup vim.terraform.fmt$/;"	a
vim	autoload/plugged/vim-polyglot/syntax/go.vim	/^augroup vim-go-hi$/;"	a
vim	~./config/nvim/plugged/gruvbox/package.json	/^  "vim": {$/;"	o
vim-airline	autoload/plugged/vim-airline/README.md	/^# vim-airline $/;"	c
vim-airline-themes [![Build Status](https://travis-ci.org/vim-airline/vim-airline-themes.svg?branch=master)](https://travis-ci.org/vim-airline/vim-airline-themes) [![reviewdog](https://github.com/vim-airline/vim-airline-themes/workflows/reviewdog/badge.svg?branch=master&event=push)](https://github.com/vim-airline/vim-airline-themes/actions?query=workflow%3Areviewdog+event%3Apush+branch%3Amaster)	autoload/plugged/vim-airline-themes/README.md	/^# vim-airline-themes [![Build Status](https:\/\/travis-ci.org\/vim-airline\/vim-airline-themes.s/;"	c
vim_svelte_plugin	autoload/plugged/vim-polyglot/autoload/svelte.vim	/^  augroup vim_svelte_plugin$/;"	a
vital#	autoload/plugged/vim-polyglot/autoload/vital/_crystal.vim	/^function! vital#{s:_plugin_name}#function(funcname) abort$/;"	f
vital#	autoload/plugged/vim-polyglot/autoload/vital/_crystal.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	autoload/plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vmove	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) vmove(o int, allowCycle bool) {$/;"	f	struct:fzf.Terminal
voe	autoload/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){$L!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
vre	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
vset	autoload/plugged/fzf/src/terminal.go	/^func (t *Terminal) vset(o int) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
vt	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	v
vte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
w	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
w	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
w	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:r.read.f
w	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	c	class:b3
w	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f	function:$D
w!!	general/settings.vim	/^cmap w!! w !sudo tee %$/;"	m
w3	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
wB	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	f
wD	autoload/plugged/coc.nvim/build/index.js	/^`),s=i.line==r.start.line?i.character-r.start.character:i.character,a=UB(o,i.line-r.start.line,s/;"	c
wG	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
wL	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
wN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
wO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
wU	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	f
wX	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
wait	autoload/plugged/fzf/src/reader.go	/^	wait     bool$/;"	m	struct:fzf.Reader	typeref:typename:bool
wait	autoload/plugged/fzf/test/test_go.rb	/^def wait$/;"	f
waitUntil	autoload/plugged/coc.nvim/build/index.js	/^augroup end`;try{let o=Fe.default.join(process.env.TMPDIR,`coc.nvim-${process.pid}`);St.default./;"	p	class:o
warning	autoload/plugged/coc.nvim/build/index.js	/^`)[0],o=lp(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	p	class:i
watchProject	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	m	class:sp
watchman	autoload/plugged/coc.nvim/package.json	/^    "watchman": false,$/;"	b	object:jest
wb	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	v
wc	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	v
wde	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
wf	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	f
wfe	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
wg	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	v
white	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.color
white	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.color
whiteBright	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.color
whiteBright	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.color
whiteSuffix	autoload/plugged/fzf/src/terminal.go	/^var whiteSuffix *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
whitespace	autoload/plugged/vim-airline/README.md	/^#### whitespace$/;"	t	section:Features""Extras
widget_attributes	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let widget_attributes = {$/;"	v
widget_role	autoload/plugged/vim-polyglot/autoload/xml/aria.vim	/^let widget_role = [$/;"	v
widget_role	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^    let widget_role = ['alert', 'alertdialog', 'button', 'checkbox', 'combobox', 'dialog', 'grid/;"	v
width	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	p	class:CB
width	autoload/plugged/fzf/src/terminal.go	/^	width    int$/;"	m	struct:fzf.itemLine	typeref:typename:int
width	autoload/plugged/fzf/src/tui/light.go	/^	width         int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
width	autoload/plugged/fzf/src/tui/light.go	/^	width    int$/;"	m	struct:tui.LightWindow	typeref:typename:int
width	autoload/plugged/fzf/src/tui/tcell.go	/^	width       int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
win	autoload/plugged/fzf/test/test_go.rb	/^  attr_reader :win$/;"	A	class:Tmux
window	autoload/plugged/fzf/src/terminal.go	/^	window       tui.Window$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Window
windowPosition	autoload/plugged/fzf/src/options.go	/^type windowPosition int$/;"	t	package:fzf	typeref:typename:int
winid	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	G	class:ED
winid	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	G	class:xD
winid	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	G	class:o0
with	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	m	class:r
withIndex	autoload/plugged/fzf/src/result_test.go	/^func withIndex(i *Item, index int) *Item {$/;"	f	package:fzf	typeref:typename:*Item
withPrefixLengths	autoload/plugged/fzf/src/tokenizer.go	/^func withPrefixLengths(tokens []string, begin int) []Token {$/;"	f	package:fzf	typeref:typename:[]Token
wj	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
wk	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
wm	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
wne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
wordNext	autoload/plugged/fzf/src/terminal.go	/^	wordNext     string$/;"	m	struct:fzf.Terminal	typeref:typename:string
wordRubout	autoload/plugged/fzf/src/terminal.go	/^	wordRubout   string$/;"	m	struct:fzf.Terminal	typeref:typename:string
words	autoload/plugged/coc.nvim/build/index.js	/^`:"")}get version(){return this._version}get bufnr(){return this.buffer.id}get filetype(){return/;"	G	class:o0
workspace	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	G	class:Ym
workspace	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	c	class:ta.constructor.n
workspace	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	p	class:l
workspace.bottomUpFiletypes	autoload/plugged/coc.nvim/data/schema.json	/^    "workspace.bottomUpFiletypes": {$/;"	o	object:properties
workspace.ignoredFiletypes	autoload/plugged/coc.nvim/data/schema.json	/^    "workspace.ignoredFiletypes": {$/;"	o	object:properties
workspace.workspaceFolderCheckCwd	autoload/plugged/coc.nvim/data/schema.json	/^    "workspace.workspaceFolderCheckCwd": {$/;"	o	object:properties
workspaceConfigFile	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	G	class:e0
wp	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	v
wr	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	v
wrap	autoload/plugged/fzf/src/options.go	/^	wrap        bool$/;"	m	struct:fzf.previewOpts	typeref:typename:bool
wrapLine	autoload/plugged/fzf/src/tui/light.go	/^func wrapLine(input string, prefixLength int, max int, tabstop int) []wrappedLine {$/;"	f	package:tui	typeref:typename:[]wrappedLine
wrapped.newsink	autoload/plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! wrapped.newsink(lines)$/;"	f
wrappedLine	autoload/plugged/fzf/src/tui/light.go	/^type wrappedLine struct {$/;"	s	package:tui
wre	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
write	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:s
writeTemporaryFile	autoload/plugged/fzf/src/terminal.go	/^func writeTemporaryFile(data []string, printSep string) string {$/;"	f	package:fzf	typeref:typename:string
writelines	autoload/plugged/fzf/test/test_go.rb	/^  def writelines(path, lines)$/;"	f	class:TestBase
ws	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	v
wt	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	f
wte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
x	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
x	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
x	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:yR.k
x	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f	function:$D
x	autoload/plugged/fzf/src/tui/light.go	/^	x             int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
x0	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
x3	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
x5	autoload/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),ss("Output buffer: %o",e.outputData[0].data))/;"	v
x6	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	v
x7	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
xB	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	v
xD	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	c
xI	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
xJ	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	v
xN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
xQ	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
xR	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	v
xU	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	v
xX	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
x_	autoload/plugged/coc.nvim/build/index.js	/^`);let{statusCode:d,buffered:h}=yield p;if(d===200){if(e.once("socket",Gve),t.secureEndpoint){le/;"	f
xee	autoload/plugged/coc.nvim/build/index.js	/^`;function AI(r,e){if(On.existsSync(r))return;let t=On.openSync(r,e.flags,e.mode);On.closeSync(t/;"	f
xf	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
xfe	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
xi	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
xj	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
xk	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
xm	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
xml_attributes	autoload/plugged/vim-polyglot/autoload/xml/html5.vim	/^let xml_attributes = {'xml:lang': lang_tag, 'xml:space': ['preserve'], 'xml:base': [], 'xmlns': /;"	v
xne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
xoffset	autoload/plugged/fzf/src/terminal.go	/^	xoffset      int$/;"	m	struct:fzf.Terminal	typeref:typename:int
xp	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	v
xpe	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
xs	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
xt	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	f
xte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
xw	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
y	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	f
y	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	v
y	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
y	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f	function:yR
y	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:yR.k
y	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:AnonymousFunctionb66688924200.AnonymousFunctionb66688924300
y	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:a
y	autoload/plugged/fzf/src/tui/light.go	/^	y             int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
y3	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
yA	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Ic.checkPaths(r,e,"copy/;"	v
yB	autoload/plugged/coc.nvim/build/index.js	/^`+n.stack:""} `),hq.error(`Handler Error on ${e}`,n.stack)}}on(e,t,i,n){if(Array.isArray(e)){let/;"	f
yD	autoload/plugged/coc.nvim/build/index.js	/^`));for(let c of l.replace(\/\\s*$\/,"").split(\/\\n\/)){if(!c.length){let p=e[e.length-1];p&&p./;"	c
yK	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
yN	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
yP	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
yR	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	f
yU	autoload/plugged/coc.nvim/build/index.js	/^`)o=!1,a+=l(r,s,u),s=u;else if(!o&&t+i==="\/*"){a+=r.slice(s,u),s=u,o=uU,u++;continue}else if(o=/;"	v
yV	autoload/plugged/coc.nvim/build/index.js	/^`+e.prev}function ny(r,e){var t=x_(r),i=[];if(t){i.length=r.length;for(var n=0;n<r.length;n++)i[/;"	v
yX	autoload/plugged/coc.nvim/build/index.js	/^`)}}function vX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
yZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
yanked	autoload/plugged/fzf/src/terminal.go	/^	yanked       []rune$/;"	m	struct:fzf.Terminal	typeref:typename:[]rune
yarnFolder	autoload/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Uo.default.unlink(this.file)}catch(e){}}},Kl=l0;var Jl=S(req/;"	G	class:tp
yats#IsInMultilineComment	autoload/plugged/vim-polyglot/autoload/yats.vim	/^function yats#IsInMultilineComment(lnum, col)$/;"	f
yats#IsLineComment	autoload/plugged/vim-polyglot/autoload/yats.vim	/^function yats#IsLineComment(lnum, col)$/;"	f
yde	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
ye	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
yellow	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.color
yellow	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.color
yellowBright	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:Qfe.e.color
yellowBright	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:xpe.e.color
yh	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
yj	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	v
yk	autoload/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});Bt[Ni]||(ek=global[Ni]||[],QR(Bt,ek),Bt.close=function(r){function e/;"	v
ym	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
yne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
yoffset	autoload/plugged/fzf/src/tui/light.go	/^	yoffset       int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
yr	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
yre	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
yte	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
yu	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
yw	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
z	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	f
z	autoload/plugged/coc.nvim/build/index.js	/^`)}function UY(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function WY(){return process.en/;"	p	class:yR.k
z$	autoload/plugged/coc.nvim/build/index.js	/^`],["r","\\r"],["t","	"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","/;"	f
z1	autoload/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
zB	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	c
zO	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
zR	autoload/plugged/coc.nvim/build/index.js	/^`)}}function bX(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
zT	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
zV	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
zW	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
zY	autoload/plugged/coc.nvim/build/index.js	/^`+o),r.push(n+"m+"+Fd.exports.humanize(this.diff)+"[0m")}else r[0]=zY()+e+" "+r[0]}function zY(/;"	f
zZ	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	f
zb	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
zc	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
zde	autoload/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,c,e,f),c===s))}var d;if(typeof l=="string"?(i.nocase?d=u.toLowerCase()/;"	f
zf	autoload/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;A.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
zfe	autoload/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
zh	autoload/plugged/coc.nvim/build/index.js	/^`,LM=class{constructor(e="utf8"){this.encoding=e,this.index=0,this.buffer=Buffer.allocUnsafe(Bw)/;"	v
zi	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
zig#fmt#Format	autoload/plugged/vim-polyglot/autoload/zig/fmt.vim	/^function! zig#fmt#Format() abort$/;"	f
zj	autoload/plugged/coc.nvim/build/index.js	/^`),s=i.line==r.start.line?i.character-r.start.character:i.character,a=UB(o,i.line-r.start.line,s/;"	v
zk	autoload/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),yc.checkPaths(r,e,"copy/;"	v
zl	autoload/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}"use strict";var Vf;(function(r){r.DEFAULT={allowTrailingComma:!1}})/;"	f
zle	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
zm	autoload/plugged/coc.nvim/build/index.js	/^`)});var y=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
zn	autoload/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Tl(r,e){let t=lq.default(e,100);try{let i=uq.default.watch(r,{p/;"	f
zne	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
zpe	autoload/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],t.p/;"	v
zq	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
zr	autoload/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
zre	autoload/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let o=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
zs	autoload/plugged/coc.nvim/build/index.js	/^\\v\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003`,"\\u2004\\u2005\\u2006\\u2007\\u2008\\/;"	v
zsh	autoload/plugged/fzf/test/test_go.rb	/^    def zsh$/;"	S	class:Shell
zt	autoload/plugged/coc.nvim/build/index.js	/^`).reduce(vme,Object.create(null)),vme=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
zy	autoload/plugged/coc.nvim/build/index.js	/^var TJ=Object.create,tc=Object.defineProperty,RJ=Object.getPrototypeOf,kJ=Object.prototype.hasOw/;"	v
{{	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{ {{}}<left><left>$/;"	m
{{!	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{! {{!}}<left><left>$/;"	m
{{#	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{# {{#}}<cr>{{\/}}<up><left><left>$/;"	m
{{<	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{< {{<}}<left><left>$/;"	m
{{>	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{> {{>}}<left><left>$/;"	m
{{if	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{if {{#if }}<cr>{{\/if}}<up><left>$/;"	m
{{ife	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{ife {{#if }}<cr>{{else}}<cr>{{\/if}}<up><up><left>$/;"	m
{{{	autoload/plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{{ {{{}}}<left><left><left>$/;"	m
